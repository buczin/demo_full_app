{"version":3,"sources":["./src/app/films/film-service/films.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SelectItem } from 'primeng/api';\n\n\nexport enum OkleinaEnum {\n  DOSTEPNA = \"DOSTEPNA\",\n  NIEDOSTEPNA = \"NIEDOSTEPNA\"\n}\n\nexport interface Okleina {\n  id?: number;\n  number?: string;\n  name?: string;\n  producer?: string;\n  ecoPlastNumber?: string;\n  ralNumber?: string;\n  imgLink?: string;\n  status?: OkleinaEnum;\n}\n\nexport interface Producent {\n  id?: number;\n  producerName?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  public allFilms: Okleina[];\n  public producers: Producent[] = [];\n  public producersSelect: SelectItem[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  loadProducersSelect(){\n    console.log(\"Load producers in service\");\n    this.producersSelect = [];\n    this.getProducers().subscribe({\n      next: (res) => {\n        res.forEach(element => {\n          this.producers = res;\n          let el: SelectItem = {label:element.producerName,value:element}\n          this.producersSelect.push(el);\n        });\n      },\n      error: (err) => {\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  getOklieny(): Observable<Okleina[]> {\n    return this.http.get<Okleina[]>(\"api/films\");\n  }\n  getOklina(id): Observable<Okleina> {\n    return this.http.get<Okleina>(\"api/film/\" + id);\n  }\n  getCountOkleina(): Observable<number> {\n    return this.http.get<number>(\"api/film/count\");\n  }\n  addOklina(data): Observable<Okleina> {\n    return this.http.post<Okleina>(\"api/film\", data);\n  }\n  updateOkleina(id, data): Observable<Okleina> {\n    return this.http.put<Okleina>(\"api/film/\" + id, data);\n  }\n  deleteOklina(id) {\n    return this.http.delete(\"api/film/\" + id, { responseType: 'text' });\n  }\n\n  // PRODUCERS\n\n  getProducers(): Observable<Producent[]> {\n    return this.http.get<Producent[]>(\"api/film/producers\");\n  }\n  getProducer(id): Observable<Producent> {\n    return this.http.get<Producent>(\"api/film/producer/\" + id);\n  }\n  getCountProducer(): Observable<number> {\n    return this.http.get<number>(\"api/film/producer/count\");\n  }\n  addProducer(data): Observable<Producent> {\n    return this.http.post<Producent>(\"api/film/producer\", data);\n  }\n  updateProducer(id, data): Observable<Producent> {\n    return this.http.put<Producent>(\"api/film/producer/\" + id, data);\n  }\n  deleteProducer(id) {\n    return this.http.delete(\"api/film/producer/\" + id, { responseType: 'text' });\n  }\n\n}\n"],"sourceRoot":"webpack:///"}