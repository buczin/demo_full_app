{"version":3,"sources":["webpack:///src/app/films/film-add-form/film-add-form.component.ts","webpack:///src/app/films/film-add-form/film-add-form.component.html","webpack:///src/app/films/film-main/film-main.component.ts","webpack:///src/app/films/film-main/film-main.component.html","webpack:///src/app/films/films-routing.module.ts","webpack:///src/app/films/films.module.ts","webpack:///src/app/films/producer-add-form/producer-add-form.component.ts","webpack:///src/app/films/producer-add-form/producer-add-form.component.html"],"names":["FilmAddFormComponent","dialogRef","filmService","infoPopup","available","label","value","DOSTEPNA","NIEDOSTEPNA","formFilm","number","validators","required","asyncValidators","filmExists","updateOn","name","producer","imgLink","status","ralNumber","ecoPlastNumber","event","selectedFilm","target","close","addOklina","subscribe","next","res","showSuccessAdd","onNoClick","error","err","showErrorAdd","complete","onAddNewFilm","selector","templateUrl","styleUrls","FilmMainComponent","dialog","auth","confirmationService","film","positionpersite","onErr","id","clonedFilms","clonedProducers","loading","loadData","displayDialogOkleina","loadProducersSelect","getOklieny","showErrorDownload","push","getCountOkleina","filmCount","showErrorCount","getCountProducer","producerCount","selectedOkleina","data","open","width","panelClass","afterClosed","result","console","log","updateOkleina","showSuccessUpdate","showErrorUpdate","confirm","message","acceptLabel","rejectLabel","accept","deleteOklina","showSuccessDelete","showErrorDelete","index","updateProducer","producerName","deleteProducer","showDialogToAddFilm","showDialogToAddProducer","onDialogHide","routes","path","component","FilmsRoutingModule","forChild","imports","exports","FilmsModule","declarations","providers","entryComponents","ProducerAddFormComponent","formProducer","producerExists","addProducer","onAddNewProducer"],"mappings":"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","file":"films-films-module-es5.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FilmsService, Okleina, OkleinaEnum, Producent } from '../film-service/films.service';\nimport { SelectItem } from 'primeng/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-film-add-form',\n  templateUrl: './film-add-form.component.html',\n  styleUrls: ['./film-add-form.component.scss']\n})\nexport class FilmAddFormComponent implements OnInit {\n\n  formFilm: FormGroup;\n\n  available: SelectItem[] = [\n    { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n    { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n  ];\n  selectedFilm: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<FilmAddFormComponent>,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formFilm = new FormGroup({\n      number: new FormControl('', { validators: [Validators.required] ,asyncValidators: [AppValidators.filmExists], updateOn: 'blur'}),\n      name: new FormControl('', { validators: [Validators.required] }),\n      producer: new FormControl('', { validators: [Validators.required] }),\n      imgLink: new FormControl(''),\n      status: new FormControl(this.available[0], { validators: [Validators.required] }),\n      ralNumber: new FormControl(''),\n      ecoPlastNumber: new FormControl('')\n    });\n  }\n\n  selectFilm(event: Event) {\n    this.selectedFilm = (event.target as HTMLSelectElement).value;\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddNewFilm() {\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    \n    this.filmService.addOklina(this.formFilm.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"okleiny\");\n          this.onNoClick();\n        },\n        error: (err) => {\n         this.infoPopup.showErrorAdd(\"okleiny\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowa Okleina</span>\n</div>\n<div class=\"sb-dialog-content\">\n\n    <form class=\"m-4\" [formGroup]=\"formFilm\">\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"number\">Numer *</label>\n                <input [formControl]=\"formFilm.get('number')\" autofocus type=\"text\" id=\"number\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Numer Okleiny\" required autocomplete=\"off\" autofocus>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('required') && formFilm.get('number').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('filmExists') && formFilm.get('number').touched\">\n                    ten numer znajduje się na liście\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"name\">Nazwa *</label>\n                <input [formControl]=\"formFilm.get('name')\" type=\"text\" id=\"name\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Nazwa Okleiny\" required autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('name').hasError('required') && formFilm.get('name').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"producer\">Producent *</label>\n                <p-dropdown id=\"producer\" [style]=\"{'width':'100%'}\" [options]=\"filmService.producersSelect\"\n                    [filter]=\"true\" filterBy=\"producerName,value.producerName\" [formControl]=\"formFilm.get('producer')\"\n                    required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('producer').hasError('required') && formFilm.get('producer').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"imgLink\">Obraz</label>\n                <input [formControl]=\"formFilm.get('imgLink')\" type=\"text\" id=\"imgLink\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link Obraz\"\n                    autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"ralNumber\">Odp. RAL</label>\n                <input [formControl]=\"formFilm.get('ralNumber')\" type=\"text\" id=\"ralNumber\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Odpowiednik RAL\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"ecoPlastNumber\">Numer EcoPlast</label>\n                <input [formControl]=\"formFilm.get('ecoPlastNumber')\" type=\"text\" id=\"ecoPlastNumber\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Odpowiednik EcoPlast\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"status\">Status *</label>\n                <p-dropdown inputId=\"status\" [style]=\"{'width':'100%'}\" [options]=\"available\"\n                    [formControl]=\"formFilm.get('status')\" placeholder=\"Wybierz\" optionLabel=\"label\" required>\n                </p-dropdown>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formFilm.invalid\" matTooltip=\"Dodaj okleinę\" matTooltipClass=\"tooltip-green\"\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onAddNewFilm()\"\n        label=\"Zapisz\"></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FilmsService, Okleina, OkleinaEnum, Producent } from '../film-service/films.service';\nimport { SelectItem, ConfirmationService } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { FilmAddFormComponent } from '../film-add-form/film-add-form.component';\nimport { ProducerAddFormComponent } from '../producer-add-form/producer-add-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-film-main',\n  templateUrl: './film-main.component.html',\n  styleUrls: ['./film-main.component.scss']\n})\nexport class FilmMainComponent implements OnInit {\n\n  film: Okleina[] = [];\n  producer: Producent[] = [];\n  positionpersite = 10;\n\n  onErr: Okleina =\n    {\n      id: 0,\n      number: \"---\",\n      name: \"---\",\n      producer: \"---\",\n      ecoPlastNumber: \"---\",\n      ralNumber: \"---\",\n      imgLink: \"---\",\n      status: OkleinaEnum.NIEDOSTEPNA\n    };\n  filmCount:number;\n  producerCount:number;\n  err: boolean;\n  newFilm: boolean;\n  available: SelectItem[];\n  clonedFilms: { [s: string]: Okleina; } = {};\n  clonedProducers:  { [s: string]: Producent; } = {};\n  displayDialogOkleina: boolean;\n  selectedOkleina: any;\n  loading=false;\n\n  constructor(\n    public dialog: MatDialog,\n    public auth:AuthService, \n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent,\n     private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n    this.available = [\n      { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n      { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n    ];\n  }\n\n  loadData(){\n    this.loading=true;\n    this.displayDialogOkleina = false;\n    this.filmService.loadProducersSelect();\n\n    this.filmService.getOklieny().subscribe(\n      {\n        next: (res) => {\n          this.film = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"okleiny\")\n          this.err = true;\n          this.film.push(this.onErr);\n        },\n        complete: () => {\n          this.loading=false;\n        }\n      }\n    )\n\n    this.filmService.getCountOkleina().subscribe({\n      next: (res) => {\n        this.filmCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"oklein\")\n      },\n      complete: () => {\n      }\n    })\n\n    this.filmService.getCountProducer().subscribe({\n      next: (res) => {\n        this.producerCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"producentów\")\n      },\n      complete: () => {\n      }\n    })\n    \n  }\n\n  onDialogHide(){\n    this.displayDialogOkleina = false;\n    this.selectedOkleina = null;\n  }\n\n  showDialogFilm(data) {\n    this.displayDialogOkleina = true;\n    this.selectedOkleina = data;\n  }\n\n  showDialogToAddFilm() {\n    const dialogRef = this.dialog.open(FilmAddFormComponent, {\n      width: '450px',\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog add production order was closed');\n    });\n  }\n\n  showDialogToAddProducer() {\n    const dialogRef = this.dialog.open(ProducerAddFormComponent, {\n      width: '450px',\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog add production order was closed');\n    });\n  }\n\n  onRowEditInit(film: Okleina) {\n    this.clonedFilms[film.id] = { ...film };\n  }\n\n  onRowEditSave(film: Okleina) {\n    this.filmService.updateOkleina(film.id, film).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"okleiny\");\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"okleiny\");\n        },\n        complete: () => {\n          delete this.clonedFilms[film.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteFilm(film: Okleina) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ film.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        this.filmService.deleteOklina(film.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"okleiny\");\n            },\n            error: (err) => {\n              console.log(err);\n              this.infoPopup.showErrorDelete(\"okleiny\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancel(film: Okleina, index: number) {\n    this.film[index] = this.clonedFilms[film.id];\n    delete this.clonedFilms[film.id];\n  }\n\n  onRowEditInitProducer(producer: Producent) {\n    this.clonedProducers[producer.id] = { ...producer };\n  }\n\n  onRowEditProducer(producer: Producent) {\n    this.filmService.updateProducer(producer.id, producer).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"producenta\");\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"producenta\");\n        },\n        complete: () => {\n          delete this.clonedProducers[producer.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteProducer(producer: Producent) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ producer.producerName +'?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.filmService.deleteProducer(producer.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"producent\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"producent\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancelProducer(producer: Okleina, index: number) {\n    this.producer[index] = this.clonedFilms[producer.id];\n    delete this.clonedProducers[producer.id];\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"text-center\">\n                            <mat-icon class=\"icon-big\">waves</mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Folia</p>\n                            <p class=\"card-title\">{{filmCount}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer \">\n                <hr>\n                <div class=\"stats-bar\">\n                    <div class=\"stats\">\n                        <mat-icon class=\"fo-small-icon\">calculate</mat-icon><span class=\"fo-text\">Ilość</span>\n                    </div>\n                    <div class=\"stats-bar-button\">\n                        <button (click)=\"showDialogToAddFilm()\" matTooltip=\"Dodanie nowej okleiny\"\n                            matTooltipClass=\"tooltip-red\"\n                            class=\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\"\n                            icon=\"pi pi-pencil\" pbutton=\"\" piniteditablerow=\"\" type=\"button\"\n                            ng-reflect-icon=\"pi pi-pencil\"><span aria-hidden=\"true\"\n                                class=\"ui-button-icon-left ui-clickable pi pi-plus\"></span>\n                            <span aria-hidden=\"true\" class=\"ui-button-text ui-clickable\">ui-btn</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"text-center\">\n                            <mat-icon class=\"icon-big\">supervisor_account</mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Producenci</p>\n                            <p class=\"card-title\">{{producerCount}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer \">\n                <hr>\n                <div class=\"stats-bar\">\n                    <div class=\"stats\">\n                        <mat-icon class=\"fo-small-icon\">calculate</mat-icon><span class=\"fo-text\">Ilość</span>\n                    </div>\n                    <div class=\"stats-bar-button\">\n                        <button (click)=\"showDialogToAddProducer()\" matTooltip=\"Dodanie nowego producenta\"\n                            matTooltipClass=\"tooltip-red\"\n                            class=\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\"\n                            icon=\"pi pi-pencil\" pbutton=\"\" piniteditablerow=\"\" type=\"button\"\n                            ng-reflect-icon=\"pi pi-pencil\"><span aria-hidden=\"true\"\n                                class=\"ui-button-icon-left ui-clickable pi pi-plus\"></span>\n                            <span aria-hidden=\"true\" class=\"ui-button-text ui-clickable\">ui-btn</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- <div class=\"col-lg-3 col-md-6 col-sm-6\">\n\n    </div> -->\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Okleiny\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #okl [value]=\"film\" [loading]=\"loading\" dataKey=\"id\" editMode=\"row\" sortMode=\"multiple\" [paginator]=\"true\"\n                    [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n                    [globalFilterFields]=\"['number','name','producer.producerName','ralNumber','ecoPlastNumber']\" [rowHover]=\"true\">\n                    \n                    <ng-template pTemplate=\"caption\">\n                        Lista Oklein\n                        <div class=\"ui-table-globalfilter-container\">\n                            <input pInputText type=\"text\" (input)=\"okl.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pSortableColumn=\"number\">Numer<p-sortIcon field=\"number\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"producer\">Producent<p-sortIcon field=\"producer\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"imgLink\">Link Obraz<p-sortIcon field=\"imgLink\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"ralNumber\">Odp. RAL<p-sortIcon field=\"ralNumber\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"ecoPlastNumber\">Numer odp. EcoPlast<p-sortIcon field=\"ecoPlastNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"status\">Status<p-sortIcon field=\"status\"></p-sortIcon>\n                            </th>\n                            <th style=\"width:8em\"></th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                        <tr [pEditableRow]=\"rowData\" class=\"ui-selectable-row\">\n                            <td>\n                                {{rowData.number}}\n                            </td>\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\" [(ngModel)]=\"rowData.name\"\n                                            required>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.name}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <p-dropdown class=\"\" id=\"producer\" [options]=\"filmService.producersSelect\"\n                                            [filter]=\"true\" filterBy=\"producerName,value.producerName\"\n                                            [(ngModel)]=\"rowData.producer\" required></p-dropdown>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.producer.producerName}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td class=\"text-center\">\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\" [(ngModel)]=\"rowData.imgLink\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        <img src=\"{{rowData.imgLink}}\" width=\"40\"\n                                            (click)=\"showDialogFilm(rowData.imgLink)\">\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.ralNumber\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.ralNumber}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.ecoPlastNumber\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.ecoPlastNumber}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <p-dropdown class=\"inline-edit\" [options]=\"available\"\n                                            [(ngModel)]=\"rowData.status\" [style]=\"{'width':'100%'}\"></p-dropdown>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.status}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td style=\"text-align:center\">\n                                <button matTooltip=\"Edycja Pozycji\" matTooltipClass=\"tooltip-red\"\n                                    *ngIf=\"!editing && !err\" pButton type=\"button\" pInitEditableRow icon=\"pi pi-pencil\"\n                                    class=\"ui-button-info edit-button\" (click)=\"onRowEditInit(rowData)\"></button>\n                                <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\"\n                                    *ngIf=\"!editing && !err && auth.isAdmin\" pButton type=\"button\" icon=\"pi pi-times\"\n                                    class=\"ml-2 ui-button-info remove-button\"\n                                    (click)=\"onRowDeleteFilm(rowData)\"></button>\n                                <button matTooltip=\"Zapisz Pozycję\" matTooltipClass=\"tooltip-green\" *ngIf=\"editing\"\n                                    pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\" class=\"ui-button-success\"\n                                    style=\"margin-right: .5em\" (click)=\"onRowEditSave(rowData)\"></button>\n                                <button matTooltip=\"Anuluj\" matTooltipClass=\"tooltip-red\" *ngIf=\"editing\" pButton\n                                    type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\"\n                                    (click)=\"onRowEditCancel(rowData, ri)\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr><td colspan=\"8\" style=\"text-align:left\">Brak danych.</td></tr>\n                    </ng-template>\n\n                </p-table>\n\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Producenci\">\n        \n        <ng-template pTemplate=\"content\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    \n                    <p-table #pr [value]=\"filmService.producers\" dataKey=\"id\" editMode=\"row\" [paginator]=\"true\"\n                        [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                        currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n                        [globalFilterFields]=\"['producerName']\">\n                        \n                        <ng-template pTemplate=\"caption\">\n                            Producenci\n                            <div class=\"ui-table-globalfilter-container\">\n                                <input pInputText type=\"text\" (input)=\"pr.filterGlobal($event.target.value, 'contains')\"\n                                    placeholder=\"Wyszukiwarka\" />\n                            </div>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"header\">\n                            <tr>\n                                <th style=\"width: 40px;\">ID</th>\n                                <th pSortableColumn=\"producerName\">Nazwa Producenta<p-sortIcon field=\"producerName\">\n                                    </p-sortIcon>\n                                </th>\n                                <th style=\"width:8em\"></th>\n                            </tr>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                            <tr [pEditableRow]=\"rowData\">\n                                <td>\n                                    {{rowData.id}}\n                                </td>\n                                <td>\n                                    <p-cellEditor>\n                                        <ng-template pTemplate=\"input\">\n                                            <input class=\"inline-edit\" pInputText type=\"text\"\n                                                [(ngModel)]=\"rowData.producerName\" required>\n                                        </ng-template>\n                                        <ng-template pTemplate=\"output\">\n                                            {{rowData.producerName}}\n                                        </ng-template>\n                                    </p-cellEditor>\n                                </td>\n                                <td style=\"text-align:center\">\n                                    <button matTooltip=\"Edycja Producenta\" matTooltipClass=\"tooltip-red\"\n                                        *ngIf=\"!editing && !err\" pButton type=\"button\" pInitEditableRow\n                                        icon=\"pi pi-pencil\" class=\"ui-button-info edit-button\"\n                                        (click)=\"onRowEditInitProducer(rowData)\"></button>\n                                    <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\"\n                                        *ngIf=\"!editing && !err && auth.isAdmin\" pButton type=\"button\"\n                                        icon=\"pi pi-times\" class=\"ml-2 ui-button-info remove-button\"\n                                        (click)=\"onRowDeleteProducer(rowData)\"></button>\n                                    <button matTooltip=\"Zapisz Producenta\" matTooltipClass=\"tooltip-green\"\n                                        *ngIf=\"editing\" pButton type=\"button\" pSaveEditableRow icon=\"pi pi-check\"\n                                        class=\"ui-button-success\" style=\"margin-right: .5em\"\n                                        (click)=\"onRowEditProducer(rowData)\"></button>\n                                    <button matTooltip=\"Anuluj\" matTooltipClass=\"tooltip-red\" *ngIf=\"editing\" pButton\n                                        type=\"button\" pCancelEditableRow icon=\"pi pi-times\" class=\"ui-button-danger\"\n                                        (click)=\"onRowEditCancelProducer(rowData, ri)\"></button>\n                                </td>\n                            </tr>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"emptymessage\">\n                            <tr><td colspan=\"3\" style=\"text-align:left\">Brak danych.</td></tr>\n                        </ng-template>\n\n                    </p-table>\n\n                </div>\n            </div>\n        </ng-template>\n    </p-tabPanel>\n</p-tabView>\n\n<p-dialog header=\"Okleina\" [(visible)]=\"displayDialogOkleina\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\"\n    [style]=\"{width: '500px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\n    <div *ngIf=\"selectedOkleina\">\n        <img width=\"400px\" src=\"{{selectedOkleina}}\">\n    </div>\n</p-dialog>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilmMainComponent } from './film-main/film-main.component';\n\n\nconst routes: Routes = [\n\n  { path: '', component: FilmMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilmsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilmMainComponent } from './film-main/film-main.component';\nimport { FilmsRoutingModule } from './films-routing.module';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FilmAddFormComponent } from './film-add-form/film-add-form.component';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ProducerAddFormComponent } from './producer-add-form/producer-add-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [FilmMainComponent, FilmAddFormComponent, ProducerAddFormComponent],\n  imports: [\n    CommonModule,\n    FilmsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule\n  ],\n  providers: [],\n  entryComponents:[FilmAddFormComponent,ProducerAddFormComponent]\n})\nexport class FilmsModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { FilmsService} from '../film-service/films.service';\nimport { AppValidators } from '../../_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-producer-add-form',\n  templateUrl: './producer-add-form.component.html',\n  styleUrls: ['./producer-add-form.component.scss']\n})\nexport class ProducerAddFormComponent implements OnInit {\n\n  formProducer: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<ProducerAddFormComponent>,\n    private filmService: FilmsService, \n    private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formProducer = new FormGroup({\n      producerName: new FormControl('', { validators: [Validators.required] ,asyncValidators: [AppValidators.producerExists], updateOn: 'blur'}),\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddNewProducer() {\n\n    this.filmService.addProducer(this.formProducer.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"producenta\");;\n          this.onNoClick();\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"producenta\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n}\n\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Producent</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form class=\"m-4\" [formGroup]=\"formProducer\">\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"producerNameid\">Nazwa Producenta</label>\n                <input [formControl]=\"formProducer.get('producerName')\" type=\"text\" id=\"producerNameid\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa\"\n                    required autofocus autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('required') && formProducer.get('producerName').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('producerExists') && formProducer.get('producerName').touched\">\n                    nazwa producenta została już dodana\n                </p>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formProducer.invalid\" matTooltip=\"Dodaj producenta\" matTooltipClass=\"tooltip-green\"\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onAddNewProducer()\"\n        label=\"Zapisz\"></button>\n</div>"]}