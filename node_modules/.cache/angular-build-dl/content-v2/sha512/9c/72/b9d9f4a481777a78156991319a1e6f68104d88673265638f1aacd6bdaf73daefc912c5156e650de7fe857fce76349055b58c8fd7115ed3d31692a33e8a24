{"version":3,"sources":["./src/app/contractor/client-add-form/client-add-form.component.ts","./src/app/contractor/client-add-form/client-add-form.component.html","./src/app/contractor/client-main/client-main.component.ts","./src/app/contractor/client-main/client-main.component.html","./src/app/contractor/client-service/client.service.ts","./src/app/contractor/contractor-routing.module.ts","./src/app/contractor/contractor.module.ts"],"names":[],"mappings":"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","file":"contractor-contractor-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from \"@angular/core\";\nimport { Client, ClientService } from \"../client-service/client.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { AppValidators } from \"src/app/_validators/AppValidators\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-client-add-form\",\n  templateUrl: \"./client-add-form.component.html\",\n  styleUrls: [\"./client-add-form.component.scss\"],\n})\nexport class ClientAddFormComponent implements OnInit {\n  formClient: FormGroup;\n  clientData: Client;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private clientService: ClientService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.clientData = config.data;\n  }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      id: new FormControl(\"\"),\n      symfoniaId: new FormControl(\"\"),\n      shortName: new FormControl(\"\"),\n      name: new FormControl(\"\", { validators: [Validators.required] }),\n      nip: new FormControl(\"\", { validators: [AppValidators.validatenip] }),\n      pesel: new FormControl(\"\"),\n      regon: new FormControl(\"\", {\n        validators: [AppValidators.validateregon9],\n        updateOn: \"blur\",\n      }),\n\n      town: new FormControl(\"\"),\n      street: new FormControl(\"\"),\n      houseNumber: new FormControl(\"\"),\n      flatNumber: new FormControl(\"\"),\n      postalCode: new FormControl(\"\"),\n      province: new FormControl(\"\"),\n      country: new FormControl(\"\"),\n\n      phonenumber: new FormControl(\"\"),\n      phonenumber2: new FormControl(\"\"),\n      email: new FormControl(\"\", { validators: [Validators.email] }),\n      www: new FormControl(\"\"),\n    });\n\n    if (this.clientData) {\n      this.formClient.patchValue(this.clientData);\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewClient() {\n    this.loading = true;\n    this.clientService.addClient(this.formClient.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"klienta\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"klienta\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateClient() {\n    this.loading = true;\n    this.clientService\n      .updateClient(this.formClient.value.id, this.formClient.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"klienta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"klienta\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formClient\" class=\"sb-form\">\n    <div class=\"form-group m-0 p-0\">\n      <div>\n        <p class=\"p-0 m-0\"><b>DANE</b></p>\n      </div>\n      <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"name\">Nazwa*</label>\n          <textarea\n            [style]=\"{ width: '100%' }\"\n            pInputTextarea\n            type=\"text\"\n            id=\"name\"\n            [formControl]=\"formClient.get('name')\"\n            required\n          >\n          </textarea>\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('name').hasError('required') &&\n              formClient.get('name').touched\n            \"\n          >\n            musi być wypełnione\n          </p>\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"shortName\">Skrócona nazwa</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"shortName\"\n            [formControl]=\"formClient.get('shortName')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"symfoniaId\">Symfonia ID</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"symfoniaId\"\n            [formControl]=\"formClient.get('symfoniaId')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"nip\">NIP*</label>\n          <input\n            [attr.disabled]=\"clientData ? true : null\"\n            pInputText\n            type=\"text\"\n            id=\"nip\"\n            [formControl]=\"formClient.get('nip')\"\n            autocomplete=\"off\"\n          />\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('nip').hasError('nipFormat') &&\n              formClient.get('nip').touched\n            \"\n          >\n            niepoprawny nip\n          </p>\n        </div>\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"regon\">REGON</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"regon\"\n            [formControl]=\"formClient.get('regon')\"\n            autocomplete=\"off\"\n          />\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('regon').hasError('regonFormat') &&\n              formClient.get('regon').touched\n            \"\n          >\n            niepoprawny regon\n          </p>\n        </div>\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"pesel\">PESEL</label>\n          <input\n            [attr.disabled]=\"clientData ? true : null\"\n            pInputText\n            type=\"text\"\n            id=\"pesel\"\n            [formControl]=\"formClient.get('pesel')\"\n            autocomplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <div>\n        <p class=\"mb-0 mt-4\"><b>ADRES</b></p>\n      </div>\n      <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"town\">Miasto</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"town\"\n            [formControl]=\"formClient.get('town')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"street\">Ulica</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"street\"\n            [formControl]=\"formClient.get('street')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem\">\n          <label class=\"mb-0\" for=\"houseNumber\">Numer budynku</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"houseNumber\"\n            [formControl]=\"formClient.get('houseNumber')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem\">\n          <label class=\"mb-0\" for=\"flatNumber\">Numer mieszkania</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"flatNumber\"\n            [formControl]=\"formClient.get('flatNumber')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"postalCode\">Kod Pocztowy</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"postalCode\"\n            [formControl]=\"formClient.get('postalCode')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"province\">Województwo</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"province\"\n            [formControl]=\"formClient.get('province')\"\n            autocomplete=\"off\"\n          />\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"country\">Kraj</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"country\"\n            [formControl]=\"formClient.get('country')\"\n            autocomplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <div>\n        <p class=\"mb-0 mt-4\"><b>DANE KONTAKTOWE</b></p>\n      </div>\n\n      <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"email\">EMAIL</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"email\"\n            [formControl]=\"formClient.get('email')\"\n            autocomplete=\"off\"\n          />\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('email').hasError('email') &&\n              formClient.get('email').touched\n            \"\n          >\n            niepoprawny email\n          </p>\n        </div>\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"phonenumber\">Numer telefonu</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"phonenumber\"\n            [formControl]=\"formClient.get('phonenumber')\"\n            autocomplete=\"off\"\n          />\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('phonenumber').hasError('minLength') &&\n              formClient.get('phonenumber').touched\n            \"\n          >\n            niepoprawny numer telefonu\n          </p>\n        </div>\n\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"phonenumber2\">Numer telefonu 2</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"phonenumber2\"\n            [formControl]=\"formClient.get('phonenumber2')\"\n            autocomplete=\"off\"\n          />\n          <p\n            class=\"invalid-feedback\"\n            *ngIf=\"\n              formClient.get('phonenumber2').hasError('minLength') &&\n              formClient.get('phonenumber2').touched\n            \"\n          >\n            niepoprawny numer telefonu\n          </p>\n        </div>\n      </div>\n      <div class=\"p-fluid p-formgrid p-grid\">\n        <div class=\"p-field p-col-12 mb-0 pb-0\">\n          <label class=\"mb-0\" for=\"www\">WWW</label>\n          <input\n            pInputText\n            type=\"text\"\n            id=\"www\"\n            [formControl]=\"formClient.get('www')\"\n            autocomplete=\"off\"\n          />\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!clientData\"\n      [disabled]=\"formClient.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addNewClient()\"\n      pTooltip=\"Dodaj nowego kontrahenta\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"clientData\"\n      [disabled]=\"formClient.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateClient()\"\n      pTooltip=\"Aktualizacja kontrahenta\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Client, ClientService } from \"../client-service/client.service\";\nimport { SelectItem, ConfirmationService } from \"primeng/api\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { AuthService } from \"src/app/_services/auth.service\";\nimport { ClientAddFormComponent } from \"../client-add-form/client-add-form.component\";\nimport { DialogService } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-client-main\",\n  templateUrl: \"./client-main.component.html\",\n  styleUrls: [\"./client-main.component.scss\"],\n})\nexport class ClientMainComponent implements OnInit {\n  client: Client[] = [];\n\n  onErr: Client = {\n    id: 0,\n    name: \"---\",\n    nip: \"---\",\n    regon: \"---\",\n    email: \"---\",\n    phonenumber: \"---\",\n  };\n  clientCount: number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client } = {};\n  loading = false;\n  selectedClient: any;\n\n  constructor(\n    public dialog: DialogService,\n    public auth: AuthService,\n    private clientService: ClientService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData() {\n    this.loading = true;\n    this.clientService.getClients().subscribe({\n      next: (res) => {\n        this.client = res;\n        this.err = false;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"kontrahenci\");\n        this.err = true;\n        this.client.push(this.onErr);\n      },\n      complete: () => {\n        this.loading = false;\n      },\n    });\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"klientów\");\n      },\n      complete: () => {},\n    });\n  }\n\n  showDialogToAddClient() {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Nowy kontrahent\",\n      width: \"1000px\",\n    });\n\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog client add was closed\");\n    });\n  }\n\n  showDialogToUpdateClient(selected) {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Aktualizacja kontrahenta\",\n      width: \"1000px\",\n      data: selected,\n    });\n\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update client was closed\");\n    });\n  }\n\n  onRowDeleteClient(client: Client) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + client.name + \"?\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.clientService.deleteClient(client.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"klienta\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"klient\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-id-card\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Kontrahenci</p>\n                <p class=\"card-title\">{{ clientCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddClient()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-12\">\n    <p-table\n      #ct\n      styleClass=\"p-datatable-striped\"\n      selectionMode=\"single\"\n      [value]=\"client\"\n      [loading]=\"loading\"\n      dataKey=\"id\"\n      editMode=\"row\"\n      sortMode=\"multiple\"\n      [paginator]=\"true\"\n      [rows]=\"10\"\n      [rowsPerPageOptions]=\"[10, 20, 50]\"\n      [showCurrentPageReport]=\"true\"\n      currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n      [filterDelay]=\"0\"\n      [autoLayout]=\"true\"\n      selectionMode=\"single\"\n      [(selection)]=\"selectedClient\"\n      [globalFilterFields]=\"[\n        'name',\n        'nip',\n        'pesel',\n        'shortName',\n        'phonenumber'\n      ]\"\n      [rowHover]=\"true\"\n      columnResizeMode=\"expand\"\n    >\n      <ng-template pTemplate=\"caption\">\n        <div class=\"row\">\n          <div class=\"col\"><span>Lista Kontrahentów</span></div>\n          <div class=\"col\" style=\"text-align: end\">\n            <input\n              pInputText\n              class=\"p-inputtext\"\n              type=\"text\"\n              (input)=\"ct.filterGlobal($event.target.value, 'contains')\"\n              placeholder=\"Wyszukiwarka\"\n            />\n          </div>\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"header\">\n        <tr class=\"cl-header\">\n          <th pTooltip=\"symfonia ID\">\n            <div>symf. ID</div>\n          </th>\n          <th pSortableColumn=\"shortName\">\n            <div>Skrót nazwa<p-sortIcon field=\"shortName\"></p-sortIcon></div>\n          </th>\n          <th pSortableColumn=\"name\">\n            <div>Nazwa <p-sortIcon field=\"name\"></p-sortIcon></div>\n          </th>\n          <th pSortableColumn=\"town\">\n            <div>Miasto <p-sortIcon field=\"town\"></p-sortIcon></div>\n          </th>\n          <th>\n            <div>Ulica</div>\n          </th>\n          <th>\n            <div>Nr. budynku</div>\n          </th>\n          <th>\n            <div>Nr. mieszkania</div>\n          </th>\n          <th>\n            <div>Kod pocztowy</div>\n          </th>\n          <th>\n            <div>Województwo</div>\n          </th>\n          <th>\n            <div>Kraj</div>\n          </th>\n          <th>\n            <div>nr. tel.</div>\n          </th>\n          <th>\n            <div>nr. tel. 2</div>\n          </th>\n          <th>\n            <div>email</div>\n          </th>\n          <th>\n            <div>nip</div>\n          </th>\n          <th>\n            <div>pesel</div>\n          </th>\n          <th>\n            <div>regon</div>\n          </th>\n          <th>\n            <div>www</div>\n          </th>\n          <th style=\"min-width: 80px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n        <tr class=\"cl-body\" [pSelectableRow]=\"rowData\">\n          <td>{{ rowData.symfoniaId }}</td>\n          <td>{{ rowData.shortName }}</td>\n          <td>{{ rowData.name }}</td>\n          <td>{{ rowData.town }}</td>\n          <td>{{ rowData.street }}</td>\n          <td>{{ rowData.houseNumber }}</td>\n          <td>{{ rowData.flatNumber }}</td>\n          <td>{{ rowData.postalCode }}</td>\n          <td>{{ rowData.province }}</td>\n          <td>{{ rowData.country }}</td>\n          <td style=\"min-width: 110px\">{{ rowData.phonenumber }}</td>\n          <td style=\"min-width: 110px\">{{ rowData.phonenumber2 }}</td>\n          <td>{{ rowData.email }}</td>\n          <td style=\"min-width: 110px\">{{ rowData.nip }}</td>\n          <td>{{ rowData.pesel }}</td>\n          <td>{{ rowData.regon }}</td>\n          <td>{{ rowData.www }}</td>\n\n          <td class=\"edit-col\">\n            <div class=\"d-flex justify-content-center\">\n              <button\n                pButton\n                pRipple\n                appPermission\n                permission=\"catalogWrite\"\n                type=\"button\"\n                (click)=\"showDialogToUpdateClient(rowData)\"\n                icon=\"pi pi-pencil\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n\n              <button\n                pButton\n                pRipple\n                appPermission\n                permission=\"catalogDelete\"\n                type=\"button\"\n                (click)=\"onRowDeleteClient(rowData)\"\n                icon=\"pi pi-trash\"\n                class=\"p-button-sm ml-1 sb-button red\"\n              ></button>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"18\" style=\"text-align: left\">Brak danych.</td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\nexport interface Client {\n  id?: number;\n  symfoniaId?: number;\n  shortName?: string;\n  name?: string;\n  town?: string;\n  street?: string;\n  houseNumber?: string;\n  flatNumber?: string;\n  postalCode?: string;\n  province?: string;\n  country?: string;\n  phonenumber?: string;\n  phonenumber2?: string;\n  email?: string;\n  nip?: string;\n  pesel?: string;\n  regon?: string;\n  www?: string;\n\n  helper_pcv_mEasyTo50?: number;\n  helper_pcv_mEasyTo150?: number;\n  helper_pcv_mEasyTo500?: number;\n  helper_pcv_mEasyAbove500?: number;\n  helper_pcv_mHardTo50?: number;\n  helper_pcv_mHardTo150?: number;\n  helper_pcv_mHardTo500?: number;\n  helper_pcv_mHardAbove500?: number;\n\n  helper_alu_mEasyTo50?: number;\n  helper_alu_mEasyTo150?: number;\n  helper_alu_mEasyTo500?: number;\n  helper_alu_mEasyAbove500?: number;\n  helper_alu_mHardTo50?: number;\n  helper_alu_mHardTo150?: number;\n  helper_alu_mHardTo500?: number;\n  helper_alu_mHardAbove500?: number;\n}\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ClientService {\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) {}\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  deleteClient(id) {\n    return this.http.delete(\"api/client/\" + id, { responseType: \"text\" });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    ProgressSpinnerModule,\n    TooltipModule\n  ],\n  providers: [MessageService,DialogService],\n  entryComponents:[ClientAddFormComponent]\n})\nexport class ContractorModule { }\n"],"sourceRoot":"webpack:///"}