function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _slicedToArray2(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _toConsumableArray2(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits2(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn2(this, result); }; }

function _possibleConstructorReturn2(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classCallCheck2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["production-production-module"], {
  /***/
  "./node_modules/@angular/material/esm2015/autocomplete.js":
  /*!****************************************************************!*\
    !*** ./node_modules/@angular/material/esm2015/autocomplete.js ***!
    \****************************************************************/

  /*! exports provided: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MatAutocompleteSelectedEvent, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MatAutocomplete, MatAutocompleteModule, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, getMatAutocompleteMissingPanelError, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocompleteTrigger, MatAutocompleteOrigin */

  /***/
  function node_modulesAngularMaterialEsm2015AutocompleteJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY", function () {
      return MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MatAutocompleteSelectedEvent", function () {
      return MatAutocompleteSelectedEvent;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_DEFAULT_OPTIONS", function () {
      return MAT_AUTOCOMPLETE_DEFAULT_OPTIONS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MatAutocomplete", function () {
      return MatAutocomplete;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MatAutocompleteModule", function () {
      return MatAutocompleteModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY", function () {
      return MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getMatAutocompleteMissingPanelError", function () {
      return getMatAutocompleteMissingPanelError;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUTOCOMPLETE_OPTION_HEIGHT", function () {
      return AUTOCOMPLETE_OPTION_HEIGHT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUTOCOMPLETE_PANEL_HEIGHT", function () {
      return AUTOCOMPLETE_PANEL_HEIGHT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_SCROLL_STRATEGY", function () {
      return MAT_AUTOCOMPLETE_SCROLL_STRATEGY;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER", function () {
      return MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MAT_AUTOCOMPLETE_VALUE_ACCESSOR", function () {
      return MAT_AUTOCOMPLETE_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MatAutocompleteTrigger", function () {
      return MatAutocompleteTrigger;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MatAutocompleteOrigin", function () {
      return MatAutocompleteOrigin;
    });
    /* harmony import */


    var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/cdk/a11y */
    "./node_modules/@angular/cdk/esm2015/a11y.js");
    /* harmony import */


    var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/cdk/coercion */
    "./node_modules/@angular/cdk/esm2015/coercion.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_material_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/core */
    "./node_modules/@angular/material/esm2015/core.js");
    /* harmony import */


    var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/cdk/bidi */
    "./node_modules/@angular/cdk/esm2015/bidi.js");
    /* harmony import */


    var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/cdk/keycodes */
    "./node_modules/@angular/cdk/esm2015/keycodes.js");
    /* harmony import */


    var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/cdk/overlay */
    "./node_modules/@angular/cdk/esm2015/overlay.js");
    /* harmony import */


    var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/cdk/platform */
    "./node_modules/@angular/cdk/esm2015/platform.js");
    /* harmony import */


    var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/cdk/portal */
    "./node_modules/@angular/cdk/esm2015/portal.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/esm2015/scrolling.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! @angular/material/form-field */
    "./node_modules/@angular/material/esm2015/form-field.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Autocomplete IDs need to be unique across components, so this counter exists outside of
     * the component definition.
     * @type {?}
     */


    var _uniqueAutocompleteIdCounter = 0;
    /**
     * Event object that is emitted when an autocomplete option is selected.
     */

    var MatAutocompleteSelectedEvent =
    /**
     * @param {?} source
     * @param {?} option
     */
    function MatAutocompleteSelectedEvent(source, option) {
      _classCallCheck2(this, MatAutocompleteSelectedEvent);

      this.source = source;
      this.option = option;
    }; // Boilerplate for applying mixins to MatAutocomplete.

    /**
     * \@docs-private
     */


    var MatAutocompleteBase = function MatAutocompleteBase() {
      _classCallCheck2(this, MatAutocompleteBase);
    };
    /** @type {?} */


    var _MatAutocompleteMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["mixinDisableRipple"])(MatAutocompleteBase);
    /**
     * Injection token to be used to override the default options for `mat-autocomplete`.
     * @type {?}
     */


    var MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('mat-autocomplete-default-options', {
      providedIn: 'root',
      factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY
    });
    /**
     * \@docs-private
     * @return {?}
     */

    function MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {
      return {
        autoActiveFirstOption: false
      };
    }

    var MatAutocomplete = /*#__PURE__*/function (_MatAutocompleteMixin) {
      _inherits2(MatAutocomplete, _MatAutocompleteMixin);

      var _super2 = _createSuper(MatAutocomplete);

      /**
       * @param {?} _changeDetectorRef
       * @param {?} _elementRef
       * @param {?} defaults
       */
      function MatAutocomplete(_changeDetectorRef, _elementRef, defaults) {
        var _this12;

        _classCallCheck2(this, MatAutocomplete);

        _this12 = _super2.call(this);
        _this12._changeDetectorRef = _changeDetectorRef;
        _this12._elementRef = _elementRef;
        /**
         * Whether the autocomplete panel should be visible, depending on option length.
         */

        _this12.showPanel = false;
        _this12._isOpen = false;
        /**
         * Function that maps an option's control value to its display value in the trigger.
         */

        _this12.displayWith = null;
        /**
         * Event that is emitted whenever an option from the list is selected.
         */

        _this12.optionSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        /**
         * Event that is emitted when the autocomplete panel is opened.
         */

        _this12.opened = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        /**
         * Event that is emitted when the autocomplete panel is closed.
         */

        _this12.closed = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
        _this12._classList = {};
        /**
         * Unique ID to be used by autocomplete trigger's "aria-owns" property.
         */

        _this12.id = "mat-autocomplete-".concat(_uniqueAutocompleteIdCounter++);
        _this12._autoActiveFirstOption = !!defaults.autoActiveFirstOption;
        return _this12;
      }
      /**
       * Whether the autocomplete panel is open.
       * @return {?}
       */


      _createClass2(MatAutocomplete, [{
        key: "ngAfterContentInit",

        /**
         * @return {?}
         */
        value: function ngAfterContentInit() {
          this._keyManager = new _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_0__["ActiveDescendantKeyManager"](this.options).withWrap(); // Set the initial visibility state.

          this._setVisibility();
        }
        /**
         * Sets the panel scrollTop. This allows us to manually scroll to display options
         * above or below the fold, as they are not actually being focused when active.
         * @param {?} scrollTop
         * @return {?}
         */

      }, {
        key: "_setScrollTop",
        value: function _setScrollTop(scrollTop) {
          if (this.panel) {
            this.panel.nativeElement.scrollTop = scrollTop;
          }
        }
        /**
         * Returns the panel's scrollTop.
         * @return {?}
         */

      }, {
        key: "_getScrollTop",
        value: function _getScrollTop() {
          return this.panel ? this.panel.nativeElement.scrollTop : 0;
        }
        /**
         * Panel should hide itself when the option list is empty.
         * @return {?}
         */

      }, {
        key: "_setVisibility",
        value: function _setVisibility() {
          this.showPanel = !!this.options.length;

          this._setVisibilityClasses(this._classList);

          this._changeDetectorRef.markForCheck();
        }
        /**
         * Emits the `select` event.
         * @param {?} option
         * @return {?}
         */

      }, {
        key: "_emitSelectEvent",
        value: function _emitSelectEvent(option) {
          /** @type {?} */
          var event = new MatAutocompleteSelectedEvent(this, option);
          this.optionSelected.emit(event);
        }
        /**
         * Sets the autocomplete visibility classes on a classlist based on the panel is visible.
         * @private
         * @param {?} classList
         * @return {?}
         */

      }, {
        key: "_setVisibilityClasses",
        value: function _setVisibilityClasses(classList) {
          classList['mat-autocomplete-visible'] = this.showPanel;
          classList['mat-autocomplete-hidden'] = !this.showPanel;
        }
      }, {
        key: "isOpen",
        get: function get() {
          return this._isOpen && this.showPanel;
        }
        /**
         * Whether the first option should be highlighted when the autocomplete panel is opened.
         * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.
         * @return {?}
         */

      }, {
        key: "autoActiveFirstOption",
        get: function get() {
          return this._autoActiveFirstOption;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._autoActiveFirstOption = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
        }
        /**
         * Takes classes set on the host mat-autocomplete element and applies them to the panel
         * inside the overlay container to allow for easy styling.
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "classList",
        set: function set(value) {
          if (value && value.length) {
            this._classList = value.split(' ').reduce(
            /**
            * @param {?} classList
            * @param {?} className
            * @return {?}
            */
            function (classList, className) {
              classList[className.trim()] = true;
              return classList;
            },
            /** @type {?} */
            {});
          } else {
            this._classList = {};
          }

          this._setVisibilityClasses(this._classList);

          this._elementRef.nativeElement.className = '';
        }
      }]);

      return MatAutocomplete;
    }(_MatAutocompleteMixinBase);

    MatAutocomplete.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"],
      args: [{
        selector: 'mat-autocomplete',
        template: "<ng-template><div class=\"mat-autocomplete-panel\" role=\"listbox\" [id]=\"id\" [ngClass]=\"_classList\" #panel><ng-content></ng-content></div></ng-template>",
        styles: [".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}@media (-ms-high-contrast:active){.mat-autocomplete-panel{outline:solid 1px}}"],
        encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].None,
        changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectionStrategy"].OnPush,
        exportAs: 'matAutocomplete',
        inputs: ['disableRipple'],
        host: {
          'class': 'mat-autocomplete'
        },
        providers: [{
          provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MAT_OPTION_PARENT_COMPONENT"],
          useExisting: MatAutocomplete
        }]
      }]
    }];
    /** @nocollapse */

    MatAutocomplete.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
          args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]
        }]
      }];
    };

    MatAutocomplete.propDecorators = {
      template: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"],
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["TemplateRef"], {
          "static": true
        }]
      }],
      panel: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"],
        args: ['panel', {
          "static": false
        }]
      }],
      options: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ContentChildren"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatOption"], {
          descendants: true
        }]
      }],
      optionGroups: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ContentChildren"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatOptgroup"]]
      }],
      displayWith: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
      }],
      autoActiveFirstOption: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
      }],
      panelWidth: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
      }],
      optionSelected: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"]
      }],
      opened: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"]
      }],
      closed: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"]
      }],
      classList: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['class']
      }]
    };
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * Directive applied to an element to make it usable
     * as a connection point for an autocomplete panel.
     */

    var MatAutocompleteOrigin =
    /**
     * @param {?} elementRef
     */
    function MatAutocompleteOrigin(elementRef) {
      _classCallCheck2(this, MatAutocompleteOrigin);

      this.elementRef = elementRef;
    };

    MatAutocompleteOrigin.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Directive"],
      args: [{
        selector: '[matAutocompleteOrigin]',
        exportAs: 'matAutocompleteOrigin'
      }]
    }];
    /** @nocollapse */

    MatAutocompleteOrigin.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]
      }];
    };
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * The height of each autocomplete option.
     * @type {?}
     */


    var AUTOCOMPLETE_OPTION_HEIGHT = 48;
    /**
     * The total height of the autocomplete panel.
     * @type {?}
     */

    var AUTOCOMPLETE_PANEL_HEIGHT = 256;
    /**
     * Injection token that determines the scroll handling while the autocomplete panel is open.
     * @type {?}
     */

    var MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('mat-autocomplete-scroll-strategy');
    /**
     * \@docs-private
     * @param {?} overlay
     * @return {?}
     */

    function MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {
      return (
        /**
        * @return {?}
        */
        function () {
          return overlay.scrollStrategies.reposition();
        }
      );
    }
    /**
     * \@docs-private
     * @type {?}
     */


    var MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {
      provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,
      deps: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["Overlay"]],
      useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY
    };
    /**
     * Provider that allows the autocomplete to register as a ControlValueAccessor.
     * \@docs-private
     * @type {?}
     */

    var MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_11__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["forwardRef"])(
      /**
      * @return {?}
      */
      function () {
        return MatAutocompleteTrigger;
      }),
      multi: true
    };
    /**
     * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.
     * \@docs-private
     * @return {?}
     */

    function getMatAutocompleteMissingPanelError() {
      return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' + 'Make sure that the id passed to the `matAutocomplete` is correct and that ' + 'you\'re attempting to open it after the ngAfterContentInit hook.');
    }

    var MatAutocompleteTrigger = /*#__PURE__*/function () {
      /**
       * @param {?} _element
       * @param {?} _overlay
       * @param {?} _viewContainerRef
       * @param {?} _zone
       * @param {?} _changeDetectorRef
       * @param {?} scrollStrategy
       * @param {?} _dir
       * @param {?} _formField
       * @param {?} _document
       * @param {?=} _viewportRuler
       */
      function MatAutocompleteTrigger(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {
        var _this13 = this;

        _classCallCheck2(this, MatAutocompleteTrigger);

        this._element = _element;
        this._overlay = _overlay;
        this._viewContainerRef = _viewContainerRef;
        this._zone = _zone;
        this._changeDetectorRef = _changeDetectorRef;
        this._dir = _dir;
        this._formField = _formField;
        this._document = _document;
        this._viewportRuler = _viewportRuler;
        this._componentDestroyed = false;
        this._autocompleteDisabled = false;
        /**
         * Whether or not the label state is being overridden.
         */

        this._manuallyFloatingLabel = false;
        /**
         * Subscription to viewport size changes.
         */

        this._viewportSubscription = rxjs__WEBPACK_IMPORTED_MODULE_13__["Subscription"].EMPTY;
        /**
         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,
         * closed autocomplete from being reopened if the user switches to another browser tab and then
         * comes back.
         */

        this._canOpenOnNextFocus = true;
        /**
         * Stream of keyboard events that can close the panel.
         */

        this._closeKeyEventStream = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
        /**
         * Event handler for when the window is blurred. Needs to be an
         * arrow function in order to preserve the context.
         */

        this._windowBlurHandler =
        /**
        * @return {?}
        */
        function () {
          // If the user blurred the window while the autocomplete is focused, it means that it'll be
          // refocused when they come back. In this case we want to skip the first focus event, if the
          // pane was closed, in order to avoid reopening it unintentionally.
          _this13._canOpenOnNextFocus = _this13._document.activeElement !== _this13._element.nativeElement || _this13.panelOpen;
        };
        /**
         * `View -> model callback called when value changes`
         */


        this._onChange =
        /**
        * @return {?}
        */
        function () {};
        /**
         * `View -> model callback called when autocomplete has been touched`
         */


        this._onTouched =
        /**
        * @return {?}
        */
        function () {};
        /**
         * Position of the autocomplete panel relative to the trigger element. A position of `auto`
         * will render the panel underneath the trigger if there is enough space for it to fit in
         * the viewport, otherwise the panel will be shown above it. If the position is set to
         * `above` or `below`, the panel will always be shown above or below the trigger. no matter
         * whether it fits completely in the viewport.
         */


        this.position = 'auto';
        /**
         * `autocomplete` attribute to be set on the input element.
         * \@docs-private
         */

        this.autocompleteAttribute = 'off';
        this._overlayAttached = false;
        /**
         * Stream of autocomplete option selections.
         */

        this.optionSelections =
        /** @type {?} */
        Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["defer"])(
        /**
        * @return {?}
        */
        function () {
          if (_this13.autocomplete && _this13.autocomplete.options) {
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"]).apply(void 0, _toConsumableArray2(_this13.autocomplete.options.map(
            /**
            * @param {?} option
            * @return {?}
            */
            function (option) {
              return option.onSelectionChange;
            })));
          } // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.
          // Return a stream that we'll replace with the real one once everything is in place.


          return _this13._zone.onStable.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["switchMap"])(
          /**
          * @return {?}
          */
          function () {
            return _this13.optionSelections;
          }));
        });
        this._scrollStrategy = scrollStrategy;
      }
      /**
       * Whether the autocomplete is disabled. When disabled, the element will
       * act as a regular input and the user won't be able to open the panel.
       * @return {?}
       */


      _createClass2(MatAutocompleteTrigger, [{
        key: "ngAfterViewInit",

        /**
         * @return {?}
         */
        value: function ngAfterViewInit() {
          var _this14 = this;

          if (typeof window !== 'undefined') {
            this._zone.runOutsideAngular(
            /**
            * @return {?}
            */
            function () {
              window.addEventListener('blur', _this14._windowBlurHandler);
            });

            if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["_supportsShadowDom"])()) {
              /** @type {?} */
              var element = this._element.nativeElement;
              /** @type {?} */

              var rootNode = element.getRootNode ? element.getRootNode() : null; // We need to take the `ShadowRoot` off of `window`, because the built-in types are
              // incorrect. See https://github.com/Microsoft/TypeScript/issues/27929.

              this._isInsideShadowRoot = rootNode instanceof
              /** @type {?} */
              window.ShadowRoot;
            }
          }
        }
        /**
         * @param {?} changes
         * @return {?}
         */

      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(changes) {
          if (changes['position'] && this._positionStrategy) {
            this._setStrategyPositions(this._positionStrategy);

            if (this.panelOpen) {
              /** @type {?} */
              this._overlayRef.updatePosition();
            }
          }
        }
        /**
         * @return {?}
         */

      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (typeof window !== 'undefined') {
            window.removeEventListener('blur', this._windowBlurHandler);
          }

          this._viewportSubscription.unsubscribe();

          this._componentDestroyed = true;

          this._destroyPanel();

          this._closeKeyEventStream.complete();
        }
        /**
         * Whether or not the autocomplete panel is open.
         * @return {?}
         */

      }, {
        key: "openPanel",

        /**
         * Opens the autocomplete suggestion panel.
         * @return {?}
         */
        value: function openPanel() {
          this._attachOverlay();

          this._floatLabel();
        }
        /**
         * Closes the autocomplete suggestion panel.
         * @return {?}
         */

      }, {
        key: "closePanel",
        value: function closePanel() {
          this._resetLabel();

          if (!this._overlayAttached) {
            return;
          }

          if (this.panelOpen) {
            // Only emit if the panel was visible.
            this.autocomplete.closed.emit();
          }

          this.autocomplete._isOpen = this._overlayAttached = false;

          if (this._overlayRef && this._overlayRef.hasAttached()) {
            this._overlayRef.detach();

            this._closingActionsSubscription.unsubscribe();
          } // Note that in some cases this can end up being called after the component is destroyed.
          // Add a check to ensure that we don't try to run change detection on a destroyed view.


          if (!this._componentDestroyed) {
            // We need to trigger change detection manually, because
            // `fromEvent` doesn't seem to do it at the proper time.
            // This ensures that the label is reset when the
            // user clicks outside.
            this._changeDetectorRef.detectChanges();
          }
        }
        /**
         * Updates the position of the autocomplete suggestion panel to ensure that it fits all options
         * within the viewport.
         * @return {?}
         */

      }, {
        key: "updatePosition",
        value: function updatePosition() {
          if (this._overlayAttached) {
            /** @type {?} */
            this._overlayRef.updatePosition();
          }
        }
        /**
         * A stream of actions that should close the autocomplete panel, including
         * when an option is selected, on blur, and when TAB is pressed.
         * @return {?}
         */

      }, {
        key: "_getOutsideClickStream",

        /**
         * Stream of clicks outside of the autocomplete panel.
         * @private
         * @return {?}
         */
        value: function _getOutsideClickStream() {
          var _this15 = this;

          return Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"])(
          /** @type {?} */
          Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["fromEvent"])(this._document, 'click'),
          /** @type {?} */
          Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["fromEvent"])(this._document, 'touchend')).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["filter"])(
          /**
          * @param {?} event
          * @return {?}
          */
          function (event) {
            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to
            // fall back to check the first element in the path of the click event.

            /** @type {?} */
            var clickTarget =
            /** @type {?} */
            _this15._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] : event.target;
            /** @type {?} */

            var formField = _this15._formField ? _this15._formField._elementRef.nativeElement : null;
            return _this15._overlayAttached && clickTarget !== _this15._element.nativeElement && (!formField || !formField.contains(clickTarget)) && !!_this15._overlayRef && !_this15._overlayRef.overlayElement.contains(clickTarget);
          }));
        } // Implemented as part of ControlValueAccessor.

        /**
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "writeValue",
        value: function writeValue(value) {
          var _this16 = this;

          Promise.resolve(null).then(
          /**
          * @return {?}
          */
          function () {
            return _this16._setTriggerValue(value);
          });
        } // Implemented as part of ControlValueAccessor.

        /**
         * @param {?} fn
         * @return {?}
         */

      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this._onChange = fn;
        } // Implemented as part of ControlValueAccessor.

        /**
         * @param {?} fn
         * @return {?}
         */

      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this._onTouched = fn;
        } // Implemented as part of ControlValueAccessor.

        /**
         * @param {?} isDisabled
         * @return {?}
         */

      }, {
        key: "setDisabledState",
        value: function setDisabledState(isDisabled) {
          this._element.nativeElement.disabled = isDisabled;
        }
        /**
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "_handleKeydown",
        value: function _handleKeydown(event) {
          /** @type {?} */
          var keyCode = event.keyCode; // Prevent the default action on all escape key presses. This is here primarily to bring IE
          // in line with other browsers. By default, pressing escape on IE will cause it to revert
          // the input value to the one that it had on focus, however it won't dispatch any events
          // which means that the model value will be out of sync with the view.

          if (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["ESCAPE"]) {
            event.preventDefault();
          }

          if (this.activeOption && keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["ENTER"] && this.panelOpen) {
            this.activeOption._selectViaInteraction();

            this._resetActiveItem();

            event.preventDefault();
          } else if (this.autocomplete) {
            /** @type {?} */
            var prevActiveItem = this.autocomplete._keyManager.activeItem;
            /** @type {?} */

            var isArrowKey = keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["UP_ARROW"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["DOWN_ARROW"];

            if (this.panelOpen || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["TAB"]) {
              this.autocomplete._keyManager.onKeydown(event);
            } else if (isArrowKey && this._canOpen()) {
              this.openPanel();
            }

            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {
              this._scrollToOption();
            }
          }
        }
        /**
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "_handleInput",
        value: function _handleInput(event) {
          /** @type {?} */
          var target =
          /** @type {?} */
          event.target;
          /** @type {?} */

          var value = target.value; // Based on `NumberValueAccessor` from forms.

          if (target.type === 'number') {
            value = value == '' ? null : parseFloat(value);
          } // If the input has a placeholder, IE will fire the `input` event on page load,
          // focus and blur, in addition to when the user actually changed the value. To
          // filter out all of the extra events, we save the value on focus and between
          // `input` events, and we check whether it changed.
          // See: https://connect.microsoft.com/IE/feedback/details/885747/


          if (this._previousValue !== value) {
            this._previousValue = value;

            this._onChange(value);

            if (this._canOpen() && this._document.activeElement === event.target) {
              this.openPanel();
            }
          }
        }
        /**
         * @return {?}
         */

      }, {
        key: "_handleFocus",
        value: function _handleFocus() {
          if (!this._canOpenOnNextFocus) {
            this._canOpenOnNextFocus = true;
          } else if (this._canOpen()) {
            this._previousValue = this._element.nativeElement.value;

            this._attachOverlay();

            this._floatLabel(true);
          }
        }
        /**
         * In "auto" mode, the label will animate down as soon as focus is lost.
         * This causes the value to jump when selecting an option with the mouse.
         * This method manually floats the label until the panel can be closed.
         * @private
         * @param {?=} shouldAnimate Whether the label should be animated when it is floated.
         * @return {?}
         */

      }, {
        key: "_floatLabel",
        value: function _floatLabel() {
          var shouldAnimate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

          if (this._formField && this._formField.floatLabel === 'auto') {
            if (shouldAnimate) {
              this._formField._animateAndLockLabel();
            } else {
              this._formField.floatLabel = 'always';
            }

            this._manuallyFloatingLabel = true;
          }
        }
        /**
         * If the label has been manually elevated, return it to its normal state.
         * @private
         * @return {?}
         */

      }, {
        key: "_resetLabel",
        value: function _resetLabel() {
          if (this._manuallyFloatingLabel) {
            this._formField.floatLabel = 'auto';
            this._manuallyFloatingLabel = false;
          }
        }
        /**
         * Given that we are not actually focusing active options, we must manually adjust scroll
         * to reveal options below the fold. First, we find the offset of the option from the top
         * of the panel. If that offset is below the fold, the new scrollTop will be the offset -
         * the panel height + the option height, so the active option will be just visible at the
         * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop
         * will become the offset. If that offset is visible within the panel already, the scrollTop is
         * not adjusted.
         * @private
         * @return {?}
         */

      }, {
        key: "_scrollToOption",
        value: function _scrollToOption() {
          /** @type {?} */
          var index = this.autocomplete._keyManager.activeItemIndex || 0;
          /** @type {?} */

          var labelCount = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["_countGroupLabelsBeforeOption"])(index, this.autocomplete.options, this.autocomplete.optionGroups);

          if (index === 0 && labelCount === 1) {
            // If we've got one group label before the option and we're at the top option,
            // scroll the list to the top. This is better UX than scrolling the list to the
            // top of the option, because it allows the user to read the top group's label.
            this.autocomplete._setScrollTop(0);
          } else {
            /** @type {?} */
            var newScrollPosition = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["_getOptionScrollPosition"])(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);

            this.autocomplete._setScrollTop(newScrollPosition);
          }
        }
        /**
         * This method listens to a stream of panel closing actions and resets the
         * stream every time the option list changes.
         * @private
         * @return {?}
         */

      }, {
        key: "_subscribeToClosingActions",
        value: function _subscribeToClosingActions() {
          var _this17 = this;

          /** @type {?} */
          var firstStable = this._zone.onStable.asObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["take"])(1));
          /** @type {?} */


          var optionChanges = this.autocomplete.options.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["tap"])(
          /**
          * @return {?}
          */
          function () {
            return _this17._positionStrategy.reapplyLastPosition();
          }), // Defer emitting to the stream until the next tick, because changing
          // bindings in here will cause "changed after checked" errors.
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["delay"])(0)); // When the zone is stable initially, and when the option list changes...

          return Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"])(firstStable, optionChanges).pipe( // create a new stream of panelClosingActions, replacing any previous streams
          // that were created, and flatten it so our stream only emits closing events...
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["switchMap"])(
          /**
          * @return {?}
          */
          function () {
            /** @type {?} */
            var wasOpen = _this17.panelOpen;

            _this17._resetActiveItem();

            _this17.autocomplete._setVisibility();

            if (_this17.panelOpen) {
              /** @type {?} */
              _this17._overlayRef.updatePosition(); // If the `panelOpen` state changed, we need to make sure to emit the `opened`
              // event, because we may not have emitted it when the panel was attached. This
              // can happen if the users opens the panel and there are no options, but the
              // options come in slightly later or as a result of the value changing.


              if (wasOpen !== _this17.panelOpen) {
                _this17.autocomplete.opened.emit();
              }
            }

            return _this17.panelClosingActions;
          }), // when the first closing event occurs...
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["take"])(1)) // set the value, close the panel, and complete.
          .subscribe(
          /**
          * @param {?} event
          * @return {?}
          */
          function (event) {
            return _this17._setValueAndClose(event);
          });
        }
        /**
         * Destroys the autocomplete suggestion panel.
         * @private
         * @return {?}
         */

      }, {
        key: "_destroyPanel",
        value: function _destroyPanel() {
          if (this._overlayRef) {
            this.closePanel();

            this._overlayRef.dispose();

            this._overlayRef = null;
          }
        }
        /**
         * @private
         * @param {?} value
         * @return {?}
         */

      }, {
        key: "_setTriggerValue",
        value: function _setTriggerValue(value) {
          /** @type {?} */
          var toDisplay = this.autocomplete && this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value; // Simply falling back to an empty string if the display value is falsy does not work properly.
          // The display value can also be the number zero and shouldn't fall back to an empty string.

          /** @type {?} */

          var inputValue = toDisplay != null ? toDisplay : ''; // If it's used within a `MatFormField`, we should set it through the property so it can go
          // through change detection.

          if (this._formField) {
            this._formField._control.value = inputValue;
          } else {
            this._element.nativeElement.value = inputValue;
          }

          this._previousValue = inputValue;
        }
        /**
         * This method closes the panel, and if a value is specified, also sets the associated
         * control to that value. It will also mark the control as dirty if this interaction
         * stemmed from the user.
         * @private
         * @param {?} event
         * @return {?}
         */

      }, {
        key: "_setValueAndClose",
        value: function _setValueAndClose(event) {
          if (event && event.source) {
            this._clearPreviousSelectedOption(event.source);

            this._setTriggerValue(event.source.value);

            this._onChange(event.source.value);

            this._element.nativeElement.focus();

            this.autocomplete._emitSelectEvent(event.source);
          }

          this.closePanel();
        }
        /**
         * Clear any previous selected option and emit a selection change event for this option
         * @private
         * @param {?} skip
         * @return {?}
         */

      }, {
        key: "_clearPreviousSelectedOption",
        value: function _clearPreviousSelectedOption(skip) {
          this.autocomplete.options.forEach(
          /**
          * @param {?} option
          * @return {?}
          */
          function (option) {
            if (option != skip && option.selected) {
              option.deselect();
            }
          });
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "_attachOverlay",
        value: function _attachOverlay() {
          var _this18 = this;

          if (!this.autocomplete) {
            throw getMatAutocompleteMissingPanelError();
          }
          /** @type {?} */


          var overlayRef = this._overlayRef;

          if (!overlayRef) {
            this._portal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_8__["TemplatePortal"](this.autocomplete.template, this._viewContainerRef);
            overlayRef = this._overlay.create(this._getOverlayConfig());
            this._overlayRef = overlayRef; // Use the `keydownEvents` in order to take advantage of
            // the overlay event targeting provided by the CDK overlay.

            overlayRef.keydownEvents().subscribe(
            /**
            * @param {?} event
            * @return {?}
            */
            function (event) {
              // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.
              // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction
              if (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["ESCAPE"] || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_5__["UP_ARROW"] && event.altKey) {
                _this18._resetActiveItem();

                _this18._closeKeyEventStream.next(); // We need to stop propagation, otherwise the event will eventually
                // reach the input itself and cause the overlay to be reopened.


                event.stopPropagation();
                event.preventDefault();
              }
            });

            if (this._viewportRuler) {
              this._viewportSubscription = this._viewportRuler.change().subscribe(
              /**
              * @return {?}
              */
              function () {
                if (_this18.panelOpen && overlayRef) {
                  overlayRef.updateSize({
                    width: _this18._getPanelWidth()
                  });
                }
              });
            }
          } else {
            // Update the trigger, panel width and direction, in case anything has changed.
            this._positionStrategy.setOrigin(this._getConnectedElement());

            overlayRef.updateSize({
              width: this._getPanelWidth()
            });
          }

          if (overlayRef && !overlayRef.hasAttached()) {
            overlayRef.attach(this._portal);
            this._closingActionsSubscription = this._subscribeToClosingActions();
          }
          /** @type {?} */


          var wasOpen = this.panelOpen;

          this.autocomplete._setVisibility();

          this.autocomplete._isOpen = this._overlayAttached = true; // We need to do an extra `panelOpen` check in here, because the
          // autocomplete won't be shown if there are no options.

          if (this.panelOpen && wasOpen !== this.panelOpen) {
            this.autocomplete.opened.emit();
          }
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "_getOverlayConfig",
        value: function _getOverlayConfig() {
          return new _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["OverlayConfig"]({
            positionStrategy: this._getOverlayPosition(),
            scrollStrategy: this._scrollStrategy(),
            width: this._getPanelWidth(),
            direction: this._dir
          });
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "_getOverlayPosition",
        value: function _getOverlayPosition() {
          /** @type {?} */
          var strategy = this._overlay.position().flexibleConnectedTo(this._getConnectedElement()).withFlexibleDimensions(false).withPush(false);

          this._setStrategyPositions(strategy);

          this._positionStrategy = strategy;
          return strategy;
        }
        /**
         * Sets the positions on a position strategy based on the directive's input state.
         * @private
         * @param {?} positionStrategy
         * @return {?}
         */

      }, {
        key: "_setStrategyPositions",
        value: function _setStrategyPositions(positionStrategy) {
          /** @type {?} */
          var belowPosition = {
            originX: 'start',
            originY: 'bottom',
            overlayX: 'start',
            overlayY: 'top'
          };
          /** @type {?} */

          var abovePosition = {
            originX: 'start',
            originY: 'top',
            overlayX: 'start',
            overlayY: 'bottom',
            // The overlay edge connected to the trigger should have squared corners, while
            // the opposite end has rounded corners. We apply a CSS class to swap the
            // border-radius based on the overlay position.
            panelClass: 'mat-autocomplete-panel-above'
          };
          /** @type {?} */

          var positions;

          if (this.position === 'above') {
            positions = [abovePosition];
          } else if (this.position === 'below') {
            positions = [belowPosition];
          } else {
            positions = [belowPosition, abovePosition];
          }

          positionStrategy.withPositions(positions);
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "_getConnectedElement",
        value: function _getConnectedElement() {
          if (this.connectedTo) {
            return this.connectedTo.elementRef;
          }

          return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;
        }
        /**
         * @private
         * @return {?}
         */

      }, {
        key: "_getPanelWidth",
        value: function _getPanelWidth() {
          return this.autocomplete.panelWidth || this._getHostWidth();
        }
        /**
         * Returns the width of the input element, so the panel width can match it.
         * @private
         * @return {?}
         */

      }, {
        key: "_getHostWidth",
        value: function _getHostWidth() {
          return this._getConnectedElement().nativeElement.getBoundingClientRect().width;
        }
        /**
         * Resets the active item to -1 so arrow events will activate the
         * correct options, or to 0 if the consumer opted into it.
         * @private
         * @return {?}
         */

      }, {
        key: "_resetActiveItem",
        value: function _resetActiveItem() {
          this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);
        }
        /**
         * Determines whether the panel can be opened.
         * @private
         * @return {?}
         */

      }, {
        key: "_canOpen",
        value: function _canOpen() {
          /** @type {?} */
          var element = this._element.nativeElement;
          return !element.readOnly && !element.disabled && !this._autocompleteDisabled;
        }
      }, {
        key: "autocompleteDisabled",
        get: function get() {
          return this._autocompleteDisabled;
        }
        /**
         * @param {?} value
         * @return {?}
         */
        ,
        set: function set(value) {
          this._autocompleteDisabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_1__["coerceBooleanProperty"])(value);
        }
      }, {
        key: "panelOpen",
        get: function get() {
          return this._overlayAttached && this.autocomplete.showPanel;
        }
      }, {
        key: "panelClosingActions",
        get: function get() {
          var _this19 = this;

          return Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"])(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["filter"])(
          /**
          * @return {?}
          */
          function () {
            return _this19._overlayAttached;
          })), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ? this._overlayRef.detachments().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["filter"])(
          /**
          * @return {?}
          */
          function () {
            return _this19._overlayAttached;
          })) : Object(rxjs__WEBPACK_IMPORTED_MODULE_13__["of"])()).pipe( // Normalize the output so we return a consistent type.
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["map"])(
          /**
          * @param {?} event
          * @return {?}
          */
          function (event) {
            return event instanceof _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatOptionSelectionChange"] ? event : null;
          }));
        }
        /**
         * The currently active option, coerced to MatOption type.
         * @return {?}
         */

      }, {
        key: "activeOption",
        get: function get() {
          if (this.autocomplete && this.autocomplete._keyManager) {
            return this.autocomplete._keyManager.activeItem;
          }

          return null;
        }
      }]);

      return MatAutocompleteTrigger;
    }();

    MatAutocompleteTrigger.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Directive"],
      args: [{
        selector: "input[matAutocomplete], textarea[matAutocomplete]",
        host: {
          'class': 'mat-autocomplete-trigger',
          '[attr.autocomplete]': 'autocompleteAttribute',
          '[attr.role]': 'autocompleteDisabled ? null : "combobox"',
          '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : "list"',
          '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',
          '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',
          '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',
          '[attr.aria-haspopup]': '!autocompleteDisabled',
          // Note: we use `focusin`, as opposed to `focus`, in order to open the panel
          // a little earlier. This avoids issues where IE delays the focusing of the input.
          '(focusin)': '_handleFocus()',
          '(blur)': '_onTouched()',
          '(input)': '_handleInput($event)',
          '(keydown)': '_handleKeydown($event)'
        },
        exportAs: 'matAutocompleteTrigger',
        providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]
      }]
    }];
    /** @nocollapse */

    MatAutocompleteTrigger.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ElementRef"]
      }, {
        type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["Overlay"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewContainerRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectorRef"]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
          args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]
        }]
      }, {
        type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_4__["Directionality"],
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
        }]
      }, {
        type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__["MatFormField"],
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Host"]
        }]
      }, {
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_10__["DOCUMENT"]]
        }]
      }, {
        type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_9__["ViewportRuler"]
      }];
    };

    MatAutocompleteTrigger.propDecorators = {
      autocomplete: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['matAutocomplete']
      }],
      position: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['matAutocompletePosition']
      }],
      connectedTo: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['matAutocompleteConnectedTo']
      }],
      autocompleteAttribute: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['autocomplete']
      }],
      autocompleteDisabled: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"],
        args: ['matAutocompleteDisabled']
      }]
    };
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    var MatAutocompleteModule = function MatAutocompleteModule() {
      _classCallCheck2(this, MatAutocompleteModule);
    };

    MatAutocompleteModule.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
      args: [{
        imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatOptionModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"], _angular_common__WEBPACK_IMPORTED_MODULE_10__["CommonModule"]],
        exports: [MatAutocomplete, _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatOptionModule"], MatAutocompleteTrigger, MatAutocompleteOrigin, _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]],
        declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],
        providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]
      }]
    }];
    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    //# sourceMappingURL=autocomplete.js.map

    /***/
  },

  /***/
  "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js":
  /*!************************************************************************!*\
    !*** ./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js ***!
    \************************************************************************/

  /*! exports provided: CookieService */

  /***/
  function node_modulesNgxCookieServiceFesm2015NgxCookieServiceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CookieService", function () {
      return CookieService;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js"); // This service is based on the `ng2-cookies` package which sadly is not a service and does


    var CookieService = /*#__PURE__*/function () {
      function CookieService( // The type `Document` may not be used here. Although a fix is on its way,
      // we will go with `any` for now to support Angular 2.4.x projects.
      // Issue: https://github.com/angular/angular/issues/12631
      // Fix: https://github.com/angular/angular/pull/14894
      document, // Get the `PLATFORM_ID` so we can check if we're in a browser.
      platformId) {
        _classCallCheck2(this, CookieService);

        this.document = document;
        this.platformId = platformId;
        this.documentIsAccessible = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["isPlatformBrowser"])(this.platformId);
      }
      /**
       * @param name Cookie name
       * @returns boolean - whether cookie with specified name exists
       */


      _createClass2(CookieService, [{
        key: "check",
        value: function check(name) {
          if (!this.documentIsAccessible) {
            return false;
          }

          name = encodeURIComponent(name);
          var regExp = this.getCookieRegExp(name);
          var exists = regExp.test(this.document.cookie);
          return exists;
        }
        /**
         * @param name Cookie name
         * @returns property value
         */

      }, {
        key: "get",
        value: function get(name) {
          if (this.documentIsAccessible && this.check(name)) {
            name = encodeURIComponent(name);
            var regExp = this.getCookieRegExp(name);
            var result = regExp.exec(this.document.cookie);
            return this.safeDecodeURIComponent(result[1]);
          } else {
            return '';
          }
        }
        /**
         * @returns all the cookies in json
         */

      }, {
        key: "getAll",
        value: function getAll() {
          var _this20 = this;

          if (!this.documentIsAccessible) {
            return {};
          }

          var cookies = {};
          var document = this.document;

          if (document.cookie && document.cookie !== '') {
            document.cookie.split(';').forEach(function (currentCookie) {
              var _currentCookie$split = currentCookie.split('='),
                  _currentCookie$split2 = _slicedToArray2(_currentCookie$split, 2),
                  cookieName = _currentCookie$split2[0],
                  cookieValue = _currentCookie$split2[1];

              cookies[_this20.safeDecodeURIComponent(cookieName.replace(/^ /, ''))] = _this20.safeDecodeURIComponent(cookieValue);
            });
          }

          return cookies;
        }
        /**
         * @param name     Cookie name
         * @param value    Cookie value
         * @param expires  Number of days until the cookies expires or an actual `Date`
         * @param path     Cookie path
         * @param domain   Cookie domain
         * @param secure   Secure flag
         * @param sameSite OWASP samesite token `Lax`, `None`, or `Strict`. Defaults to `Lax`
         */

      }, {
        key: "set",
        value: function set(name, value, expires, path, domain, secure) {
          var sameSite = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'Lax';

          if (!this.documentIsAccessible) {
            return;
          }

          var cookieString = encodeURIComponent(name) + '=' + encodeURIComponent(value) + ';';

          if (expires) {
            if (typeof expires === 'number') {
              var dateExpires = new Date(new Date().getTime() + expires * 1000 * 60 * 60 * 24);
              cookieString += 'expires=' + dateExpires.toUTCString() + ';';
            } else {
              cookieString += 'expires=' + expires.toUTCString() + ';';
            }
          }

          if (path) {
            cookieString += 'path=' + path + ';';
          }

          if (domain) {
            cookieString += 'domain=' + domain + ';';
          }

          if (secure === false && sameSite === 'None') {
            secure = true;
            console.warn("[ngx-cookie-service] Cookie ".concat(name, " was forced with secure flag because sameSite=None.") + "More details : https://github.com/stevermeister/ngx-cookie-service/issues/86#issuecomment-597720130");
          }

          if (secure) {
            cookieString += 'secure;';
          }

          cookieString += 'sameSite=' + sameSite + ';';
          this.document.cookie = cookieString;
        }
        /**
         * @param name   Cookie name
         * @param path   Cookie path
         * @param domain Cookie domain
         */

      }, {
        key: "delete",
        value: function _delete(name, path, domain, secure) {
          var sameSite = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Lax';

          if (!this.documentIsAccessible) {
            return;
          }

          this.set(name, '', new Date('Thu, 01 Jan 1970 00:00:01 GMT'), path, domain, secure, sameSite);
        }
        /**
         * @param path   Cookie path
         * @param domain Cookie domain
         */

      }, {
        key: "deleteAll",
        value: function deleteAll(path, domain, secure) {
          var sameSite = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'Lax';

          if (!this.documentIsAccessible) {
            return;
          }

          var cookies = this.getAll();

          for (var cookieName in cookies) {
            if (cookies.hasOwnProperty(cookieName)) {
              this["delete"](cookieName, path, domain, secure, sameSite);
            }
          }
        }
        /**
         * @param name Cookie name
         * @returns property RegExp
         */

      }, {
        key: "getCookieRegExp",
        value: function getCookieRegExp(name) {
          var escapedName = name.replace(/([\[\]\{\}\(\)\|\=\;\+\?\,\.\*\^\$])/gi, '\\$1');
          return new RegExp('(?:^' + escapedName + '|;\\s*' + escapedName + ')=(.*?)(?:;|$)', 'g');
        }
      }, {
        key: "safeDecodeURIComponent",
        value: function safeDecodeURIComponent(encodedURIComponent) {
          try {
            return decodeURIComponent(encodedURIComponent);
          } catch (_a) {
            // probably it is not uri encoded. return as is
            return encodedURIComponent;
          }
        }
      }]);

      return CookieService;
    }();

    CookieService.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"])({
      factory: function CookieService_Factory() {
        return new CookieService(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"]));
      },
      token: CookieService,
      providedIn: "root"
    });
    CookieService.decorators = [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"],
      args: [{
        providedIn: 'root'
      }]
    }];

    CookieService.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["DOCUMENT"]]
        }]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["InjectionToken"],
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["PLATFORM_ID"]]
        }]
      }];
    };
    /*
     * Public API Surface of ngx-cookie-service
     */

    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=ngx-cookie-service.js.map

    /***/

  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-calendar.js":
  /*!***********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-calendar.js ***!
    \***********************************************************/

  /*! exports provided: CALENDAR_VALUE_ACCESSOR, Calendar, CalendarModule */

  /***/
  function node_modulesPrimengFesm2015PrimengCalendarJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CALENDAR_VALUE_ACCESSOR", function () {
      return CALENDAR_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Calendar", function () {
      return Calendar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CalendarModule", function () {
      return CalendarModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var CALENDAR_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return Calendar;
      }),
      multi: true
    };

    var Calendar = /*#__PURE__*/function () {
      function Calendar(el, renderer, cd, zone) {
        _classCallCheck2(this, Calendar);

        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.zone = zone;
        this.dateFormat = 'mm/dd/yy';
        this.multipleSeparator = ',';
        this.rangeSeparator = '-';
        this.inline = false;
        this.showOtherMonths = true;
        this.icon = 'pi pi-calendar';
        this.shortYearCutoff = '+10';
        this.hourFormat = '24';
        this.stepHour = 1;
        this.stepMinute = 1;
        this.stepSecond = 1;
        this.showSeconds = false;
        this.showOnFocus = true;
        this.showWeek = false;
        this.dataType = 'date';
        this.selectionMode = 'single';
        this.todayButtonStyleClass = 'ui-button-secondary';
        this.clearButtonStyleClass = 'ui-button-secondary';
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.keepInvalid = false;
        this.hideOnDateTimeSelect = true;
        this.numberOfMonths = 1;
        this.view = 'date';
        this.timeSeparator = ":";
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClose = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onInput = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onTodayClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClearClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onMonthChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onYearChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClickOutside = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._locale = {
          firstDayOfWeek: 0,
          dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
          dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
          monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
          today: 'Today',
          clear: 'Clear',
          dateFormat: 'mm/dd/yy',
          weekHeader: 'Wk'
        };

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.inputFieldValue = null;
        this.navigationState = null;

        this.convertTo24Hour = function (hours, pm) {
          if (this.hourFormat == '12') {
            if (hours === 12) {
              return pm ? 12 : 0;
            } else {
              return pm ? hours + 12 : hours;
            }
          }

          return hours;
        };
      }

      _createClass2(Calendar, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var date = this.defaultDate || new Date();
          this.currentMonth = date.getMonth();
          this.currentYear = date.getFullYear();

          if (this.view === 'date') {
            this.createWeekDays();
            this.initTime(date);
            this.createMonths(this.currentMonth, this.currentYear);
            this.ticksTo1970 = ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000;
          } else if (this.view === 'month') {
            this.createMonthPickerValues();
          }
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this21 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'date':
                _this21.dateTemplate = item.template;
                break;

              case 'disabledDate':
                _this21.disabledDateTemplate = item.template;
                break;

              default:
                _this21.dateTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "populateYearOptions",
        value: function populateYearOptions(start, end) {
          this.yearOptions = [];

          for (var i = start; i <= end; i++) {
            this.yearOptions.push(i);
          }
        }
      }, {
        key: "createWeekDays",
        value: function createWeekDays() {
          this.weekDays = [];
          var dayIndex = this.locale.firstDayOfWeek;

          for (var i = 0; i < 7; i++) {
            this.weekDays.push(this.locale.dayNamesMin[dayIndex]);
            dayIndex = dayIndex == 6 ? 0 : ++dayIndex;
          }
        }
      }, {
        key: "createMonthPickerValues",
        value: function createMonthPickerValues() {
          this.monthPickerValues = [];

          for (var i = 0; i <= 11; i++) {
            this.monthPickerValues.push(this.locale.monthNamesShort[i]);
          }
        }
      }, {
        key: "createMonths",
        value: function createMonths(month, year) {
          this.months = this.months = [];

          for (var i = 0; i < this.numberOfMonths; i++) {
            var m = month + i;
            var y = year;

            if (m > 11) {
              m = m % 11 - 1;
              y = year + 1;
            }

            this.months.push(this.createMonth(m, y));
          }
        }
      }, {
        key: "getWeekNumber",
        value: function getWeekNumber(date) {
          var checkDate = new Date(date.getTime());
          checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));
          var time = checkDate.getTime();
          checkDate.setMonth(0);
          checkDate.setDate(1);
          return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;
        }
      }, {
        key: "createMonth",
        value: function createMonth(month, year) {
          var dates = [];
          var firstDay = this.getFirstDayOfMonthIndex(month, year);
          var daysLength = this.getDaysCountInMonth(month, year);
          var prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);
          var dayNo = 1;
          var today = new Date();
          var weekNumbers = [];
          var monthRows = Math.ceil((daysLength + firstDay) / 7);

          for (var i = 0; i < monthRows; i++) {
            var week = [];

            if (i == 0) {
              for (var j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {
                var prev = this.getPreviousMonthAndYear(month, year);
                week.push({
                  day: j,
                  month: prev.month,
                  year: prev.year,
                  otherMonth: true,
                  today: this.isToday(today, j, prev.month, prev.year),
                  selectable: this.isSelectable(j, prev.month, prev.year, true)
                });
              }

              var remainingDaysLength = 7 - week.length;

              for (var _j = 0; _j < remainingDaysLength; _j++) {
                week.push({
                  day: dayNo,
                  month: month,
                  year: year,
                  today: this.isToday(today, dayNo, month, year),
                  selectable: this.isSelectable(dayNo, month, year, false)
                });
                dayNo++;
              }
            } else {
              for (var _j2 = 0; _j2 < 7; _j2++) {
                if (dayNo > daysLength) {
                  var next = this.getNextMonthAndYear(month, year);
                  week.push({
                    day: dayNo - daysLength,
                    month: next.month,
                    year: next.year,
                    otherMonth: true,
                    today: this.isToday(today, dayNo - daysLength, next.month, next.year),
                    selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true)
                  });
                } else {
                  week.push({
                    day: dayNo,
                    month: month,
                    year: year,
                    today: this.isToday(today, dayNo, month, year),
                    selectable: this.isSelectable(dayNo, month, year, false)
                  });
                }

                dayNo++;
              }
            }

            if (this.showWeek) {
              weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));
            }

            dates.push(week);
          }

          return {
            month: month,
            year: year,
            dates: dates,
            weekNumbers: weekNumbers
          };
        }
      }, {
        key: "initTime",
        value: function initTime(date) {
          this.pm = date.getHours() > 11;

          if (this.showTime) {
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
            this.setCurrentHourPM(date.getHours());
          } else if (this.timeOnly) {
            this.currentMinute = 0;
            this.currentHour = 0;
            this.currentSecond = 0;
          }
        }
      }, {
        key: "navBackward",
        value: function navBackward(event) {
          var _this22 = this;

          event.stopPropagation();

          if (this.disabled) {
            event.preventDefault();
            return;
          }

          this.isMonthNavigate = true;

          if (this.view === 'month') {
            this.decrementYear();
            setTimeout(function () {
              _this22.updateFocus();
            }, 1);
          } else {
            if (this.currentMonth === 0) {
              this.currentMonth = 11;
              this.decrementYear();
            } else {
              this.currentMonth--;
            }

            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear
            });
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "navForward",
        value: function navForward(event) {
          var _this23 = this;

          event.stopPropagation();

          if (this.disabled) {
            event.preventDefault();
            return;
          }

          this.isMonthNavigate = true;

          if (this.view === 'month') {
            this.incrementYear();
            setTimeout(function () {
              _this23.updateFocus();
            }, 1);
          } else {
            if (this.currentMonth === 11) {
              this.currentMonth = 0;
              this.incrementYear();
            } else {
              this.currentMonth++;
            }

            this.onMonthChange.emit({
              month: this.currentMonth + 1,
              year: this.currentYear
            });
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "decrementYear",
        value: function decrementYear() {
          this.currentYear--;

          if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {
            var difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];
            this.populateYearOptions(this.yearOptions[0] - difference, this.yearOptions[this.yearOptions.length - 1] - difference);
          }
        }
      }, {
        key: "incrementYear",
        value: function incrementYear() {
          this.currentYear++;

          if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {
            var difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];
            this.populateYearOptions(this.yearOptions[0] + difference, this.yearOptions[this.yearOptions.length - 1] + difference);
          }
        }
      }, {
        key: "onDateSelect",
        value: function onDateSelect(event, dateMeta) {
          var _this24 = this;

          if (this.disabled || !dateMeta.selectable) {
            event.preventDefault();
            return;
          }

          if (this.isMultipleSelection() && this.isSelected(dateMeta)) {
            this.value = this.value.filter(function (date, i) {
              return !_this24.isDateEquals(date, dateMeta);
            });

            if (this.value.length === 0) {
              this.value = null;
            }

            this.updateModel(this.value);
          } else {
            if (this.shouldSelectDate(dateMeta)) {
              this.selectDate(dateMeta);
            }
          }

          if (this.isSingleSelection() && this.hideOnDateTimeSelect) {
            setTimeout(function () {
              event.preventDefault();

              _this24.hideOverlay();

              if (_this24.mask) {
                _this24.disableModality();
              }

              _this24.cd.markForCheck();
            }, 150);
          }

          this.updateInputfield();
          event.preventDefault();
        }
      }, {
        key: "shouldSelectDate",
        value: function shouldSelectDate(dateMeta) {
          if (this.isMultipleSelection()) return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;else return true;
        }
      }, {
        key: "onMonthSelect",
        value: function onMonthSelect(event, index) {
          if (!primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-state-disabled')) {
            this.onDateSelect(event, {
              year: this.currentYear,
              month: index,
              day: 1,
              selectable: true
            });
          }
        }
      }, {
        key: "updateInputfield",
        value: function updateInputfield() {
          var formattedValue = '';

          if (this.value) {
            if (this.isSingleSelection()) {
              formattedValue = this.formatDateTime(this.value);
            } else if (this.isMultipleSelection()) {
              for (var i = 0; i < this.value.length; i++) {
                var dateAsString = this.formatDateTime(this.value[i]);
                formattedValue += dateAsString;

                if (i !== this.value.length - 1) {
                  formattedValue += this.multipleSeparator + ' ';
                }
              }
            } else if (this.isRangeSelection()) {
              if (this.value && this.value.length) {
                var startDate = this.value[0];
                var endDate = this.value[1];
                formattedValue = this.formatDateTime(startDate);

                if (endDate) {
                  formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);
                }
              }
            }
          }

          this.inputFieldValue = formattedValue;
          this.updateFilledState();

          if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {
            this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;
          }
        }
      }, {
        key: "formatDateTime",
        value: function formatDateTime(date) {
          var formattedValue = null;

          if (date) {
            if (this.timeOnly) {
              formattedValue = this.formatTime(date);
            } else {
              formattedValue = this.formatDate(date, this.getDateFormat());

              if (this.showTime) {
                formattedValue += ' ' + this.formatTime(date);
              }
            }
          }

          return formattedValue;
        }
      }, {
        key: "setCurrentHourPM",
        value: function setCurrentHourPM(hours) {
          if (this.hourFormat == '12') {
            this.pm = hours > 11;

            if (hours >= 12) {
              this.currentHour = hours == 12 ? 12 : hours - 12;
            } else {
              this.currentHour = hours == 0 ? 12 : hours;
            }
          } else {
            this.currentHour = hours;
          }
        }
      }, {
        key: "selectDate",
        value: function selectDate(dateMeta) {
          var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);

          if (this.showTime) {
            if (this.hourFormat == '12') {
              if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);
            } else {
              date.setHours(this.currentHour);
            }

            date.setMinutes(this.currentMinute);
            date.setSeconds(this.currentSecond);
          }

          if (this.minDate && this.minDate > date) {
            date = this.minDate;
            this.setCurrentHourPM(date.getHours());
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
          }

          if (this.maxDate && this.maxDate < date) {
            date = this.maxDate;
            this.setCurrentHourPM(date.getHours());
            this.currentMinute = date.getMinutes();
            this.currentSecond = date.getSeconds();
          }

          if (this.isSingleSelection()) {
            this.updateModel(date);
          } else if (this.isMultipleSelection()) {
            this.updateModel(this.value ? [].concat(_toConsumableArray2(this.value), [date]) : [date]);
          } else if (this.isRangeSelection()) {
            if (this.value && this.value.length) {
              var startDate = this.value[0];
              var endDate = this.value[1];

              if (!endDate && date.getTime() >= startDate.getTime()) {
                endDate = date;
              } else {
                startDate = date;
                endDate = null;
              }

              this.updateModel([startDate, endDate]);
            } else {
              this.updateModel([date, null]);
            }
          }

          this.onSelect.emit(date);
        }
      }, {
        key: "updateModel",
        value: function updateModel(value) {
          var _this25 = this;

          this.value = value;

          if (this.dataType == 'date') {
            this.onModelChange(this.value);
          } else if (this.dataType == 'string') {
            if (this.isSingleSelection()) {
              this.onModelChange(this.formatDateTime(this.value));
            } else {
              var stringArrValue = null;

              if (this.value) {
                stringArrValue = this.value.map(function (date) {
                  return _this25.formatDateTime(date);
                });
              }

              this.onModelChange(stringArrValue);
            }
          }
        }
      }, {
        key: "getFirstDayOfMonthIndex",
        value: function getFirstDayOfMonthIndex(month, year) {
          var day = new Date();
          day.setDate(1);
          day.setMonth(month);
          day.setFullYear(year);
          var dayIndex = day.getDay() + this.getSundayIndex();
          return dayIndex >= 7 ? dayIndex - 7 : dayIndex;
        }
      }, {
        key: "getDaysCountInMonth",
        value: function getDaysCountInMonth(month, year) {
          return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();
        }
      }, {
        key: "getDaysCountInPrevMonth",
        value: function getDaysCountInPrevMonth(month, year) {
          var prev = this.getPreviousMonthAndYear(month, year);
          return this.getDaysCountInMonth(prev.month, prev.year);
        }
      }, {
        key: "getPreviousMonthAndYear",
        value: function getPreviousMonthAndYear(month, year) {
          var m, y;

          if (month === 0) {
            m = 11;
            y = year - 1;
          } else {
            m = month - 1;
            y = year;
          }

          return {
            'month': m,
            'year': y
          };
        }
      }, {
        key: "getNextMonthAndYear",
        value: function getNextMonthAndYear(month, year) {
          var m, y;

          if (month === 11) {
            m = 0;
            y = year + 1;
          } else {
            m = month + 1;
            y = year;
          }

          return {
            'month': m,
            'year': y
          };
        }
      }, {
        key: "getSundayIndex",
        value: function getSundayIndex() {
          return this.locale.firstDayOfWeek > 0 ? 7 - this.locale.firstDayOfWeek : 0;
        }
      }, {
        key: "isSelected",
        value: function isSelected(dateMeta) {
          if (this.value) {
            if (this.isSingleSelection()) {
              return this.isDateEquals(this.value, dateMeta);
            } else if (this.isMultipleSelection()) {
              var selected = false;

              var _iterator = _createForOfIteratorHelper(this.value),
                  _step;

              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  var date = _step.value;
                  selected = this.isDateEquals(date, dateMeta);

                  if (selected) {
                    break;
                  }
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }

              return selected;
            } else if (this.isRangeSelection()) {
              if (this.value[1]) return this.isDateEquals(this.value[0], dateMeta) || this.isDateEquals(this.value[1], dateMeta) || this.isDateBetween(this.value[0], this.value[1], dateMeta);else return this.isDateEquals(this.value[0], dateMeta);
            }
          } else {
            return false;
          }
        }
      }, {
        key: "isMonthSelected",
        value: function isMonthSelected(month) {
          var day = this.value ? Array.isArray(this.value) ? this.value[0].getDate() : this.value.getDate() : 1;
          return this.isSelected({
            year: this.currentYear,
            month: month,
            day: day,
            selectable: true
          });
        }
      }, {
        key: "isDateEquals",
        value: function isDateEquals(value, dateMeta) {
          if (value) return value.getDate() === dateMeta.day && value.getMonth() === dateMeta.month && value.getFullYear() === dateMeta.year;else return false;
        }
      }, {
        key: "isDateBetween",
        value: function isDateBetween(start, end, dateMeta) {
          var between = false;

          if (start && end) {
            var date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);
            return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();
          }

          return between;
        }
      }, {
        key: "isSingleSelection",
        value: function isSingleSelection() {
          return this.selectionMode === 'single';
        }
      }, {
        key: "isRangeSelection",
        value: function isRangeSelection() {
          return this.selectionMode === 'range';
        }
      }, {
        key: "isMultipleSelection",
        value: function isMultipleSelection() {
          return this.selectionMode === 'multiple';
        }
      }, {
        key: "isToday",
        value: function isToday(today, day, month, year) {
          return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;
        }
      }, {
        key: "isSelectable",
        value: function isSelectable(day, month, year, otherMonth) {
          var validMin = true;
          var validMax = true;
          var validDate = true;
          var validDay = true;

          if (otherMonth && !this.selectOtherMonths) {
            return false;
          }

          if (this.minDate) {
            if (this.minDate.getFullYear() > year) {
              validMin = false;
            } else if (this.minDate.getFullYear() === year) {
              if (this.minDate.getMonth() > month) {
                validMin = false;
              } else if (this.minDate.getMonth() === month) {
                if (this.minDate.getDate() > day) {
                  validMin = false;
                }
              }
            }
          }

          if (this.maxDate) {
            if (this.maxDate.getFullYear() < year) {
              validMax = false;
            } else if (this.maxDate.getFullYear() === year) {
              if (this.maxDate.getMonth() < month) {
                validMax = false;
              } else if (this.maxDate.getMonth() === month) {
                if (this.maxDate.getDate() < day) {
                  validMax = false;
                }
              }
            }
          }

          if (this.disabledDates) {
            validDate = !this.isDateDisabled(day, month, year);
          }

          if (this.disabledDays) {
            validDay = !this.isDayDisabled(day, month, year);
          }

          return validMin && validMax && validDate && validDay;
        }
      }, {
        key: "isDateDisabled",
        value: function isDateDisabled(day, month, year) {
          if (this.disabledDates) {
            var _iterator2 = _createForOfIteratorHelper(this.disabledDates),
                _step2;

            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var disabledDate = _step2.value;

                if (disabledDate.getFullYear() === year && disabledDate.getMonth() === month && disabledDate.getDate() === day) {
                  return true;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          }

          return false;
        }
      }, {
        key: "isDayDisabled",
        value: function isDayDisabled(day, month, year) {
          if (this.disabledDays) {
            var weekday = new Date(year, month, day);
            var weekdayNumber = weekday.getDay();
            return this.disabledDays.indexOf(weekdayNumber) !== -1;
          }

          return false;
        }
      }, {
        key: "onInputFocus",
        value: function onInputFocus(event) {
          this.focus = true;

          if (this.showOnFocus) {
            this.showOverlay();
          }

          this.onFocus.emit(event);
        }
      }, {
        key: "onInputClick",
        value: function onInputClick() {
          if (this.overlay && this.autoZIndex) {
            this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].zindex);
          }

          if (this.showOnFocus && !this.overlayVisible) {
            this.showOverlay();
          }
        }
      }, {
        key: "onInputBlur",
        value: function onInputBlur(event) {
          this.focus = false;
          this.onBlur.emit(event);

          if (!this.keepInvalid) {
            this.updateInputfield();
          }

          this.onModelTouched();
        }
      }, {
        key: "onButtonClick",
        value: function onButtonClick(event, inputfield) {
          if (!this.overlayVisible) {
            inputfield.focus();
            this.showOverlay();
          } else {
            this.hideOverlay();
          }
        }
      }, {
        key: "onPrevButtonClick",
        value: function onPrevButtonClick(event) {
          this.navigationState = {
            backward: true,
            button: true
          };
          this.navBackward(event);
        }
      }, {
        key: "onNextButtonClick",
        value: function onNextButtonClick(event) {
          this.navigationState = {
            backward: false,
            button: true
          };
          this.navForward(event);
        }
      }, {
        key: "onContainerButtonKeydown",
        value: function onContainerButtonKeydown(event) {
          switch (event.which) {
            //tab
            case 9:
              if (!this.inline) {
                this.trapFocus(event);
              }

              break;
            //escape

            case 27:
              this.overlayVisible = false;
              event.preventDefault();
              break;

            default:
              //Noop
              break;
          }
        }
      }, {
        key: "onInputKeydown",
        value: function onInputKeydown(event) {
          this.isKeydown = true;

          if (event.keyCode === 9 && this.contentViewChild) {
            this.trapFocus(event);
          } else if (event.keyCode === 27) {
            if (this.overlayVisible) {
              this.overlayVisible = false;
              event.preventDefault();
            }
          }
        }
      }, {
        key: "onDateCellKeydown",
        value: function onDateCellKeydown(event, date, groupIndex) {
          var cellContent = event.currentTarget;
          var cell = cellContent.parentElement;

          switch (event.which) {
            //down arrow
            case 40:
              {
                cellContent.tabIndex = '-1';
                var cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);
                var nextRow = cell.parentElement.nextElementSibling;

                if (nextRow) {
                  var focusCell = nextRow.children[cellIndex].children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(focusCell, 'ui-state-disabled')) {
                    this.navigationState = {
                      backward: false
                    };
                    this.navForward(event);
                  } else {
                    nextRow.children[cellIndex].children[0].tabIndex = '0';
                    nextRow.children[cellIndex].children[0].focus();
                  }
                } else {
                  this.navigationState = {
                    backward: false
                  };
                  this.navForward(event);
                }

                event.preventDefault();
                break;
              }
            //up arrow

            case 38:
              {
                cellContent.tabIndex = '-1';

                var _cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);

                var prevRow = cell.parentElement.previousElementSibling;

                if (prevRow) {
                  var _focusCell = prevRow.children[_cellIndex].children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell, 'ui-state-disabled')) {
                    this.navigationState = {
                      backward: true
                    };
                    this.navBackward(event);
                  } else {
                    _focusCell.tabIndex = '0';

                    _focusCell.focus();
                  }
                } else {
                  this.navigationState = {
                    backward: true
                  };
                  this.navBackward(event);
                }

                event.preventDefault();
                break;
              }
            //left arrow

            case 37:
              {
                cellContent.tabIndex = '-1';
                var prevCell = cell.previousElementSibling;

                if (prevCell) {
                  var _focusCell2 = prevCell.children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell2, 'ui-state-disabled') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell2.parentElement, 'ui-datepicker-weeknumber')) {
                    this.navigateToMonth(true, groupIndex);
                  } else {
                    _focusCell2.tabIndex = '0';

                    _focusCell2.focus();
                  }
                } else {
                  this.navigateToMonth(true, groupIndex);
                }

                event.preventDefault();
                break;
              }
            //right arrow

            case 39:
              {
                cellContent.tabIndex = '-1';
                var nextCell = cell.nextElementSibling;

                if (nextCell) {
                  var _focusCell3 = nextCell.children[0];

                  if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(_focusCell3, 'ui-state-disabled')) {
                    this.navigateToMonth(false, groupIndex);
                  } else {
                    _focusCell3.tabIndex = '0';

                    _focusCell3.focus();
                  }
                } else {
                  this.navigateToMonth(false, groupIndex);
                }

                event.preventDefault();
                break;
              }
            //enter

            case 13:
              {
                this.onDateSelect(event, date);
                event.preventDefault();
                break;
              }
            //escape

            case 27:
              {
                this.overlayVisible = false;
                event.preventDefault();
                break;
              }
            //tab

            case 9:
              {
                if (!this.inline) {
                  this.trapFocus(event);
                }

                break;
              }

            default:
              //no op
              break;
          }
        }
      }, {
        key: "onMonthCellKeydown",
        value: function onMonthCellKeydown(event, index) {
          var cell = event.currentTarget;

          switch (event.which) {
            //arrows
            case 38:
            case 40:
              {
                cell.tabIndex = '-1';
                var cells = cell.parentElement.children;
                var cellIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].index(cell);
                var nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];

                if (nextCell) {
                  nextCell.tabIndex = '0';
                  nextCell.focus();
                }

                event.preventDefault();
                break;
              }
            //left arrow

            case 37:
              {
                cell.tabIndex = '-1';
                var prevCell = cell.previousElementSibling;

                if (prevCell) {
                  prevCell.tabIndex = '0';
                  prevCell.focus();
                }

                event.preventDefault();
                break;
              }
            //right arrow

            case 39:
              {
                cell.tabIndex = '-1';
                var _nextCell = cell.nextElementSibling;

                if (_nextCell) {
                  _nextCell.tabIndex = '0';

                  _nextCell.focus();
                }

                event.preventDefault();
                break;
              }
            //enter

            case 13:
              {
                this.onMonthSelect(event, index);
                event.preventDefault();
                break;
              }
            //escape

            case 27:
              {
                this.overlayVisible = false;
                event.preventDefault();
                break;
              }
            //tab

            case 9:
              {
                if (!this.inline) {
                  this.trapFocus(event);
                }

                break;
              }

            default:
              //no op
              break;
          }
        }
      }, {
        key: "navigateToMonth",
        value: function navigateToMonth(prev, groupIndex) {
          if (prev) {
            if (this.numberOfMonths === 1 || groupIndex === 0) {
              this.navigationState = {
                backward: true
              };
              this.navBackward(event);
            } else {
              var prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];
              var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(prevMonthContainer, '.ui-datepicker-calendar td a');
              var focusCell = cells[cells.length - 1];
              focusCell.tabIndex = '0';
              focusCell.focus();
            }
          } else {
            if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {
              this.navigationState = {
                backward: false
              };
              this.navForward(event);
            } else {
              var nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];

              var _focusCell4 = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(nextMonthContainer, '.ui-datepicker-calendar td a');

              _focusCell4.tabIndex = '0';

              _focusCell4.focus();
            }
          }
        }
      }, {
        key: "updateFocus",
        value: function updateFocus() {
          var cell;

          if (this.navigationState) {
            if (this.navigationState.button) {
              this.initFocusableCell();
              if (this.navigationState.backward) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-prev').focus();else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-next').focus();
            } else {
              if (this.navigationState.backward) {
                var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
                cell = cells[cells.length - 1];
              } else {
                cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
              }

              if (cell) {
                cell.tabIndex = '0';
                cell.focus();
              }
            }

            this.navigationState = null;
          } else {
            this.initFocusableCell();
          }
        }
      }, {
        key: "initFocusableCell",
        value: function initFocusableCell() {
          var cell;

          if (this.view === 'month') {
            var cells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month:not(.ui-state-disabled)');
            var selectedCell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month.ui-state-highlight');
            cells.forEach(function (cell) {
              return cell.tabIndex = -1;
            });
            cell = selectedCell || cells[0];

            if (cells.length === 0) {
              var disabledCells = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].find(this.contentViewChild.nativeElement, '.ui-monthpicker .ui-monthpicker-month.ui-state-disabled[tabindex = "0"]');
              disabledCells.forEach(function (cell) {
                return cell.tabIndex = -1;
              });
            }
          } else {
            cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, 'a.ui-state-active');

            if (!cell) {
              var todayCell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, 'td.ui-datepicker-today a:not(.ui-state-disabled)');
              if (todayCell) cell = todayCell;else cell = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].findSingle(this.contentViewChild.nativeElement, '.ui-datepicker-calendar td a');
            }
          }

          if (cell) {
            cell.tabIndex = '0';
          }
        }
      }, {
        key: "trapFocus",
        value: function trapFocus(event) {
          event.preventDefault();
          var focusableElements = primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].getFocusableElements(this.contentViewChild.nativeElement);

          if (focusableElements && focusableElements.length > 0) {
            if (!document.activeElement) {
              focusableElements[0].focus();
            } else {
              var focusedIndex = focusableElements.indexOf(document.activeElement);

              if (event.shiftKey) {
                if (focusedIndex == -1 || focusedIndex === 0) focusableElements[focusableElements.length - 1].focus();else focusableElements[focusedIndex - 1].focus();
              } else {
                if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) focusableElements[0].focus();else focusableElements[focusedIndex + 1].focus();
              }
            }
          }
        }
      }, {
        key: "onMonthDropdownChange",
        value: function onMonthDropdownChange(m) {
          this.currentMonth = parseInt(m);
          this.onMonthChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear
          });
          this.createMonths(this.currentMonth, this.currentYear);
        }
      }, {
        key: "onYearDropdownChange",
        value: function onYearDropdownChange(y) {
          this.currentYear = parseInt(y);
          this.onYearChange.emit({
            month: this.currentMonth + 1,
            year: this.currentYear
          });
          this.createMonths(this.currentMonth, this.currentYear);
        }
      }, {
        key: "validateTime",
        value: function validateTime(hour, minute, second, pm) {
          var value = this.value;
          var convertedHour = this.convertTo24Hour(hour, pm);

          if (this.isRangeSelection()) {
            value = this.value[1] || this.value[0];
          }

          if (this.isMultipleSelection()) {
            value = this.value[this.value.length - 1];
          }

          var valueDateString = value ? value.toDateString() : null;

          if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {
            if (this.minDate.getHours() > convertedHour) {
              return false;
            }

            if (this.minDate.getHours() === convertedHour) {
              if (this.minDate.getMinutes() > minute) {
                return false;
              }

              if (this.minDate.getMinutes() === minute) {
                if (this.minDate.getSeconds() > second) {
                  return false;
                }
              }
            }
          }

          if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {
            if (this.maxDate.getHours() < convertedHour) {
              return false;
            }

            if (this.maxDate.getHours() === convertedHour) {
              if (this.maxDate.getMinutes() < minute) {
                return false;
              }

              if (this.maxDate.getMinutes() === minute) {
                if (this.maxDate.getSeconds() < second) {
                  return false;
                }
              }
            }
          }

          return true;
        }
      }, {
        key: "incrementHour",
        value: function incrementHour(event) {
          var prevHour = this.currentHour;
          var newHour = this.currentHour + this.stepHour;
          var newPM = this.pm;
          if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;else if (this.hourFormat == '12') {
            // Before the AM/PM break, now after
            if (prevHour < 12 && newHour > 11) {
              newPM = !this.pm;
            }

            newHour = newHour >= 13 ? newHour - 12 : newHour;
          }

          if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
            this.currentHour = newHour;
            this.pm = newPM;
          }

          event.preventDefault();
        }
      }, {
        key: "onTimePickerElementMouseDown",
        value: function onTimePickerElementMouseDown(event, type, direction) {
          if (!this.disabled) {
            this.repeat(event, null, type, direction);
            event.preventDefault();
          }
        }
      }, {
        key: "onTimePickerElementMouseUp",
        value: function onTimePickerElementMouseUp(event) {
          if (!this.disabled) {
            this.clearTimePickerTimer();
            this.updateTime();
          }
        }
      }, {
        key: "onTimePickerElementMouseOut",
        value: function onTimePickerElementMouseOut(event) {
          if (!this.disabled && this.timePickerTimer) {
            this.clearTimePickerTimer();
            this.updateTime();
          }
        }
      }, {
        key: "repeat",
        value: function repeat(event, interval, type, direction) {
          var _this26 = this;

          var i = interval || 500;
          this.clearTimePickerTimer();
          this.timePickerTimer = setTimeout(function () {
            _this26.repeat(event, 100, type, direction);
          }, i);

          switch (type) {
            case 0:
              if (direction === 1) this.incrementHour(event);else this.decrementHour(event);
              break;

            case 1:
              if (direction === 1) this.incrementMinute(event);else this.decrementMinute(event);
              break;

            case 2:
              if (direction === 1) this.incrementSecond(event);else this.decrementSecond(event);
              break;
          }

          this.updateInputfield();
        }
      }, {
        key: "clearTimePickerTimer",
        value: function clearTimePickerTimer() {
          if (this.timePickerTimer) {
            clearTimeout(this.timePickerTimer);
          }
        }
      }, {
        key: "decrementHour",
        value: function decrementHour(event) {
          var newHour = this.currentHour - this.stepHour;
          var newPM = this.pm;
          if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;else if (this.hourFormat == '12') {
            // If we were at noon/midnight, then switch
            if (this.currentHour === 12) {
              newPM = !this.pm;
            }

            newHour = newHour <= 0 ? 12 + newHour : newHour;
          }

          if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {
            this.currentHour = newHour;
            this.pm = newPM;
          }

          event.preventDefault();
        }
      }, {
        key: "incrementMinute",
        value: function incrementMinute(event) {
          var newMinute = this.currentMinute + this.stepMinute;
          newMinute = newMinute > 59 ? newMinute - 60 : newMinute;

          if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
            this.currentMinute = newMinute;
          }

          event.preventDefault();
        }
      }, {
        key: "decrementMinute",
        value: function decrementMinute(event) {
          var newMinute = this.currentMinute - this.stepMinute;
          newMinute = newMinute < 0 ? 60 + newMinute : newMinute;

          if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {
            this.currentMinute = newMinute;
          }

          event.preventDefault();
        }
      }, {
        key: "incrementSecond",
        value: function incrementSecond(event) {
          var newSecond = this.currentSecond + this.stepSecond;
          newSecond = newSecond > 59 ? newSecond - 60 : newSecond;

          if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
            this.currentSecond = newSecond;
          }

          event.preventDefault();
        }
      }, {
        key: "decrementSecond",
        value: function decrementSecond(event) {
          var newSecond = this.currentSecond - this.stepSecond;
          newSecond = newSecond < 0 ? 60 + newSecond : newSecond;

          if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {
            this.currentSecond = newSecond;
          }

          event.preventDefault();
        }
      }, {
        key: "updateTime",
        value: function updateTime() {
          var value = this.value;

          if (this.isRangeSelection()) {
            value = this.value[1] || this.value[0];
          }

          if (this.isMultipleSelection()) {
            value = this.value[this.value.length - 1];
          }

          value = value ? new Date(value.getTime()) : new Date();

          if (this.hourFormat == '12') {
            if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);
          } else {
            value.setHours(this.currentHour);
          }

          value.setMinutes(this.currentMinute);
          value.setSeconds(this.currentSecond);

          if (this.isRangeSelection()) {
            if (this.value[1]) value = [this.value[0], value];else value = [value, null];
          }

          if (this.isMultipleSelection()) {
            value = [].concat(_toConsumableArray2(this.value.slice(0, -1)), [value]);
          }

          this.updateModel(value);
          this.onSelect.emit(value);
          this.updateInputfield();
        }
      }, {
        key: "toggleAMPM",
        value: function toggleAMPM(event) {
          var newPM = !this.pm;

          if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {
            this.pm = newPM;
            this.updateTime();
          }

          event.preventDefault();
        }
      }, {
        key: "onUserInput",
        value: function onUserInput(event) {
          // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026
          if (!this.isKeydown) {
            return;
          }

          this.isKeydown = false;
          var val = event.target.value;

          try {
            var value = this.parseValueFromString(val);

            if (this.isValidSelection(value)) {
              this.updateModel(value);
              this.updateUI();
            }
          } catch (err) {
            //invalid date
            this.updateModel(null);
          }

          this.filled = val != null && val.length;
          this.onInput.emit(event);
        }
      }, {
        key: "isValidSelection",
        value: function isValidSelection(value) {
          var _this27 = this;

          var isValid = true;

          if (this.isSingleSelection()) {
            if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {
              isValid = false;
            }
          } else if (value.every(function (v) {
            return _this27.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false);
          })) {
            if (this.isRangeSelection()) {
              isValid = value.length > 1 && value[1] > value[0] ? true : false;
            }
          }

          return isValid;
        }
      }, {
        key: "parseValueFromString",
        value: function parseValueFromString(text) {
          if (!text || text.trim().length === 0) {
            return null;
          }

          var value;

          if (this.isSingleSelection()) {
            value = this.parseDateTime(text);
          } else if (this.isMultipleSelection()) {
            var tokens = text.split(this.multipleSeparator);
            value = [];

            var _iterator3 = _createForOfIteratorHelper(tokens),
                _step3;

            try {
              for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
                var token = _step3.value;
                value.push(this.parseDateTime(token.trim()));
              }
            } catch (err) {
              _iterator3.e(err);
            } finally {
              _iterator3.f();
            }
          } else if (this.isRangeSelection()) {
            var _tokens = text.split(' ' + this.rangeSeparator + ' ');

            value = [];

            for (var i = 0; i < _tokens.length; i++) {
              value[i] = this.parseDateTime(_tokens[i].trim());
            }
          }

          return value;
        }
      }, {
        key: "parseDateTime",
        value: function parseDateTime(text) {
          var date;
          var parts = text.split(' ');

          if (this.timeOnly) {
            date = new Date();
            this.populateTime(date, parts[0], parts[1]);
          } else {
            var dateFormat = this.getDateFormat();

            if (this.showTime) {
              var ampm = this.hourFormat == '12' ? parts.pop() : null;
              var timeString = parts.pop();
              date = this.parseDate(parts.join(' '), dateFormat);
              this.populateTime(date, timeString, ampm);
            } else {
              date = this.parseDate(text, dateFormat);
            }
          }

          return date;
        }
      }, {
        key: "populateTime",
        value: function populateTime(value, timeString, ampm) {
          if (this.hourFormat == '12' && !ampm) {
            throw 'Invalid Time';
          }

          this.pm = ampm === 'PM' || ampm === 'pm';
          var time = this.parseTime(timeString);
          value.setHours(time.hour);
          value.setMinutes(time.minute);
          value.setSeconds(time.second);
        }
      }, {
        key: "updateUI",
        value: function updateUI() {
          var val = this.value || this.defaultDate || new Date();

          if (Array.isArray(val)) {
            val = val[0];
          }

          this.currentMonth = val.getMonth();
          this.currentYear = val.getFullYear();
          this.createMonths(this.currentMonth, this.currentYear);

          if (this.showTime || this.timeOnly) {
            this.setCurrentHourPM(val.getHours());
            this.currentMinute = val.getMinutes();
            this.currentSecond = val.getSeconds();
          }
        }
      }, {
        key: "showOverlay",
        value: function showOverlay() {
          if (!this.overlayVisible) {
            this.updateUI();
            this.overlayVisible = true;
          }
        }
      }, {
        key: "hideOverlay",
        value: function hideOverlay() {
          this.overlayVisible = false;
          this.clearTimePickerTimer();

          if (this.touchUI) {
            this.disableModality();
          }
        }
      }, {
        key: "toggle",
        value: function toggle() {
          if (!this.inline) {
            if (!this.overlayVisible) {
              this.showOverlay();
              this.inputfieldViewChild.nativeElement.focus();
            } else {
              this.hideOverlay();
            }
          }
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
            case 'visibleTouchUI':
              if (!this.inline) {
                this.overlay = event.element;
                this.appendOverlay();

                if (this.autoZIndex) {
                  this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].zindex);
                }

                this.alignOverlay();
                this.onShow.emit(event);
              }

              break;

            case 'void':
              this.onOverlayHide();
              this.onClose.emit(event);
              break;
          }
        }
      }, {
        key: "onOverlayAnimationDone",
        value: function onOverlayAnimationDone(event) {
          switch (event.toState) {
            case 'visible':
            case 'visibleTouchUI':
              if (!this.inline) {
                this.bindDocumentClickListener();
                this.bindDocumentResizeListener();
              }

              break;
          }
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].appendChild(this.overlay, this.appendTo);
          }
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.touchUI) {
            this.enableModality(this.overlay);
          } else {
            if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);
          }
        }
      }, {
        key: "enableModality",
        value: function enableModality(element) {
          var _this28 = this;

          if (!this.mask) {
            this.mask = document.createElement('div');
            this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);
            var maskStyleClass = 'ui-widget-overlay ui-datepicker-mask ui-datepicker-mask-scrollblocker';
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addMultipleClasses(this.mask, maskStyleClass);
            this.maskClickListener = this.renderer.listen(this.mask, 'click', function (event) {
              _this28.disableModality();
            });
            document.body.appendChild(this.mask);
            primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].addClass(document.body, 'ui-overflow-hidden');
          }
        }
      }, {
        key: "disableModality",
        value: function disableModality() {
          if (this.mask) {
            document.body.removeChild(this.mask);
            var bodyChildren = document.body.children;
            var hasBlockerMasks;

            for (var i = 0; i < bodyChildren.length; i++) {
              var bodyChild = bodyChildren[i];

              if (primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(bodyChild, 'ui-datepicker-mask-scrollblocker')) {
                hasBlockerMasks = true;
                break;
              }
            }

            if (!hasBlockerMasks) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].removeClass(document.body, 'ui-overflow-hidden');
            }

            this.unbindMaskClickListener();
            this.mask = null;
          }
        }
      }, {
        key: "unbindMaskClickListener",
        value: function unbindMaskClickListener() {
          if (this.maskClickListener) {
            this.maskClickListener();
            this.maskClickListener = null;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;

          if (this.value && typeof this.value === 'string') {
            this.value = this.parseValueFromString(this.value);
          }

          this.updateInputfield();
          this.updateUI();
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "getDateFormat",
        value: function getDateFormat() {
          return this.dateFormat || this.locale.dateFormat;
        } // Ported from jquery-ui datepicker formatDate

      }, {
        key: "formatDate",
        value: function formatDate(date, format) {
          if (!date) {
            return '';
          }

          var iFormat;

          var lookAhead = function lookAhead(match) {
            var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

            if (matches) {
              iFormat++;
            }

            return matches;
          },
              formatNumber = function formatNumber(match, value, len) {
            var num = '' + value;

            if (lookAhead(match)) {
              while (num.length < len) {
                num = '0' + num;
              }
            }

            return num;
          },
              formatName = function formatName(match, value, shortNames, longNames) {
            return lookAhead(match) ? longNames[value] : shortNames[value];
          };

          var output = '';
          var literal = false;

          if (date) {
            for (iFormat = 0; iFormat < format.length; iFormat++) {
              if (literal) {
                if (format.charAt(iFormat) === '\'' && !lookAhead('\'')) {
                  literal = false;
                } else {
                  output += format.charAt(iFormat);
                }
              } else {
                switch (format.charAt(iFormat)) {
                  case 'd':
                    output += formatNumber('d', date.getDate(), 2);
                    break;

                  case 'D':
                    output += formatName('D', date.getDay(), this.locale.dayNamesShort, this.locale.dayNames);
                    break;

                  case 'o':
                    output += formatNumber('o', Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                    break;

                  case 'm':
                    output += formatNumber('m', date.getMonth() + 1, 2);
                    break;

                  case 'M':
                    output += formatName('M', date.getMonth(), this.locale.monthNamesShort, this.locale.monthNames);
                    break;

                  case 'y':
                    output += lookAhead('y') ? date.getFullYear() : (date.getFullYear() % 100 < 10 ? '0' : '') + date.getFullYear() % 100;
                    break;

                  case '@':
                    output += date.getTime();
                    break;

                  case '!':
                    output += date.getTime() * 10000 + this.ticksTo1970;
                    break;

                  case '\'':
                    if (lookAhead('\'')) {
                      output += '\'';
                    } else {
                      literal = true;
                    }

                    break;

                  default:
                    output += format.charAt(iFormat);
                }
              }
            }
          }

          return output;
        }
      }, {
        key: "formatTime",
        value: function formatTime(date) {
          if (!date) {
            return '';
          }

          var output = '';
          var hours = date.getHours();
          var minutes = date.getMinutes();
          var seconds = date.getSeconds();

          if (this.hourFormat == '12' && hours > 11 && hours != 12) {
            hours -= 12;
          }

          if (this.hourFormat == '12') {
            output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;
          } else {
            output += hours < 10 ? '0' + hours : hours;
          }

          output += ':';
          output += minutes < 10 ? '0' + minutes : minutes;

          if (this.showSeconds) {
            output += ':';
            output += seconds < 10 ? '0' + seconds : seconds;
          }

          if (this.hourFormat == '12') {
            output += date.getHours() > 11 ? ' PM' : ' AM';
          }

          return output;
        }
      }, {
        key: "parseTime",
        value: function parseTime(value) {
          var tokens = value.split(':');
          var validTokenLength = this.showSeconds ? 3 : 2;

          if (tokens.length !== validTokenLength) {
            throw "Invalid time";
          }

          var h = parseInt(tokens[0]);
          var m = parseInt(tokens[1]);
          var s = this.showSeconds ? parseInt(tokens[2]) : null;

          if (isNaN(h) || isNaN(m) || h > 23 || m > 59 || this.hourFormat == '12' && h > 12 || this.showSeconds && (isNaN(s) || s > 59)) {
            throw "Invalid time";
          } else {
            if (this.hourFormat == '12') {
              if (h !== 12 && this.pm) {
                h += 12;
              } else if (!this.pm && h === 12) {
                h -= 12;
              }
            }

            return {
              hour: h,
              minute: m,
              second: s
            };
          }
        } // Ported from jquery-ui datepicker parseDate

      }, {
        key: "parseDate",
        value: function parseDate(value, format) {
          if (format == null || value == null) {
            throw "Invalid arguments";
          }

          value = typeof value === "object" ? value.toString() : value + "";

          if (value === "") {
            return null;
          }

          var iFormat,
              dim,
              extra,
              iValue = 0,
              shortYearCutoff = typeof this.shortYearCutoff !== "string" ? this.shortYearCutoff : new Date().getFullYear() % 100 + parseInt(this.shortYearCutoff, 10),
              year = -1,
              month = -1,
              day = -1,
              doy = -1,
              literal = false,
              date,
              lookAhead = function lookAhead(match) {
            var matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;

            if (matches) {
              iFormat++;
            }

            return matches;
          },
              getNumber = function getNumber(match) {
            var isDoubled = lookAhead(match),
                size = match === "@" ? 14 : match === "!" ? 20 : match === "y" && isDoubled ? 4 : match === "o" ? 3 : 2,
                minSize = match === "y" ? size : 1,
                digits = new RegExp("^\\d{" + minSize + "," + size + "}"),
                num = value.substring(iValue).match(digits);

            if (!num) {
              throw "Missing number at position " + iValue;
            }

            iValue += num[0].length;
            return parseInt(num[0], 10);
          },
              getName = function getName(match, shortNames, longNames) {
            var index = -1;
            var arr = lookAhead(match) ? longNames : shortNames;
            var names = [];

            for (var i = 0; i < arr.length; i++) {
              names.push([i, arr[i]]);
            }

            names.sort(function (a, b) {
              return -(a[1].length - b[1].length);
            });

            for (var _i2 = 0; _i2 < names.length; _i2++) {
              var name = names[_i2][1];

              if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {
                index = names[_i2][0];
                iValue += name.length;
                break;
              }
            }

            if (index !== -1) {
              return index + 1;
            } else {
              throw "Unknown name at position " + iValue;
            }
          },
              checkLiteral = function checkLiteral() {
            if (value.charAt(iValue) !== format.charAt(iFormat)) {
              throw "Unexpected literal at position " + iValue;
            }

            iValue++;
          };

          if (this.view === 'month') {
            day = 1;
          }

          for (iFormat = 0; iFormat < format.length; iFormat++) {
            if (literal) {
              if (format.charAt(iFormat) === "'" && !lookAhead("'")) {
                literal = false;
              } else {
                checkLiteral();
              }
            } else {
              switch (format.charAt(iFormat)) {
                case "d":
                  day = getNumber("d");
                  break;

                case "D":
                  getName("D", this.locale.dayNamesShort, this.locale.dayNames);
                  break;

                case "o":
                  doy = getNumber("o");
                  break;

                case "m":
                  month = getNumber("m");
                  break;

                case "M":
                  month = getName("M", this.locale.monthNamesShort, this.locale.monthNames);
                  break;

                case "y":
                  year = getNumber("y");
                  break;

                case "@":
                  date = new Date(getNumber("@"));
                  year = date.getFullYear();
                  month = date.getMonth() + 1;
                  day = date.getDate();
                  break;

                case "!":
                  date = new Date((getNumber("!") - this.ticksTo1970) / 10000);
                  year = date.getFullYear();
                  month = date.getMonth() + 1;
                  day = date.getDate();
                  break;

                case "'":
                  if (lookAhead("'")) {
                    checkLiteral();
                  } else {
                    literal = true;
                  }

                  break;

                default:
                  checkLiteral();
              }
            }
          }

          if (iValue < value.length) {
            extra = value.substr(iValue);

            if (!/^\s+/.test(extra)) {
              throw "Extra/unparsed characters found in date: " + extra;
            }
          }

          if (year === -1) {
            year = new Date().getFullYear();
          } else if (year < 100) {
            year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100);
          }

          if (doy > -1) {
            month = 1;
            day = doy;

            do {
              dim = this.getDaysCountInMonth(year, month - 1);

              if (day <= dim) {
                break;
              }

              month++;
              day -= dim;
            } while (true);
          }

          date = this.daylightSavingAdjust(new Date(year, month - 1, day));

          if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {
            throw "Invalid date"; // E.g. 31/02/00
          }

          return date;
        }
      }, {
        key: "daylightSavingAdjust",
        value: function daylightSavingAdjust(date) {
          if (!date) {
            return null;
          }

          date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
          return date;
        }
      }, {
        key: "updateFilledState",
        value: function updateFilledState() {
          this.filled = this.inputFieldValue && this.inputFieldValue != '';
        }
      }, {
        key: "onTodayButtonClick",
        value: function onTodayButtonClick(event) {
          var date = new Date();
          var dateMeta = {
            day: date.getDate(),
            month: date.getMonth(),
            year: date.getFullYear(),
            otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,
            today: true,
            selectable: true
          };
          this.onDateSelect(event, dateMeta);
          this.onTodayClick.emit(event);
        }
      }, {
        key: "onClearButtonClick",
        value: function onClearButtonClick(event) {
          this.updateModel(null);
          this.updateInputfield();
          this.hideOverlay();
          this.onClearClick.emit(event);
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this29 = this;

          if (!this.documentClickListener) {
            this.zone.runOutsideAngular(function () {
              _this29.documentClickListener = _this29.renderer.listen('document', 'click', function (event) {
                if (_this29.isOutsideClicked(event) && _this29.overlayVisible) {
                  _this29.zone.run(function () {
                    _this29.hideOverlay();

                    _this29.onClickOutside.emit(event);

                    _this29.cd.markForCheck();
                  });
                }
              });
            });
          }
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          if (!this.documentResizeListener && !this.touchUI) {
            this.documentResizeListener = this.onWindowResize.bind(this);
            window.addEventListener('resize', this.documentResizeListener);
          }
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "isOutsideClicked",
        value: function isOutsideClicked(event) {
          return !(this.el.nativeElement.isSameNode(event.target) || this.isNavIconClicked(event) || this.el.nativeElement.contains(event.target) || this.overlay && this.overlay.contains(event.target));
        }
      }, {
        key: "isNavIconClicked",
        value: function isNavIconClicked(event) {
          return primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-prev') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-prev-icon') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-next') || primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].hasClass(event.target, 'ui-datepicker-next-icon');
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          if (this.overlayVisible && !primeng_dom__WEBPACK_IMPORTED_MODULE_4__["DomHandler"].isAndroid()) {
            this.hideOverlay();
          }
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindMaskClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
          this.disableModality();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.clearTimePickerTimer();
          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }, {
        key: "content",
        set: function set(content) {
          var _this30 = this;

          this.contentViewChild = content;

          if (this.contentViewChild) {
            if (this.isMonthNavigate) {
              Promise.resolve(null).then(function () {
                return _this30.updateFocus();
              });
              this.isMonthNavigate = false;
            } else {
              this.initFocusableCell();
            }
          }
        }
      }, {
        key: "minDate",
        get: function get() {
          return this._minDate;
        },
        set: function set(date) {
          this._minDate = date;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "maxDate",
        get: function get() {
          return this._maxDate;
        },
        set: function set(date) {
          this._maxDate = date;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "disabledDates",
        get: function get() {
          return this._disabledDates;
        },
        set: function set(disabledDates) {
          this._disabledDates = disabledDates;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "disabledDays",
        get: function get() {
          return this._disabledDays;
        },
        set: function set(disabledDays) {
          this._disabledDays = disabledDays;

          if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {
            this.createMonths(this.currentMonth, this.currentYear);
          }
        }
      }, {
        key: "yearRange",
        get: function get() {
          return this._yearRange;
        },
        set: function set(yearRange) {
          this._yearRange = yearRange;

          if (yearRange) {
            var years = yearRange.split(':');
            var yearStart = parseInt(years[0]);
            var yearEnd = parseInt(years[1]);
            this.populateYearOptions(yearStart, yearEnd);
          }
        }
      }, {
        key: "showTime",
        get: function get() {
          return this._showTime;
        },
        set: function set(showTime) {
          this._showTime = showTime;

          if (this.currentHour === undefined) {
            this.initTime(this.value || new Date());
          }

          this.updateInputfield();
        }
      }, {
        key: "locale",
        get: function get() {
          return this._locale;
        },
        set: function set(newLocale) {
          this._locale = newLocale;

          if (this.view === 'date') {
            this.createWeekDays();
            this.createMonths(this.currentMonth, this.currentYear);
          } else if (this.view === 'month') {
            this.createMonthPickerValues();
          }
        }
      }]);

      return Calendar;
    }();

    Calendar.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "defaultDate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inputStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "placeholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "dateFormat", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "multipleSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "rangeSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "inline", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showOtherMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "selectOtherMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "icon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "readonlyInput", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "shortYearCutoff", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "monthNavigator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "yearNavigator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hourFormat", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "timeOnly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepHour", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepMinute", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "stepSecond", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showSeconds", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "required", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showOnFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showWeek", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "dataType", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "selectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "maxDateCount", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showButtonBar", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "todayButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "clearButtonStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "panelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "panelStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "keepInvalid", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hideOnDateTimeSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "numberOfMonths", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "view", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "touchUI", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "timeSeparator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onBlur", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClose", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onInput", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onTodayClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClearClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onMonthChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onYearChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onClickOutside", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Calendar.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], Calendar.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('inputfield', {
      "static": false
    })], Calendar.prototype, "inputfieldViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('contentWrapper', {
      "static": false
    })], Calendar.prototype, "content", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "minDate", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "maxDate", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabledDates", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "disabledDays", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "yearRange", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "showTime", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Calendar.prototype, "locale", null);

    Calendar = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-calendar',
      template: "\n        <span [ngClass]=\"{'ui-calendar':true, 'ui-calendar-w-btn': showIcon, 'ui-calendar-timeonly': timeOnly}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ng-template [ngIf]=\"!inline\">\n                <input #inputfield type=\"text\" [attr.id]=\"inputId\" [attr.name]=\"name\" [attr.required]=\"required\" [attr.aria-required]=\"required\" [value]=\"inputFieldValue\" (focus)=\"onInputFocus($event)\" (keydown)=\"onInputKeydown($event)\" (click)=\"onInputClick()\" (blur)=\"onInputBlur($event)\"\n                    [readonly]=\"readonlyInput\" (input)=\"onUserInput($event)\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [placeholder]=\"placeholder||''\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\"\n                    [ngClass]=\"'ui-inputtext ui-widget ui-state-default ui-corner-all'\" autocomplete=\"off\" [attr.aria-labelledby]=\"ariaLabelledBy\"\n                    ><button type=\"button\" [icon]=\"icon\" pButton *ngIf=\"showIcon\" (click)=\"onButtonClick($event,inputfield)\" class=\"ui-datepicker-trigger ui-calendar-button\"\n                    [ngClass]=\"{'ui-state-disabled':disabled}\" [disabled]=\"disabled\" tabindex=\"0\"></button>\n            </ng-template>\n            <div #contentWrapper [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\" [ngClass]=\"{'ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all': true, 'ui-datepicker-inline':inline,'ui-shadow':!inline,\n                'ui-state-disabled':disabled,'ui-datepicker-timeonly':timeOnly,'ui-datepicker-multiple-month': this.numberOfMonths > 1, 'ui-datepicker-monthpicker': (view === 'month'), 'ui-datepicker-touch-ui': touchUI}\"\n                [@overlayAnimation]=\"touchUI ? {value: 'visibleTouchUI', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}: \n                                            {value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" \n                                            [@.disabled]=\"inline === true\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\" (@overlayAnimation.done)=\"onOverlayAnimationDone($event)\" *ngIf=\"inline || overlayVisible\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngIf=\"!timeOnly\">\n                    <div class=\"ui-datepicker-group ui-widget-content\" *ngFor=\"let month of months; let i = index;\">\n                        <div class=\"ui-datepicker-header ui-widget-header ui-helper-clearfix ui-corner-all\">\n                            <a class=\"ui-datepicker-prev ui-corner-all\" (click)=\"onPrevButtonClick($event)\" (keydown.enter)=\"onPrevButtonClick($event)\" *ngIf=\"i === 0\" tabindex=\"0\" (keydown)=\"onInputKeydown($event)\">\n                                <span class=\"ui-datepicker-prev-icon pi pi-chevron-left\"></span>\n                            </a>\n                            <div class=\"ui-datepicker-title\">\n                                <span class=\"ui-datepicker-month\" *ngIf=\"!monthNavigator && (view !== 'month')\">{{locale.monthNames[month.month]}}</span>\n                                <select tabindex=\"0\" class=\"ui-datepicker-month\" *ngIf=\"monthNavigator && (view !== 'month') && numberOfMonths === 1\" (change)=\"onMonthDropdownChange($event.target.value)\">\n                                    <option [value]=\"i\" *ngFor=\"let monthName of locale.monthNames;let i = index\" [selected]=\"i === month.month\">{{monthName}}</option>\n                                </select>\n                                <select tabindex=\"0\" class=\"ui-datepicker-year\" *ngIf=\"yearNavigator && numberOfMonths === 1\" (change)=\"onYearDropdownChange($event.target.value)\">\n                                    <option [value]=\"year\" *ngFor=\"let year of yearOptions\" [selected]=\"year === currentYear\">{{year}}</option>\n                                </select>\n                                <span class=\"ui-datepicker-year\" *ngIf=\"!yearNavigator\">{{view === 'month' ? currentYear : month.year}}</span>\n                            </div>\n                            <a class=\"ui-datepicker-next ui-corner-all\" (click)=\"onNextButtonClick($event)\" (keydown.enter)=\"onNextButtonClick($event)\" *ngIf=\"numberOfMonths === 1 ? true : (i === numberOfMonths -1)\" tabindex=\"0\" (keydown)=\"onInputKeydown($event)\">\n                                <span class=\"ui-datepicker-next-icon pi pi-chevron-right\"></span>\n                            </a>\n                        </div>\n                        <div class=\"ui-datepicker-calendar-container\" *ngIf=\"view ==='date'\">\n                            <table class=\"ui-datepicker-calendar\">\n                                <thead>\n                                    <tr>\n                                        <th *ngIf=\"showWeek\" class=\"ui-datepicker-weekheader\">\n                                            <span>{{locale['weekHeader']}}</span>\n                                        </th>\n                                        <th scope=\"col\" *ngFor=\"let weekDay of weekDays;let begin = first; let end = last\">\n                                            <span>{{weekDay}}</span>\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr *ngFor=\"let week of month.dates; let j = index;\">\n                                        <td *ngIf=\"showWeek\" class=\"ui-datepicker-weeknumber ui-state-disabled\">\n                                            <span>\n                                                {{month.weekNumbers[j]}}\n                                            </span>\n                                        </td>\n                                        <td *ngFor=\"let date of week\" [ngClass]=\"{'ui-datepicker-other-month': date.otherMonth,\n                                            'ui-datepicker-current-day':isSelected(date),'ui-datepicker-today':date.today}\">\n                                            <ng-container *ngIf=\"date.otherMonth ? showOtherMonths : true\">\n                                                <a class=\"ui-state-default\" *ngIf=\"date.selectable\" [ngClass]=\"{'ui-state-active':isSelected(date), 'ui-state-highlight':date.today}\"\n                                                    (click)=\"onDateSelect($event,date)\" draggable=\"false\" (keydown)=\"onDateCellKeydown($event,date,i)\">\n                                                    <ng-container *ngIf=\"!dateTemplate\">{{date.day}}</ng-container>\n                                                    <ng-container *ngTemplateOutlet=\"dateTemplate; context: {$implicit: date}\"></ng-container>\n                                                </a>\n                                                <span class=\"ui-state-default ui-state-disabled\" [ngClass]=\"{'ui-state-active':isSelected(date), 'ui-state-highlight':date.today}\" *ngIf=\"!date.selectable\">\n                                                    <ng-container *ngIf=\"!disabledDateTemplate\">{{date.day}}</ng-container>\n                                                    <ng-container *ngTemplateOutlet=\"disabledDateTemplate; context: {$implicit: date}\"></ng-container>\n                                                </span>\n                                            </ng-container>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                    <div class=\"ui-monthpicker\" *ngIf=\"view === 'month'\">\n                        <a  *ngFor=\"let m of monthPickerValues; let i = index\" (click)=\"onMonthSelect($event, i)\" (keydown)=\"onMonthCellKeydown($event,i)\" class=\"ui-monthpicker-month\" [ngClass]=\"{'ui-state-active': isMonthSelected(i), 'ui-state-disabled':!isSelectable(1, i, this.currentYear, false)}\">\n                            {{m}}\n                        </a>\n                    </div>\n                </ng-container>\n                <div class=\"ui-timepicker ui-widget-header ui-corner-all\" *ngIf=\"showTime||timeOnly\">\n                    <div class=\"ui-hour-picker\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentHour < 10 ? 'inline': 'none'}\">0</span><span>{{currentHour}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementHour($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 0, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-separator\">\n                        <a>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{timeSeparator}}</span>\n                        <a>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-minute-picker\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentMinute < 10 ? 'inline': 'none'}\">0</span><span>{{currentMinute}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementMinute($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 1, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-separator\" *ngIf=\"showSeconds\">\n                        <a>\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{timeSeparator}}</span>\n                        <a>\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-second-picker\" *ngIf=\"showSeconds\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"incrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, 1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span [ngStyle]=\"{'display': currentSecond < 10 ? 'inline': 'none'}\">0</span><span>{{currentSecond}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (keydown.enter)=\"decrementSecond($event)\" (mousedown)=\"onTimePickerElementMouseDown($event, 2, -1)\" (mouseup)=\"onTimePickerElementMouseUp($event)\" (mouseout)=\"onTimePickerElementMouseOut($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                    <div class=\"ui-ampm-picker\" *ngIf=\"hourFormat=='12'\">\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\">\n                            <span class=\"pi pi-chevron-up\"></span>\n                        </a>\n                        <span>{{pm ? 'PM' : 'AM'}}</span>\n                        <a tabindex=\"0\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"toggleAMPM($event)\" (keydown.enter)=\"toggleAMPM($event)\">\n                            <span class=\"pi pi-chevron-down\"></span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ui-datepicker-buttonbar ui-widget-header\" *ngIf=\"showButtonBar\">\n                    <button type=\"button\" tabindex=\"0\" [label]=\"_locale.today\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onTodayButtonClick($event)\" pButton [ngClass]=\"[todayButtonStyleClass]\"></button>\n                    <button type=\"button\" tabindex=\"0\" [label]=\"_locale.clear\" (keydown)=\"onContainerButtonKeydown($event)\" (click)=\"onClearButtonClick($event)\" pButton [ngClass]=\"[clearButtonStyleClass]\"></button>\n                </div>\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n        </span>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visibleTouchUI', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translate(-50%,-50%)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translateY(5%)'
      }))]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visibleTouchUI', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'
      }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visibleTouchUI => void', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        opacity: 0,
        transform: 'translate3d(-50%, -40%, 0) scale(0.9)'
      }))])])],
      host: {
        '[class.ui-inputwrapper-filled]': 'filled',
        '[class.ui-inputwrapper-focus]': 'focus'
      },
      providers: [CALENDAR_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Calendar);

    var CalendarModule = function CalendarModule() {
      _classCallCheck2(this, CalendarModule);
    };

    CalendarModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_button__WEBPACK_IMPORTED_MODULE_3__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      exports: [Calendar, primeng_button__WEBPACK_IMPORTED_MODULE_3__["ButtonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"]],
      declarations: [Calendar]
    })], CalendarModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-calendar.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-contextmenu.js":
  /*!**************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-contextmenu.js ***!
    \**************************************************************/

  /*! exports provided: ContextMenu, ContextMenuModule, ContextMenuSub */

  /***/
  function node_modulesPrimengFesm2015PrimengContextmenuJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContextMenu", function () {
      return ContextMenu;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContextMenuModule", function () {
      return ContextMenuModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ContextMenuSub", function () {
      return ContextMenuSub;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var __param = undefined && undefined.__param || function (paramIndex, decorator) {
      return function (target, key) {
        decorator(target, key, paramIndex);
      };
    };

    var ContextMenuSub = /*#__PURE__*/function () {
      function ContextMenuSub(contextMenu) {
        _classCallCheck2(this, ContextMenuSub);

        this.contextMenu = contextMenu;
      }

      _createClass2(ContextMenuSub, [{
        key: "onItemMouseEnter",
        value: function onItemMouseEnter(event, item, menuitem) {
          if (this.hideTimeout) {
            clearTimeout(this.hideTimeout);
            this.hideTimeout = null;
          }

          if (menuitem.disabled) {
            return;
          }

          this.activeItem = item;
          var nextElement = item.children[0].nextElementSibling;

          if (nextElement) {
            var sublist = nextElement.children[0];
            sublist.style.zIndex = ++primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].zindex;
            this.position(sublist, item);
          }
        }
      }, {
        key: "itemClick",
        value: function itemClick(event, item) {
          if (item.disabled) {
            event.preventDefault();
            return;
          }

          if (item.command) {
            item.command({
              originalEvent: event,
              item: item
            });
            event.preventDefault();
          }

          if (item.items) event.preventDefault();else this.contextMenu.hide();
        }
      }, {
        key: "listClick",
        value: function listClick(event) {
          this.activeItem = null;
        }
      }, {
        key: "position",
        value: function position(sublist, item) {
          this.containerOffset = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOffset(item.parentElement);
          var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getViewport();
          var sublistWidth = sublist.offsetParent ? sublist.offsetWidth : primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getHiddenElementOuterWidth(sublist);
          var itemOuterWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterWidth(item.children[0]);
          var itemOuterHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getOuterHeight(item.children[0]);
          var sublistHeight = sublist.offsetHeight ? sublist.offsetHeight : primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getHiddenElementOuterHeight(sublist);

          if (parseInt(this.containerOffset.top) + itemOuterHeight + sublistHeight > viewport.height - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].calculateScrollbarHeight()) {
            sublist.style.bottom = '0px';
          } else {
            sublist.style.top = '0px';
          }

          if (parseInt(this.containerOffset.left) + itemOuterWidth + sublistWidth > viewport.width - primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].calculateScrollbarWidth()) {
            sublist.style.left = -sublistWidth + 'px';
          } else {
            sublist.style.left = itemOuterWidth + 'px';
          }
        }
      }, {
        key: "parentActive",
        get: function get() {
          return this._parentActive;
        },
        set: function set(value) {
          this._parentActive = value;

          if (!value) {
            this.activeItem = null;
          }
        }
      }]);

      return ContextMenuSub;
    }();

    ContextMenuSub.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"],
          args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
            return ContextMenu;
          })]
        }]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenuSub.prototype, "item", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenuSub.prototype, "root", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenuSub.prototype, "parentActive", null);

    ContextMenuSub = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-contextMenuSub',
      template: "\n        <ul [ngClass]=\"{'ui-widget-content ui-corner-all ui-submenu-list ui-shadow':!root}\" class=\"ui-menu-list\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem,'ui-helper-hidden': child.visible === false}\"\n                    (mouseenter)=\"onItemMouseEnter($event,item,child)\" role=\"none\">\n                    <a *ngIf=\"!child.routerLink\" [attr.href]=\"child.url\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\" (click)=\"itemClick($event, child)\"\n                        [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\"\n                        [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-menuitem-link-active'\" role=\"menuitem\"\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\"\n                        (click)=\"itemClick($event, child)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\"\n                        [ngStyle]=\"child.style\" [class]=\"child.styleClass\"\n                        [fragment]=\"child.fragment\" [queryParamsHandling]=\"child.queryParamsHandling\" [preserveFragment]=\"child.preserveFragment\" [skipLocationChange]=\"child.skipLocationChange\" [replaceUrl]=\"child.replaceUrl\" [state]=\"child.state\">\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-contextMenuSub class=\"ui-submenu\" [parentActive]=\"item==activeItem\" [item]=\"child\" *ngIf=\"child.items\"></p-contextMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    "
    }), __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
      return ContextMenu;
    })))], ContextMenuSub);

    var ContextMenu = /*#__PURE__*/function () {
      function ContextMenu(el, renderer, zone) {
        _classCallCheck2(this, ContextMenu);

        this.el = el;
        this.renderer = renderer;
        this.zone = zone;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.triggerEvent = 'contextmenu';
        this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass2(ContextMenu, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this31 = this;

          if (this.global) {
            this.triggerEventListener = this.renderer.listen('document', this.triggerEvent, function (event) {
              _this31.show(event);

              event.preventDefault();
            });
          } else if (this.target) {
            this.triggerEventListener = this.renderer.listen(this.target, this.triggerEvent, function (event) {
              _this31.show(event);

              event.preventDefault();
              event.stopPropagation();
            });
          }

          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.containerViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].appendChild(this.containerViewChild.nativeElement, this.appendTo);
          }
        }
      }, {
        key: "show",
        value: function show(event) {
          this.position(event);
          this.moveOnTop();
          this.containerViewChild.nativeElement.style.display = 'block';
          this.parentActive = true;
          primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].fadeIn(this.containerViewChild.nativeElement, 250);
          this.bindGlobalListeners();

          if (event) {
            event.preventDefault();
          }

          this.onShow.emit();
        }
      }, {
        key: "hide",
        value: function hide() {
          this.containerViewChild.nativeElement.style.display = 'none';
          this.parentActive = false;
          this.unbindGlobalListeners();
          this.onHide.emit();
        }
      }, {
        key: "moveOnTop",
        value: function moveOnTop() {
          if (this.autoZIndex) {
            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].zindex);
          }
        }
      }, {
        key: "toggle",
        value: function toggle(event) {
          if (this.containerViewChild.nativeElement.offsetParent) this.hide();else this.show(event);
        }
      }, {
        key: "position",
        value: function position(event) {
          if (event) {
            var left = event.pageX + 1;
            var top = event.pageY + 1;
            var width = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetWidth : primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getHiddenElementOuterWidth(this.containerViewChild.nativeElement);
            var height = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetHeight : primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getHiddenElementOuterHeight(this.containerViewChild.nativeElement);
            var viewport = primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].getViewport(); //flip

            if (left + width - document.body.scrollLeft > viewport.width) {
              left -= width;
            } //flip


            if (top + height - document.body.scrollTop > viewport.height) {
              top -= height;
            } //fit


            if (left < document.body.scrollLeft) {
              left = document.body.scrollLeft;
            } //fit


            if (top < document.body.scrollTop) {
              top = document.body.scrollTop;
            }

            this.containerViewChild.nativeElement.style.left = left + 'px';
            this.containerViewChild.nativeElement.style.top = top + 'px';
          }
        }
      }, {
        key: "bindGlobalListeners",
        value: function bindGlobalListeners() {
          var _this32 = this;

          if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function (event) {
              if (_this32.containerViewChild.nativeElement.offsetParent && _this32.isOutsideClicked(event) && event.button !== 2) {
                _this32.hide();
              }
            });
          }

          this.zone.runOutsideAngular(function () {
            if (!_this32.windowResizeListener) {
              _this32.windowResizeListener = _this32.onWindowResize.bind(_this32);
              window.addEventListener('resize', _this32.windowResizeListener);
            }
          });
        }
      }, {
        key: "unbindGlobalListeners",
        value: function unbindGlobalListeners() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }

          if (this.windowResizeListener) {
            window.removeEventListener('resize', this.windowResizeListener);
            this.windowResizeListener = null;
          }
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize(event) {
          if (this.containerViewChild.nativeElement.offsetParent) {
            this.hide();
          }
        }
      }, {
        key: "isOutsideClicked",
        value: function isOutsideClicked(event) {
          return !(this.containerViewChild.nativeElement.isSameNode(event.target) || this.containerViewChild.nativeElement.contains(event.target));
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindGlobalListeners();

          if (this.triggerEventListener) {
            this.triggerEventListener();
          }

          if (this.appendTo) {
            this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);
          }
        }
      }]);

      return ContextMenu;
    }();

    ContextMenu.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "model", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "global", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "target", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ContextMenu.prototype, "triggerEvent", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], ContextMenu.prototype, "onShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], ContextMenu.prototype, "onHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container')], ContextMenu.prototype, "containerViewChild", void 0);

    ContextMenu = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-contextMenu',
      template: "\n        <div #container [ngClass]=\"'ui-contextmenu ui-widget ui-widget-content ui-corner-all ui-shadow'\"\n            [class]=\"styleClass\" [ngStyle]=\"style\">\n            <p-contextMenuSub [item]=\"model\" [parentActive]=\"parentActive\" root=\"root\"></p-contextMenuSub>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], ContextMenu);

    var ContextMenuModule = function ContextMenuModule() {
      _classCallCheck2(this, ContextMenuModule);
    };

    ContextMenuModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"]],
      exports: [ContextMenu, _angular_router__WEBPACK_IMPORTED_MODULE_3__["RouterModule"]],
      declarations: [ContextMenu, ContextMenuSub]
    })], ContextMenuModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-contextmenu.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-editor.js":
  /*!*********************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-editor.js ***!
    \*********************************************************/

  /*! exports provided: EDITOR_VALUE_ACCESSOR, Editor, EditorModule */

  /***/
  function node_modulesPrimengFesm2015PrimengEditorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EDITOR_VALUE_ACCESSOR", function () {
      return EDITOR_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Editor", function () {
      return Editor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EditorModule", function () {
      return EditorModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var quill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! quill */
    "./node_modules/quill/dist/quill.js");
    /* harmony import */


    var quill__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(quill__WEBPACK_IMPORTED_MODULE_5__);

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var EDITOR_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return Editor;
      }),
      multi: true
    };

    var Editor = /*#__PURE__*/function () {
      function Editor(el) {
        _classCallCheck2(this, Editor);

        this.el = el;
        this.onTextChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSelectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onInit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        this.onModelChange = function () {};

        this.onModelTouched = function () {};
      }

      _createClass2(Editor, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this33 = this;

          var editorElement = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.el.nativeElement, 'div.ui-editor-content');
          var toolbarElement = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(this.el.nativeElement, 'div.ui-editor-toolbar');
          var defaultModule = {
            toolbar: toolbarElement
          };
          var modules = this.modules ? Object.assign(Object.assign({}, defaultModule), this.modules) : defaultModule;
          this.quill = new quill__WEBPACK_IMPORTED_MODULE_5__(editorElement, {
            modules: modules,
            placeholder: this.placeholder,
            readOnly: this.readonly,
            theme: 'snow',
            formats: this.formats,
            bounds: this.bounds,
            debug: this.debug,
            scrollingContainer: this.scrollingContainer
          });

          if (this.value) {
            this.quill.pasteHTML(this.value);
          }

          this.quill.on('text-change', function (delta, oldContents, source) {
            if (source === 'user') {
              var html = editorElement.children[0].innerHTML;

              var text = _this33.quill.getText().trim();

              if (html === '<p><br></p>') {
                html = null;
              }

              _this33.onTextChange.emit({
                htmlValue: html,
                textValue: text,
                delta: delta,
                source: source
              });

              _this33.onModelChange(html);

              _this33.onModelTouched();
            }
          });
          this.quill.on('selection-change', function (range, oldRange, source) {
            _this33.onSelectionChange.emit({
              range: range,
              oldRange: oldRange,
              source: source
            });
          });
          this.onInit.emit({
            editor: this.quill
          });
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;

          if (this.quill) {
            if (value) this.quill.pasteHTML(value);else this.quill.setText('');
          }
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "getQuill",
        value: function getQuill() {
          return this.quill;
        }
      }, {
        key: "readonly",
        get: function get() {
          return this._readonly;
        },
        set: function set(val) {
          this._readonly = val;

          if (this.quill) {
            if (this._readonly) this.quill.disable();else this.quill.enable();
          }
        }
      }]);

      return Editor;
    }();

    Editor.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Editor.prototype, "onTextChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Editor.prototype, "onSelectionChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_2__["Header"])], Editor.prototype, "toolbar", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "placeholder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "formats", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "modules", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "bounds", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "scrollingContainer", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "debug", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], Editor.prototype, "onInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], Editor.prototype, "readonly", null);

    Editor = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-editor',
      template: "\n        <div [ngClass]=\"'ui-widget ui-editor-container ui-corner-all'\" [class]=\"styleClass\">\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"toolbar\">\n                <ng-content select=\"p-header\"></ng-content>\n            </div>\n            <div class=\"ui-editor-toolbar ui-widget-header ui-corner-top\" *ngIf=\"!toolbar\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\"></option>\n                        <option value=\"right\"></option>\n                        <option value=\"justify\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\"></button>\n                </span>\n            </div>\n            <div class=\"ui-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    ",
      providers: [EDITOR_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], Editor);

    var EditorModule = function EditorModule() {
      _classCallCheck2(this, EditorModule);
    };

    EditorModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [Editor, primeng_api__WEBPACK_IMPORTED_MODULE_2__["SharedModule"]],
      declarations: [Editor]
    })], EditorModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-editor.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-multiselect.js":
  /*!**************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-multiselect.js ***!
    \**************************************************************/

  /*! exports provided: MULTISELECT_VALUE_ACCESSOR, MultiSelect, MultiSelectItem, MultiSelectModule */

  /***/
  function node_modulesPrimengFesm2015PrimengMultiselectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MULTISELECT_VALUE_ACCESSOR", function () {
      return MULTISELECT_VALUE_ACCESSOR;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultiSelect", function () {
      return MultiSelect;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultiSelectItem", function () {
      return MultiSelectItem;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultiSelectModule", function () {
      return MultiSelectModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/esm2015/scrolling.js");
    /* harmony import */


    var primeng_tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! primeng/tooltip */
    "./node_modules/primeng/fesm2015/primeng-tooltip.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var MULTISELECT_VALUE_ACCESSOR = {
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_6__["NG_VALUE_ACCESSOR"],
      useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
        return MultiSelect;
      }),
      multi: true
    };

    var MultiSelectItem = /*#__PURE__*/function () {
      function MultiSelectItem() {
        _classCallCheck2(this, MultiSelectItem);

        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onKeydown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
      }

      _createClass2(MultiSelectItem, [{
        key: "onOptionClick",
        value: function onOptionClick(event) {
          this.onClick.emit({
            originalEvent: event,
            option: this.option
          });
        }
      }, {
        key: "onOptionKeydown",
        value: function onOptionKeydown(event) {
          this.onKeydown.emit({
            originalEvent: event,
            option: this.option
          });
        }
      }]);

      return MultiSelectItem;
    }();

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "option", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "selected", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "visible", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "itemSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "template", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelectItem.prototype, "maxSelectionLimitReached", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelectItem.prototype, "onClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelectItem.prototype, "onKeydown", void 0);

    MultiSelectItem = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-multiSelectItem',
      template: "\n        <li class=\"ui-multiselect-item ui-corner-all\" (click)=\"onOptionClick($event)\" (keydown)=\"onOptionKeydown($event)\" [attr.aria-label]=\"option.label\"\n            [style.display]=\"visible ? 'block' : 'none'\" [attr.tabindex]=\"option.disabled ? null : '0'\" [ngStyle]=\"{'height': itemSize + 'px'}\"\n            [ngClass]=\"{'ui-state-highlight': selected, 'ui-state-disabled': (option.disabled || (maxSelectionLimitReached && !selected))}\">\n            <div class=\"ui-chkbox ui-widget\">\n                <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\"\n                    [ngClass]=\"{'ui-state-active': selected}\">\n                    <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check': selected}\"></span>\n                </div>\n            </div>\n            <span *ngIf=\"!template\">{{option.label}}</span>\n            <ng-container *ngTemplateOutlet=\"template; context: {$implicit: option}\"></ng-container>\n        </li>\n    "
    })], MultiSelectItem);

    var MultiSelect = /*#__PURE__*/function () {
      function MultiSelect(el, renderer, cd) {
        _classCallCheck2(this, MultiSelect);

        this.el = el;
        this.renderer = renderer;
        this.cd = cd;
        this.scrollHeight = '200px';
        this._defaultLabel = 'Choose';
        this.filter = true;
        this.displaySelectedLabel = true;
        this.maxSelectedLabels = 3;
        this.selectedItemsLabel = '{0} items selected';
        this.showToggleAll = true;
        this.emptyFilterMessage = 'No results found';
        this.resetFilterOnHide = false;
        this.dropdownIcon = 'pi pi-chevron-down';
        this.showHeader = true;
        this.autoZIndex = true;
        this.baseZIndex = 0;
        this.filterBy = 'label';
        this.showTransitionOptions = '225ms ease-out';
        this.hideTransitionOptions = '195ms ease-in';
        this.filterMatchMode = "contains";
        this.tooltip = '';
        this.tooltipPosition = 'right';
        this.tooltipPositionStyle = 'absolute';
        this.autofocusFilter = true;
        this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onFocus = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onBlur = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onPanelShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onPanelHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();

        this.onModelChange = function () {};

        this.onModelTouched = function () {};

        this.disabledSelectedOptions = [];
      }

      _createClass2(MultiSelect, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.updateLabel();
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this34 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'item':
                _this34.itemTemplate = item.template;
                break;

              case 'selectedItems':
                _this34.selectedItemsTemplate = item.template;
                break;

              default:
                _this34.itemTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.overlayVisible) {
            this.show();
          }
        }
      }, {
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          if (this.filtered) {
            this.alignOverlay();
            this.filtered = false;
          }
        }
      }, {
        key: "writeValue",
        value: function writeValue(value) {
          this.value = value;
          this.updateLabel();
          this.updateFilledState();
          this.setDisabledSelectedOptions();
          this.checkSelectionLimit();
          this.cd.markForCheck();
        }
      }, {
        key: "checkSelectionLimit",
        value: function checkSelectionLimit() {
          if (this.selectionLimit && this.value && this.value.length === this.selectionLimit) {
            this.maxSelectionLimitReached = true;
          } else {
            this.maxSelectionLimitReached = false;
          }
        }
      }, {
        key: "updateFilledState",
        value: function updateFilledState() {
          this.filled = this.value && this.value.length > 0;
        }
      }, {
        key: "registerOnChange",
        value: function registerOnChange(fn) {
          this.onModelChange = fn;
        }
      }, {
        key: "registerOnTouched",
        value: function registerOnTouched(fn) {
          this.onModelTouched = fn;
        }
      }, {
        key: "setDisabledState",
        value: function setDisabledState(val) {
          this.disabled = val;
        }
      }, {
        key: "onOptionClick",
        value: function onOptionClick(event) {
          var option = event.option;

          if (option.disabled) {
            return;
          }

          var optionValue = option.value;
          var selectionIndex = this.findSelectionIndex(optionValue);

          if (selectionIndex != -1) {
            this.value = this.value.filter(function (val, i) {
              return i != selectionIndex;
            });

            if (this.selectionLimit) {
              this.maxSelectionLimitReached = false;
            }
          } else {
            if (!this.selectionLimit || !this.value || this.value.length < this.selectionLimit) {
              this.value = [].concat(_toConsumableArray2(this.value || []), [optionValue]);
            }

            this.checkSelectionLimit();
          }

          this.onModelChange(this.value);
          this.onChange.emit({
            originalEvent: event.originalEvent,
            value: this.value,
            itemValue: optionValue
          });
          this.updateLabel();
          this.updateFilledState();
        }
      }, {
        key: "isSelected",
        value: function isSelected(value) {
          return this.findSelectionIndex(value) != -1;
        }
      }, {
        key: "findSelectionIndex",
        value: function findSelectionIndex(val) {
          var index = -1;

          if (this.value) {
            for (var i = 0; i < this.value.length; i++) {
              if (primeng_utils__WEBPACK_IMPORTED_MODULE_4__["ObjectUtils"].equals(this.value[i], val, this.dataKey)) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "toggleAll",
        value: function toggleAll(event) {
          if (this.isAllChecked()) {
            if (this.disabledSelectedOptions && this.disabledSelectedOptions.length > 0) {
              var value = [];
              value = _toConsumableArray2(this.disabledSelectedOptions);
              this.value = value;
            } else {
              this.value = [];
            }
          } else {
            var opts = this.getVisibleOptions();

            if (opts) {
              var _value = [];

              if (this.disabledSelectedOptions && this.disabledSelectedOptions.length > 0) {
                _value = _toConsumableArray2(this.disabledSelectedOptions);
              }

              for (var i = 0; i < opts.length; i++) {
                var option = opts[i];

                if (!option.disabled) {
                  _value.push(opts[i].value);
                }
              }

              this.value = _value;
            }
          }

          this.onModelChange(this.value);
          this.onChange.emit({
            originalEvent: event,
            value: this.value
          });
          this.updateFilledState();
          this.updateLabel();
        }
      }, {
        key: "isAllChecked",
        value: function isAllChecked() {
          if (this.filterValue && this.filterValue.trim().length) {
            return this.value && this.visibleOptions && this.visibleOptions.length && this.isAllVisibleOptionsChecked();
          } else {
            var optionCount = this.getEnabledOptionCount();
            var disabledSelectedOptionCount = this.disabledSelectedOptions.length;
            return this.value && this.options && this.value.length > 0 && this.value.length == optionCount + disabledSelectedOptionCount;
          }
        }
      }, {
        key: "isAllVisibleOptionsChecked",
        value: function isAllVisibleOptionsChecked() {
          if (!this.visibleOptions || this.visibleOptions.length === 0) {
            return false;
          } else {
            var _iterator4 = _createForOfIteratorHelper(this.visibleOptions),
                _step4;

            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                var option = _step4.value;

                if (!this.isSelected(option.value)) {
                  return false;
                }
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }

            return true;
          }
        }
      }, {
        key: "getEnabledOptionCount",
        value: function getEnabledOptionCount() {
          if (this.options) {
            var count = 0;

            var _iterator5 = _createForOfIteratorHelper(this.options),
                _step5;

            try {
              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
                var opt = _step5.value;

                if (!opt.disabled) {
                  count++;
                }
              }
            } catch (err) {
              _iterator5.e(err);
            } finally {
              _iterator5.f();
            }

            return count;
          } else {
            return 0;
          }
        }
      }, {
        key: "setDisabledSelectedOptions",
        value: function setDisabledSelectedOptions() {
          if (this.options) {
            this.disabledSelectedOptions = [];

            if (this.value) {
              var _iterator6 = _createForOfIteratorHelper(this.options),
                  _step6;

              try {
                for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                  var opt = _step6.value;

                  if (opt.disabled && this.isSelected(opt.value)) {
                    this.disabledSelectedOptions.push(opt.value);
                  }
                }
              } catch (err) {
                _iterator6.e(err);
              } finally {
                _iterator6.f();
              }
            }
          }
        }
      }, {
        key: "show",
        value: function show() {
          if (!this.overlayVisible) {
            this.overlayVisible = true;
          }
        }
      }, {
        key: "onOverlayAnimationStart",
        value: function onOverlayAnimationStart(event) {
          switch (event.toState) {
            case 'visible':
              this.overlay = event.element;
              this.appendOverlay();

              if (this.autoZIndex) {
                this.overlay.style.zIndex = String(this.baseZIndex + ++primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].zindex);
              }

              this.alignOverlay();
              this.bindDocumentClickListener();
              this.bindDocumentResizeListener();

              if (this.filterInputChild && this.filterInputChild.nativeElement) {
                this.preventModelTouched = true;

                if (this.autofocusFilter) {
                  this.filterInputChild.nativeElement.focus();
                }
              }

              this.onPanelShow.emit();
              break;

            case 'void':
              this.onOverlayHide();
              break;
          }
        }
      }, {
        key: "appendOverlay",
        value: function appendOverlay() {
          if (this.appendTo) {
            if (this.appendTo === 'body') document.body.appendChild(this.overlay);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].appendChild(this.overlay, this.appendTo);

            if (!this.overlay.style.minWidth) {
              this.overlay.style.minWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getWidth(this.containerViewChild.nativeElement) + 'px';
            }
          }
        }
      }, {
        key: "restoreOverlayAppend",
        value: function restoreOverlayAppend() {
          if (this.overlay && this.appendTo) {
            this.el.nativeElement.appendChild(this.overlay);
          }
        }
      }, {
        key: "alignOverlay",
        value: function alignOverlay() {
          if (this.overlay) {
            if (this.appendTo) primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].absolutePosition(this.overlay, this.containerViewChild.nativeElement);else primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].relativePosition(this.overlay, this.containerViewChild.nativeElement);
          }
        }
      }, {
        key: "hide",
        value: function hide() {
          this.overlayVisible = false;
          this.unbindDocumentClickListener();

          if (this.resetFilterOnHide) {
            this.filterInputChild.nativeElement.value = '';
            this.onFilter();
          }

          this.onPanelHide.emit();
        }
      }, {
        key: "close",
        value: function close(event) {
          this.hide();
          event.preventDefault();
          event.stopPropagation();
        }
      }, {
        key: "onMouseclick",
        value: function onMouseclick(event, input) {
          if (this.disabled || this.readonly || event.target.isSameNode(this.accessibleViewChild.nativeElement)) {
            return;
          }

          this.onClick.emit(event);

          if (!this.isOverlayClick(event)) {
            if (this.overlayVisible) {
              this.hide();
            } else {
              input.focus();
              this.show();
            }
          }
        }
      }, {
        key: "isOverlayClick",
        value: function isOverlayClick(event) {
          return this.overlay && this.overlay.contains(event.target);
        }
      }, {
        key: "isOutsideClicked",
        value: function isOutsideClicked(event) {
          return !(this.el.nativeElement.isSameNode(event.target) || this.el.nativeElement.contains(event.target) || this.isOverlayClick(event));
        }
      }, {
        key: "onInputFocus",
        value: function onInputFocus(event) {
          this.focus = true;
          this.onFocus.emit({
            originalEvent: event
          });
        }
      }, {
        key: "onInputBlur",
        value: function onInputBlur(event) {
          this.focus = false;
          this.onBlur.emit({
            originalEvent: event
          });

          if (!this.preventModelTouched) {
            this.onModelTouched();
          }

          this.preventModelTouched = false;
        }
      }, {
        key: "onOptionKeydown",
        value: function onOptionKeydown(event) {
          if (this.readonly) {
            return;
          }

          switch (event.originalEvent.which) {
            //down
            case 40:
              var nextItem = this.findNextItem(event.originalEvent.target.parentElement);

              if (nextItem) {
                nextItem.focus();
              }

              event.originalEvent.preventDefault();
              break;
            //up

            case 38:
              var prevItem = this.findPrevItem(event.originalEvent.target.parentElement);

              if (prevItem) {
                prevItem.focus();
              }

              event.originalEvent.preventDefault();
              break;
            //enter

            case 13:
              this.onOptionClick(event);
              event.originalEvent.preventDefault();
              break;
          }
        }
      }, {
        key: "findNextItem",
        value: function findNextItem(item) {
          var nextItem = item.nextElementSibling;
          if (nextItem) return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(nextItem.children[0], 'ui-state-disabled') || primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].isHidden(nextItem.children[0]) ? this.findNextItem(nextItem) : nextItem.children[0];else return null;
        }
      }, {
        key: "findPrevItem",
        value: function findPrevItem(item) {
          var prevItem = item.previousElementSibling;
          if (prevItem) return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(prevItem.children[0], 'ui-state-disabled') || primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].isHidden(prevItem.children[0]) ? this.findPrevItem(prevItem) : prevItem.children[0];else return null;
        }
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          switch (event.which) {
            //down
            case 40:
              if (!this.overlayVisible && event.altKey) {
                this.show();
                event.preventDefault();
              }

              break;
            //space

            case 32:
              if (!this.overlayVisible) {
                this.show();
                event.preventDefault();
              }

              break;
            //escape

            case 27:
              this.hide();
              break;
          }
        }
      }, {
        key: "updateLabel",
        value: function updateLabel() {
          if (this.value && this.options && this.value.length && this.displaySelectedLabel) {
            var label = '';

            for (var i = 0; i < this.value.length; i++) {
              var itemLabel = this.findLabelByValue(this.value[i]);

              if (itemLabel) {
                if (label.length > 0) {
                  label = label + ', ';
                }

                label = label + itemLabel;
              }
            }

            if (this.value.length <= this.maxSelectedLabels) {
              this.valuesAsString = label;
            } else {
              var pattern = /{(.*?)}/;

              if (pattern.test(this.selectedItemsLabel)) {
                this.valuesAsString = this.selectedItemsLabel.replace(this.selectedItemsLabel.match(pattern)[0], this.value.length + '');
              } else {
                this.valuesAsString = this.selectedItemsLabel;
              }
            }
          } else {
            this.valuesAsString = this.defaultLabel;
          }
        }
      }, {
        key: "findLabelByValue",
        value: function findLabelByValue(val) {
          var label = null;

          for (var i = 0; i < this.options.length; i++) {
            var option = this.options[i];

            if (val == null && option.value == null || primeng_utils__WEBPACK_IMPORTED_MODULE_4__["ObjectUtils"].equals(val, option.value, this.dataKey)) {
              label = option.label;
              break;
            }
          }

          return label;
        }
      }, {
        key: "onFilter",
        value: function onFilter() {
          var inputValue = this.filterInputChild.nativeElement.value;

          if (inputValue && inputValue.length) {
            this.filterValue = inputValue;
            this.activateFilter();
          } else {
            this.filterValue = null;
            this.visibleOptions = this.options;
            this.filtered = false;
          }
        }
      }, {
        key: "activateFilter",
        value: function activateFilter() {
          if (this.options && this.options.length) {
            var searchFields = this.filterBy.split(',');
            this.visibleOptions = primeng_utils__WEBPACK_IMPORTED_MODULE_4__["FilterUtils"].filter(this.options, searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);
            this.filtered = true;
          }
        }
      }, {
        key: "isItemVisible",
        value: function isItemVisible(option) {
          if (this.filterValue && this.filterValue.trim().length) {
            for (var i = 0; i < this.visibleOptions.length; i++) {
              if (this.visibleOptions[i].value == option.value) {
                return true;
              }
            }
          } else {
            return true;
          }
        }
      }, {
        key: "getVisibleOptions",
        value: function getVisibleOptions() {
          return this.visibleOptions || this.options;
        }
      }, {
        key: "onHeaderCheckboxFocus",
        value: function onHeaderCheckboxFocus() {
          this.headerCheckboxFocus = true;
        }
      }, {
        key: "onHeaderCheckboxBlur",
        value: function onHeaderCheckboxBlur() {
          this.headerCheckboxFocus = false;
        }
      }, {
        key: "bindDocumentClickListener",
        value: function bindDocumentClickListener() {
          var _this35 = this;

          if (!this.documentClickListener) {
            this.documentClickListener = this.renderer.listen('document', 'click', function (event) {
              if (_this35.isOutsideClicked(event)) {
                _this35.hide();
              }

              _this35.cd.markForCheck();
            });
          }
        }
      }, {
        key: "unbindDocumentClickListener",
        value: function unbindDocumentClickListener() {
          if (this.documentClickListener) {
            this.documentClickListener();
            this.documentClickListener = null;
          }
        }
      }, {
        key: "bindDocumentResizeListener",
        value: function bindDocumentResizeListener() {
          this.documentResizeListener = this.onWindowResize.bind(this);
          window.addEventListener('resize', this.documentResizeListener);
        }
      }, {
        key: "unbindDocumentResizeListener",
        value: function unbindDocumentResizeListener() {
          if (this.documentResizeListener) {
            window.removeEventListener('resize', this.documentResizeListener);
            this.documentResizeListener = null;
          }
        }
      }, {
        key: "onWindowResize",
        value: function onWindowResize() {
          if (!primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].isAndroid()) {
            this.hide();
          }
        }
      }, {
        key: "onOverlayHide",
        value: function onOverlayHide() {
          this.unbindDocumentClickListener();
          this.unbindDocumentResizeListener();
          this.overlay = null;
          this.onModelTouched();
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.restoreOverlayAppend();
          this.onOverlayHide();
        }
      }, {
        key: "defaultLabel",
        set: function set(val) {
          this._defaultLabel = val;
          this.updateLabel();
        },
        get: function get() {
          return this._defaultLabel;
        }
      }, {
        key: "options",
        get: function get() {
          return this._options;
        },
        set: function set(val) {
          var opts = this.optionLabel ? primeng_utils__WEBPACK_IMPORTED_MODULE_4__["ObjectUtils"].generateSelectItems(val, this.optionLabel) : val;
          this.visibleOptions = opts;
          this._options = opts;
          this.updateLabel();

          if (this.filterValue && this.filterValue.length) {
            this.activateFilter();
          }
        }
      }]);

      return MultiSelect;
    }();

    MultiSelect.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Renderer2"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "defaultLabel", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "panelStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "panelStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "inputId", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "readonly", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "filter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "filterPlaceHolder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "filterLocale", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "overlayVisible", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "tabindex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "appendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "name", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "ariaLabelledBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "displaySelectedLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "maxSelectedLabels", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "selectionLimit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "selectedItemsLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "showToggleAll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "emptyFilterMessage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "resetFilterOnHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "dropdownIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "optionLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "showHeader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "autoZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "baseZIndex", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "filterBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "virtualScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "itemSize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "showTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "hideTransitionOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "ariaFilterLabel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "filterMatchMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "tooltip", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "tooltipPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "tooltipPositionStyle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "tooltipStyleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "autofocusFilter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container')], MultiSelect.prototype, "containerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('filterInput')], MultiSelect.prototype, "filterInputChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('in')], MultiSelect.prototype, "accessibleViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["Footer"])], MultiSelect.prototype, "footerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChild"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["Header"])], MultiSelect.prototype, "headerFacet", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], MultiSelect.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onFocus", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onBlur", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onClick", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onPanelShow", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], MultiSelect.prototype, "onPanelHide", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], MultiSelect.prototype, "options", null);

    MultiSelect = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-multiSelect',
      template: "\n        <div #container [ngClass]=\"{'ui-multiselect ui-widget ui-state-default ui-corner-all':true,'ui-multiselect-open':overlayVisible,'ui-state-focus':focus,'ui-state-disabled': disabled}\" [ngStyle]=\"style\" [class]=\"styleClass\"\n            (click)=\"onMouseclick($event,in)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #in type=\"text\" readonly=\"readonly\" [attr.id]=\"inputId\" [attr.name]=\"name\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\"\n                       [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" (keydown)=\"onKeydown($event)\" aria-haspopup=\"listbox\" [attr.aria-expanded]=\"overlayVisible\"\n                       [attr.aria-labelledby]=\"ariaLabelledBy\" role=\"listbox\">\n            </div>\n            <div class=\"ui-multiselect-label-container\" [pTooltip]=\"tooltip\" [tooltipPosition]=\"tooltipPosition\" [positionStyle]=\"tooltipPositionStyle\" [tooltipStyleClass]=\"tooltipStyleClass\">\n                <span class=\"ui-multiselect-label ui-corner-all\">\n                    <ng-container *ngIf=\"!selectedItemsTemplate\">{{valuesAsString}}</ng-container>\n                    <ng-container *ngTemplateOutlet=\"selectedItemsTemplate; context: {$implicit: value}\"></ng-container>\n                </span>\n            </div>\n            <div [ngClass]=\"{'ui-multiselect-trigger ui-state-default ui-corner-right':true}\">\n                <span class=\"ui-multiselect-trigger-icon ui-clickable\" [ngClass]=\"dropdownIcon\"></span>\n            </div>\n            <div *ngIf=\"overlayVisible\" [ngClass]=\"['ui-multiselect-panel ui-widget ui-widget-content ui-corner-all ui-shadow']\" [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\"\n                [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\" (keydown)=\"onKeydown($event)\">\n                <div class=\"ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix\" [ngClass]=\"{'ui-multiselect-header-no-toggleall': !showToggleAll}\" *ngIf=\"showHeader\">\n                <ng-content select=\"p-header\"></ng-content>\n                <div class=\"ui-chkbox ui-widget\" *ngIf=\"showToggleAll && !selectionLimit\">\n                        <div class=\"ui-helper-hidden-accessible\">\n                            <input type=\"checkbox\" readonly=\"readonly\" [checked]=\"isAllChecked()\" (focus)=\"onHeaderCheckboxFocus()\" (blur)=\"onHeaderCheckboxBlur()\" (keydown.space)=\"toggleAll($event)\">\n                        </div>\n                        <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" role=\"checkbox\" [attr.aria-checked]=\"isAllChecked()\" [ngClass]=\"{'ui-state-active':isAllChecked(), 'ui-state-focus': headerCheckboxFocus}\" (click)=\"toggleAll($event)\">\n                            <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':isAllChecked()}\"></span>\n                        </div>\n                    </div>\n                    <div class=\"ui-multiselect-filter-container\" *ngIf=\"filter\">\n                        <input #filterInput type=\"text\" role=\"textbox\" [value]=\"filterValue||''\" (input)=\"onFilter()\" class=\"ui-inputtext ui-widget ui-state-default ui-corner-all\" [attr.placeholder]=\"filterPlaceHolder\" [attr.aria-label]=\"ariaFilterLabel\">\n                        <span class=\"ui-multiselect-filter-icon pi pi-search\"></span>\n                    </div>\n                    <a class=\"ui-multiselect-close ui-corner-all\" tabindex=\"0\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                        <span class=\"pi pi-times\"></span>\n                    </a>\n                </div>\n                <div class=\"ui-multiselect-items-wrapper\" [style.max-height]=\"virtualScroll ? 'auto' : (scrollHeight||'auto')\">\n                    <ul class=\"ui-multiselect-items ui-multiselect-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\" role=\"listbox\" aria-multiselectable=\"true\">\n                        <ng-container *ngIf=\"!virtualScroll; else virtualScrollList\">\n                            <ng-template ngFor let-option let-i=\"index\" [ngForOf]=\"options\">\n                                <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option.value)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\n                                        [maxSelectionLimitReached]=\"maxSelectionLimitReached\" [visible]=\"isItemVisible(option)\" [template]=\"itemTemplate\"></p-multiSelectItem>\n                            </ng-template>\n                        </ng-container>\n                        <ng-template #virtualScrollList>\n                            <cdk-virtual-scroll-viewport #viewport [ngStyle]=\"{'height': scrollHeight}\" [itemSize]=\"itemSize\" *ngIf=\"virtualScroll && visibleOptions && visibleOptions.length\">\n                                <ng-container *cdkVirtualFor=\"let option of visibleOptions; let i = index; let c = count; let f = first; let l = last; let e = even; let o = odd\">\n                                    <p-multiSelectItem [option]=\"option\" [selected]=\"isSelected(option.value)\" (onClick)=\"onOptionClick($event)\" (onKeydown)=\"onOptionKeydown($event)\"\n                                        [maxSelectionLimitReached]=\"maxSelectionLimitReached\" [visible]=\"isItemVisible(option)\" [template]=\"itemTemplate\" [itemSize]=\"itemSize\"></p-multiSelectItem>\n                                </ng-container>\n                            </cdk-virtual-scroll-viewport>\n                        </ng-template>\n                        <li *ngIf=\"filter && visibleOptions && visibleOptions.length === 0\" class=\"ui-multiselect-empty-message\">{{emptyFilterMessage}}</li>\n                    </ul>\n                </div>\n                <div class=\"ui-multiselect-footer ui-widget-content\" *ngIf=\"footerFacet\">\n                    <ng-content select=\"p-footer\"></ng-content>\n                </div>\n            </div>\n        </div>\n    ",
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["trigger"])('overlayAnimation', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(5%)',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["style"])({
        transform: 'translateY(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('void => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{showTransitionParams}}')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["transition"])('visible => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_1__["animate"])('{{hideTransitionParams}}'))])],
      host: {
        '[class.ui-inputwrapper-filled]': 'filled',
        '[class.ui-inputwrapper-focus]': 'focus'
      },
      providers: [MULTISELECT_VALUE_ACCESSOR],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], MultiSelect);

    var MultiSelectModule = function MultiSelectModule() {
      _classCallCheck2(this, MultiSelectModule);
    };

    MultiSelectModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__["ScrollingModule"], primeng_tooltip__WEBPACK_IMPORTED_MODULE_8__["TooltipModule"]],
      exports: [MultiSelect, primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__["ScrollingModule"]],
      declarations: [MultiSelect, MultiSelectItem]
    })], MultiSelectModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-multiselect.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-progressbar.js":
  /*!**************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-progressbar.js ***!
    \**************************************************************/

  /*! exports provided: ProgressBar, ProgressBarModule */

  /***/
  function node_modulesPrimengFesm2015PrimengProgressbarJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProgressBar", function () {
      return ProgressBar;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProgressBarModule", function () {
      return ProgressBarModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var ProgressBar = function ProgressBar() {
      _classCallCheck2(this, ProgressBar);

      this.showValue = true;
      this.unit = '%';
      this.mode = 'determinate';
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "value", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "showValue", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "unit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], ProgressBar.prototype, "mode", void 0);

    ProgressBar = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-progressBar',
      template: "\n        <div [class]=\"styleClass\" [ngStyle]=\"style\" role=\"progressbar\" aria-valuemin=\"0\" [attr.aria-valuenow]=\"value\" aria-valuemax=\"100\"\n            [ngClass]=\"{'ui-progressbar ui-widget ui-widget-content ui-corner-all': true, 'ui-progressbar-determinate': (mode === 'determinate'), 'ui-progressbar-indeterminate': (mode === 'indeterminate')}\">\n            <div class=\"ui-progressbar-value ui-progressbar-value-animate ui-widget-header ui-corner-all\" [style.width]=\"value + '%'\" style=\"display:block\"></div>\n            <div class=\"ui-progressbar-label\" [style.display]=\"value != null ? 'block' : 'none'\" *ngIf=\"showValue\">{{value}}{{unit}}</div>\n        </div>\n    ",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], ProgressBar);

    var ProgressBarModule = function ProgressBarModule() {
      _classCallCheck2(this, ProgressBarModule);
    };

    ProgressBarModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
      exports: [ProgressBar],
      declarations: [ProgressBar]
    })], ProgressBarModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-progressbar.js.map

    /***/
  },

  /***/
  "./node_modules/primeng/fesm2015/primeng-treetable.js":
  /*!************************************************************!*\
    !*** ./node_modules/primeng/fesm2015/primeng-treetable.js ***!
    \************************************************************/

  /*! exports provided: TTBody, TTCheckbox, TTContextMenuRow, TTEditableColumn, TTHeaderCheckbox, TTReorderableColumn, TTResizableColumn, TTRow, TTScrollableView, TTSelectableRow, TTSelectableRowDblClick, TTSortIcon, TTSortableColumn, TreeTable, TreeTableCellEditor, TreeTableModule, TreeTableService, TreeTableToggler */

  /***/
  function node_modulesPrimengFesm2015PrimengTreetableJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTBody", function () {
      return TTBody;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTCheckbox", function () {
      return TTCheckbox;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTContextMenuRow", function () {
      return TTContextMenuRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTEditableColumn", function () {
      return TTEditableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTHeaderCheckbox", function () {
      return TTHeaderCheckbox;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTReorderableColumn", function () {
      return TTReorderableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTResizableColumn", function () {
      return TTResizableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTRow", function () {
      return TTRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTScrollableView", function () {
      return TTScrollableView;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTSelectableRow", function () {
      return TTSelectableRow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTSelectableRowDblClick", function () {
      return TTSelectableRowDblClick;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTSortIcon", function () {
      return TTSortIcon;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TTSortableColumn", function () {
      return TTSortableColumn;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TreeTable", function () {
      return TreeTable;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TreeTableCellEditor", function () {
      return TreeTableCellEditor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TreeTableModule", function () {
      return TreeTableModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TreeTableService", function () {
      return TreeTableService;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TreeTableToggler", function () {
      return TreeTableToggler;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var primeng_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/dom */
    "./node_modules/primeng/fesm2015/primeng-dom.js");
    /* harmony import */


    var primeng_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! primeng/paginator */
    "./node_modules/primeng/fesm2015/primeng-paginator.js");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var primeng_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! primeng/utils */
    "./node_modules/primeng/fesm2015/primeng-utils.js");
    /* harmony import */


    var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/cdk/scrolling */
    "./node_modules/@angular/cdk/esm2015/scrolling.js");

    var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
      var c = arguments.length,
          r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
          d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      }
      return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    var TreeTableService = /*#__PURE__*/function () {
      function TreeTableService() {
        _classCallCheck2(this, TreeTableService);

        this.sortSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.selectionSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.contextMenuSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.uiUpdateSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.totalRecordsSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.sortSource$ = this.sortSource.asObservable();
        this.selectionSource$ = this.selectionSource.asObservable();
        this.contextMenuSource$ = this.contextMenuSource.asObservable();
        this.uiUpdateSource$ = this.uiUpdateSource.asObservable();
        this.totalRecordsSource$ = this.totalRecordsSource.asObservable();
      }

      _createClass2(TreeTableService, [{
        key: "onSort",
        value: function onSort(sortMeta) {
          this.sortSource.next(sortMeta);
        }
      }, {
        key: "onSelectionChange",
        value: function onSelectionChange() {
          this.selectionSource.next();
        }
      }, {
        key: "onContextMenu",
        value: function onContextMenu(node) {
          this.contextMenuSource.next(node);
        }
      }, {
        key: "onUIUpdate",
        value: function onUIUpdate(value) {
          this.uiUpdateSource.next(value);
        }
      }, {
        key: "onTotalRecordsChange",
        value: function onTotalRecordsChange(value) {
          this.totalRecordsSource.next(value);
        }
      }]);

      return TreeTableService;
    }();

    TreeTableService = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()], TreeTableService);

    var TreeTable = /*#__PURE__*/function () {
      function TreeTable(el, zone, tableService) {
        _classCallCheck2(this, TreeTable);

        this.el = el;
        this.zone = zone;
        this.tableService = tableService;
        this.lazy = false;
        this.lazyLoadOnInit = true;
        this.first = 0;
        this.pageLinks = 5;
        this.alwaysShowPaginator = true;
        this.paginatorPosition = 'bottom';
        this.currentPageReportTemplate = '{currentPage} of {totalPages}';
        this.defaultSortOrder = 1;
        this.sortMode = 'single';
        this.resetPageOnSort = true;
        this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.contextMenuSelectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.contextMenuSelectionMode = "separate";
        this.compareSelectionBy = 'deepEquals';
        this.loadingIcon = 'pi pi-spinner';
        this.showLoader = true;
        this.virtualScrollDelay = 150;
        this.virtualRowHeight = 28;
        this.columnResizeMode = 'fit';

        this.rowTrackBy = function (index, item) {
          return item;
        };

        this.filters = {};
        this.filterDelay = 300;
        this.filterMode = 'lenient';
        this.onFilter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onNodeExpand = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onNodeCollapse = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onSort = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onLazyLoad = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.sortFunction = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onColResize = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onColReorder = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onNodeSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onNodeUnselect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onContextMenuSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onHeaderCheckboxToggle = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditInit = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditComplete = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.onEditCancel = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this._value = [];
        this._totalRecords = 0;
        this._sortOrder = 1;
        this.selectionKeys = {};
      }

      _createClass2(TreeTable, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.lazy && this.lazyLoadOnInit) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          }

          this.initialized = true;
        }
      }, {
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this36 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'caption':
                _this36.captionTemplate = item.template;
                break;

              case 'header':
                _this36.headerTemplate = item.template;
                break;

              case 'body':
                _this36.bodyTemplate = item.template;
                break;

              case 'loadingbody':
                _this36.loadingBodyTemplate = item.template;
                break;

              case 'footer':
                _this36.footerTemplate = item.template;
                break;

              case 'summary':
                _this36.summaryTemplate = item.template;
                break;

              case 'colgroup':
                _this36.colGroupTemplate = item.template;
                break;

              case 'emptymessage':
                _this36.emptyMessageTemplate = item.template;
                break;

              case 'paginatorleft':
                _this36.paginatorLeftTemplate = item.template;
                break;

              case 'paginatorright':
                _this36.paginatorRightTemplate = item.template;
                break;

              case 'frozenheader':
                _this36.frozenHeaderTemplate = item.template;
                break;

              case 'frozenbody':
                _this36.frozenBodyTemplate = item.template;
                break;

              case 'frozenfooter':
                _this36.frozenFooterTemplate = item.template;
                break;

              case 'frozencolgroup':
                _this36.frozenColGroupTemplate = item.template;
                break;
            }
          });
        }
      }, {
        key: "ngOnChanges",
        value: function ngOnChanges(simpleChange) {
          if (simpleChange.value) {
            this._value = simpleChange.value.currentValue;

            if (!this.lazy) {
              this.totalRecords = this._value ? this._value.length : 0;
              if (this.sortMode == 'single' && this.sortField) this.sortSingle();else if (this.sortMode == 'multiple' && this.multiSortMeta) this.sortMultiple();else if (this.hasFilter()) //sort already filters
                this._filter();
            }

            this.updateSerializedValue();
            this.tableService.onUIUpdate(this.value);
          }

          if (simpleChange.sortField) {
            this._sortField = simpleChange.sortField.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit

            if (!this.lazy || this.initialized) {
              if (this.sortMode === 'single') {
                this.sortSingle();
              }
            }
          }

          if (simpleChange.sortOrder) {
            this._sortOrder = simpleChange.sortOrder.currentValue; //avoid triggering lazy load prior to lazy initialization at onInit

            if (!this.lazy || this.initialized) {
              if (this.sortMode === 'single') {
                this.sortSingle();
              }
            }
          }

          if (simpleChange.multiSortMeta) {
            this._multiSortMeta = simpleChange.multiSortMeta.currentValue;

            if (this.sortMode === 'multiple') {
              this.sortMultiple();
            }
          }

          if (simpleChange.selection) {
            this._selection = simpleChange.selection.currentValue;

            if (!this.preventSelectionSetterPropagation) {
              this.updateSelectionKeys();
              this.tableService.onSelectionChange();
            }

            this.preventSelectionSetterPropagation = false;
          }
        }
      }, {
        key: "updateSerializedValue",
        value: function updateSerializedValue() {
          this.serializedValue = [];
          if (this.paginator) this.serializePageNodes();else this.serializeNodes(null, this.filteredNodes || this.value, 0, true);
        }
      }, {
        key: "serializeNodes",
        value: function serializeNodes(parent, nodes, level, visible) {
          if (nodes && nodes.length) {
            var _iterator7 = _createForOfIteratorHelper(nodes),
                _step7;

            try {
              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
                var node = _step7.value;
                node.parent = parent;
                var rowNode = {
                  node: node,
                  parent: parent,
                  level: level,
                  visible: visible && (parent ? parent.expanded : true)
                };
                this.serializedValue.push(rowNode);

                if (rowNode.visible && node.expanded) {
                  this.serializeNodes(node, node.children, level + 1, rowNode.visible);
                }
              }
            } catch (err) {
              _iterator7.e(err);
            } finally {
              _iterator7.f();
            }
          }
        }
      }, {
        key: "serializePageNodes",
        value: function serializePageNodes() {
          var data = this.filteredNodes || this.value;
          this.serializedValue = [];

          if (data && data.length) {
            var first = this.lazy ? 0 : this.first;

            for (var i = first; i < first + this.rows; i++) {
              var node = data[i];

              if (node) {
                this.serializedValue.push({
                  node: node,
                  parent: null,
                  level: 0,
                  visible: true
                });
                this.serializeNodes(node, node.children, 1, true);
              }
            }
          }
        }
      }, {
        key: "updateSelectionKeys",
        value: function updateSelectionKeys() {
          if (this.dataKey && this._selection) {
            this.selectionKeys = {};

            if (Array.isArray(this._selection)) {
              var _iterator8 = _createForOfIteratorHelper(this._selection),
                  _step8;

              try {
                for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
                  var node = _step8.value;
                  this.selectionKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, this.dataKey))] = 1;
                }
              } catch (err) {
                _iterator8.e(err);
              } finally {
                _iterator8.f();
              }
            } else {
              this.selectionKeys[String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(this._selection.data, this.dataKey))] = 1;
            }
          }
        }
      }, {
        key: "onPageChange",
        value: function onPageChange(event) {
          this.first = event.first;
          this.rows = event.rows;
          if (this.lazy) this.onLazyLoad.emit(this.createLazyLoadMetadata());else this.serializePageNodes();
          this.onPage.emit({
            first: this.first,
            rows: this.rows
          });
          this.tableService.onUIUpdate(this.value);

          if (this.scrollable) {
            this.resetScrollTop();
          }
        }
      }, {
        key: "sort",
        value: function sort(event) {
          var originalEvent = event.originalEvent;

          if (this.sortMode === 'single') {
            this._sortOrder = this.sortField === event.field ? this.sortOrder * -1 : this.defaultSortOrder;
            this._sortField = event.field;
            this.sortSingle();

            if (this.resetPageOnSort && this.scrollable) {
              this.resetScrollTop();
            }
          }

          if (this.sortMode === 'multiple') {
            var metaKey = originalEvent.metaKey || originalEvent.ctrlKey;
            var sortMeta = this.getSortMeta(event.field);

            if (sortMeta) {
              if (!metaKey) {
                this._multiSortMeta = [{
                  field: event.field,
                  order: sortMeta.order * -1
                }];

                if (this.resetPageOnSort && this.scrollable) {
                  this.resetScrollTop();
                }
              } else {
                sortMeta.order = sortMeta.order * -1;
              }
            } else {
              if (!metaKey || !this.multiSortMeta) {
                this._multiSortMeta = [];

                if (this.resetPageOnSort && this.scrollable) {
                  this.resetScrollTop();
                }
              }

              this.multiSortMeta.push({
                field: event.field,
                order: this.defaultSortOrder
              });
            }

            this.sortMultiple();
          }
        }
      }, {
        key: "sortSingle",
        value: function sortSingle() {
          if (this.sortField && this.sortOrder) {
            if (this.lazy) {
              this.onLazyLoad.emit(this.createLazyLoadMetadata());
            } else if (this.value) {
              this.sortNodes(this.value);

              if (this.hasFilter()) {
                this._filter();
              }
            }

            var sortMeta = {
              field: this.sortField,
              order: this.sortOrder
            };
            this.onSort.emit(sortMeta);
            this.tableService.onSort(sortMeta);
            this.updateSerializedValue();
          }
        }
      }, {
        key: "sortNodes",
        value: function sortNodes(nodes) {
          var _this37 = this;

          if (!nodes || nodes.length === 0) {
            return;
          }

          if (this.customSort) {
            this.sortFunction.emit({
              data: nodes,
              mode: this.sortMode,
              field: this.sortField,
              order: this.sortOrder
            });
          } else {
            nodes.sort(function (node1, node2) {
              var value1 = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node1.data, _this37.sortField);
              var value2 = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node2.data, _this37.sortField);
              var result = null;
              if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, undefined, {
                numeric: true
              });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
              return _this37.sortOrder * result;
            });
          }

          var _iterator9 = _createForOfIteratorHelper(nodes),
              _step9;

          try {
            for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
              var node = _step9.value;
              this.sortNodes(node.children);
            }
          } catch (err) {
            _iterator9.e(err);
          } finally {
            _iterator9.f();
          }
        }
      }, {
        key: "sortMultiple",
        value: function sortMultiple() {
          if (this.multiSortMeta) {
            if (this.lazy) {
              this.onLazyLoad.emit(this.createLazyLoadMetadata());
            } else if (this.value) {
              this.sortMultipleNodes(this.value);

              if (this.hasFilter()) {
                this._filter();
              }
            }

            this.onSort.emit({
              multisortmeta: this.multiSortMeta
            });
            this.tableService.onSort(this.multiSortMeta);
            this.updateSerializedValue();
          }
        }
      }, {
        key: "sortMultipleNodes",
        value: function sortMultipleNodes(nodes) {
          var _this38 = this;

          if (!nodes || nodes.length === 0) {
            return;
          }

          if (this.customSort) {
            this.sortFunction.emit({
              data: this.value,
              mode: this.sortMode,
              multiSortMeta: this.multiSortMeta
            });
          } else {
            nodes.sort(function (node1, node2) {
              return _this38.multisortField(node1, node2, _this38.multiSortMeta, 0);
            });
          }

          var _iterator10 = _createForOfIteratorHelper(nodes),
              _step10;

          try {
            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
              var node = _step10.value;
              this.sortMultipleNodes(node.children);
            }
          } catch (err) {
            _iterator10.e(err);
          } finally {
            _iterator10.f();
          }
        }
      }, {
        key: "multisortField",
        value: function multisortField(node1, node2, multiSortMeta, index) {
          var value1 = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node1.data, multiSortMeta[index].field);
          var value2 = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node2.data, multiSortMeta[index].field);
          var result = null;
          if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;

          if (typeof value1 == 'string' || value1 instanceof String) {
            if (value1.localeCompare && value1 != value2) {
              return multiSortMeta[index].order * value1.localeCompare(value2, undefined, {
                numeric: true
              });
            }
          } else {
            result = value1 < value2 ? -1 : 1;
          }

          if (value1 == value2) {
            return multiSortMeta.length - 1 > index ? this.multisortField(node1, node2, multiSortMeta, index + 1) : 0;
          }

          return multiSortMeta[index].order * result;
        }
      }, {
        key: "getSortMeta",
        value: function getSortMeta(field) {
          if (this.multiSortMeta && this.multiSortMeta.length) {
            for (var i = 0; i < this.multiSortMeta.length; i++) {
              if (this.multiSortMeta[i].field === field) {
                return this.multiSortMeta[i];
              }
            }
          }

          return null;
        }
      }, {
        key: "isSorted",
        value: function isSorted(field) {
          if (this.sortMode === 'single') {
            return this.sortField && this.sortField === field;
          } else if (this.sortMode === 'multiple') {
            var sorted = false;

            if (this.multiSortMeta) {
              for (var i = 0; i < this.multiSortMeta.length; i++) {
                if (this.multiSortMeta[i].field == field) {
                  sorted = true;
                  break;
                }
              }
            }

            return sorted;
          }
        }
      }, {
        key: "createLazyLoadMetadata",
        value: function createLazyLoadMetadata() {
          return {
            first: this.first,
            rows: this.rows,
            sortField: this.sortField,
            sortOrder: this.sortOrder,
            filters: this.filters,
            globalFilter: this.filters && this.filters['global'] ? this.filters['global'].value : null,
            multiSortMeta: this.multiSortMeta
          };
        }
      }, {
        key: "resetScrollTop",
        value: function resetScrollTop() {
          if (this.virtualScroll) this.scrollToVirtualIndex(0);else this.scrollTo({
            top: 0
          });
        }
      }, {
        key: "scrollToVirtualIndex",
        value: function scrollToVirtualIndex(index) {
          if (this.scrollableViewChild) {
            this.scrollableViewChild.scrollToVirtualIndex(index);
          }

          if (this.scrollableFrozenViewChild) {
            this.scrollableFrozenViewChild.scrollToVirtualIndex(index);
          }
        }
      }, {
        key: "scrollTo",
        value: function scrollTo(options) {
          if (this.scrollableViewChild) {
            this.scrollableViewChild.scrollTo(options);
          }

          if (this.scrollableFrozenViewChild) {
            this.scrollableFrozenViewChild.scrollTo(options);
          }
        }
      }, {
        key: "isEmpty",
        value: function isEmpty() {
          var data = this.filteredNodes || this.value;
          return data == null || data.length == 0;
        }
      }, {
        key: "getBlockableElement",
        value: function getBlockableElement() {
          return this.el.nativeElement.children[0];
        }
      }, {
        key: "onColumnResizeBegin",
        value: function onColumnResizeBegin(event) {
          var containerLeft = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(this.containerViewChild.nativeElement).left;
          this.lastResizerHelperX = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft;
          event.preventDefault();
        }
      }, {
        key: "onColumnResize",
        value: function onColumnResize(event) {
          var containerLeft = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(this.containerViewChild.nativeElement).left;
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
          this.resizeHelperViewChild.nativeElement.style.height = this.containerViewChild.nativeElement.offsetHeight + 'px';
          this.resizeHelperViewChild.nativeElement.style.top = 0 + 'px';
          this.resizeHelperViewChild.nativeElement.style.left = event.pageX - containerLeft + this.containerViewChild.nativeElement.scrollLeft + 'px';
          this.resizeHelperViewChild.nativeElement.style.display = 'block';
        }
      }, {
        key: "onColumnResizeEnd",
        value: function onColumnResizeEnd(event, column) {
          var delta = this.resizeHelperViewChild.nativeElement.offsetLeft - this.lastResizerHelperX;
          var columnWidth = column.offsetWidth;
          var newColumnWidth = columnWidth + delta;
          var minWidth = column.style.minWidth || 15;

          if (columnWidth + delta > parseInt(minWidth)) {
            if (this.columnResizeMode === 'fit') {
              var nextColumn = column.nextElementSibling;

              while (!nextColumn.offsetParent) {
                nextColumn = nextColumn.nextElementSibling;
              }

              if (nextColumn) {
                var nextColumnWidth = nextColumn.offsetWidth - delta;
                var nextColumnMinWidth = nextColumn.style.minWidth || 15;

                if (newColumnWidth > 15 && nextColumnWidth > parseInt(nextColumnMinWidth)) {
                  if (this.scrollable) {
                    var scrollableView = this.findParentScrollableView(column);
                    var scrollableBodyTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(scrollableView, '.ui-treetable-scrollable-body table');
                    var scrollableHeaderTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(scrollableView, 'table.ui-treetable-scrollable-header-table');
                    var scrollableFooterTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(scrollableView, 'table.ui-treetable-scrollable-footer-table');
                    var resizeColumnIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].index(column);
                    this.resizeColGroup(scrollableHeaderTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                    this.resizeColGroup(scrollableBodyTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                    this.resizeColGroup(scrollableFooterTable, resizeColumnIndex, newColumnWidth, nextColumnWidth);
                  } else {
                    column.style.width = newColumnWidth + 'px';

                    if (nextColumn) {
                      nextColumn.style.width = nextColumnWidth + 'px';
                    }
                  }
                }
              }
            } else if (this.columnResizeMode === 'expand') {
              if (this.scrollable) {
                var _scrollableView = this.findParentScrollableView(column);

                var scrollableBody = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, '.ui-treetable-scrollable-body');

                var _scrollableBodyTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, '.ui-treetable-scrollable-body table');

                var scrollableHeader = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, '.ui-treetable-scrollable-header');
                var scrollableFooter = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, '.ui-treetable-scrollable-footer');

                var _scrollableHeaderTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, 'table.ui-treetable-scrollable-header-table');

                var _scrollableFooterTable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_scrollableView, 'table.ui-treetable-scrollable-footer-table');

                _scrollableBodyTable.style.width = _scrollableBodyTable.offsetWidth + delta + 'px';
                _scrollableHeaderTable.style.width = _scrollableHeaderTable.offsetWidth + delta + 'px';

                if (_scrollableFooterTable) {
                  _scrollableFooterTable.style.width = _scrollableFooterTable.offsetWidth + delta + 'px';
                }

                var _resizeColumnIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].index(column);

                var scrollableBodyTableWidth = column ? _scrollableBodyTable.offsetWidth + delta : newColumnWidth;
                var scrollableHeaderTableWidth = column ? _scrollableHeaderTable.offsetWidth + delta : newColumnWidth;
                var isContainerInViewport = this.containerViewChild.nativeElement.offsetWidth >= scrollableBodyTableWidth;

                var setWidth = function setWidth(container, table, width, isContainerInViewport) {
                  if (container && table) {
                    container.style.width = isContainerInViewport ? width + primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].calculateScrollbarWidth(scrollableBody) + 'px' : 'auto';
                    table.style.width = width + 'px';
                  }
                };

                setWidth(scrollableBody, _scrollableBodyTable, scrollableBodyTableWidth, isContainerInViewport);
                setWidth(scrollableHeader, _scrollableHeaderTable, scrollableHeaderTableWidth, isContainerInViewport);
                setWidth(scrollableFooter, _scrollableFooterTable, scrollableHeaderTableWidth, isContainerInViewport);
                this.resizeColGroup(_scrollableHeaderTable, _resizeColumnIndex, newColumnWidth, null);
                this.resizeColGroup(_scrollableBodyTable, _resizeColumnIndex, newColumnWidth, null);
                this.resizeColGroup(_scrollableFooterTable, _resizeColumnIndex, newColumnWidth, null);
              } else {
                this.tableViewChild.nativeElement.style.width = this.tableViewChild.nativeElement.offsetWidth + delta + 'px';
                column.style.width = newColumnWidth + 'px';
                var containerWidth = this.tableViewChild.nativeElement.style.width;
                this.containerViewChild.nativeElement.style.width = containerWidth + 'px';
              }
            }

            this.onColResize.emit({
              element: column,
              delta: delta
            });
          }

          this.resizeHelperViewChild.nativeElement.style.display = 'none';
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.containerViewChild.nativeElement, 'ui-unselectable-text');
        }
      }, {
        key: "findParentScrollableView",
        value: function findParentScrollableView(column) {
          if (column) {
            var parent = column.parentElement;

            while (parent && !primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(parent, 'ui-treetable-scrollable-view')) {
              parent = parent.parentElement;
            }

            return parent;
          } else {
            return null;
          }
        }
      }, {
        key: "resizeColGroup",
        value: function resizeColGroup(table, resizeColumnIndex, newColumnWidth, nextColumnWidth) {
          if (table) {
            var colGroup = table.children[0].nodeName === 'COLGROUP' ? table.children[0] : null;

            if (colGroup) {
              var col = colGroup.children[resizeColumnIndex];
              var nextCol = col.nextElementSibling;
              col.style.width = newColumnWidth + 'px';

              if (nextCol && nextColumnWidth) {
                nextCol.style.width = nextColumnWidth + 'px';
              }
            } else {
              throw "Scrollable tables require a colgroup to support resizable columns";
            }
          }
        }
      }, {
        key: "onColumnDragStart",
        value: function onColumnDragStart(event, columnElement) {
          this.reorderIconWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getHiddenElementOuterWidth(this.reorderIndicatorUpViewChild.nativeElement);
          this.reorderIconHeight = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getHiddenElementOuterHeight(this.reorderIndicatorDownViewChild.nativeElement);
          this.draggedColumn = columnElement;
          event.dataTransfer.setData('text', 'b'); // For firefox
        }
      }, {
        key: "onColumnDragEnter",
        value: function onColumnDragEnter(event, dropHeader) {
          if (this.reorderableColumns && this.draggedColumn && dropHeader) {
            event.preventDefault();
            var containerOffset = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(this.containerViewChild.nativeElement);
            var dropHeaderOffset = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOffset(dropHeader);

            if (this.draggedColumn != dropHeader) {
              var targetLeft = dropHeaderOffset.left - containerOffset.left;
              var targetTop = containerOffset.top - dropHeaderOffset.top;
              var columnCenter = dropHeaderOffset.left + dropHeader.offsetWidth / 2;
              this.reorderIndicatorUpViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top - (this.reorderIconHeight - 1) + 'px';
              this.reorderIndicatorDownViewChild.nativeElement.style.top = dropHeaderOffset.top - containerOffset.top + dropHeader.offsetHeight + 'px';

              if (event.pageX > columnCenter) {
                this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft + dropHeader.offsetWidth - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.dropPosition = 1;
              } else {
                this.reorderIndicatorUpViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.reorderIndicatorDownViewChild.nativeElement.style.left = targetLeft - Math.ceil(this.reorderIconWidth / 2) + 'px';
                this.dropPosition = -1;
              }

              this.reorderIndicatorUpViewChild.nativeElement.style.display = 'block';
              this.reorderIndicatorDownViewChild.nativeElement.style.display = 'block';
            } else {
              event.dataTransfer.dropEffect = 'none';
            }
          }
        }
      }, {
        key: "onColumnDragLeave",
        value: function onColumnDragLeave(event) {
          if (this.reorderableColumns && this.draggedColumn) {
            event.preventDefault();
            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
          }
        }
      }, {
        key: "onColumnDrop",
        value: function onColumnDrop(event, dropColumn) {
          event.preventDefault();

          if (this.draggedColumn) {
            var dragIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].indexWithinGroup(this.draggedColumn, 'ttreorderablecolumn');
            var dropIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].indexWithinGroup(dropColumn, 'ttreorderablecolumn');
            var allowDrop = dragIndex != dropIndex;

            if (allowDrop && (dropIndex - dragIndex == 1 && this.dropPosition === -1 || dragIndex - dropIndex == 1 && this.dropPosition === 1)) {
              allowDrop = false;
            }

            if (allowDrop && dropIndex < dragIndex && this.dropPosition === 1) {
              dropIndex = dropIndex + 1;
            }

            if (allowDrop && dropIndex > dragIndex && this.dropPosition === -1) {
              dropIndex = dropIndex - 1;
            }

            if (allowDrop) {
              primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].reorderArray(this.columns, dragIndex, dropIndex);
              this.onColReorder.emit({
                dragIndex: dragIndex,
                dropIndex: dropIndex,
                columns: this.columns
              });
            }

            this.reorderIndicatorUpViewChild.nativeElement.style.display = 'none';
            this.reorderIndicatorDownViewChild.nativeElement.style.display = 'none';
            this.draggedColumn.draggable = false;
            this.draggedColumn = null;
            this.dropPosition = null;
          }
        }
      }, {
        key: "handleRowClick",
        value: function handleRowClick(event) {
          var targetNode = event.originalEvent.target.nodeName;

          if (targetNode == 'INPUT' || targetNode == 'BUTTON' || targetNode == 'A' || primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(event.originalEvent.target, 'ui-clickable')) {
            return;
          }

          if (this.selectionMode) {
            this.preventSelectionSetterPropagation = true;
            var rowNode = event.rowNode;
            var selected = this.isSelected(rowNode.node);
            var metaSelection = this.rowTouched ? false : this.metaKeySelection;
            var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(rowNode.node.data, this.dataKey)) : null;

            if (metaSelection) {
              var metaKey = event.originalEvent.metaKey || event.originalEvent.ctrlKey;

              if (selected && metaKey) {
                if (this.isSingleSelectionMode()) {
                  this._selection = null;
                  this.selectionKeys = {};
                  this.selectionChange.emit(null);
                } else {
                  var selectionIndex = this.findIndexInSelection(rowNode.node);
                  this._selection = this.selection.filter(function (val, i) {
                    return i != selectionIndex;
                  });
                  this.selectionChange.emit(this.selection);

                  if (dataKeyValue) {
                    delete this.selectionKeys[dataKeyValue];
                  }
                }

                this.onNodeUnselect.emit({
                  originalEvent: event.originalEvent,
                  node: rowNode.node,
                  type: 'row'
                });
              } else {
                if (this.isSingleSelectionMode()) {
                  this._selection = rowNode.node;
                  this.selectionChange.emit(rowNode.node);

                  if (dataKeyValue) {
                    this.selectionKeys = {};
                    this.selectionKeys[dataKeyValue] = 1;
                  }
                } else if (this.isMultipleSelectionMode()) {
                  if (metaKey) {
                    this._selection = this.selection || [];
                  } else {
                    this._selection = [];
                    this.selectionKeys = {};
                  }

                  this._selection = [].concat(_toConsumableArray2(this.selection), [rowNode.node]);
                  this.selectionChange.emit(this.selection);

                  if (dataKeyValue) {
                    this.selectionKeys[dataKeyValue] = 1;
                  }
                }

                this.onNodeSelect.emit({
                  originalEvent: event.originalEvent,
                  node: rowNode.node,
                  type: 'row',
                  index: event.rowIndex
                });
              }
            } else {
              if (this.selectionMode === 'single') {
                if (selected) {
                  this._selection = null;
                  this.selectionKeys = {};
                  this.selectionChange.emit(this.selection);
                  this.onNodeUnselect.emit({
                    originalEvent: event.originalEvent,
                    node: rowNode.node,
                    type: 'row'
                  });
                } else {
                  this._selection = rowNode.node;
                  this.selectionChange.emit(this.selection);
                  this.onNodeSelect.emit({
                    originalEvent: event.originalEvent,
                    node: rowNode.node,
                    type: 'row',
                    index: event.rowIndex
                  });

                  if (dataKeyValue) {
                    this.selectionKeys = {};
                    this.selectionKeys[dataKeyValue] = 1;
                  }
                }
              } else if (this.selectionMode === 'multiple') {
                if (selected) {
                  var _selectionIndex = this.findIndexInSelection(rowNode.node);

                  this._selection = this.selection.filter(function (val, i) {
                    return i != _selectionIndex;
                  });
                  this.selectionChange.emit(this.selection);
                  this.onNodeUnselect.emit({
                    originalEvent: event.originalEvent,
                    node: rowNode.node,
                    type: 'row'
                  });

                  if (dataKeyValue) {
                    delete this.selectionKeys[dataKeyValue];
                  }
                } else {
                  this._selection = this.selection ? [].concat(_toConsumableArray2(this.selection), [rowNode.node]) : [rowNode.node];
                  this.selectionChange.emit(this.selection);
                  this.onNodeSelect.emit({
                    originalEvent: event.originalEvent,
                    node: rowNode.node,
                    type: 'row',
                    index: event.rowIndex
                  });

                  if (dataKeyValue) {
                    this.selectionKeys[dataKeyValue] = 1;
                  }
                }
              }
            }

            this.tableService.onSelectionChange();
          }

          this.rowTouched = false;
        }
      }, {
        key: "handleRowTouchEnd",
        value: function handleRowTouchEnd(event) {
          this.rowTouched = true;
        }
      }, {
        key: "handleRowRightClick",
        value: function handleRowRightClick(event) {
          if (this.contextMenu) {
            var node = event.rowNode.node;

            if (this.contextMenuSelectionMode === 'separate') {
              this.contextMenuSelection = node;
              this.contextMenuSelectionChange.emit(node);
              this.onContextMenuSelect.emit({
                originalEvent: event.originalEvent,
                node: node
              });
              this.contextMenu.show(event.originalEvent);
              this.tableService.onContextMenu(node);
            } else if (this.contextMenuSelectionMode === 'joint') {
              this.preventSelectionSetterPropagation = true;
              var selected = this.isSelected(node);
              var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, this.dataKey)) : null;

              if (!selected) {
                if (this.isSingleSelectionMode()) {
                  this.selection = node;
                  this.selectionChange.emit(node);
                } else if (this.isMultipleSelectionMode()) {
                  this.selection = [node];
                  this.selectionChange.emit(this.selection);
                }

                if (dataKeyValue) {
                  this.selectionKeys[dataKeyValue] = 1;
                }
              }

              this.contextMenu.show(event.originalEvent);
              this.onContextMenuSelect.emit({
                originalEvent: event.originalEvent,
                node: node
              });
            }
          }
        }
      }, {
        key: "toggleNodeWithCheckbox",
        value: function toggleNodeWithCheckbox(event) {
          this.selection = this.selection || [];
          this.preventSelectionSetterPropagation = true;
          var node = event.rowNode.node;
          var selected = this.isSelected(node);

          if (selected) {
            this.propagateSelectionDown(node, false);

            if (event.rowNode.parent) {
              this.propagateSelectionUp(node.parent, false);
            }

            this.selectionChange.emit(this.selection);
            this.onNodeUnselect.emit({
              originalEvent: event,
              node: node
            });
          } else {
            this.propagateSelectionDown(node, true);

            if (event.rowNode.parent) {
              this.propagateSelectionUp(node.parent, true);
            }

            this.selectionChange.emit(this.selection);
            this.onNodeSelect.emit({
              originalEvent: event,
              node: node
            });
          }

          this.tableService.onSelectionChange();
        }
      }, {
        key: "toggleNodesWithCheckbox",
        value: function toggleNodesWithCheckbox(event, check) {
          var data = this.filteredNodes || this.value;
          this._selection = check && data ? data.slice() : [];

          if (check) {
            if (data && data.length) {
              var _iterator11 = _createForOfIteratorHelper(data),
                  _step11;

              try {
                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                  var node = _step11.value;
                  this.propagateSelectionDown(node, true);
                }
              } catch (err) {
                _iterator11.e(err);
              } finally {
                _iterator11.f();
              }
            }
          } else {
            this._selection = [];
            this.selectionKeys = {};
          }

          this.preventSelectionSetterPropagation = true;
          this.selectionChange.emit(this._selection);
          this.tableService.onSelectionChange();
          this.onHeaderCheckboxToggle.emit({
            originalEvent: event,
            checked: check
          });
        }
      }, {
        key: "propagateSelectionUp",
        value: function propagateSelectionUp(node, select) {
          if (node.children && node.children.length) {
            var selectedChildCount = 0;
            var childPartialSelected = false;
            var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, this.dataKey)) : null;

            var _iterator12 = _createForOfIteratorHelper(node.children),
                _step12;

            try {
              for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                var child = _step12.value;
                if (this.isSelected(child)) selectedChildCount++;else if (child.partialSelected) childPartialSelected = true;
              }
            } catch (err) {
              _iterator12.e(err);
            } finally {
              _iterator12.f();
            }

            if (select && selectedChildCount == node.children.length) {
              this._selection = [].concat(_toConsumableArray2(this.selection || []), [node]);
              node.partialSelected = false;

              if (dataKeyValue) {
                this.selectionKeys[dataKeyValue] = 1;
              }
            } else {
              if (!select) {
                var index = this.findIndexInSelection(node);

                if (index >= 0) {
                  this._selection = this.selection.filter(function (val, i) {
                    return i != index;
                  });

                  if (dataKeyValue) {
                    delete this.selectionKeys[dataKeyValue];
                  }
                }
              }

              if (childPartialSelected || selectedChildCount > 0 && selectedChildCount != node.children.length) node.partialSelected = true;else node.partialSelected = false;
            }
          }

          var parent = node.parent;

          if (parent) {
            this.propagateSelectionUp(parent, select);
          }
        }
      }, {
        key: "propagateSelectionDown",
        value: function propagateSelectionDown(node, select) {
          var index = this.findIndexInSelection(node);
          var dataKeyValue = this.dataKey ? String(primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, this.dataKey)) : null;

          if (select && index == -1) {
            this._selection = [].concat(_toConsumableArray2(this.selection || []), [node]);

            if (dataKeyValue) {
              this.selectionKeys[dataKeyValue] = 1;
            }
          } else if (!select && index > -1) {
            this._selection = this.selection.filter(function (val, i) {
              return i != index;
            });

            if (dataKeyValue) {
              delete this.selectionKeys[dataKeyValue];
            }
          }

          node.partialSelected = false;

          if (node.children && node.children.length) {
            var _iterator13 = _createForOfIteratorHelper(node.children),
                _step13;

            try {
              for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
                var child = _step13.value;
                this.propagateSelectionDown(child, select);
              }
            } catch (err) {
              _iterator13.e(err);
            } finally {
              _iterator13.f();
            }
          }
        }
      }, {
        key: "isSelected",
        value: function isSelected(node) {
          if (node && this.selection) {
            if (this.dataKey) {
              return this.selectionKeys[primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, this.dataKey)] !== undefined;
            } else {
              if (this.selection instanceof Array) return this.findIndexInSelection(node) > -1;else return this.equals(node, this.selection);
            }
          }

          return false;
        }
      }, {
        key: "findIndexInSelection",
        value: function findIndexInSelection(node) {
          var index = -1;

          if (this.selection && this.selection.length) {
            for (var i = 0; i < this.selection.length; i++) {
              if (this.equals(node, this.selection[i])) {
                index = i;
                break;
              }
            }
          }

          return index;
        }
      }, {
        key: "isSingleSelectionMode",
        value: function isSingleSelectionMode() {
          return this.selectionMode === 'single';
        }
      }, {
        key: "isMultipleSelectionMode",
        value: function isMultipleSelectionMode() {
          return this.selectionMode === 'multiple';
        }
      }, {
        key: "equals",
        value: function equals(node1, node2) {
          return this.compareSelectionBy === 'equals' ? node1 === node2 : primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].equals(node1.data, node2.data, this.dataKey);
        }
      }, {
        key: "filter",
        value: function filter(value, field, matchMode) {
          var _this39 = this;

          if (this.filterTimeout) {
            clearTimeout(this.filterTimeout);
          }

          if (!this.isFilterBlank(value)) {
            this.filters[field] = {
              value: value,
              matchMode: matchMode
            };
          } else if (this.filters[field]) {
            delete this.filters[field];
          }

          this.filterTimeout = setTimeout(function () {
            _this39._filter();

            _this39.filterTimeout = null;
          }, this.filterDelay);
        }
      }, {
        key: "filterGlobal",
        value: function filterGlobal(value, matchMode) {
          this.filter(value, 'global', matchMode);
        }
      }, {
        key: "isFilterBlank",
        value: function isFilterBlank(filter) {
          if (filter !== null && filter !== undefined) {
            if (typeof filter === 'string' && filter.trim().length == 0 || filter instanceof Array && filter.length == 0) return true;else return false;
          }

          return true;
        }
      }, {
        key: "_filter",
        value: function _filter() {
          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          } else {
            if (!this.value) {
              return;
            }

            if (!this.hasFilter()) {
              this.filteredNodes = null;

              if (this.paginator) {
                this.totalRecords = this.value ? this.value.length : 0;
              }
            } else {
              var globalFilterFieldsArray;

              if (this.filters['global']) {
                if (!this.columns && !this.globalFilterFields) throw new Error('Global filtering requires dynamic columns or globalFilterFields to be defined.');else globalFilterFieldsArray = this.globalFilterFields || this.columns;
              }

              this.filteredNodes = [];
              var isStrictMode = this.filterMode === 'strict';
              var isValueChanged = false;

              var _iterator14 = _createForOfIteratorHelper(this.value),
                  _step14;

              try {
                for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                  var node = _step14.value;
                  var copyNode = Object.assign({}, node);
                  var localMatch = true;
                  var globalMatch = false;
                  var paramsWithoutNode = void 0;

                  for (var prop in this.filters) {
                    if (this.filters.hasOwnProperty(prop) && prop !== 'global') {
                      var filterMeta = this.filters[prop];
                      var filterField = prop;
                      var filterValue = filterMeta.value;
                      var filterMatchMode = filterMeta.matchMode || 'startsWith';
                      var filterConstraint = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["FilterUtils"][filterMatchMode];
                      paramsWithoutNode = {
                        filterField: filterField,
                        filterValue: filterValue,
                        filterConstraint: filterConstraint,
                        isStrictMode: isStrictMode
                      };

                      if (isStrictMode && !(this.findFilteredNodes(copyNode, paramsWithoutNode) || this.isFilterMatched(copyNode, paramsWithoutNode)) || !isStrictMode && !(this.isFilterMatched(copyNode, paramsWithoutNode) || this.findFilteredNodes(copyNode, paramsWithoutNode))) {
                        localMatch = false;
                      }

                      if (!localMatch) {
                        break;
                      }
                    }
                  }

                  if (this.filters['global'] && !globalMatch && globalFilterFieldsArray) {
                    for (var j = 0; j < globalFilterFieldsArray.length; j++) {
                      var copyNodeForGlobal = Object.assign({}, copyNode);

                      var _filterField = globalFilterFieldsArray[j].field || globalFilterFieldsArray[j];

                      var _filterValue = this.filters['global'].value;
                      var _filterConstraint = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["FilterUtils"][this.filters['global'].matchMode];
                      paramsWithoutNode = {
                        filterField: _filterField,
                        filterValue: _filterValue,
                        filterConstraint: _filterConstraint,
                        isStrictMode: isStrictMode
                      };

                      if (isStrictMode && (this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode) || this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode)) || !isStrictMode && (this.isFilterMatched(copyNodeForGlobal, paramsWithoutNode) || this.findFilteredNodes(copyNodeForGlobal, paramsWithoutNode))) {
                        globalMatch = true;
                        copyNode = copyNodeForGlobal;
                      }
                    }
                  }

                  var matches = localMatch;

                  if (this.filters['global']) {
                    matches = localMatch && globalMatch;
                  }

                  if (matches) {
                    this.filteredNodes.push(copyNode);
                  }

                  isValueChanged = isValueChanged || !localMatch || globalMatch || localMatch && this.filteredNodes.length > 0 || !globalMatch && this.filteredNodes.length === 0;
                }
              } catch (err) {
                _iterator14.e(err);
              } finally {
                _iterator14.f();
              }

              if (!isValueChanged) {
                this.filteredNodes = null;
              }

              if (this.paginator) {
                this.totalRecords = this.filteredNodes ? this.filteredNodes.length : this.value ? this.value.length : 0;
              }
            }
          }

          this.first = 0;
          var filteredValue = this.filteredNodes || this.value;
          this.onFilter.emit({
            filters: this.filters,
            filteredValue: filteredValue
          });
          this.tableService.onUIUpdate(filteredValue);
          this.updateSerializedValue();

          if (this.scrollable) {
            this.resetScrollTop();
          }
        }
      }, {
        key: "findFilteredNodes",
        value: function findFilteredNodes(node, paramsWithoutNode) {
          if (node) {
            var matched = false;

            if (node.children) {
              var childNodes = _toConsumableArray2(node.children);

              node.children = [];

              var _iterator15 = _createForOfIteratorHelper(childNodes),
                  _step15;

              try {
                for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
                  var childNode = _step15.value;
                  var copyChildNode = Object.assign({}, childNode);

                  if (this.isFilterMatched(copyChildNode, paramsWithoutNode)) {
                    matched = true;
                    node.children.push(copyChildNode);
                  }
                }
              } catch (err) {
                _iterator15.e(err);
              } finally {
                _iterator15.f();
              }
            }

            if (matched) {
              return true;
            }
          }
        }
      }, {
        key: "isFilterMatched",
        value: function isFilterMatched(node, _ref4) {
          var filterField = _ref4.filterField,
              filterValue = _ref4.filterValue,
              filterConstraint = _ref4.filterConstraint,
              isStrictMode = _ref4.isStrictMode;
          var matched = false;
          var dataFieldValue = primeng_utils__WEBPACK_IMPORTED_MODULE_6__["ObjectUtils"].resolveFieldData(node.data, filterField);

          if (filterConstraint(dataFieldValue, filterValue, this.filterLocale)) {
            matched = true;
          }

          if (!matched || isStrictMode && !this.isNodeLeaf(node)) {
            matched = this.findFilteredNodes(node, {
              filterField: filterField,
              filterValue: filterValue,
              filterConstraint: filterConstraint,
              isStrictMode: isStrictMode
            }) || matched;
          }

          return matched;
        }
      }, {
        key: "isNodeLeaf",
        value: function isNodeLeaf(node) {
          return node.leaf === false ? false : !(node.children && node.children.length);
        }
      }, {
        key: "hasFilter",
        value: function hasFilter() {
          var empty = true;

          for (var prop in this.filters) {
            if (this.filters.hasOwnProperty(prop)) {
              empty = false;
              break;
            }
          }

          return !empty;
        }
      }, {
        key: "reset",
        value: function reset() {
          this._sortField = null;
          this._sortOrder = 1;
          this._multiSortMeta = null;
          this.tableService.onSort(null);
          this.filteredNodes = null;
          this.filters = {};
          this.first = 0;

          if (this.lazy) {
            this.onLazyLoad.emit(this.createLazyLoadMetadata());
          } else {
            this.totalRecords = this._value ? this._value.length : 0;
          }
        }
      }, {
        key: "updateEditingCell",
        value: function updateEditingCell(cell) {
          this.editingCell = cell;
          this.bindDocumentEditListener();
        }
      }, {
        key: "isEditingCellValid",
        value: function isEditingCellValid() {
          return this.editingCell && primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].find(this.editingCell, '.ng-invalid.ng-dirty').length === 0;
        }
      }, {
        key: "bindDocumentEditListener",
        value: function bindDocumentEditListener() {
          var _this40 = this;

          if (!this.documentEditListener) {
            this.documentEditListener = function (event) {
              if (_this40.editingCell && !_this40.editingCellClick && _this40.isEditingCellValid()) {
                primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(_this40.editingCell, 'ui-editing-cell');
                _this40.editingCell = null;

                _this40.unbindDocumentEditListener();
              }

              _this40.editingCellClick = false;
            };

            document.addEventListener('click', this.documentEditListener);
          }
        }
      }, {
        key: "unbindDocumentEditListener",
        value: function unbindDocumentEditListener() {
          if (this.documentEditListener) {
            document.removeEventListener('click', this.documentEditListener);
            this.documentEditListener = null;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindDocumentEditListener();
          this.editingCell = null;
          this.initialized = null;
        }
      }, {
        key: "value",
        get: function get() {
          return this._value;
        },
        set: function set(val) {
          this._value = val;
        }
      }, {
        key: "totalRecords",
        get: function get() {
          return this._totalRecords;
        },
        set: function set(val) {
          this._totalRecords = val;
          this.tableService.onTotalRecordsChange(this._totalRecords);
        }
      }, {
        key: "sortField",
        get: function get() {
          return this._sortField;
        },
        set: function set(val) {
          this._sortField = val;
        }
      }, {
        key: "sortOrder",
        get: function get() {
          return this._sortOrder;
        },
        set: function set(val) {
          this._sortOrder = val;
        }
      }, {
        key: "multiSortMeta",
        get: function get() {
          return this._multiSortMeta;
        },
        set: function set(val) {
          this._multiSortMeta = val;
        }
      }, {
        key: "selection",
        get: function get() {
          return this._selection;
        },
        set: function set(val) {
          this._selection = val;
        }
      }]);

      return TreeTable;
    }();

    TreeTable.ctorParameters = function () {
      return [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }, {
        type: TreeTableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "columns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "style", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "styleClass", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "autoLayout", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "lazy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "lazyLoadOnInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "paginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "rows", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "first", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "pageLinks", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "rowsPerPageOptions", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "alwaysShowPaginator", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "paginatorPosition", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "paginatorDropdownAppendTo", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "currentPageReportTemplate", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "showCurrentPageReport", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "defaultSortOrder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "sortMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "resetPageOnSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "customSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "selectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "selectionChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "contextMenuSelection", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "contextMenuSelectionChange", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "contextMenuSelectionMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "dataKey", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "metaKeySelection", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "compareSelectionBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "rowHover", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "loading", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "loadingIcon", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "showLoader", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "scrollable", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "scrollHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "virtualScroll", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "virtualScrollDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "virtualRowHeight", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "minBufferPx", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "maxBufferPx", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "frozenWidth", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "frozenColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "resizableColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "columnResizeMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "reorderableColumns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "contextMenu", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "rowTrackBy", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "filters", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "globalFilterFields", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "filterDelay", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "filterMode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "filterLocale", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onFilter", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onNodeExpand", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onNodeCollapse", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onPage", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onSort", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onLazyLoad", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "sortFunction", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onColResize", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onColReorder", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onNodeSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onNodeUnselect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onContextMenuSelect", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onHeaderCheckboxToggle", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onEditInit", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onEditComplete", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])()], TreeTable.prototype, "onEditCancel", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('container')], TreeTable.prototype, "containerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('resizeHelper')], TreeTable.prototype, "resizeHelperViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('reorderIndicatorUp')], TreeTable.prototype, "reorderIndicatorUpViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('reorderIndicatorDown')], TreeTable.prototype, "reorderIndicatorDownViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('table')], TreeTable.prototype, "tableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollableView')], TreeTable.prototype, "scrollableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollableFrozenView')], TreeTable.prototype, "scrollableFrozenViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], TreeTable.prototype, "templates", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "value", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "totalRecords", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "sortField", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "sortOrder", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "multiSortMeta", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTable.prototype, "selection", null);

    TreeTable = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTable',
      template: "\n        <div #container [ngStyle]=\"style\" [class]=\"styleClass\"\n                [ngClass]=\"{'ui-treetable ui-widget': true, 'ui-treetable-auto-layout': autoLayout, 'ui-treetable-hoverable-rows': (rowHover||(selectionMode === 'single' || selectionMode === 'multiple')),\n                'ui-treetable-resizable': resizableColumns, 'ui-treetable-resizable-fit': (resizableColumns && columnResizeMode === 'fit'), 'ui-treetable-flex-scrollable': (scrollable && scrollHeight === 'flex')}\">\n            <div class=\"ui-treetable-loading ui-widget-overlay\" *ngIf=\"loading && showLoader\"></div>\n            <div class=\"ui-treetable-loading-content\" *ngIf=\"loading && showLoader\">\n                <i [class]=\"'ui-treetable-loading-icon pi-spin ' + loadingIcon\"></i>\n            </div>\n            <div *ngIf=\"captionTemplate\" class=\"ui-treetable-caption ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\n            </div>\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-top\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'top' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n\n            <div class=\"ui-treetable-wrapper\" *ngIf=\"!scrollable\">\n                <table #table class=\"ui-treetable-table\">\n                    <ng-container *ngTemplateOutlet=\"colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"headerTemplate; context: {$implicit: columns}\"></ng-container>\n                    </thead>\n                    <tfoot class=\"ui-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"bodyTemplate\"></tbody>\n                </table>\n            </div>\n\n            <div class=\"ui-treetable-scrollable-wrapper\" *ngIf=\"scrollable\">\n               <div class=\"ui-treetable-scrollable-view ui-treetable-frozen-view\" *ngIf=\"frozenColumns||frozenBodyTemplate\" #scrollableFrozenView [ttScrollableView]=\"frozenColumns\" [frozen]=\"true\" [ngStyle]=\"{width: frozenWidth}\" [scrollHeight]=\"scrollHeight\"></div>\n               <div class=\"ui-treetable-scrollable-view\" #scrollableView [ttScrollableView]=\"columns\" [frozen]=\"false\" [scrollHeight]=\"scrollHeight\" [ngStyle]=\"{left: frozenWidth, width: 'calc(100% - '+frozenWidth+')'}\"></div>\n            </div>\n\n            <p-paginator [rows]=\"rows\" [first]=\"first\" [totalRecords]=\"totalRecords\" [pageLinkSize]=\"pageLinks\" styleClass=\"ui-paginator-bottom\" [alwaysShow]=\"alwaysShowPaginator\"\n                (onPageChange)=\"onPageChange($event)\" [rowsPerPageOptions]=\"rowsPerPageOptions\" *ngIf=\"paginator && (paginatorPosition === 'bottom' || paginatorPosition =='both')\"\n                [templateLeft]=\"paginatorLeftTemplate\" [templateRight]=\"paginatorRightTemplate\" [dropdownAppendTo]=\"paginatorDropdownAppendTo\"\n                [currentPageReportTemplate]=\"currentPageReportTemplate\" [showCurrentPageReport]=\"showCurrentPageReport\"></p-paginator>\n            <div *ngIf=\"summaryTemplate\" class=\"ui-treetable-summary ui-widget-header\">\n                <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\n            </div>\n\n            <div #resizeHelper class=\"ui-column-resizer-helper ui-state-highlight\" style=\"display:none\" *ngIf=\"resizableColumns\"></div>\n\n            <span #reorderIndicatorUp class=\"pi pi-arrow-down ui-table-reorder-indicator-up\" *ngIf=\"reorderableColumns\"></span>\n            <span #reorderIndicatorDown class=\"pi pi-arrow-up ui-table-reorder-indicator-down\" *ngIf=\"reorderableColumns\"></span>\n        </div>\n    ",
      providers: [TreeTableService],
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].Default
    })], TreeTable);

    var TTBody = function TTBody(tt) {
      _classCallCheck2(this, TTBody);

      this.tt = tt;
    };

    TTBody.ctorParameters = function () {
      return [{
        type: TreeTable
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pTreeTableBody")], TTBody.prototype, "columns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("pTreeTableBodyTemplate")], TTBody.prototype, "template", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTBody.prototype, "frozen", void 0);

    TTBody = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: '[pTreeTableBody]',
      template: "\n        <ng-container *ngIf=\"!tt.virtualScroll\">\n            <ng-template ngFor let-serializedNode let-rowIndex=\"index\" [ngForOf]=\"tt.serializedValue\" [ngForTrackBy]=\"tt.rowTrackBy\">\n                <ng-container *ngIf=\"serializedNode.visible\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"tt.virtualScroll\">\n            <ng-template cdkVirtualFor let-serializedNode let-rowIndex=\"index\" [cdkVirtualForOf]=\"tt.serializedValue\" [cdkVirtualForTrackBy]=\"tt.rowTrackBy\">\n                <ng-container *ngIf=\"serializedNode.visible\">\n                    <ng-container *ngTemplateOutlet=\"template; context: {$implicit: serializedNode, node: serializedNode.node, rowData: serializedNode.node.data, columns: columns}\"></ng-container>\n                </ng-container>\n            </ng-template>\n        </ng-container>\n        <ng-container *ngIf=\"tt.isEmpty()\">\n            <ng-container *ngTemplateOutlet=\"tt.emptyMessageTemplate; context: {$implicit: columns}\"></ng-container>\n        </ng-container>\n    "
    })], TTBody);

    var TTScrollableView = /*#__PURE__*/function () {
      function TTScrollableView(tt, el, zone) {
        var _this41 = this;

        _classCallCheck2(this, TTScrollableView);

        this.tt = tt;
        this.el = el;
        this.zone = zone;
        this.subscription = this.tt.tableService.uiUpdateSource$.subscribe(function () {
          _this41.zone.runOutsideAngular(function () {
            setTimeout(function () {
              _this41.alignScrollBar();

              _this41.initialized = true;
            }, 50);
          });
        });
        this.initialized = false;
      }

      _createClass2(TTScrollableView, [{
        key: "ngAfterViewChecked",
        value: function ngAfterViewChecked() {
          if (!this.initialized && this.el.nativeElement.offsetParent) {
            this.alignScrollBar();
            this.initialized = true;
          }
        }
      }, {
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (!this.frozen) {
            if (this.tt.frozenColumns || this.tt.frozenBodyTemplate) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.el.nativeElement, 'ui-treetable-unfrozen-view');
            }

            var frozenView = this.el.nativeElement.previousElementSibling;

            if (frozenView) {
              if (this.tt.virtualScroll) this.frozenSiblingBody = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(frozenView, '.ui-treetable-virtual-scrollable-body');else this.frozenSiblingBody = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(frozenView, '.ui-treetable-scrollable-body');
            }
          } else {
            if (this.scrollableAlignerViewChild && this.scrollableAlignerViewChild.nativeElement) {
              this.scrollableAlignerViewChild.nativeElement.style.height = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].calculateScrollbarHeight() + 'px';
            }
          }

          this.bindEvents();
          this.alignScrollBar();
        }
      }, {
        key: "bindEvents",
        value: function bindEvents() {
          var _this42 = this;

          this.zone.runOutsideAngular(function () {
            var scrollBarWidth = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].calculateScrollbarWidth();

            if (_this42.scrollHeaderViewChild && _this42.scrollHeaderViewChild.nativeElement) {
              _this42.headerScrollListener = _this42.onHeaderScroll.bind(_this42);

              _this42.scrollHeaderBoxViewChild.nativeElement.addEventListener('scroll', _this42.headerScrollListener);
            }

            if (_this42.scrollFooterViewChild && _this42.scrollFooterViewChild.nativeElement) {
              _this42.footerScrollListener = _this42.onFooterScroll.bind(_this42);

              _this42.scrollFooterViewChild.nativeElement.addEventListener('scroll', _this42.footerScrollListener);
            }

            if (!_this42.frozen) {
              _this42.bodyScrollListener = _this42.onBodyScroll.bind(_this42);
              if (_this42.tt.virtualScroll) _this42.virtualScrollBody.getElementRef().nativeElement.addEventListener('scroll', _this42.bodyScrollListener);else _this42.scrollBodyViewChild.nativeElement.addEventListener('scroll', _this42.bodyScrollListener);
            }
          });
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderBoxViewChild.nativeElement.removeEventListener('scroll', this.headerScrollListener);
          }

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterViewChild.nativeElement.removeEventListener('scroll', this.footerScrollListener);
          }

          if (this.scrollBodyViewChild && this.scrollBodyViewChild.nativeElement) {
            this.scrollBodyViewChild.nativeElement.removeEventListener('scroll', this.bodyScrollListener);
          }

          if (this.virtualScrollBody && this.virtualScrollBody.getElementRef()) {
            this.virtualScrollBody.getElementRef().nativeElement.removeEventListener('scroll', this.bodyScrollListener);
          }
        }
      }, {
        key: "onHeaderScroll",
        value: function onHeaderScroll() {
          var scrollLeft = this.scrollHeaderViewChild.nativeElement.scrollLeft;
          this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterViewChild.nativeElement.scrollLeft = scrollLeft;
          }

          this.preventBodyScrollPropagation = true;
        }
      }, {
        key: "onFooterScroll",
        value: function onFooterScroll() {
          var scrollLeft = this.scrollFooterViewChild.nativeElement.scrollLeft;
          this.scrollBodyViewChild.nativeElement.scrollLeft = scrollLeft;

          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderViewChild.nativeElement.scrollLeft = scrollLeft;
          }

          this.preventBodyScrollPropagation = true;
        }
      }, {
        key: "onBodyScroll",
        value: function onBodyScroll(event) {
          if (this.preventBodyScrollPropagation) {
            this.preventBodyScrollPropagation = false;
            return;
          }

          if (this.scrollHeaderViewChild && this.scrollHeaderViewChild.nativeElement) {
            this.scrollHeaderBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';
          }

          if (this.scrollFooterViewChild && this.scrollFooterViewChild.nativeElement) {
            this.scrollFooterBoxViewChild.nativeElement.style.marginLeft = -1 * event.target.scrollLeft + 'px';
          }

          if (this.frozenSiblingBody) {
            this.frozenSiblingBody.scrollTop = event.target.scrollTop;
          }
        }
      }, {
        key: "scrollToVirtualIndex",
        value: function scrollToVirtualIndex(index) {
          if (this.virtualScrollBody) {
            this.virtualScrollBody.scrollToIndex(index);
          }
        }
      }, {
        key: "scrollTo",
        value: function scrollTo(options) {
          if (this.virtualScrollBody) {
            this.virtualScrollBody.scrollTo(options);
          } else {
            if (this.scrollBodyViewChild.nativeElement.scrollTo) {
              this.scrollBodyViewChild.nativeElement.scrollTo(options);
            } else {
              this.scrollBodyViewChild.nativeElement.scrollLeft = options.left;
              this.scrollBodyViewChild.nativeElement.scrollTop = options.top;
            }
          }
        }
      }, {
        key: "hasVerticalOverflow",
        value: function hasVerticalOverflow() {
          if (this.tt.virtualScroll) return this.virtualScrollBody.getDataLength() * this.tt.virtualRowHeight > this.virtualScrollBody.getViewportSize();else return primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterHeight(this.scrollTableViewChild.nativeElement) > primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].getOuterHeight(this.scrollBodyViewChild.nativeElement);
        }
      }, {
        key: "alignScrollBar",
        value: function alignScrollBar() {
          if (!this.frozen) {
            var scrollBarWidth = this.hasVerticalOverflow() ? primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].calculateScrollbarWidth() : 0;
            this.scrollHeaderBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';

            if (this.scrollFooterBoxViewChild && this.scrollFooterBoxViewChild.nativeElement) {
              this.scrollFooterBoxViewChild.nativeElement.style.marginRight = scrollBarWidth + 'px';
            }
          }

          this.initialized = false;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindEvents();
          this.frozenSiblingBody = null;

          if (this.subscription) {
            this.subscription.unsubscribe();
          }

          this.initialized = false;
        }
      }, {
        key: "scrollHeight",
        get: function get() {
          return this._scrollHeight;
        },
        set: function set(val) {
          this._scrollHeight = val;

          if (val != null && (val.includes('%') || val.includes('calc'))) {
            console.log('Percentage scroll height calculation is removed in favor of the more performant CSS based flex mode, use scrollHeight="flex" instead.');
          }
        }
      }]);

      return TTScrollableView;
    }();

    TTScrollableView.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttScrollableView")], TTScrollableView.prototype, "columns", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTScrollableView.prototype, "frozen", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollHeader')], TTScrollableView.prototype, "scrollHeaderViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollHeaderBox')], TTScrollableView.prototype, "scrollHeaderBoxViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollBody')], TTScrollableView.prototype, "scrollBodyViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollTable')], TTScrollableView.prototype, "scrollTableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('loadingTable')], TTScrollableView.prototype, "scrollLoadingTableViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollFooter')], TTScrollableView.prototype, "scrollFooterViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollFooterBox')], TTScrollableView.prototype, "scrollFooterBoxViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('scrollableAligner')], TTScrollableView.prototype, "scrollableAlignerViewChild", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__["CdkVirtualScrollViewport"])], TTScrollableView.prototype, "virtualScrollBody", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTScrollableView.prototype, "scrollHeight", null);

    TTScrollableView = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: '[ttScrollableView]',
      template: "\n        <div #scrollHeader class=\"ui-treetable-scrollable-header ui-widget-header\">\n            <div #scrollHeaderBox class=\"ui-treetable-scrollable-header-box\">\n                <table class=\"ui-treetable-scrollable-header-table\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <thead class=\"ui-treetable-thead\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenHeaderTemplate||tt.headerTemplate : tt.headerTemplate; context {$implicit: columns}\"></ng-container>\n                    </thead>\n                </table>\n            </div>\n        </div>\n        <ng-container *ngIf=\"!tt.virtualScroll; else virtualScrollTemplate\">\n            <div #scrollBody class=\"ui-treetable-scrollable-body\" [ngStyle]=\"{'max-height': !tt.scrollHeight !== 'flex' ? scrollHeight : undefined}\">\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </div>\n        </ng-container>\n        <ng-template #virtualScrollTemplate>\n            <cdk-virtual-scroll-viewport [itemSize]=\"tt.virtualRowHeight\" [style.height]=\"!tt.scrollHeight !== 'flex' ? scrollHeight : undefined\" \n                    [minBufferPx]=\"tt.minBufferPx\" [maxBufferPx]=\"tt.maxBufferPx\" class=\"ui-treetable-virtual-scrollable-body\">\n                <table #scrollTable [class]=\"tt.tableStyleClass\" [ngStyle]=\"tt.tableStyle\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tbody class=\"ui-treetable-tbody\" [pTreeTableBody]=\"columns\" [pTreeTableBodyTemplate]=\"frozen ? tt.frozenBodyTemplate||tt.bodyTemplate : tt.bodyTemplate\" [frozen]=\"frozen\"></tbody>\n                </table>\n                <div #scrollableAligner style=\"background-color:transparent\" *ngIf=\"frozen\"></div>\n            </cdk-virtual-scroll-viewport>\n        </ng-template>\n        <div #scrollFooter *ngIf=\"tt.footerTemplate\" class=\"ui-treetable-scrollable-footer ui-widget-header\">\n            <div #scrollFooterBox class=\"ui-treetable-scrollable-footer-box\">\n                <table class=\"ui-treetable-scrollable-footer-table\">\n                    <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenColGroupTemplate||tt.colGroupTemplate : tt.colGroupTemplate; context {$implicit: columns}\"></ng-container>\n                    <tfoot class=\"ui-treetable-tfoot\">\n                        <ng-container *ngTemplateOutlet=\"frozen ? tt.frozenFooterTemplate||tt.footerTemplate : tt.footerTemplate; context {$implicit: columns}\"></ng-container>\n                    </tfoot>\n                </table>\n            </div>\n        </div>\n    "
    })], TTScrollableView);

    var TTSortableColumn = /*#__PURE__*/function () {
      function TTSortableColumn(tt) {
        var _this43 = this;

        _classCallCheck2(this, TTSortableColumn);

        this.tt = tt;

        if (this.isEnabled()) {
          this.subscription = this.tt.tableService.sortSource$.subscribe(function (sortMeta) {
            _this43.updateSortState();
          });
        }
      }

      _createClass2(TTSortableColumn, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.updateSortState();
          }
        }
      }, {
        key: "updateSortState",
        value: function updateSortState() {
          this.sorted = this.tt.isSorted(this.field);
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.updateSortState();
            this.tt.sort({
              originalEvent: event,
              field: this.field
            });
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].clearSelection();
          }
        }
      }, {
        key: "onEnterKey",
        value: function onEnterKey(event) {
          this.onClick(event);
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttSortableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTSortableColumn;
    }();

    TTSortableColumn.ctorParameters = function () {
      return [{
        type: TreeTable
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttSortableColumn")], TTSortableColumn.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSortableColumn.prototype, "ttSortableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], TTSortableColumn.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown.enter', ['$event'])], TTSortableColumn.prototype, "onEnterKey", null);

    TTSortableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttSortableColumn]',
      host: {
        '[class.ui-sortable-column]': 'isEnabled()',
        '[class.ui-state-highlight]': 'sorted',
        '[attr.tabindex]': 'isEnabled() ? "0" : null'
      }
    })], TTSortableColumn);

    var TTSortIcon = /*#__PURE__*/function () {
      function TTSortIcon(tt) {
        var _this44 = this;

        _classCallCheck2(this, TTSortIcon);

        this.tt = tt;
        this.subscription = this.tt.tableService.sortSource$.subscribe(function (sortMeta) {
          _this44.updateSortState();
        });
      }

      _createClass2(TTSortIcon, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.updateSortState();
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          event.preventDefault();
        }
      }, {
        key: "updateSortState",
        value: function updateSortState() {
          if (this.tt.sortMode === 'single') {
            this.sortOrder = this.tt.isSorted(this.field) ? this.tt.sortOrder : 0;
          } else if (this.tt.sortMode === 'multiple') {
            var sortMeta = this.tt.getSortMeta(this.field);
            this.sortOrder = sortMeta ? sortMeta.order : 0;
          }
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTSortIcon;
    }();

    TTSortIcon.ctorParameters = function () {
      return [{
        type: TreeTable
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSortIcon.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSortIcon.prototype, "ariaLabelDesc", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSortIcon.prototype, "ariaLabelAsc", void 0);

    TTSortIcon = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTableSortIcon',
      template: "\n        <i class=\"ui-sortable-column-icon pi pi-fw\" [ngClass]=\"{'pi-sort-amount-up-alt': sortOrder === 1, 'pi-sort-amount-down': sortOrder === -1, 'pi-sort-alt': sortOrder === 0}\"></i>\n    "
    })], TTSortIcon);

    var TTResizableColumn = /*#__PURE__*/function () {
      function TTResizableColumn(tt, el, zone) {
        _classCallCheck2(this, TTResizableColumn);

        this.tt = tt;
        this.el = el;
        this.zone = zone;
      }

      _createClass2(TTResizableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          var _this45 = this;

          if (this.isEnabled()) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.el.nativeElement, 'ui-resizable-column');
            this.resizer = document.createElement('span');
            this.resizer.className = 'ui-column-resizer ui-clickable';
            this.el.nativeElement.appendChild(this.resizer);
            this.zone.runOutsideAngular(function () {
              _this45.resizerMouseDownListener = _this45.onMouseDown.bind(_this45);

              _this45.resizer.addEventListener('mousedown', _this45.resizerMouseDownListener);
            });
          }
        }
      }, {
        key: "bindDocumentEvents",
        value: function bindDocumentEvents() {
          var _this46 = this;

          this.zone.runOutsideAngular(function () {
            _this46.documentMouseMoveListener = _this46.onDocumentMouseMove.bind(_this46);
            document.addEventListener('mousemove', _this46.documentMouseMoveListener);
            _this46.documentMouseUpListener = _this46.onDocumentMouseUp.bind(_this46);
            document.addEventListener('mouseup', _this46.documentMouseUpListener);
          });
        }
      }, {
        key: "unbindDocumentEvents",
        value: function unbindDocumentEvents() {
          if (this.documentMouseMoveListener) {
            document.removeEventListener('mousemove', this.documentMouseMoveListener);
            this.documentMouseMoveListener = null;
          }

          if (this.documentMouseUpListener) {
            document.removeEventListener('mouseup', this.documentMouseUpListener);
            this.documentMouseUpListener = null;
          }
        }
      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          this.tt.onColumnResizeBegin(event);
          this.bindDocumentEvents();
        }
      }, {
        key: "onDocumentMouseMove",
        value: function onDocumentMouseMove(event) {
          this.tt.onColumnResize(event);
        }
      }, {
        key: "onDocumentMouseUp",
        value: function onDocumentMouseUp(event) {
          this.tt.onColumnResizeEnd(event, this.el.nativeElement);
          this.unbindDocumentEvents();
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttResizableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.resizerMouseDownListener) {
            this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);
          }

          this.unbindDocumentEvents();
        }
      }]);

      return TTResizableColumn;
    }();

    TTResizableColumn.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTResizableColumn.prototype, "ttResizableColumnDisabled", void 0);

    TTResizableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttResizableColumn]'
    })], TTResizableColumn);

    var TTReorderableColumn = /*#__PURE__*/function () {
      function TTReorderableColumn(tt, el, zone) {
        _classCallCheck2(this, TTReorderableColumn);

        this.tt = tt;
        this.el = el;
        this.zone = zone;
      }

      _createClass2(TTReorderableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isEnabled()) {
            this.bindEvents();
          }
        }
      }, {
        key: "bindEvents",
        value: function bindEvents() {
          var _this47 = this;

          this.zone.runOutsideAngular(function () {
            _this47.mouseDownListener = _this47.onMouseDown.bind(_this47);

            _this47.el.nativeElement.addEventListener('mousedown', _this47.mouseDownListener);

            _this47.dragStartListener = _this47.onDragStart.bind(_this47);

            _this47.el.nativeElement.addEventListener('dragstart', _this47.dragStartListener);

            _this47.dragOverListener = _this47.onDragEnter.bind(_this47);

            _this47.el.nativeElement.addEventListener('dragover', _this47.dragOverListener);

            _this47.dragEnterListener = _this47.onDragEnter.bind(_this47);

            _this47.el.nativeElement.addEventListener('dragenter', _this47.dragEnterListener);

            _this47.dragLeaveListener = _this47.onDragLeave.bind(_this47);

            _this47.el.nativeElement.addEventListener('dragleave', _this47.dragLeaveListener);
          });
        }
      }, {
        key: "unbindEvents",
        value: function unbindEvents() {
          if (this.mouseDownListener) {
            document.removeEventListener('mousedown', this.mouseDownListener);
            this.mouseDownListener = null;
          }

          if (this.dragOverListener) {
            document.removeEventListener('dragover', this.dragOverListener);
            this.dragOverListener = null;
          }

          if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
          }

          if (this.dragEnterListener) {
            document.removeEventListener('dragenter', this.dragEnterListener);
            this.dragEnterListener = null;
          }

          if (this.dragLeaveListener) {
            document.removeEventListener('dragleave', this.dragLeaveListener);
            this.dragLeaveListener = null;
          }
        }
      }, {
        key: "onMouseDown",
        value: function onMouseDown(event) {
          if (event.target.nodeName === 'INPUT' || primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(event.target, 'ui-column-resizer')) this.el.nativeElement.draggable = false;else this.el.nativeElement.draggable = true;
        }
      }, {
        key: "onDragStart",
        value: function onDragStart(event) {
          this.tt.onColumnDragStart(event, this.el.nativeElement);
        }
      }, {
        key: "onDragOver",
        value: function onDragOver(event) {
          event.preventDefault();
        }
      }, {
        key: "onDragEnter",
        value: function onDragEnter(event) {
          this.tt.onColumnDragEnter(event, this.el.nativeElement);
        }
      }, {
        key: "onDragLeave",
        value: function onDragLeave(event) {
          this.tt.onColumnDragLeave(event);
        }
      }, {
        key: "onDrop",
        value: function onDrop(event) {
          if (this.isEnabled()) {
            this.tt.onColumnDrop(event, this.el.nativeElement);
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttReorderableColumnDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          this.unbindEvents();
        }
      }]);

      return TTReorderableColumn;
    }();

    TTReorderableColumn.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTReorderableColumn.prototype, "ttReorderableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('drop', ['$event'])], TTReorderableColumn.prototype, "onDrop", null);

    TTReorderableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttReorderableColumn]'
    })], TTReorderableColumn);

    var TTSelectableRow = /*#__PURE__*/function () {
      function TTSelectableRow(tt, tableService) {
        var _this48 = this;

        _classCallCheck2(this, TTSelectableRow);

        this.tt = tt;
        this.tableService = tableService;

        if (this.isEnabled()) {
          this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {
            _this48.selected = _this48.tt.isSelected(_this48.rowNode.node);
          });
        }
      }

      _createClass2(TTSelectableRow, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.selected = this.tt.isSelected(this.rowNode.node);
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.tt.handleRowClick({
              originalEvent: event,
              rowNode: this.rowNode
            });
          }
        }
      }, {
        key: "onEnterKey",
        value: function onEnterKey(event) {
          if (event.which === 13) {
            this.onClick(event);
          }
        }
      }, {
        key: "onTouchEnd",
        value: function onTouchEnd(event) {
          if (this.isEnabled()) {
            this.tt.handleRowTouchEnd(event);
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttSelectableRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTSelectableRow;
    }();

    TTSelectableRow.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TreeTableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttSelectableRow")], TTSelectableRow.prototype, "rowNode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSelectableRow.prototype, "ttSelectableRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], TTSelectableRow.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown', ['$event'])], TTSelectableRow.prototype, "onEnterKey", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('touchend', ['$event'])], TTSelectableRow.prototype, "onTouchEnd", null);

    TTSelectableRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttSelectableRow]',
      host: {
        '[class.ui-state-highlight]': 'selected'
      }
    })], TTSelectableRow);

    var TTSelectableRowDblClick = /*#__PURE__*/function () {
      function TTSelectableRowDblClick(tt, tableService) {
        var _this49 = this;

        _classCallCheck2(this, TTSelectableRowDblClick);

        this.tt = tt;
        this.tableService = tableService;

        if (this.isEnabled()) {
          this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {
            _this49.selected = _this49.tt.isSelected(_this49.rowNode.node);
          });
        }
      }

      _createClass2(TTSelectableRowDblClick, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          if (this.isEnabled()) {
            this.selected = this.tt.isSelected(this.rowNode.node);
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.tt.handleRowClick({
              originalEvent: event,
              rowNode: this.rowNode
            });
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttSelectableRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTSelectableRowDblClick;
    }();

    TTSelectableRowDblClick.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TreeTableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttSelectableRowDblClick")], TTSelectableRowDblClick.prototype, "rowNode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTSelectableRowDblClick.prototype, "ttSelectableRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('dblclick', ['$event'])], TTSelectableRowDblClick.prototype, "onClick", null);

    TTSelectableRowDblClick = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttSelectableRowDblClick]',
      host: {
        '[class.ui-state-highlight]': 'selected'
      }
    })], TTSelectableRowDblClick);

    var TTContextMenuRow = /*#__PURE__*/function () {
      function TTContextMenuRow(tt, tableService, el) {
        var _this50 = this;

        _classCallCheck2(this, TTContextMenuRow);

        this.tt = tt;
        this.tableService = tableService;
        this.el = el;

        if (this.isEnabled()) {
          this.subscription = this.tt.tableService.contextMenuSource$.subscribe(function (node) {
            _this50.selected = _this50.tt.equals(_this50.rowNode.node, node);
          });
        }
      }

      _createClass2(TTContextMenuRow, [{
        key: "onContextMenu",
        value: function onContextMenu(event) {
          if (this.isEnabled()) {
            this.tt.handleRowRightClick({
              originalEvent: event,
              rowNode: this.rowNode
            });
            this.el.nativeElement.focus();
            event.preventDefault();
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttContextMenuRowDisabled !== true;
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTContextMenuRow;
    }();

    TTContextMenuRow.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TreeTableService
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttContextMenuRow")], TTContextMenuRow.prototype, "rowNode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTContextMenuRow.prototype, "ttContextMenuRowDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('contextmenu', ['$event'])], TTContextMenuRow.prototype, "onContextMenu", null);

    TTContextMenuRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttContextMenuRow]',
      host: {
        '[class.ui-contextmenu-selected]': 'selected',
        '[attr.tabindex]': 'isEnabled() ? 0 : undefined'
      }
    })], TTContextMenuRow);

    var TTCheckbox = /*#__PURE__*/function () {
      function TTCheckbox(tt, tableService) {
        var _this51 = this;

        _classCallCheck2(this, TTCheckbox);

        this.tt = tt;
        this.tableService = tableService;
        this.subscription = this.tt.tableService.selectionSource$.subscribe(function () {
          _this51.checked = _this51.tt.isSelected(_this51.rowNode.node);
        });
      }

      _createClass2(TTCheckbox, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.checked = this.tt.isSelected(this.rowNode.node);
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (!this.disabled) {
            this.tt.toggleNodeWithCheckbox({
              originalEvent: event,
              rowNode: this.rowNode
            });
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].clearSelection();
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.subscription) {
            this.subscription.unsubscribe();
          }
        }
      }]);

      return TTCheckbox;
    }();

    TTCheckbox.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TreeTableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTCheckbox.prototype, "disabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("value")], TTCheckbox.prototype, "rowNode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('box')], TTCheckbox.prototype, "boxViewChild", void 0);

    TTCheckbox = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTableCheckbox',
      template: "\n        <div class=\"ui-chkbox ui-treetable-chkbox ui-widget\" (click)=\"onClick($event)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled':disabled}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable pi\" [ngClass]=\"{'pi-check':checked, 'pi-minus': rowNode.node.partialSelected}\"></span>\n            </div>\n        </div>\n    "
    })], TTCheckbox);

    var TTHeaderCheckbox = /*#__PURE__*/function () {
      function TTHeaderCheckbox(tt, tableService) {
        var _this52 = this;

        _classCallCheck2(this, TTHeaderCheckbox);

        this.tt = tt;
        this.tableService = tableService;
        this.valueChangeSubscription = this.tt.tableService.uiUpdateSource$.subscribe(function () {
          _this52.checked = _this52.updateCheckedState();
        });
        this.selectionChangeSubscription = this.tt.tableService.selectionSource$.subscribe(function () {
          _this52.checked = _this52.updateCheckedState();
        });
      }

      _createClass2(TTHeaderCheckbox, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.checked = this.updateCheckedState();
        }
      }, {
        key: "onClick",
        value: function onClick(event, checked) {
          if (this.tt.value && this.tt.value.length > 0) {
            this.tt.toggleNodesWithCheckbox(event, !checked);
          }

          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].clearSelection();
        }
      }, {
        key: "onFocus",
        value: function onFocus() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "onBlur",
        value: function onBlur() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.boxViewChild.nativeElement, 'ui-state-focus');
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          if (this.selectionChangeSubscription) {
            this.selectionChangeSubscription.unsubscribe();
          }

          if (this.valueChangeSubscription) {
            this.valueChangeSubscription.unsubscribe();
          }
        }
      }, {
        key: "updateCheckedState",
        value: function updateCheckedState() {
          var checked;
          var data = this.tt.filteredNodes || this.tt.value;

          if (data) {
            var _iterator16 = _createForOfIteratorHelper(data),
                _step16;

            try {
              for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
                var node = _step16.value;

                if (this.tt.isSelected(node)) {
                  checked = true;
                } else {
                  checked = false;
                  break;
                }
              }
            } catch (err) {
              _iterator16.e(err);
            } finally {
              _iterator16.f();
            }
          } else {
            checked = false;
          }

          return checked;
        }
      }]);

      return TTHeaderCheckbox;
    }();

    TTHeaderCheckbox.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TreeTableService
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('box')], TTHeaderCheckbox.prototype, "boxViewChild", void 0);

    TTHeaderCheckbox = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTableHeaderCheckbox',
      template: "\n        <div class=\"ui-chkbox ui-treetable-header-chkbox ui-widget\" (click)=\"onClick($event, cb.checked)\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [checked]=\"checked\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" [disabled]=\"!tt.value||tt.value.length === 0\">\n            </div>\n            <div #box [ngClass]=\"{'ui-chkbox-box ui-widget ui-state-default':true,\n                'ui-state-active':checked, 'ui-state-disabled': (!tt.value || tt.value.length === 0)}\"  role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"{'pi pi-check':checked}\"></span>\n            </div>\n        </div>\n    "
    })], TTHeaderCheckbox);

    var TTEditableColumn = /*#__PURE__*/function () {
      function TTEditableColumn(tt, el, zone) {
        _classCallCheck2(this, TTEditableColumn);

        this.tt = tt;
        this.el = el;
        this.zone = zone;
      }

      _createClass2(TTEditableColumn, [{
        key: "ngAfterViewInit",
        value: function ngAfterViewInit() {
          if (this.isEnabled()) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.el.nativeElement, 'ui-editable-column');
          }
        }
      }, {
        key: "onClick",
        value: function onClick(event) {
          if (this.isEnabled()) {
            this.tt.editingCellClick = true;

            if (this.tt.editingCell) {
              if (this.tt.editingCell !== this.el.nativeElement) {
                if (!this.tt.isEditingCellValid()) {
                  return;
                }

                primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.tt.editingCell, 'ui-editing-cell');
                this.openCell();
              }
            } else {
              this.openCell();
            }
          }
        }
      }, {
        key: "openCell",
        value: function openCell() {
          var _this53 = this;

          this.tt.updateEditingCell(this.el.nativeElement);
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].addClass(this.el.nativeElement, 'ui-editing-cell');
          this.tt.onEditInit.emit({
            field: this.field,
            data: this.data
          });
          this.zone.runOutsideAngular(function () {
            setTimeout(function () {
              var focusable = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_this53.el.nativeElement, 'input, textarea');

              if (focusable) {
                focusable.focus();
              }
            }, 50);
          });
        }
      }, {
        key: "closeEditingCell",
        value: function closeEditingCell() {
          primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.tt.editingCell, 'ui-editing-cell');
          this.tt.editingCell = null;
          this.tt.unbindDocumentEditListener();
        }
      }, {
        key: "onKeyDown",
        value: function onKeyDown(event) {
          if (this.isEnabled()) {
            //enter
            if (event.keyCode == 13) {
              if (this.tt.isEditingCellValid()) {
                primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.tt.editingCell, 'ui-editing-cell');
                this.closeEditingCell();
                this.tt.onEditComplete.emit({
                  field: this.field,
                  data: this.data
                });
              }

              event.preventDefault();
            } //escape
            else if (event.keyCode == 27) {
                if (this.tt.isEditingCellValid()) {
                  primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].removeClass(this.tt.editingCell, 'ui-editing-cell');
                  this.closeEditingCell();
                  this.tt.onEditCancel.emit({
                    field: this.field,
                    data: this.data
                  });
                }

                event.preventDefault();
              } //tab
              else if (event.keyCode == 9) {
                  this.tt.onEditComplete.emit({
                    field: this.field,
                    data: this.data
                  });
                  if (event.shiftKey) this.moveToPreviousCell(event);else this.moveToNextCell(event);
                }
          }
        }
      }, {
        key: "findCell",
        value: function findCell(element) {
          if (element) {
            var cell = element;

            while (cell && !primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(cell, 'ui-editing-cell')) {
              cell = cell.parentElement;
            }

            return cell;
          } else {
            return null;
          }
        }
      }, {
        key: "moveToPreviousCell",
        value: function moveToPreviousCell(event) {
          var currentCell = this.findCell(event.target);
          var row = currentCell.parentElement;
          var targetCell = this.findPreviousEditableColumn(currentCell);

          if (targetCell) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].invokeElementMethod(targetCell, 'click');
            event.preventDefault();
          }
        }
      }, {
        key: "moveToNextCell",
        value: function moveToNextCell(event) {
          var currentCell = this.findCell(event.target);
          var row = currentCell.parentElement;
          var targetCell = this.findNextEditableColumn(currentCell);

          if (targetCell) {
            primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].invokeElementMethod(targetCell, 'click');
            event.preventDefault();
          }
        }
      }, {
        key: "findPreviousEditableColumn",
        value: function findPreviousEditableColumn(cell) {
          var prevCell = cell.previousElementSibling;

          if (!prevCell) {
            var previousRow = cell.parentElement ? cell.parentElement.previousElementSibling : null;

            if (previousRow) {
              prevCell = previousRow.lastElementChild;
            }
          }

          if (prevCell) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(prevCell, 'ui-editable-column')) return prevCell;else return this.findPreviousEditableColumn(prevCell);
          } else {
            return null;
          }
        }
      }, {
        key: "findNextEditableColumn",
        value: function findNextEditableColumn(cell) {
          var nextCell = cell.nextElementSibling;

          if (!nextCell) {
            var nextRow = cell.parentElement ? cell.parentElement.nextElementSibling : null;

            if (nextRow) {
              nextCell = nextRow.firstElementChild;
            }
          }

          if (nextCell) {
            if (primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].hasClass(nextCell, 'ui-editable-column')) return nextCell;else return this.findNextEditableColumn(nextCell);
          } else {
            return null;
          }
        }
      }, {
        key: "isEnabled",
        value: function isEnabled() {
          return this.ttEditableColumnDisabled !== true;
        }
      }]);

      return TTEditableColumn;
    }();

    TTEditableColumn.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttEditableColumn")], TTEditableColumn.prototype, "data", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])("ttEditableColumnField")], TTEditableColumn.prototype, "field", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TTEditableColumn.prototype, "ttEditableColumnDisabled", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('click', ['$event'])], TTEditableColumn.prototype, "onClick", null);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown', ['$event'])], TTEditableColumn.prototype, "onKeyDown", null);

    TTEditableColumn = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttEditableColumn]'
    })], TTEditableColumn);

    var TreeTableCellEditor = /*#__PURE__*/function () {
      function TreeTableCellEditor(tt, editableColumn) {
        _classCallCheck2(this, TreeTableCellEditor);

        this.tt = tt;
        this.editableColumn = editableColumn;
      }

      _createClass2(TreeTableCellEditor, [{
        key: "ngAfterContentInit",
        value: function ngAfterContentInit() {
          var _this54 = this;

          this.templates.forEach(function (item) {
            switch (item.getType()) {
              case 'input':
                _this54.inputTemplate = item.template;
                break;

              case 'output':
                _this54.outputTemplate = item.template;
                break;
            }
          });
        }
      }]);

      return TreeTableCellEditor;
    }();

    TreeTableCellEditor.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: TTEditableColumn
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ContentChildren"])(primeng_api__WEBPACK_IMPORTED_MODULE_5__["PrimeTemplate"])], TreeTableCellEditor.prototype, "templates", void 0);

    TreeTableCellEditor = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTableCellEditor',
      template: "\n        <ng-container *ngIf=\"tt.editingCell === editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!tt.editingCell || tt.editingCell !== editableColumn.el.nativeElement\">\n            <ng-container *ngTemplateOutlet=\"outputTemplate\"></ng-container>\n        </ng-container>\n    "
    })], TreeTableCellEditor);

    var TTRow = /*#__PURE__*/function () {
      function TTRow(tt, el, zone) {
        _classCallCheck2(this, TTRow);

        this.tt = tt;
        this.el = el;
        this.zone = zone;
      }

      _createClass2(TTRow, [{
        key: "onKeyDown",
        value: function onKeyDown(event) {
          switch (event.which) {
            //down arrow
            case 40:
              var nextRow = this.el.nativeElement.nextElementSibling;

              if (nextRow) {
                nextRow.focus();
              }

              event.preventDefault();
              break;
            //down arrow

            case 38:
              var prevRow = this.el.nativeElement.previousElementSibling;

              if (prevRow) {
                prevRow.focus();
              }

              event.preventDefault();
              break;
            //left arrow

            case 37:
              if (this.rowNode.node.expanded) {
                this.tt.toggleRowIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].index(this.el.nativeElement);
                this.rowNode.node.expanded = false;
                this.tt.onNodeCollapse.emit({
                  originalEvent: event,
                  node: this.rowNode.node
                });
                this.tt.updateSerializedValue();
                this.tt.tableService.onUIUpdate(this.tt.value);
                this.restoreFocus();
              }

              break;
            //right arrow

            case 39:
              if (!this.rowNode.node.expanded) {
                this.tt.toggleRowIndex = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].index(this.el.nativeElement);
                this.rowNode.node.expanded = true;
                this.tt.onNodeExpand.emit({
                  originalEvent: event,
                  node: this.rowNode.node
                });
                this.tt.updateSerializedValue();
                this.tt.tableService.onUIUpdate(this.tt.value);
                this.restoreFocus();
              }

              break;
          }
        }
      }, {
        key: "restoreFocus",
        value: function restoreFocus() {
          var _this55 = this;

          this.zone.runOutsideAngular(function () {
            setTimeout(function () {
              var row = primeng_dom__WEBPACK_IMPORTED_MODULE_3__["DomHandler"].findSingle(_this55.tt.containerViewChild.nativeElement, '.ui-treetable-tbody').children[_this55.tt.toggleRowIndex];

              if (row) {
                row.focus();
              }
            }, 25);
          });
        }
      }]);

      return TTRow;
    }();

    TTRow.ctorParameters = function () {
      return [{
        type: TreeTable
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])('ttRow')], TTRow.prototype, "rowNode", void 0);

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown', ['$event'])], TTRow.prototype, "onKeyDown", null);

    TTRow = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
      selector: '[ttRow]',
      host: {
        '[attr.tabindex]': '"0"'
      }
    })], TTRow);

    var TreeTableToggler = /*#__PURE__*/function () {
      function TreeTableToggler(tt) {
        _classCallCheck2(this, TreeTableToggler);

        this.tt = tt;
      }

      _createClass2(TreeTableToggler, [{
        key: "onClick",
        value: function onClick(event) {
          this.rowNode.node.expanded = !this.rowNode.node.expanded;

          if (this.rowNode.node.expanded) {
            this.tt.onNodeExpand.emit({
              originalEvent: event,
              node: this.rowNode.node
            });
          } else {
            this.tt.onNodeCollapse.emit({
              originalEvent: event,
              node: this.rowNode.node
            });
          }

          this.tt.updateSerializedValue();
          this.tt.tableService.onUIUpdate(this.tt.value);
          event.preventDefault();
        }
      }]);

      return TreeTableToggler;
    }();

    TreeTableToggler.ctorParameters = function () {
      return [{
        type: TreeTable
      }];
    };

    __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])()], TreeTableToggler.prototype, "rowNode", void 0);

    TreeTableToggler = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
      selector: 'p-treeTableToggler',
      template: "\n        <a class=\"ui-treetable-toggler ui-unselectable-text\" (click)=\"onClick($event)\"\n            [style.visibility]=\"rowNode.node.leaf === false || (rowNode.node.children && rowNode.node.children.length) ? 'visible' : 'hidden'\" [style.marginLeft]=\"rowNode.level * 16 + 'px'\">\n            <i [ngClass]=\"rowNode.node.expanded ? 'pi pi-fw pi-chevron-down' : 'pi pi-fw pi-chevron-right'\"></i>\n        </a>\n    "
    })], TreeTableToggler);

    var TreeTableModule = function TreeTableModule() {
      _classCallCheck2(this, TreeTableModule);
    };

    TreeTableModule = __decorate([Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_paginator__WEBPACK_IMPORTED_MODULE_4__["PaginatorModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__["ScrollingModule"]],
      exports: [TreeTable, primeng_api__WEBPACK_IMPORTED_MODULE_5__["SharedModule"], TreeTableToggler, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_7__["ScrollingModule"]],
      declarations: [TreeTable, TreeTableToggler, TTScrollableView, TTBody, TTSortableColumn, TTSortIcon, TTResizableColumn, TTRow, TTReorderableColumn, TTSelectableRow, TTSelectableRowDblClick, TTContextMenuRow, TTCheckbox, TTHeaderCheckbox, TTEditableColumn, TreeTableCellEditor]
    })], TreeTableModule);
    /**
     * Generated bundle index. Do not edit.
     */
    //# sourceMappingURL=primeng-treetable.js.map

    /***/
  },

  /***/
  "./node_modules/quill/dist/quill.js":
  /*!******************************************!*\
    !*** ./node_modules/quill/dist/quill.js ***!
    \******************************************/

  /*! no static exports found */

  /***/
  function node_modulesQuillDistQuillJs(module, exports, __webpack_require__) {
    /*!
     * Quill Editor v1.3.7
     * https://quilljs.com/
     * Copyright (c) 2014, Jason Chen
     * Copyright (c) 2013, salesforce.com
     */
    (function webpackUniversalModuleDefinition(root, factory) {
      if (true) module.exports = factory();else {}
    })(typeof self !== 'undefined' ? self : this, function () {
      return (
        /******/
        function (modules) {
          // webpackBootstrap

          /******/
          // The module cache

          /******/
          var installedModules = {};
          /******/

          /******/
          // The require function

          /******/

          function __webpack_require__(moduleId) {
            /******/

            /******/
            // Check if module is in cache

            /******/
            if (installedModules[moduleId]) {
              /******/
              return installedModules[moduleId].exports;
              /******/
            }
            /******/
            // Create a new module (and put it into the cache)

            /******/


            var module = installedModules[moduleId] = {
              /******/
              i: moduleId,

              /******/
              l: false,

              /******/
              exports: {}
              /******/

            };
            /******/

            /******/
            // Execute the module function

            /******/

            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/

            /******/
            // Flag the module as loaded

            /******/

            module.l = true;
            /******/

            /******/
            // Return the exports of the module

            /******/

            return module.exports;
            /******/
          }
          /******/

          /******/

          /******/
          // expose the modules object (__webpack_modules__)

          /******/


          __webpack_require__.m = modules;
          /******/

          /******/
          // expose the module cache

          /******/

          __webpack_require__.c = installedModules;
          /******/

          /******/
          // define getter function for harmony exports

          /******/

          __webpack_require__.d = function (exports, name, getter) {
            /******/
            if (!__webpack_require__.o(exports, name)) {
              /******/
              Object.defineProperty(exports, name, {
                /******/
                configurable: false,

                /******/
                enumerable: true,

                /******/
                get: getter
                /******/

              });
              /******/
            }
            /******/

          };
          /******/

          /******/
          // getDefaultExport function for compatibility with non-harmony modules

          /******/


          __webpack_require__.n = function (module) {
            /******/
            var getter = module && module.__esModule ?
            /******/
            function getDefault() {
              return module['default'];
            } :
            /******/
            function getModuleExports() {
              return module;
            };
            /******/

            __webpack_require__.d(getter, 'a', getter);
            /******/


            return getter;
            /******/
          };
          /******/

          /******/
          // Object.prototype.hasOwnProperty.call

          /******/


          __webpack_require__.o = function (object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          /******/

          /******/
          // __webpack_public_path__

          /******/


          __webpack_require__.p = "";
          /******/

          /******/
          // Load entry module and return exports

          /******/

          return __webpack_require__(__webpack_require__.s = 109);
          /******/
        }(
        /************************************************************************/

        /******/
        [
        /* 0 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var container_1 = __webpack_require__(17);

          var format_1 = __webpack_require__(18);

          var leaf_1 = __webpack_require__(19);

          var scroll_1 = __webpack_require__(45);

          var inline_1 = __webpack_require__(46);

          var block_1 = __webpack_require__(47);

          var embed_1 = __webpack_require__(48);

          var text_1 = __webpack_require__(49);

          var attributor_1 = __webpack_require__(12);

          var class_1 = __webpack_require__(32);

          var style_1 = __webpack_require__(33);

          var store_1 = __webpack_require__(31);

          var Registry = __webpack_require__(1);

          var Parchment = {
            Scope: Registry.Scope,
            create: Registry.create,
            find: Registry.find,
            query: Registry.query,
            register: Registry.register,
            Container: container_1["default"],
            Format: format_1["default"],
            Leaf: leaf_1["default"],
            Embed: embed_1["default"],
            Scroll: scroll_1["default"],
            Block: block_1["default"],
            Inline: inline_1["default"],
            Text: text_1["default"],
            Attributor: {
              Attribute: attributor_1["default"],
              Class: class_1["default"],
              Style: style_1["default"],
              Store: store_1["default"]
            }
          };
          exports["default"] = Parchment;
          /***/
        },
        /* 1 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var ParchmentError =
          /** @class */
          function (_super) {
            __extends(ParchmentError, _super);

            function ParchmentError(message) {
              var _this = this;

              message = '[Parchment] ' + message;
              _this = _super.call(this, message) || this;
              _this.message = message;
              _this.name = _this.constructor.name;
              return _this;
            }

            return ParchmentError;
          }(Error);

          exports.ParchmentError = ParchmentError;
          var attributes = {};
          var classes = {};
          var tags = {};
          var types = {};
          exports.DATA_KEY = '__blot';
          var Scope;

          (function (Scope) {
            Scope[Scope["TYPE"] = 3] = "TYPE";
            Scope[Scope["LEVEL"] = 12] = "LEVEL";
            Scope[Scope["ATTRIBUTE"] = 13] = "ATTRIBUTE";
            Scope[Scope["BLOT"] = 14] = "BLOT";
            Scope[Scope["INLINE"] = 7] = "INLINE";
            Scope[Scope["BLOCK"] = 11] = "BLOCK";
            Scope[Scope["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
            Scope[Scope["INLINE_BLOT"] = 6] = "INLINE_BLOT";
            Scope[Scope["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
            Scope[Scope["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
            Scope[Scope["ANY"] = 15] = "ANY";
          })(Scope = exports.Scope || (exports.Scope = {}));

          function create(input, value) {
            var match = query(input);

            if (match == null) {
              throw new ParchmentError("Unable to create " + input + " blot");
            }

            var BlotClass = match;
            var node = // @ts-ignore
            input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);
            return new BlotClass(node, value);
          }

          exports.create = create;

          function find(node, bubble) {
            if (bubble === void 0) {
              bubble = false;
            }

            if (node == null) return null; // @ts-ignore

            if (node[exports.DATA_KEY] != null) return node[exports.DATA_KEY].blot;
            if (bubble) return find(node.parentNode, bubble);
            return null;
          }

          exports.find = find;

          function query(query, scope) {
            if (scope === void 0) {
              scope = Scope.ANY;
            }

            var match;

            if (typeof query === 'string') {
              match = types[query] || attributes[query]; // @ts-ignore
            } else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {
              match = types['text'];
            } else if (typeof query === 'number') {
              if (query & Scope.LEVEL & Scope.BLOCK) {
                match = types['block'];
              } else if (query & Scope.LEVEL & Scope.INLINE) {
                match = types['inline'];
              }
            } else if (query instanceof HTMLElement) {
              var names = (query.getAttribute('class') || '').split(/\s+/);

              for (var i in names) {
                match = classes[names[i]];
                if (match) break;
              }

              match = match || tags[query.tagName];
            }

            if (match == null) return null; // @ts-ignore

            if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope) return match;
            return null;
          }

          exports.query = query;

          function register() {
            var Definitions = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              Definitions[_i] = arguments[_i];
            }

            if (Definitions.length > 1) {
              return Definitions.map(function (d) {
                return register(d);
              });
            }

            var Definition = Definitions[0];

            if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {
              throw new ParchmentError('Invalid definition');
            } else if (Definition.blotName === 'abstract') {
              throw new ParchmentError('Cannot register abstract class');
            }

            types[Definition.blotName || Definition.attrName] = Definition;

            if (typeof Definition.keyName === 'string') {
              attributes[Definition.keyName] = Definition;
            } else {
              if (Definition.className != null) {
                classes[Definition.className] = Definition;
              }

              if (Definition.tagName != null) {
                if (Array.isArray(Definition.tagName)) {
                  Definition.tagName = Definition.tagName.map(function (tagName) {
                    return tagName.toUpperCase();
                  });
                } else {
                  Definition.tagName = Definition.tagName.toUpperCase();
                }

                var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
                tagNames.forEach(function (tag) {
                  if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                  }
                });
              }
            }

            return Definition;
          }

          exports.register = register;
          /***/
        },
        /* 2 */

        /***/
        function (module, exports, __webpack_require__) {
          var diff = __webpack_require__(51);

          var equal = __webpack_require__(11);

          var extend = __webpack_require__(3);

          var op = __webpack_require__(20);

          var NULL_CHARACTER = String.fromCharCode(0); // Placeholder char for embed in diff()

          var Delta = function Delta(ops) {
            // Assume we are given a well formed ops
            if (Array.isArray(ops)) {
              this.ops = ops;
            } else if (ops != null && Array.isArray(ops.ops)) {
              this.ops = ops.ops;
            } else {
              this.ops = [];
            }
          };

          Delta.prototype.insert = function (text, attributes) {
            var newOp = {};
            if (text.length === 0) return this;
            newOp.insert = text;

            if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
              newOp.attributes = attributes;
            }

            return this.push(newOp);
          };

          Delta.prototype['delete'] = function (length) {
            if (length <= 0) return this;
            return this.push({
              'delete': length
            });
          };

          Delta.prototype.retain = function (length, attributes) {
            if (length <= 0) return this;
            var newOp = {
              retain: length
            };

            if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
              newOp.attributes = attributes;
            }

            return this.push(newOp);
          };

          Delta.prototype.push = function (newOp) {
            var index = this.ops.length;
            var lastOp = this.ops[index - 1];
            newOp = extend(true, {}, newOp);

            if (typeof lastOp === 'object') {
              if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {
                this.ops[index - 1] = {
                  'delete': lastOp['delete'] + newOp['delete']
                };
                return this;
              } // Since it does not matter if we insert before or after deleting at the same index,
              // always prefer to insert first


              if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {
                index -= 1;
                lastOp = this.ops[index - 1];

                if (typeof lastOp !== 'object') {
                  this.ops.unshift(newOp);
                  return this;
                }
              }

              if (equal(newOp.attributes, lastOp.attributes)) {
                if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {
                  this.ops[index - 1] = {
                    insert: lastOp.insert + newOp.insert
                  };
                  if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes;
                  return this;
                } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {
                  this.ops[index - 1] = {
                    retain: lastOp.retain + newOp.retain
                  };
                  if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes;
                  return this;
                }
              }
            }

            if (index === this.ops.length) {
              this.ops.push(newOp);
            } else {
              this.ops.splice(index, 0, newOp);
            }

            return this;
          };

          Delta.prototype.chop = function () {
            var lastOp = this.ops[this.ops.length - 1];

            if (lastOp && lastOp.retain && !lastOp.attributes) {
              this.ops.pop();
            }

            return this;
          };

          Delta.prototype.filter = function (predicate) {
            return this.ops.filter(predicate);
          };

          Delta.prototype.forEach = function (predicate) {
            this.ops.forEach(predicate);
          };

          Delta.prototype.map = function (predicate) {
            return this.ops.map(predicate);
          };

          Delta.prototype.partition = function (predicate) {
            var passed = [],
                failed = [];
            this.forEach(function (op) {
              var target = predicate(op) ? passed : failed;
              target.push(op);
            });
            return [passed, failed];
          };

          Delta.prototype.reduce = function (predicate, initial) {
            return this.ops.reduce(predicate, initial);
          };

          Delta.prototype.changeLength = function () {
            return this.reduce(function (length, elem) {
              if (elem.insert) {
                return length + op.length(elem);
              } else if (elem["delete"]) {
                return length - elem["delete"];
              }

              return length;
            }, 0);
          };

          Delta.prototype.length = function () {
            return this.reduce(function (length, elem) {
              return length + op.length(elem);
            }, 0);
          };

          Delta.prototype.slice = function (start, end) {
            start = start || 0;
            if (typeof end !== 'number') end = Infinity;
            var ops = [];
            var iter = op.iterator(this.ops);
            var index = 0;

            while (index < end && iter.hasNext()) {
              var nextOp;

              if (index < start) {
                nextOp = iter.next(start - index);
              } else {
                nextOp = iter.next(end - index);
                ops.push(nextOp);
              }

              index += op.length(nextOp);
            }

            return new Delta(ops);
          };

          Delta.prototype.compose = function (other) {
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var ops = [];
            var firstOther = otherIter.peek();

            if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {
              var firstLeft = firstOther.retain;

              while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {
                firstLeft -= thisIter.peekLength();
                ops.push(thisIter.next());
              }

              if (firstOther.retain - firstLeft > 0) {
                otherIter.next(firstOther.retain - firstLeft);
              }
            }

            var delta = new Delta(ops);

            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (otherIter.peekType() === 'insert') {
                delta.push(otherIter.next());
              } else if (thisIter.peekType() === 'delete') {
                delta.push(thisIter.next());
              } else {
                var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);

                if (typeof otherOp.retain === 'number') {
                  var newOp = {};

                  if (typeof thisOp.retain === 'number') {
                    newOp.retain = length;
                  } else {
                    newOp.insert = thisOp.insert;
                  } // Preserve null when composing with a retain, otherwise remove it for inserts


                  var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');
                  if (attributes) newOp.attributes = attributes;
                  delta.push(newOp); // Optimization if rest of other is just retain

                  if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
                    var rest = new Delta(thisIter.rest());
                    return delta.concat(rest).chop();
                  } // Other op should be delete, we could be an insert or retain
                  // Insert + delete cancels out

                } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {
                  delta.push(otherOp);
                }
              }
            }

            return delta.chop();
          };

          Delta.prototype.concat = function (other) {
            var delta = new Delta(this.ops.slice());

            if (other.ops.length > 0) {
              delta.push(other.ops[0]);
              delta.ops = delta.ops.concat(other.ops.slice(1));
            }

            return delta;
          };

          Delta.prototype.diff = function (other, index) {
            if (this.ops === other.ops) {
              return new Delta();
            }

            var strings = [this, other].map(function (delta) {
              return delta.map(function (op) {
                if (op.insert != null) {
                  return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;
                }

                var prep = delta === other ? 'on' : 'with';
                throw new Error('diff() called ' + prep + ' non-document');
              }).join('');
            });
            var delta = new Delta();
            var diffResult = diff(strings[0], strings[1], index);
            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            diffResult.forEach(function (component) {
              var length = component[1].length;

              while (length > 0) {
                var opLength = 0;

                switch (component[0]) {
                  case diff.INSERT:
                    opLength = Math.min(otherIter.peekLength(), length);
                    delta.push(otherIter.next(opLength));
                    break;

                  case diff.DELETE:
                    opLength = Math.min(length, thisIter.peekLength());
                    thisIter.next(opLength);
                    delta['delete'](opLength);
                    break;

                  case diff.EQUAL:
                    opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
                    var thisOp = thisIter.next(opLength);
                    var otherOp = otherIter.next(opLength);

                    if (equal(thisOp.insert, otherOp.insert)) {
                      delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
                    } else {
                      delta.push(otherOp)['delete'](opLength);
                    }

                    break;
                }

                length -= opLength;
              }
            });
            return delta.chop();
          };

          Delta.prototype.eachLine = function (predicate, newline) {
            newline = newline || '\n';
            var iter = op.iterator(this.ops);
            var line = new Delta();
            var i = 0;

            while (iter.hasNext()) {
              if (iter.peekType() !== 'insert') return;
              var thisOp = iter.peek();
              var start = op.length(thisOp) - iter.peekLength();
              var index = typeof thisOp.insert === 'string' ? thisOp.insert.indexOf(newline, start) - start : -1;

              if (index < 0) {
                line.push(iter.next());
              } else if (index > 0) {
                line.push(iter.next(index));
              } else {
                if (predicate(line, iter.next(1).attributes || {}, i) === false) {
                  return;
                }

                i += 1;
                line = new Delta();
              }
            }

            if (line.length() > 0) {
              predicate(line, {}, i);
            }
          };

          Delta.prototype.transform = function (other, priority) {
            priority = !!priority;

            if (typeof other === 'number') {
              return this.transformPosition(other, priority);
            }

            var thisIter = op.iterator(this.ops);
            var otherIter = op.iterator(other.ops);
            var delta = new Delta();

            while (thisIter.hasNext() || otherIter.hasNext()) {
              if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {
                delta.retain(op.length(thisIter.next()));
              } else if (otherIter.peekType() === 'insert') {
                delta.push(otherIter.next());
              } else {
                var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
                var thisOp = thisIter.next(length);
                var otherOp = otherIter.next(length);

                if (thisOp['delete']) {
                  // Our delete either makes their delete redundant or removes their retain
                  continue;
                } else if (otherOp['delete']) {
                  delta.push(otherOp);
                } else {
                  // We retain either their retain or insert
                  delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
                }
              }
            }

            return delta.chop();
          };

          Delta.prototype.transformPosition = function (index, priority) {
            priority = !!priority;
            var thisIter = op.iterator(this.ops);
            var offset = 0;

            while (thisIter.hasNext() && offset <= index) {
              var length = thisIter.peekLength();
              var nextType = thisIter.peekType();
              thisIter.next();

              if (nextType === 'delete') {
                index -= Math.min(length, index - offset);
                continue;
              } else if (nextType === 'insert' && (offset < index || !priority)) {
                index += length;
              }

              offset += length;
            }

            return index;
          };

          module.exports = Delta;
          /***/
        },
        /* 3 */

        /***/
        function (module, exports) {
          'use strict';

          var hasOwn = Object.prototype.hasOwnProperty;
          var toStr = Object.prototype.toString;
          var defineProperty = Object.defineProperty;
          var gOPD = Object.getOwnPropertyDescriptor;

          var isArray = function isArray(arr) {
            if (typeof Array.isArray === 'function') {
              return Array.isArray(arr);
            }

            return toStr.call(arr) === '[object Array]';
          };

          var isPlainObject = function isPlainObject(obj) {
            if (!obj || toStr.call(obj) !== '[object Object]') {
              return false;
            }

            var hasOwnConstructor = hasOwn.call(obj, 'constructor');
            var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf'); // Not own constructor property must be Object

            if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
              return false;
            } // Own properties are enumerated firstly, so to speed up,
            // if last one is own, then all properties are own.


            var key;

            for (key in obj) {
              /**/
            }

            return typeof key === 'undefined' || hasOwn.call(obj, key);
          }; // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target


          var setProperty = function setProperty(target, options) {
            if (defineProperty && options.name === '__proto__') {
              defineProperty(target, options.name, {
                enumerable: true,
                configurable: true,
                value: options.newValue,
                writable: true
              });
            } else {
              target[options.name] = options.newValue;
            }
          }; // Return undefined instead of __proto__ if '__proto__' is not an own property


          var getProperty = function getProperty(obj, name) {
            if (name === '__proto__') {
              if (!hasOwn.call(obj, name)) {
                return void 0;
              } else if (gOPD) {
                // In early versions of node, obj['__proto__'] is buggy when obj has
                // __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
                return gOPD(obj, name).value;
              }
            }

            return obj[name];
          };

          module.exports = function extend() {
            var options, name, src, copy, copyIsArray, clone;
            var target = arguments[0];
            var i = 1;
            var length = arguments.length;
            var deep = false; // Handle a deep copy situation

            if (typeof target === 'boolean') {
              deep = target;
              target = arguments[1] || {}; // skip the boolean and the target

              i = 2;
            }

            if (target == null || typeof target !== 'object' && typeof target !== 'function') {
              target = {};
            }

            for (; i < length; ++i) {
              options = arguments[i]; // Only deal with non-null/undefined values

              if (options != null) {
                // Extend the base object
                for (name in options) {
                  src = getProperty(target, name);
                  copy = getProperty(options, name); // Prevent never-ending loop

                  if (target !== copy) {
                    // Recurse if we're merging plain objects or arrays
                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
                      if (copyIsArray) {
                        copyIsArray = false;
                        clone = src && isArray(src) ? src : [];
                      } else {
                        clone = src && isPlainObject(src) ? src : {};
                      } // Never move original objects, clone them


                      setProperty(target, {
                        name: name,
                        newValue: extend(deep, clone, copy)
                      }); // Don't bring in undefined values
                    } else if (typeof copy !== 'undefined') {
                      setProperty(target, {
                        name: name,
                        newValue: copy
                      });
                    }
                  }
                }
              }
            } // Return the modified object


            return target;
          };
          /***/

        },
        /* 4 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.BlockEmbed = exports.bubbleFormats = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _break = __webpack_require__(16);

          var _break2 = _interopRequireDefault(_break);

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var NEWLINE_LENGTH = 1;

          var BlockEmbed = function (_Parchment$Embed) {
            _inherits(BlockEmbed, _Parchment$Embed);

            function BlockEmbed() {
              _classCallCheck(this, BlockEmbed);

              return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));
            }

            _createClass(BlockEmbed, [{
              key: 'attach',
              value: function attach() {
                _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'attach', this).call(this);

                this.attributes = new _parchment2["default"].Attributor.Store(this.domNode);
              }
            }, {
              key: 'delta',
              value: function delta() {
                return new _quillDelta2["default"]().insert(this.value(), (0, _extend2["default"])(this.formats(), this.attributes.values()));
              }
            }, {
              key: 'format',
              value: function format(name, value) {
                var attribute = _parchment2["default"].query(name, _parchment2["default"].Scope.BLOCK_ATTRIBUTE);

                if (attribute != null) {
                  this.attributes.attribute(attribute, value);
                }
              }
            }, {
              key: 'formatAt',
              value: function formatAt(index, length, name, value) {
                this.format(name, value);
              }
            }, {
              key: 'insertAt',
              value: function insertAt(index, value, def) {
                if (typeof value === 'string' && value.endsWith('\n')) {
                  var block = _parchment2["default"].create(Block.blotName);

                  this.parent.insertBefore(block, index === 0 ? this : this.next);
                  block.insertAt(0, value.slice(0, -1));
                } else {
                  _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'insertAt', this).call(this, index, value, def);
                }
              }
            }]);

            return BlockEmbed;
          }(_parchment2["default"].Embed);

          BlockEmbed.scope = _parchment2["default"].Scope.BLOCK_BLOT; // It is important for cursor behavior BlockEmbeds use tags that are block level elements

          var Block = function (_Parchment$Block) {
            _inherits(Block, _Parchment$Block);

            function Block(domNode) {
              _classCallCheck(this, Block);

              var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));

              _this2.cache = {};
              return _this2;
            }

            _createClass(Block, [{
              key: 'delta',
              value: function delta() {
                if (this.cache.delta == null) {
                  this.cache.delta = this.descendants(_parchment2["default"].Leaf).reduce(function (delta, leaf) {
                    if (leaf.length() === 0) {
                      return delta;
                    } else {
                      return delta.insert(leaf.value(), bubbleFormats(leaf));
                    }
                  }, new _quillDelta2["default"]()).insert('\n', bubbleFormats(this));
                }

                return this.cache.delta;
              }
            }, {
              key: 'deleteAt',
              value: function deleteAt(index, length) {
                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'deleteAt', this).call(this, index, length);

                this.cache = {};
              }
            }, {
              key: 'formatAt',
              value: function formatAt(index, length, name, value) {
                if (length <= 0) return;

                if (_parchment2["default"].query(name, _parchment2["default"].Scope.BLOCK)) {
                  if (index + length === this.length()) {
                    this.format(name, value);
                  }
                } else {
                  _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'formatAt', this).call(this, index, Math.min(length, this.length() - index - 1), name, value);
                }

                this.cache = {};
              }
            }, {
              key: 'insertAt',
              value: function insertAt(index, value, def) {
                if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, index, value, def);
                if (value.length === 0) return;
                var lines = value.split('\n');
                var text = lines.shift();

                if (text.length > 0) {
                  if (index < this.length() - 1 || this.children.tail == null) {
                    _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, Math.min(index, this.length() - 1), text);
                  } else {
                    this.children.tail.insertAt(this.children.tail.length(), text);
                  }

                  this.cache = {};
                }

                var block = this;
                lines.reduce(function (index, line) {
                  block = block.split(index, true);
                  block.insertAt(0, line);
                  return line.length;
                }, index + text.length);
              }
            }, {
              key: 'insertBefore',
              value: function insertBefore(blot, ref) {
                var head = this.children.head;

                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertBefore', this).call(this, blot, ref);

                if (head instanceof _break2["default"]) {
                  head.remove();
                }

                this.cache = {};
              }
            }, {
              key: 'length',
              value: function length() {
                if (this.cache.length == null) {
                  this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'length', this).call(this) + NEWLINE_LENGTH;
                }

                return this.cache.length;
              }
            }, {
              key: 'moveChildren',
              value: function moveChildren(target, ref) {
                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'moveChildren', this).call(this, target, ref);

                this.cache = {};
              }
            }, {
              key: 'optimize',
              value: function optimize(context) {
                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'optimize', this).call(this, context);

                this.cache = {};
              }
            }, {
              key: 'path',
              value: function path(index) {
                return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'path', this).call(this, index, true);
              }
            }, {
              key: 'removeChild',
              value: function removeChild(child) {
                _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'removeChild', this).call(this, child);

                this.cache = {};
              }
            }, {
              key: 'split',
              value: function split(index) {
                var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
                  var clone = this.clone();

                  if (index === 0) {
                    this.parent.insertBefore(clone, this);
                    return this;
                  } else {
                    this.parent.insertBefore(clone, this.next);
                    return clone;
                  }
                } else {
                  var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'split', this).call(this, index, force);

                  this.cache = {};
                  return next;
                }
              }
            }]);

            return Block;
          }(_parchment2["default"].Block);

          Block.blotName = 'block';
          Block.tagName = 'P';
          Block.defaultChild = 'break';
          Block.allowedChildren = [_inline2["default"], _parchment2["default"].Embed, _text2["default"]];

          function bubbleFormats(blot) {
            var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
            if (blot == null) return formats;

            if (typeof blot.formats === 'function') {
              formats = (0, _extend2["default"])(formats, blot.formats());
            }

            if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {
              return formats;
            }

            return bubbleFormats(blot.parent, formats);
          }

          exports.bubbleFormats = bubbleFormats;
          exports.BlockEmbed = BlockEmbed;
          exports["default"] = Block;
          /***/
        },
        /* 5 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.overload = exports.expandConfig = undefined;

          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
          } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          __webpack_require__(50);

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _editor = __webpack_require__(14);

          var _editor2 = _interopRequireDefault(_editor);

          var _emitter3 = __webpack_require__(8);

          var _emitter4 = _interopRequireDefault(_emitter3);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _selection = __webpack_require__(15);

          var _selection2 = _interopRequireDefault(_selection);

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          var _theme = __webpack_require__(34);

          var _theme2 = _interopRequireDefault(_theme);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var debug = (0, _logger2["default"])('quill');

          var Quill = function () {
            _createClass(Quill, null, [{
              key: 'debug',
              value: function debug(limit) {
                if (limit === true) {
                  limit = 'log';
                }

                _logger2["default"].level(limit);
              }
            }, {
              key: 'find',
              value: function find(node) {
                return node.__quill || _parchment2["default"].find(node);
              }
            }, {
              key: 'import',
              value: function _import(name) {
                if (this.imports[name] == null) {
                  debug.error('Cannot import ' + name + '. Are you sure it was registered?');
                }

                return this.imports[name];
              }
            }, {
              key: 'register',
              value: function register(path, target) {
                var _this = this;

                var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

                if (typeof path !== 'string') {
                  var name = path.attrName || path.blotName;

                  if (typeof name === 'string') {
                    // register(Blot | Attributor, overwrite)
                    this.register('formats/' + name, path, target);
                  } else {
                    Object.keys(path).forEach(function (key) {
                      _this.register(key, path[key], target);
                    });
                  }
                } else {
                  if (this.imports[path] != null && !overwrite) {
                    debug.warn('Overwriting ' + path + ' with', target);
                  }

                  this.imports[path] = target;

                  if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {
                    _parchment2["default"].register(target);
                  } else if (path.startsWith('modules') && typeof target.register === 'function') {
                    target.register();
                  }
                }
              }
            }]);

            function Quill(container) {
              var _this2 = this;

              var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

              _classCallCheck(this, Quill);

              this.options = expandConfig(container, options);
              this.container = this.options.container;

              if (this.container == null) {
                return debug.error('Invalid Quill container', container);
              }

              if (this.options.debug) {
                Quill.debug(this.options.debug);
              }

              var html = this.container.innerHTML.trim();
              this.container.classList.add('ql-container');
              this.container.innerHTML = '';
              this.container.__quill = this;
              this.root = this.addContainer('ql-editor');
              this.root.classList.add('ql-blank');
              this.root.setAttribute('data-gramm', false);
              this.scrollingContainer = this.options.scrollingContainer || this.root;
              this.emitter = new _emitter4["default"]();
              this.scroll = _parchment2["default"].create(this.root, {
                emitter: this.emitter,
                whitelist: this.options.formats
              });
              this.editor = new _editor2["default"](this.scroll);
              this.selection = new _selection2["default"](this.scroll, this.emitter);
              this.theme = new this.options.theme(this, this.options);
              this.keyboard = this.theme.addModule('keyboard');
              this.clipboard = this.theme.addModule('clipboard');
              this.history = this.theme.addModule('history');
              this.theme.init();
              this.emitter.on(_emitter4["default"].events.EDITOR_CHANGE, function (type) {
                if (type === _emitter4["default"].events.TEXT_CHANGE) {
                  _this2.root.classList.toggle('ql-blank', _this2.editor.isBlank());
                }
              });
              this.emitter.on(_emitter4["default"].events.SCROLL_UPDATE, function (source, mutations) {
                var range = _this2.selection.lastRange;
                var index = range && range.length === 0 ? range.index : undefined;
                modify.call(_this2, function () {
                  return _this2.editor.update(null, mutations, index);
                }, source);
              });
              var contents = this.clipboard.convert('<div class=\'ql-editor\' style="white-space: normal;">' + html + '<p><br></p></div>');
              this.setContents(contents);
              this.history.clear();

              if (this.options.placeholder) {
                this.root.setAttribute('data-placeholder', this.options.placeholder);
              }

              if (this.options.readOnly) {
                this.disable();
              }
            }

            _createClass(Quill, [{
              key: 'addContainer',
              value: function addContainer(container) {
                var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

                if (typeof container === 'string') {
                  var className = container;
                  container = document.createElement('div');
                  container.classList.add(className);
                }

                this.container.insertBefore(container, refNode);
                return container;
              }
            }, {
              key: 'blur',
              value: function blur() {
                this.selection.setRange(null);
              }
            }, {
              key: 'deleteText',
              value: function deleteText(index, length, source) {
                var _this3 = this;

                var _overload = overload(index, length, source);

                var _overload2 = _slicedToArray(_overload, 4);

                index = _overload2[0];
                length = _overload2[1];
                source = _overload2[3];
                return modify.call(this, function () {
                  return _this3.editor.deleteText(index, length);
                }, source, index, -1 * length);
              }
            }, {
              key: 'disable',
              value: function disable() {
                this.enable(false);
              }
            }, {
              key: 'enable',
              value: function enable() {
                var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
                this.scroll.enable(enabled);
                this.container.classList.toggle('ql-disabled', !enabled);
              }
            }, {
              key: 'focus',
              value: function focus() {
                var scrollTop = this.scrollingContainer.scrollTop;
                this.selection.focus();
                this.scrollingContainer.scrollTop = scrollTop;
                this.scrollIntoView();
              }
            }, {
              key: 'format',
              value: function format(name, value) {
                var _this4 = this;

                var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4["default"].sources.API;
                return modify.call(this, function () {
                  var range = _this4.getSelection(true);

                  var change = new _quillDelta2["default"]();

                  if (range == null) {
                    return change;
                  } else if (_parchment2["default"].query(name, _parchment2["default"].Scope.BLOCK)) {
                    change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));
                  } else if (range.length === 0) {
                    _this4.selection.format(name, value);

                    return change;
                  } else {
                    change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));
                  }

                  _this4.setSelection(range, _emitter4["default"].sources.SILENT);

                  return change;
                }, source);
              }
            }, {
              key: 'formatLine',
              value: function formatLine(index, length, name, value, source) {
                var _this5 = this;

                var formats = void 0;

                var _overload3 = overload(index, length, name, value, source);

                var _overload4 = _slicedToArray(_overload3, 4);

                index = _overload4[0];
                length = _overload4[1];
                formats = _overload4[2];
                source = _overload4[3];
                return modify.call(this, function () {
                  return _this5.editor.formatLine(index, length, formats);
                }, source, index, 0);
              }
            }, {
              key: 'formatText',
              value: function formatText(index, length, name, value, source) {
                var _this6 = this;

                var formats = void 0;

                var _overload5 = overload(index, length, name, value, source);

                var _overload6 = _slicedToArray(_overload5, 4);

                index = _overload6[0];
                length = _overload6[1];
                formats = _overload6[2];
                source = _overload6[3];
                return modify.call(this, function () {
                  return _this6.editor.formatText(index, length, formats);
                }, source, index, 0);
              }
            }, {
              key: 'getBounds',
              value: function getBounds(index) {
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                var bounds = void 0;

                if (typeof index === 'number') {
                  bounds = this.selection.getBounds(index, length);
                } else {
                  bounds = this.selection.getBounds(index.index, index.length);
                }

                var containerBounds = this.container.getBoundingClientRect();
                return {
                  bottom: bounds.bottom - containerBounds.top,
                  height: bounds.height,
                  left: bounds.left - containerBounds.left,
                  right: bounds.right - containerBounds.left,
                  top: bounds.top - containerBounds.top,
                  width: bounds.width
                };
              }
            }, {
              key: 'getContents',
              value: function getContents() {
                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

                var _overload7 = overload(index, length);

                var _overload8 = _slicedToArray(_overload7, 2);

                index = _overload8[0];
                length = _overload8[1];
                return this.editor.getContents(index, length);
              }
            }, {
              key: 'getFormat',
              value: function getFormat() {
                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

                if (typeof index === 'number') {
                  return this.editor.getFormat(index, length);
                } else {
                  return this.editor.getFormat(index.index, index.length);
                }
              }
            }, {
              key: 'getIndex',
              value: function getIndex(blot) {
                return blot.offset(this.scroll);
              }
            }, {
              key: 'getLength',
              value: function getLength() {
                return this.scroll.length();
              }
            }, {
              key: 'getLeaf',
              value: function getLeaf(index) {
                return this.scroll.leaf(index);
              }
            }, {
              key: 'getLine',
              value: function getLine(index) {
                return this.scroll.line(index);
              }
            }, {
              key: 'getLines',
              value: function getLines() {
                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

                if (typeof index !== 'number') {
                  return this.scroll.lines(index.index, index.length);
                } else {
                  return this.scroll.lines(index, length);
                }
              }
            }, {
              key: 'getModule',
              value: function getModule(name) {
                return this.theme.modules[name];
              }
            }, {
              key: 'getSelection',
              value: function getSelection() {
                var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
                if (focus) this.focus();
                this.update(); // Make sure we access getRange with editor in consistent state

                return this.selection.getRange()[0];
              }
            }, {
              key: 'getText',
              value: function getText() {
                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

                var _overload9 = overload(index, length);

                var _overload10 = _slicedToArray(_overload9, 2);

                index = _overload10[0];
                length = _overload10[1];
                return this.editor.getText(index, length);
              }
            }, {
              key: 'hasFocus',
              value: function hasFocus() {
                return this.selection.hasFocus();
              }
            }, {
              key: 'insertEmbed',
              value: function insertEmbed(index, embed, value) {
                var _this7 = this;

                var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;
                return modify.call(this, function () {
                  return _this7.editor.insertEmbed(index, embed, value);
                }, source, index);
              }
            }, {
              key: 'insertText',
              value: function insertText(index, text, name, value, source) {
                var _this8 = this;

                var formats = void 0;

                var _overload11 = overload(index, 0, name, value, source);

                var _overload12 = _slicedToArray(_overload11, 4);

                index = _overload12[0];
                formats = _overload12[2];
                source = _overload12[3];
                return modify.call(this, function () {
                  return _this8.editor.insertText(index, text, formats);
                }, source, index, text.length);
              }
            }, {
              key: 'isEnabled',
              value: function isEnabled() {
                return !this.container.classList.contains('ql-disabled');
              }
            }, {
              key: 'off',
              value: function off() {
                return this.emitter.off.apply(this.emitter, arguments);
              }
            }, {
              key: 'on',
              value: function on() {
                return this.emitter.on.apply(this.emitter, arguments);
              }
            }, {
              key: 'once',
              value: function once() {
                return this.emitter.once.apply(this.emitter, arguments);
              }
            }, {
              key: 'pasteHTML',
              value: function pasteHTML(index, html, source) {
                this.clipboard.dangerouslyPasteHTML(index, html, source);
              }
            }, {
              key: 'removeFormat',
              value: function removeFormat(index, length, source) {
                var _this9 = this;

                var _overload13 = overload(index, length, source);

                var _overload14 = _slicedToArray(_overload13, 4);

                index = _overload14[0];
                length = _overload14[1];
                source = _overload14[3];
                return modify.call(this, function () {
                  return _this9.editor.removeFormat(index, length);
                }, source, index);
              }
            }, {
              key: 'scrollIntoView',
              value: function scrollIntoView() {
                this.selection.scrollIntoView(this.scrollingContainer);
              }
            }, {
              key: 'setContents',
              value: function setContents(delta) {
                var _this10 = this;

                var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4["default"].sources.API;
                return modify.call(this, function () {
                  delta = new _quillDelta2["default"](delta);

                  var length = _this10.getLength();

                  var deleted = _this10.editor.deleteText(0, length);

                  var applied = _this10.editor.applyDelta(delta);

                  var lastOp = applied.ops[applied.ops.length - 1];

                  if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\n') {
                    _this10.editor.deleteText(_this10.getLength() - 1, 1);

                    applied["delete"](1);
                  }

                  var ret = deleted.compose(applied);
                  return ret;
                }, source);
              }
            }, {
              key: 'setSelection',
              value: function setSelection(index, length, source) {
                if (index == null) {
                  this.selection.setRange(null, length || Quill.sources.API);
                } else {
                  var _overload15 = overload(index, length, source);

                  var _overload16 = _slicedToArray(_overload15, 4);

                  index = _overload16[0];
                  length = _overload16[1];
                  source = _overload16[3];
                  this.selection.setRange(new _selection.Range(index, length), source);

                  if (source !== _emitter4["default"].sources.SILENT) {
                    this.selection.scrollIntoView(this.scrollingContainer);
                  }
                }
              }
            }, {
              key: 'setText',
              value: function setText(text) {
                var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4["default"].sources.API;
                var delta = new _quillDelta2["default"]().insert(text);
                return this.setContents(delta, source);
              }
            }, {
              key: 'update',
              value: function update() {
                var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4["default"].sources.USER;
                var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes

                this.selection.update(source);
                return change;
              }
            }, {
              key: 'updateContents',
              value: function updateContents(delta) {
                var _this11 = this;

                var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4["default"].sources.API;
                return modify.call(this, function () {
                  delta = new _quillDelta2["default"](delta);
                  return _this11.editor.applyDelta(delta, source);
                }, source, true);
              }
            }]);

            return Quill;
          }();

          Quill.DEFAULTS = {
            bounds: null,
            formats: null,
            modules: {},
            placeholder: '',
            readOnly: false,
            scrollingContainer: null,
            strict: true,
            theme: 'default'
          };
          Quill.events = _emitter4["default"].events;
          Quill.sources = _emitter4["default"].sources; // eslint-disable-next-line no-undef

          Quill.version = false ? undefined : "1.3.7";
          Quill.imports = {
            'delta': _quillDelta2["default"],
            'parchment': _parchment2["default"],
            'core/module': _module2["default"],
            'core/theme': _theme2["default"]
          };

          function expandConfig(container, userConfig) {
            userConfig = (0, _extend2["default"])(true, {
              container: container,
              modules: {
                clipboard: true,
                keyboard: true,
                history: true
              }
            }, userConfig);

            if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {
              userConfig.theme = _theme2["default"];
            } else {
              userConfig.theme = Quill["import"]('themes/' + userConfig.theme);

              if (userConfig.theme == null) {
                throw new Error('Invalid theme ' + userConfig.theme + '. Did you register it?');
              }
            }

            var themeConfig = (0, _extend2["default"])(true, {}, userConfig.theme.DEFAULTS);
            [themeConfig, userConfig].forEach(function (config) {
              config.modules = config.modules || {};
              Object.keys(config.modules).forEach(function (module) {
                if (config.modules[module] === true) {
                  config.modules[module] = {};
                }
              });
            });
            var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
            var moduleConfig = moduleNames.reduce(function (config, name) {
              var moduleClass = Quill["import"]('modules/' + name);

              if (moduleClass == null) {
                debug.error('Cannot load ' + name + ' module. Are you sure you registered it?');
              } else {
                config[name] = moduleClass.DEFAULTS || {};
              }

              return config;
            }, {}); // Special case toolbar shorthand

            if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
              userConfig.modules.toolbar = {
                container: userConfig.modules.toolbar
              };
            }

            userConfig = (0, _extend2["default"])(true, {}, Quill.DEFAULTS, {
              modules: moduleConfig
            }, themeConfig, userConfig);
            ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {
              if (typeof userConfig[key] === 'string') {
                userConfig[key] = document.querySelector(userConfig[key]);
              }
            });
            userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {
              if (userConfig.modules[name]) {
                config[name] = userConfig.modules[name];
              }

              return config;
            }, {});
            return userConfig;
          } // Handle selection preservation and TEXT_CHANGE emission
          // common to modification APIs


          function modify(modifier, source, index, shift) {
            if (this.options.strict && !this.isEnabled() && source === _emitter4["default"].sources.USER) {
              return new _quillDelta2["default"]();
            }

            var range = index == null ? null : this.getSelection();
            var oldDelta = this.editor.delta;
            var change = modifier();

            if (range != null) {
              if (index === true) index = range.index;

              if (shift == null) {
                range = shiftRange(range, change, source);
              } else if (shift !== 0) {
                range = shiftRange(range, index, shift, source);
              }

              this.setSelection(range, _emitter4["default"].sources.SILENT);
            }

            if (change.length() > 0) {
              var _emitter;

              var args = [_emitter4["default"].events.TEXT_CHANGE, change, oldDelta, source];

              (_emitter = this.emitter).emit.apply(_emitter, [_emitter4["default"].events.EDITOR_CHANGE].concat(args));

              if (source !== _emitter4["default"].sources.SILENT) {
                var _emitter2;

                (_emitter2 = this.emitter).emit.apply(_emitter2, args);
              }
            }

            return change;
          }

          function overload(index, length, name, value, source) {
            var formats = {};

            if (typeof index.index === 'number' && typeof index.length === 'number') {
              // Allow for throwaway end (used by insertText/insertEmbed)
              if (typeof length !== 'number') {
                source = value, value = name, name = length, length = index.length, index = index.index;
              } else {
                length = index.length, index = index.index;
              }
            } else if (typeof length !== 'number') {
              source = value, value = name, name = length, length = 0;
            } // Handle format being object, two format name/value strings or excluded


            if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
              formats = name;
              source = value;
            } else if (typeof name === 'string') {
              if (value != null) {
                formats[name] = value;
              } else {
                source = name;
              }
            } // Handle optional source


            source = source || _emitter4["default"].sources.API;
            return [index, length, formats, source];
          }

          function shiftRange(range, index, length, source) {
            if (range == null) return null;
            var start = void 0,
                end = void 0;

            if (index instanceof _quillDelta2["default"]) {
              var _map = [range.index, range.index + range.length].map(function (pos) {
                return index.transformPosition(pos, source !== _emitter4["default"].sources.USER);
              });

              var _map2 = _slicedToArray(_map, 2);

              start = _map2[0];
              end = _map2[1];
            } else {
              var _map3 = [range.index, range.index + range.length].map(function (pos) {
                if (pos < index || pos === index && source === _emitter4["default"].sources.USER) return pos;

                if (length >= 0) {
                  return pos + length;
                } else {
                  return Math.max(index, pos + length);
                }
              });

              var _map4 = _slicedToArray(_map3, 2);

              start = _map4[0];
              end = _map4[1];
            }

            return new _selection.Range(start, end - start);
          }

          exports.expandConfig = expandConfig;
          exports.overload = overload;
          exports["default"] = Quill;
          /***/
        },
        /* 6 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Inline = function (_Parchment$Inline) {
            _inherits(Inline, _Parchment$Inline);

            function Inline() {
              _classCallCheck(this, Inline);

              return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));
            }

            _createClass(Inline, [{
              key: 'formatAt',
              value: function formatAt(index, length, name, value) {
                if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2["default"].query(name, _parchment2["default"].Scope.BLOT)) {
                  var blot = this.isolate(index, length);

                  if (value) {
                    blot.wrap(name, value);
                  }
                } else {
                  _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'formatAt', this).call(this, index, length, name, value);
                }
              }
            }, {
              key: 'optimize',
              value: function optimize(context) {
                _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'optimize', this).call(this, context);

                if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
                  var parent = this.parent.isolate(this.offset(), this.length());
                  this.moveChildren(parent);
                  parent.wrap(this);
                }
              }
            }], [{
              key: 'compare',
              value: function compare(self, other) {
                var selfIndex = Inline.order.indexOf(self);
                var otherIndex = Inline.order.indexOf(other);

                if (selfIndex >= 0 || otherIndex >= 0) {
                  return selfIndex - otherIndex;
                } else if (self === other) {
                  return 0;
                } else if (self < other) {
                  return -1;
                } else {
                  return 1;
                }
              }
            }]);

            return Inline;
          }(_parchment2["default"].Inline);

          Inline.allowedChildren = [Inline, _parchment2["default"].Embed, _text2["default"]]; // Lower index means deeper in the DOM tree, since not found (-1) is for embeds

          Inline.order = ['cursor', 'inline', // Must be lower
          'underline', 'strike', 'italic', 'bold', 'script', 'link', 'code' // Must be higher
          ];
          exports["default"] = Inline;
          /***/
        },
        /* 7 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var TextBlot = function (_Parchment$Text) {
            _inherits(TextBlot, _Parchment$Text);

            function TextBlot() {
              _classCallCheck(this, TextBlot);

              return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));
            }

            return TextBlot;
          }(_parchment2["default"].Text);

          exports["default"] = TextBlot;
          /***/
        },
        /* 8 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _eventemitter = __webpack_require__(54);

          var _eventemitter2 = _interopRequireDefault(_eventemitter);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var debug = (0, _logger2["default"])('quill:events');
          var EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];
          EVENTS.forEach(function (eventName) {
            document.addEventListener(eventName, function () {
              for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }

              [].slice.call(document.querySelectorAll('.ql-container')).forEach(function (node) {
                // TODO use WeakMap
                if (node.__quill && node.__quill.emitter) {
                  var _node$__quill$emitter;

                  (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
                }
              });
            });
          });

          var Emitter = function (_EventEmitter) {
            _inherits(Emitter, _EventEmitter);

            function Emitter() {
              _classCallCheck(this, Emitter);

              var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));

              _this.listeners = {};

              _this.on('error', debug.error);

              return _this;
            }

            _createClass(Emitter, [{
              key: 'emit',
              value: function emit() {
                debug.log.apply(debug, arguments);

                _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), 'emit', this).apply(this, arguments);
              }
            }, {
              key: 'handleDOM',
              value: function handleDOM(event) {
                for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                  args[_key2 - 1] = arguments[_key2];
                }

                (this.listeners[event.type] || []).forEach(function (_ref) {
                  var node = _ref.node,
                      handler = _ref.handler;

                  if (event.target === node || node.contains(event.target)) {
                    handler.apply(undefined, [event].concat(args));
                  }
                });
              }
            }, {
              key: 'listenDOM',
              value: function listenDOM(eventName, node, handler) {
                if (!this.listeners[eventName]) {
                  this.listeners[eventName] = [];
                }

                this.listeners[eventName].push({
                  node: node,
                  handler: handler
                });
              }
            }]);

            return Emitter;
          }(_eventemitter2["default"]);

          Emitter.events = {
            EDITOR_CHANGE: 'editor-change',
            SCROLL_BEFORE_UPDATE: 'scroll-before-update',
            SCROLL_OPTIMIZE: 'scroll-optimize',
            SCROLL_UPDATE: 'scroll-update',
            SELECTION_CHANGE: 'selection-change',
            TEXT_CHANGE: 'text-change'
          };
          Emitter.sources = {
            API: 'api',
            SILENT: 'silent',
            USER: 'user'
          };
          exports["default"] = Emitter;
          /***/
        },
        /* 9 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var Module = function Module(quill) {
            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

            _classCallCheck(this, Module);

            this.quill = quill;
            this.options = options;
          };

          Module.DEFAULTS = {};
          exports["default"] = Module;
          /***/
        },
        /* 10 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          var levels = ['error', 'warn', 'log', 'info'];
          var level = 'warn';

          function debug(method) {
            if (levels.indexOf(method) <= levels.indexOf(level)) {
              var _console;

              for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }

              (_console = console)[method].apply(_console, args); // eslint-disable-line no-console

            }
          }

          function namespace(ns) {
            return levels.reduce(function (logger, method) {
              logger[method] = debug.bind(console, method, ns);
              return logger;
            }, {});
          }

          debug.level = namespace.level = function (newLevel) {
            level = newLevel;
          };

          exports["default"] = namespace;
          /***/
        },
        /* 11 */

        /***/
        function (module, exports, __webpack_require__) {
          var pSlice = Array.prototype.slice;

          var objectKeys = __webpack_require__(52);

          var isArguments = __webpack_require__(53);

          var deepEqual = module.exports = function (actual, expected, opts) {
            if (!opts) opts = {}; // 7.1. All identical values are equivalent, as determined by ===.

            if (actual === expected) {
              return true;
            } else if (actual instanceof Date && expected instanceof Date) {
              return actual.getTime() === expected.getTime(); // 7.3. Other pairs that do not both pass typeof value == 'object',
              // equivalence is determined by ==.
            } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
              return opts.strict ? actual === expected : actual == expected; // 7.4. For all other Object pairs, including Array objects, equivalence is
              // determined by having the same number of owned properties (as verified
              // with Object.prototype.hasOwnProperty.call), the same set of keys
              // (although not necessarily the same order), equivalent values for every
              // corresponding key, and an identical 'prototype' property. Note: this
              // accounts for both named and indexed properties on Arrays.
            } else {
              return objEquiv(actual, expected, opts);
            }
          };

          function isUndefinedOrNull(value) {
            return value === null || value === undefined;
          }

          function isBuffer(x) {
            if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;

            if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
              return false;
            }

            if (x.length > 0 && typeof x[0] !== 'number') return false;
            return true;
          }

          function objEquiv(a, b, opts) {
            var i, key;
            if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) return false; // an identical 'prototype' property.

            if (a.prototype !== b.prototype) return false; //~~~I've managed to break Object.keys through screwy arguments passing.
            //   Converting to array solves the problem.

            if (isArguments(a)) {
              if (!isArguments(b)) {
                return false;
              }

              a = pSlice.call(a);
              b = pSlice.call(b);
              return deepEqual(a, b, opts);
            }

            if (isBuffer(a)) {
              if (!isBuffer(b)) {
                return false;
              }

              if (a.length !== b.length) return false;

              for (i = 0; i < a.length; i++) {
                if (a[i] !== b[i]) return false;
              }

              return true;
            }

            try {
              var ka = objectKeys(a),
                  kb = objectKeys(b);
            } catch (e) {
              //happens when one is a string literal and the other isn't
              return false;
            } // having the same number of owned properties (keys incorporates
            // hasOwnProperty)


            if (ka.length != kb.length) return false; //the same set of keys (although not necessarily the same order),

            ka.sort();
            kb.sort(); //~~~cheap key test

            for (i = ka.length - 1; i >= 0; i--) {
              if (ka[i] != kb[i]) return false;
            } //equivalent values for every corresponding key, and
            //~~~possibly expensive deep test


            for (i = ka.length - 1; i >= 0; i--) {
              key = ka[i];
              if (!deepEqual(a[key], b[key], opts)) return false;
            }

            return typeof a === typeof b;
          }
          /***/

        },
        /* 12 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var Registry = __webpack_require__(1);

          var Attributor =
          /** @class */
          function () {
            function Attributor(attrName, keyName, options) {
              if (options === void 0) {
                options = {};
              }

              this.attrName = attrName;
              this.keyName = keyName;
              var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;

              if (options.scope != null) {
                // Ignore type bits, force attribute bit
                this.scope = options.scope & Registry.Scope.LEVEL | attributeBit;
              } else {
                this.scope = Registry.Scope.ATTRIBUTE;
              }

              if (options.whitelist != null) this.whitelist = options.whitelist;
            }

            Attributor.keys = function (node) {
              return [].map.call(node.attributes, function (item) {
                return item.name;
              });
            };

            Attributor.prototype.add = function (node, value) {
              if (!this.canAdd(node, value)) return false;
              node.setAttribute(this.keyName, value);
              return true;
            };

            Attributor.prototype.canAdd = function (node, value) {
              var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
              if (match == null) return false;
              if (this.whitelist == null) return true;

              if (typeof value === 'string') {
                return this.whitelist.indexOf(value.replace(/["']/g, '')) > -1;
              } else {
                return this.whitelist.indexOf(value) > -1;
              }
            };

            Attributor.prototype.remove = function (node) {
              node.removeAttribute(this.keyName);
            };

            Attributor.prototype.value = function (node) {
              var value = node.getAttribute(this.keyName);

              if (this.canAdd(node, value) && value) {
                return value;
              }

              return '';
            };

            return Attributor;
          }();

          exports["default"] = Attributor;
          /***/
        },
        /* 13 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.Code = undefined;

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Code = function (_Inline) {
            _inherits(Code, _Inline);

            function Code() {
              _classCallCheck(this, Code);

              return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));
            }

            return Code;
          }(_inline2["default"]);

          Code.blotName = 'code';
          Code.tagName = 'CODE';

          var CodeBlock = function (_Block) {
            _inherits(CodeBlock, _Block);

            function CodeBlock() {
              _classCallCheck(this, CodeBlock);

              return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));
            }

            _createClass(CodeBlock, [{
              key: 'delta',
              value: function delta() {
                var _this3 = this;

                var text = this.domNode.textContent;

                if (text.endsWith('\n')) {
                  // Should always be true
                  text = text.slice(0, -1);
                }

                return text.split('\n').reduce(function (delta, frag) {
                  return delta.insert(frag).insert('\n', _this3.formats());
                }, new _quillDelta2["default"]());
              }
            }, {
              key: 'format',
              value: function format(name, value) {
                if (name === this.statics.blotName && value) return;

                var _descendant = this.descendant(_text2["default"], this.length() - 1),
                    _descendant2 = _slicedToArray(_descendant, 1),
                    text = _descendant2[0];

                if (text != null) {
                  text.deleteAt(text.length() - 1, 1);
                }

                _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'format', this).call(this, name, value);
              }
            }, {
              key: 'formatAt',
              value: function formatAt(index, length, name, value) {
                if (length === 0) return;

                if (_parchment2["default"].query(name, _parchment2["default"].Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {
                  return;
                }

                var nextNewline = this.newlineIndex(index);
                if (nextNewline < 0 || nextNewline >= index + length) return;
                var prevNewline = this.newlineIndex(index, true) + 1;
                var isolateLength = nextNewline - prevNewline + 1;
                var blot = this.isolate(prevNewline, isolateLength);
                var next = blot.next;
                blot.format(name, value);

                if (next instanceof CodeBlock) {
                  next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
                }
              }
            }, {
              key: 'insertAt',
              value: function insertAt(index, value, def) {
                if (def != null) return;

                var _descendant3 = this.descendant(_text2["default"], index),
                    _descendant4 = _slicedToArray(_descendant3, 2),
                    text = _descendant4[0],
                    offset = _descendant4[1];

                text.insertAt(offset, value);
              }
            }, {
              key: 'length',
              value: function length() {
                var length = this.domNode.textContent.length;

                if (!this.domNode.textContent.endsWith('\n')) {
                  return length + 1;
                }

                return length;
              }
            }, {
              key: 'newlineIndex',
              value: function newlineIndex(searchIndex) {
                var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

                if (!reverse) {
                  var offset = this.domNode.textContent.slice(searchIndex).indexOf('\n');
                  return offset > -1 ? searchIndex + offset : -1;
                } else {
                  return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\n');
                }
              }
            }, {
              key: 'optimize',
              value: function optimize(context) {
                if (!this.domNode.textContent.endsWith('\n')) {
                  this.appendChild(_parchment2["default"].create('text', '\n'));
                }

                _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'optimize', this).call(this, context);

                var next = this.next;

                if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
                  next.optimize(context);
                  next.moveChildren(this);
                  next.remove();
                }
              }
            }, {
              key: 'replace',
              value: function replace(target) {
                _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'replace', this).call(this, target);

                [].slice.call(this.domNode.querySelectorAll('*')).forEach(function (node) {
                  var blot = _parchment2["default"].find(node);

                  if (blot == null) {
                    node.parentNode.removeChild(node);
                  } else if (blot instanceof _parchment2["default"].Embed) {
                    blot.remove();
                  } else {
                    blot.unwrap();
                  }
                });
              }
            }], [{
              key: 'create',
              value: function create(value) {
                var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), 'create', this).call(this, value);

                domNode.setAttribute('spellcheck', false);
                return domNode;
              }
            }, {
              key: 'formats',
              value: function formats() {
                return true;
              }
            }]);

            return CodeBlock;
          }(_block2["default"]);

          CodeBlock.blotName = 'code-block';
          CodeBlock.tagName = 'PRE';
          CodeBlock.TAB = '  ';
          exports.Code = Code;
          exports["default"] = CodeBlock;
          /***/
        },
        /* 14 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
          } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _op = __webpack_require__(20);

          var _op2 = _interopRequireDefault(_op);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _code = __webpack_require__(13);

          var _code2 = _interopRequireDefault(_code);

          var _cursor = __webpack_require__(24);

          var _cursor2 = _interopRequireDefault(_cursor);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          var _break = __webpack_require__(16);

          var _break2 = _interopRequireDefault(_break);

          var _clone = __webpack_require__(21);

          var _clone2 = _interopRequireDefault(_clone);

          var _deepEqual = __webpack_require__(11);

          var _deepEqual2 = _interopRequireDefault(_deepEqual);

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var ASCII = /^[ -~]*$/;

          var Editor = function () {
            function Editor(scroll) {
              _classCallCheck(this, Editor);

              this.scroll = scroll;
              this.delta = this.getDelta();
            }

            _createClass(Editor, [{
              key: 'applyDelta',
              value: function applyDelta(delta) {
                var _this = this;

                var consumeNextNewline = false;
                this.scroll.update();
                var scrollLength = this.scroll.length();
                this.scroll.batchStart();
                delta = normalizeDelta(delta);
                delta.reduce(function (index, op) {
                  var length = op.retain || op["delete"] || op.insert.length || 1;
                  var attributes = op.attributes || {};

                  if (op.insert != null) {
                    if (typeof op.insert === 'string') {
                      var text = op.insert;

                      if (text.endsWith('\n') && consumeNextNewline) {
                        consumeNextNewline = false;
                        text = text.slice(0, -1);
                      }

                      if (index >= scrollLength && !text.endsWith('\n')) {
                        consumeNextNewline = true;
                      }

                      _this.scroll.insertAt(index, text);

                      var _scroll$line = _this.scroll.line(index),
                          _scroll$line2 = _slicedToArray(_scroll$line, 2),
                          line = _scroll$line2[0],
                          offset = _scroll$line2[1];

                      var formats = (0, _extend2["default"])({}, (0, _block.bubbleFormats)(line));

                      if (line instanceof _block2["default"]) {
                        var _line$descendant = line.descendant(_parchment2["default"].Leaf, offset),
                            _line$descendant2 = _slicedToArray(_line$descendant, 1),
                            leaf = _line$descendant2[0];

                        formats = (0, _extend2["default"])(formats, (0, _block.bubbleFormats)(leaf));
                      }

                      attributes = _op2["default"].attributes.diff(formats, attributes) || {};
                    } else if (_typeof(op.insert) === 'object') {
                      var key = Object.keys(op.insert)[0]; // There should only be one key

                      if (key == null) return index;

                      _this.scroll.insertAt(index, key, op.insert[key]);
                    }

                    scrollLength += length;
                  }

                  Object.keys(attributes).forEach(function (name) {
                    _this.scroll.formatAt(index, length, name, attributes[name]);
                  });
                  return index + length;
                }, 0);
                delta.reduce(function (index, op) {
                  if (typeof op["delete"] === 'number') {
                    _this.scroll.deleteAt(index, op["delete"]);

                    return index;
                  }

                  return index + (op.retain || op.insert.length || 1);
                }, 0);
                this.scroll.batchEnd();
                return this.update(delta);
              }
            }, {
              key: 'deleteText',
              value: function deleteText(index, length) {
                this.scroll.deleteAt(index, length);
                return this.update(new _quillDelta2["default"]().retain(index)["delete"](length));
              }
            }, {
              key: 'formatLine',
              value: function formatLine(index, length) {
                var _this2 = this;

                var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                this.scroll.update();
                Object.keys(formats).forEach(function (format) {
                  if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;

                  var lines = _this2.scroll.lines(index, Math.max(length, 1));

                  var lengthRemaining = length;
                  lines.forEach(function (line) {
                    var lineLength = line.length();

                    if (!(line instanceof _code2["default"])) {
                      line.format(format, formats[format]);
                    } else {
                      var codeIndex = index - line.offset(_this2.scroll);
                      var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
                      line.formatAt(codeIndex, codeLength, format, formats[format]);
                    }

                    lengthRemaining -= lineLength;
                  });
                });
                this.scroll.optimize();
                return this.update(new _quillDelta2["default"]().retain(index).retain(length, (0, _clone2["default"])(formats)));
              }
            }, {
              key: 'formatText',
              value: function formatText(index, length) {
                var _this3 = this;

                var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                Object.keys(formats).forEach(function (format) {
                  _this3.scroll.formatAt(index, length, format, formats[format]);
                });
                return this.update(new _quillDelta2["default"]().retain(index).retain(length, (0, _clone2["default"])(formats)));
              }
            }, {
              key: 'getContents',
              value: function getContents(index, length) {
                return this.delta.slice(index, index + length);
              }
            }, {
              key: 'getDelta',
              value: function getDelta() {
                return this.scroll.lines().reduce(function (delta, line) {
                  return delta.concat(line.delta());
                }, new _quillDelta2["default"]());
              }
            }, {
              key: 'getFormat',
              value: function getFormat(index) {
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                var lines = [],
                    leaves = [];

                if (length === 0) {
                  this.scroll.path(index).forEach(function (path) {
                    var _path = _slicedToArray(path, 1),
                        blot = _path[0];

                    if (blot instanceof _block2["default"]) {
                      lines.push(blot);
                    } else if (blot instanceof _parchment2["default"].Leaf) {
                      leaves.push(blot);
                    }
                  });
                } else {
                  lines = this.scroll.lines(index, length);
                  leaves = this.scroll.descendants(_parchment2["default"].Leaf, index, length);
                }

                var formatsArr = [lines, leaves].map(function (blots) {
                  if (blots.length === 0) return {};
                  var formats = (0, _block.bubbleFormats)(blots.shift());

                  while (Object.keys(formats).length > 0) {
                    var blot = blots.shift();
                    if (blot == null) return formats;
                    formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
                  }

                  return formats;
                });
                return _extend2["default"].apply(_extend2["default"], formatsArr);
              }
            }, {
              key: 'getText',
              value: function getText(index, length) {
                return this.getContents(index, length).filter(function (op) {
                  return typeof op.insert === 'string';
                }).map(function (op) {
                  return op.insert;
                }).join('');
              }
            }, {
              key: 'insertEmbed',
              value: function insertEmbed(index, embed, value) {
                this.scroll.insertAt(index, embed, value);
                return this.update(new _quillDelta2["default"]().retain(index).insert(_defineProperty({}, embed, value)));
              }
            }, {
              key: 'insertText',
              value: function insertText(index, text) {
                var _this4 = this;

                var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                text = text.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
                this.scroll.insertAt(index, text);
                Object.keys(formats).forEach(function (format) {
                  _this4.scroll.formatAt(index, text.length, format, formats[format]);
                });
                return this.update(new _quillDelta2["default"]().retain(index).insert(text, (0, _clone2["default"])(formats)));
              }
            }, {
              key: 'isBlank',
              value: function isBlank() {
                if (this.scroll.children.length == 0) return true;
                if (this.scroll.children.length > 1) return false;
                var block = this.scroll.children.head;
                if (block.statics.blotName !== _block2["default"].blotName) return false;
                if (block.children.length > 1) return false;
                return block.children.head instanceof _break2["default"];
              }
            }, {
              key: 'removeFormat',
              value: function removeFormat(index, length) {
                var text = this.getText(index, length);

                var _scroll$line3 = this.scroll.line(index + length),
                    _scroll$line4 = _slicedToArray(_scroll$line3, 2),
                    line = _scroll$line4[0],
                    offset = _scroll$line4[1];

                var suffixLength = 0,
                    suffix = new _quillDelta2["default"]();

                if (line != null) {
                  if (!(line instanceof _code2["default"])) {
                    suffixLength = line.length() - offset;
                  } else {
                    suffixLength = line.newlineIndex(offset) - offset + 1;
                  }

                  suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\n');
                }

                var contents = this.getContents(index, length + suffixLength);
                var diff = contents.diff(new _quillDelta2["default"]().insert(text).concat(suffix));
                var delta = new _quillDelta2["default"]().retain(index).concat(diff);
                return this.applyDelta(delta);
              }
            }, {
              key: 'update',
              value: function update(change) {
                var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
                var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
                var oldDelta = this.delta;

                if (mutations.length === 1 && mutations[0].type === 'characterData' && mutations[0].target.data.match(ASCII) && _parchment2["default"].find(mutations[0].target)) {
                  // Optimization for character changes
                  var textBlot = _parchment2["default"].find(mutations[0].target);

                  var formats = (0, _block.bubbleFormats)(textBlot);
                  var index = textBlot.offset(this.scroll);
                  var oldValue = mutations[0].oldValue.replace(_cursor2["default"].CONTENTS, '');
                  var oldText = new _quillDelta2["default"]().insert(oldValue);
                  var newText = new _quillDelta2["default"]().insert(textBlot.value());
                  var diffDelta = new _quillDelta2["default"]().retain(index).concat(oldText.diff(newText, cursorIndex));
                  change = diffDelta.reduce(function (delta, op) {
                    if (op.insert) {
                      return delta.insert(op.insert, formats);
                    } else {
                      return delta.push(op);
                    }
                  }, new _quillDelta2["default"]());
                  this.delta = oldDelta.compose(change);
                } else {
                  this.delta = this.getDelta();

                  if (!change || !(0, _deepEqual2["default"])(oldDelta.compose(change), this.delta)) {
                    change = oldDelta.diff(this.delta, cursorIndex);
                  }
                }

                return change;
              }
            }]);

            return Editor;
          }();

          function combineFormats(formats, combined) {
            return Object.keys(combined).reduce(function (merged, name) {
              if (formats[name] == null) return merged;

              if (combined[name] === formats[name]) {
                merged[name] = combined[name];
              } else if (Array.isArray(combined[name])) {
                if (combined[name].indexOf(formats[name]) < 0) {
                  merged[name] = combined[name].concat([formats[name]]);
                }
              } else {
                merged[name] = [combined[name], formats[name]];
              }

              return merged;
            }, {});
          }

          function normalizeDelta(delta) {
            return delta.reduce(function (delta, op) {
              if (op.insert === 1) {
                var attributes = (0, _clone2["default"])(op.attributes);
                delete attributes['image'];
                return delta.insert({
                  image: op.attributes.image
                }, attributes);
              }

              if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
                op = (0, _clone2["default"])(op);

                if (op.attributes.list) {
                  op.attributes.list = 'ordered';
                } else {
                  op.attributes.list = 'bullet';
                  delete op.attributes.bullet;
                }
              }

              if (typeof op.insert === 'string') {
                var text = op.insert.replace(/\r\n/g, '\n').replace(/\r/g, '\n');
                return delta.insert(text, op.attributes);
              }

              return delta.push(op);
            }, new _quillDelta2["default"]());
          }

          exports["default"] = Editor;
          /***/
        },
        /* 15 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.Range = undefined;

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _clone = __webpack_require__(21);

          var _clone2 = _interopRequireDefault(_clone);

          var _deepEqual = __webpack_require__(11);

          var _deepEqual2 = _interopRequireDefault(_deepEqual);

          var _emitter3 = __webpack_require__(8);

          var _emitter4 = _interopRequireDefault(_emitter3);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
              for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                arr2[i] = arr[i];
              }

              return arr2;
            } else {
              return Array.from(arr);
            }
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var debug = (0, _logger2["default"])('quill:selection');

          var Range = function Range(index) {
            var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

            _classCallCheck(this, Range);

            this.index = index;
            this.length = length;
          };

          var Selection = function () {
            function Selection(scroll, emitter) {
              var _this = this;

              _classCallCheck(this, Selection);

              this.emitter = emitter;
              this.scroll = scroll;
              this.composing = false;
              this.mouseDown = false;
              this.root = this.scroll.domNode;
              this.cursor = _parchment2["default"].create('cursor', this); // savedRange is last non-null range

              this.lastRange = this.savedRange = new Range(0, 0);
              this.handleComposition();
              this.handleDragging();
              this.emitter.listenDOM('selectionchange', document, function () {
                if (!_this.mouseDown) {
                  setTimeout(_this.update.bind(_this, _emitter4["default"].sources.USER), 1);
                }
              });
              this.emitter.on(_emitter4["default"].events.EDITOR_CHANGE, function (type, delta) {
                if (type === _emitter4["default"].events.TEXT_CHANGE && delta.length() > 0) {
                  _this.update(_emitter4["default"].sources.SILENT);
                }
              });
              this.emitter.on(_emitter4["default"].events.SCROLL_BEFORE_UPDATE, function () {
                if (!_this.hasFocus()) return;

                var _native = _this.getNativeRange();

                if (_native == null) return;
                if (_native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle
                // TODO unclear if this has negative side effects

                _this.emitter.once(_emitter4["default"].events.SCROLL_UPDATE, function () {
                  try {
                    _this.setNativeRange(_native.start.node, _native.start.offset, _native.end.node, _native.end.offset);
                  } catch (ignored) {}
                });
              });
              this.emitter.on(_emitter4["default"].events.SCROLL_OPTIMIZE, function (mutations, context) {
                if (context.range) {
                  var _context$range = context.range,
                      startNode = _context$range.startNode,
                      startOffset = _context$range.startOffset,
                      endNode = _context$range.endNode,
                      endOffset = _context$range.endOffset;

                  _this.setNativeRange(startNode, startOffset, endNode, endOffset);
                }
              });
              this.update(_emitter4["default"].sources.SILENT);
            }

            _createClass(Selection, [{
              key: 'handleComposition',
              value: function handleComposition() {
                var _this2 = this;

                this.root.addEventListener('compositionstart', function () {
                  _this2.composing = true;
                });
                this.root.addEventListener('compositionend', function () {
                  _this2.composing = false;

                  if (_this2.cursor.parent) {
                    var range = _this2.cursor.restore();

                    if (!range) return;
                    setTimeout(function () {
                      _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
                    }, 1);
                  }
                });
              }
            }, {
              key: 'handleDragging',
              value: function handleDragging() {
                var _this3 = this;

                this.emitter.listenDOM('mousedown', document.body, function () {
                  _this3.mouseDown = true;
                });
                this.emitter.listenDOM('mouseup', document.body, function () {
                  _this3.mouseDown = false;

                  _this3.update(_emitter4["default"].sources.USER);
                });
              }
            }, {
              key: 'focus',
              value: function focus() {
                if (this.hasFocus()) return;
                this.root.focus();
                this.setRange(this.savedRange);
              }
            }, {
              key: 'format',
              value: function format(_format, value) {
                if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;
                this.scroll.update();
                var nativeRange = this.getNativeRange();
                if (nativeRange == null || !nativeRange["native"].collapsed || _parchment2["default"].query(_format, _parchment2["default"].Scope.BLOCK)) return;

                if (nativeRange.start.node !== this.cursor.textNode) {
                  var blot = _parchment2["default"].find(nativeRange.start.node, false);

                  if (blot == null) return; // TODO Give blot ability to not split

                  if (blot instanceof _parchment2["default"].Leaf) {
                    var after = blot.split(nativeRange.start.offset);
                    blot.parent.insertBefore(this.cursor, after);
                  } else {
                    blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen
                  }

                  this.cursor.attach();
                }

                this.cursor.format(_format, value);
                this.scroll.optimize();
                this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
                this.update();
              }
            }, {
              key: 'getBounds',
              value: function getBounds(index) {
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                var scrollLength = this.scroll.length();
                index = Math.min(index, scrollLength - 1);
                length = Math.min(index + length, scrollLength - 1) - index;

                var node = void 0,
                    _scroll$leaf = this.scroll.leaf(index),
                    _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
                    leaf = _scroll$leaf2[0],
                    offset = _scroll$leaf2[1];

                if (leaf == null) return null;

                var _leaf$position = leaf.position(offset, true);

                var _leaf$position2 = _slicedToArray(_leaf$position, 2);

                node = _leaf$position2[0];
                offset = _leaf$position2[1];
                var range = document.createRange();

                if (length > 0) {
                  range.setStart(node, offset);

                  var _scroll$leaf3 = this.scroll.leaf(index + length);

                  var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);

                  leaf = _scroll$leaf4[0];
                  offset = _scroll$leaf4[1];
                  if (leaf == null) return null;

                  var _leaf$position3 = leaf.position(offset, true);

                  var _leaf$position4 = _slicedToArray(_leaf$position3, 2);

                  node = _leaf$position4[0];
                  offset = _leaf$position4[1];
                  range.setEnd(node, offset);
                  return range.getBoundingClientRect();
                } else {
                  var side = 'left';
                  var rect = void 0;

                  if (node instanceof Text) {
                    if (offset < node.data.length) {
                      range.setStart(node, offset);
                      range.setEnd(node, offset + 1);
                    } else {
                      range.setStart(node, offset - 1);
                      range.setEnd(node, offset);
                      side = 'right';
                    }

                    rect = range.getBoundingClientRect();
                  } else {
                    rect = leaf.domNode.getBoundingClientRect();
                    if (offset > 0) side = 'right';
                  }

                  return {
                    bottom: rect.top + rect.height,
                    height: rect.height,
                    left: rect[side],
                    right: rect[side],
                    top: rect.top,
                    width: 0
                  };
                }
              }
            }, {
              key: 'getNativeRange',
              value: function getNativeRange() {
                var selection = document.getSelection();
                if (selection == null || selection.rangeCount <= 0) return null;
                var nativeRange = selection.getRangeAt(0);
                if (nativeRange == null) return null;
                var range = this.normalizeNative(nativeRange);
                debug.info('getNativeRange', range);
                return range;
              }
            }, {
              key: 'getRange',
              value: function getRange() {
                var normalized = this.getNativeRange();
                if (normalized == null) return [null, null];
                var range = this.normalizedToRange(normalized);
                return [range, normalized];
              }
            }, {
              key: 'hasFocus',
              value: function hasFocus() {
                return document.activeElement === this.root;
              }
            }, {
              key: 'normalizedToRange',
              value: function normalizedToRange(range) {
                var _this4 = this;

                var positions = [[range.start.node, range.start.offset]];

                if (!range["native"].collapsed) {
                  positions.push([range.end.node, range.end.offset]);
                }

                var indexes = positions.map(function (position) {
                  var _position = _slicedToArray(position, 2),
                      node = _position[0],
                      offset = _position[1];

                  var blot = _parchment2["default"].find(node, true);

                  var index = blot.offset(_this4.scroll);

                  if (offset === 0) {
                    return index;
                  } else if (blot instanceof _parchment2["default"].Container) {
                    return index + blot.length();
                  } else {
                    return index + blot.index(node, offset);
                  }
                });
                var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
                var start = Math.min.apply(Math, [end].concat(_toConsumableArray(indexes)));
                return new Range(start, end - start);
              }
            }, {
              key: 'normalizeNative',
              value: function normalizeNative(nativeRange) {
                if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {
                  return null;
                }

                var range = {
                  start: {
                    node: nativeRange.startContainer,
                    offset: nativeRange.startOffset
                  },
                  end: {
                    node: nativeRange.endContainer,
                    offset: nativeRange.endOffset
                  },
                  "native": nativeRange
                };
                [range.start, range.end].forEach(function (position) {
                  var node = position.node,
                      offset = position.offset;

                  while (!(node instanceof Text) && node.childNodes.length > 0) {
                    if (node.childNodes.length > offset) {
                      node = node.childNodes[offset];
                      offset = 0;
                    } else if (node.childNodes.length === offset) {
                      node = node.lastChild;
                      offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;
                    } else {
                      break;
                    }
                  }

                  position.node = node, position.offset = offset;
                });
                return range;
              }
            }, {
              key: 'rangeToNative',
              value: function rangeToNative(range) {
                var _this5 = this;

                var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
                var args = [];
                var scrollLength = this.scroll.length();
                indexes.forEach(function (index, i) {
                  index = Math.min(scrollLength - 1, index);

                  var node = void 0,
                      _scroll$leaf5 = _this5.scroll.leaf(index),
                      _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
                      leaf = _scroll$leaf6[0],
                      offset = _scroll$leaf6[1];

                  var _leaf$position5 = leaf.position(offset, i !== 0);

                  var _leaf$position6 = _slicedToArray(_leaf$position5, 2);

                  node = _leaf$position6[0];
                  offset = _leaf$position6[1];
                  args.push(node, offset);
                });

                if (args.length < 2) {
                  args = args.concat(args);
                }

                return args;
              }
            }, {
              key: 'scrollIntoView',
              value: function scrollIntoView(scrollingContainer) {
                var range = this.lastRange;
                if (range == null) return;
                var bounds = this.getBounds(range.index, range.length);
                if (bounds == null) return;
                var limit = this.scroll.length() - 1;

                var _scroll$line = this.scroll.line(Math.min(range.index, limit)),
                    _scroll$line2 = _slicedToArray(_scroll$line, 1),
                    first = _scroll$line2[0];

                var last = first;

                if (range.length > 0) {
                  var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));

                  var _scroll$line4 = _slicedToArray(_scroll$line3, 1);

                  last = _scroll$line4[0];
                }

                if (first == null || last == null) return;
                var scrollBounds = scrollingContainer.getBoundingClientRect();

                if (bounds.top < scrollBounds.top) {
                  scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
                } else if (bounds.bottom > scrollBounds.bottom) {
                  scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
                }
              }
            }, {
              key: 'setNativeRange',
              value: function setNativeRange(startNode, startOffset) {
                var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;
                var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;
                var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
                debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);

                if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
                  return;
                }

                var selection = document.getSelection();
                if (selection == null) return;

                if (startNode != null) {
                  if (!this.hasFocus()) this.root.focus();
                  var _native2 = (this.getNativeRange() || {})["native"];

                  if (_native2 == null || force || startNode !== _native2.startContainer || startOffset !== _native2.startOffset || endNode !== _native2.endContainer || endOffset !== _native2.endOffset) {
                    if (startNode.tagName == "BR") {
                      startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
                      startNode = startNode.parentNode;
                    }

                    if (endNode.tagName == "BR") {
                      endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
                      endNode = endNode.parentNode;
                    }

                    var range = document.createRange();
                    range.setStart(startNode, startOffset);
                    range.setEnd(endNode, endOffset);
                    selection.removeAllRanges();
                    selection.addRange(range);
                  }
                } else {
                  selection.removeAllRanges();
                  this.root.blur();
                  document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
                }
              }
            }, {
              key: 'setRange',
              value: function setRange(range) {
                var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4["default"].sources.API;

                if (typeof force === 'string') {
                  source = force;
                  force = false;
                }

                debug.info('setRange', range);

                if (range != null) {
                  var args = this.rangeToNative(range);
                  this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
                } else {
                  this.setNativeRange(null);
                }

                this.update(source);
              }
            }, {
              key: 'update',
              value: function update() {
                var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4["default"].sources.USER;
                var oldRange = this.lastRange;

                var _getRange = this.getRange(),
                    _getRange2 = _slicedToArray(_getRange, 2),
                    lastRange = _getRange2[0],
                    nativeRange = _getRange2[1];

                this.lastRange = lastRange;

                if (this.lastRange != null) {
                  this.savedRange = this.lastRange;
                }

                if (!(0, _deepEqual2["default"])(oldRange, this.lastRange)) {
                  var _emitter;

                  if (!this.composing && nativeRange != null && nativeRange["native"].collapsed && nativeRange.start.node !== this.cursor.textNode) {
                    this.cursor.restore();
                  }

                  var args = [_emitter4["default"].events.SELECTION_CHANGE, (0, _clone2["default"])(this.lastRange), (0, _clone2["default"])(oldRange), source];

                  (_emitter = this.emitter).emit.apply(_emitter, [_emitter4["default"].events.EDITOR_CHANGE].concat(args));

                  if (source !== _emitter4["default"].sources.SILENT) {
                    var _emitter2;

                    (_emitter2 = this.emitter).emit.apply(_emitter2, args);
                  }
                }
              }
            }]);

            return Selection;
          }();

          function contains(parent, descendant) {
            try {
              // Firefox inserts inaccessible nodes around video elements
              descendant.parentNode;
            } catch (e) {
              return false;
            } // IE11 has bug with Text nodes
            // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect


            if (descendant instanceof Text) {
              descendant = descendant.parentNode;
            }

            return parent.contains(descendant);
          }

          exports.Range = Range;
          exports["default"] = Selection;
          /***/
        },
        /* 16 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Break = function (_Parchment$Embed) {
            _inherits(Break, _Parchment$Embed);

            function Break() {
              _classCallCheck(this, Break);

              return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));
            }

            _createClass(Break, [{
              key: 'insertInto',
              value: function insertInto(parent, ref) {
                if (parent.children.length === 0) {
                  _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), 'insertInto', this).call(this, parent, ref);
                } else {
                  this.remove();
                }
              }
            }, {
              key: 'length',
              value: function length() {
                return 0;
              }
            }, {
              key: 'value',
              value: function value() {
                return '';
              }
            }], [{
              key: 'value',
              value: function value() {
                return undefined;
              }
            }]);

            return Break;
          }(_parchment2["default"].Embed);

          Break.blotName = 'break';
          Break.tagName = 'BR';
          exports["default"] = Break;
          /***/
        },
        /* 17 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var linked_list_1 = __webpack_require__(44);

          var shadow_1 = __webpack_require__(30);

          var Registry = __webpack_require__(1);

          var ContainerBlot =
          /** @class */
          function (_super) {
            __extends(ContainerBlot, _super);

            function ContainerBlot(domNode) {
              var _this = _super.call(this, domNode) || this;

              _this.build();

              return _this;
            }

            ContainerBlot.prototype.appendChild = function (other) {
              this.insertBefore(other);
            };

            ContainerBlot.prototype.attach = function () {
              _super.prototype.attach.call(this);

              this.children.forEach(function (child) {
                child.attach();
              });
            };

            ContainerBlot.prototype.build = function () {
              var _this = this;

              this.children = new linked_list_1["default"](); // Need to be reversed for if DOM nodes already in order

              [].slice.call(this.domNode.childNodes).reverse().forEach(function (node) {
                try {
                  var child = makeBlot(node);

                  _this.insertBefore(child, _this.children.head || undefined);
                } catch (err) {
                  if (err instanceof Registry.ParchmentError) return;else throw err;
                }
              });
            };

            ContainerBlot.prototype.deleteAt = function (index, length) {
              if (index === 0 && length === this.length()) {
                return this.remove();
              }

              this.children.forEachAt(index, length, function (child, offset, length) {
                child.deleteAt(offset, length);
              });
            };

            ContainerBlot.prototype.descendant = function (criteria, index) {
              var _a = this.children.find(index),
                  child = _a[0],
                  offset = _a[1];

              if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                return [child, offset];
              } else if (child instanceof ContainerBlot) {
                return child.descendant(criteria, offset);
              } else {
                return [null, -1];
              }
            };

            ContainerBlot.prototype.descendants = function (criteria, index, length) {
              if (index === void 0) {
                index = 0;
              }

              if (length === void 0) {
                length = Number.MAX_VALUE;
              }

              var descendants = [];
              var lengthLeft = length;
              this.children.forEachAt(index, length, function (child, index, length) {
                if (criteria.blotName == null && criteria(child) || criteria.blotName != null && child instanceof criteria) {
                  descendants.push(child);
                }

                if (child instanceof ContainerBlot) {
                  descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));
                }

                lengthLeft -= length;
              });
              return descendants;
            };

            ContainerBlot.prototype.detach = function () {
              this.children.forEach(function (child) {
                child.detach();
              });

              _super.prototype.detach.call(this);
            };

            ContainerBlot.prototype.formatAt = function (index, length, name, value) {
              this.children.forEachAt(index, length, function (child, offset, length) {
                child.formatAt(offset, length, name, value);
              });
            };

            ContainerBlot.prototype.insertAt = function (index, value, def) {
              var _a = this.children.find(index),
                  child = _a[0],
                  offset = _a[1];

              if (child) {
                child.insertAt(offset, value, def);
              } else {
                var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
                this.appendChild(blot);
              }
            };

            ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {
              if (this.statics.allowedChildren != null && !this.statics.allowedChildren.some(function (child) {
                return childBlot instanceof child;
              })) {
                throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
              }

              childBlot.insertInto(this, refBlot);
            };

            ContainerBlot.prototype.length = function () {
              return this.children.reduce(function (memo, child) {
                return memo + child.length();
              }, 0);
            };

            ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {
              this.children.forEach(function (child) {
                targetParent.insertBefore(child, refNode);
              });
            };

            ContainerBlot.prototype.optimize = function (context) {
              _super.prototype.optimize.call(this, context);

              if (this.children.length === 0) {
                if (this.statics.defaultChild != null) {
                  var child = Registry.create(this.statics.defaultChild);
                  this.appendChild(child);
                  child.optimize(context);
                } else {
                  this.remove();
                }
              }
            };

            ContainerBlot.prototype.path = function (index, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }

              var _a = this.children.find(index, inclusive),
                  child = _a[0],
                  offset = _a[1];

              var position = [[this, index]];

              if (child instanceof ContainerBlot) {
                return position.concat(child.path(offset, inclusive));
              } else if (child != null) {
                position.push([child, offset]);
              }

              return position;
            };

            ContainerBlot.prototype.removeChild = function (child) {
              this.children.remove(child);
            };

            ContainerBlot.prototype.replace = function (target) {
              if (target instanceof ContainerBlot) {
                target.moveChildren(this);
              }

              _super.prototype.replace.call(this, target);
            };

            ContainerBlot.prototype.split = function (index, force) {
              if (force === void 0) {
                force = false;
              }

              if (!force) {
                if (index === 0) return this;
                if (index === this.length()) return this.next;
              }

              var after = this.clone();
              this.parent.insertBefore(after, this.next);
              this.children.forEachAt(index, this.length(), function (child, offset, length) {
                child = child.split(offset, force);
                after.appendChild(child);
              });
              return after;
            };

            ContainerBlot.prototype.unwrap = function () {
              this.moveChildren(this.parent, this.next);
              this.remove();
            };

            ContainerBlot.prototype.update = function (mutations, context) {
              var _this = this;

              var addedNodes = [];
              var removedNodes = [];
              mutations.forEach(function (mutation) {
                if (mutation.target === _this.domNode && mutation.type === 'childList') {
                  addedNodes.push.apply(addedNodes, mutation.addedNodes);
                  removedNodes.push.apply(removedNodes, mutation.removedNodes);
                }
              });
              removedNodes.forEach(function (node) {
                // Check node has actually been removed
                // One exception is Chrome does not immediately remove IFRAMEs
                // from DOM but MutationRecord is correct in its reported removal
                if (node.parentNode != null && // @ts-ignore
                node.tagName !== 'IFRAME' && document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                  return;
                }

                var blot = Registry.find(node);
                if (blot == null) return;

                if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                  blot.detach();
                }
              });
              addedNodes.filter(function (node) {
                return node.parentNode == _this.domNode;
              }).sort(function (a, b) {
                if (a === b) return 0;

                if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
                  return 1;
                }

                return -1;
              }).forEach(function (node) {
                var refBlot = null;

                if (node.nextSibling != null) {
                  refBlot = Registry.find(node.nextSibling);
                }

                var blot = makeBlot(node);

                if (blot.next != refBlot || blot.next == null) {
                  if (blot.parent != null) {
                    blot.parent.removeChild(_this);
                  }

                  _this.insertBefore(blot, refBlot || undefined);
                }
              });
            };

            return ContainerBlot;
          }(shadow_1["default"]);

          function makeBlot(node) {
            var blot = Registry.find(node);

            if (blot == null) {
              try {
                blot = Registry.create(node);
              } catch (e) {
                blot = Registry.create(Registry.Scope.INLINE);
                [].slice.call(node.childNodes).forEach(function (child) {
                  // @ts-ignore
                  blot.domNode.appendChild(child);
                });

                if (node.parentNode) {
                  node.parentNode.replaceChild(blot.domNode, node);
                }

                blot.attach();
              }
            }

            return blot;
          }

          exports["default"] = ContainerBlot;
          /***/
        },
        /* 18 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var attributor_1 = __webpack_require__(12);

          var store_1 = __webpack_require__(31);

          var container_1 = __webpack_require__(17);

          var Registry = __webpack_require__(1);

          var FormatBlot =
          /** @class */
          function (_super) {
            __extends(FormatBlot, _super);

            function FormatBlot(domNode) {
              var _this = _super.call(this, domNode) || this;

              _this.attributes = new store_1["default"](_this.domNode);
              return _this;
            }

            FormatBlot.formats = function (domNode) {
              if (typeof this.tagName === 'string') {
                return true;
              } else if (Array.isArray(this.tagName)) {
                return domNode.tagName.toLowerCase();
              }

              return undefined;
            };

            FormatBlot.prototype.format = function (name, value) {
              var format = Registry.query(name);

              if (format instanceof attributor_1["default"]) {
                this.attributes.attribute(format, value);
              } else if (value) {
                if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
                  this.replaceWith(name, value);
                }
              }
            };

            FormatBlot.prototype.formats = function () {
              var formats = this.attributes.values();
              var format = this.statics.formats(this.domNode);

              if (format != null) {
                formats[this.statics.blotName] = format;
              }

              return formats;
            };

            FormatBlot.prototype.replaceWith = function (name, value) {
              var replacement = _super.prototype.replaceWith.call(this, name, value);

              this.attributes.copy(replacement);
              return replacement;
            };

            FormatBlot.prototype.update = function (mutations, context) {
              var _this = this;

              _super.prototype.update.call(this, mutations, context);

              if (mutations.some(function (mutation) {
                return mutation.target === _this.domNode && mutation.type === 'attributes';
              })) {
                this.attributes.build();
              }
            };

            FormatBlot.prototype.wrap = function (name, value) {
              var wrapper = _super.prototype.wrap.call(this, name, value);

              if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {
                this.attributes.move(wrapper);
              }

              return wrapper;
            };

            return FormatBlot;
          }(container_1["default"]);

          exports["default"] = FormatBlot;
          /***/
        },
        /* 19 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var shadow_1 = __webpack_require__(30);

          var Registry = __webpack_require__(1);

          var LeafBlot =
          /** @class */
          function (_super) {
            __extends(LeafBlot, _super);

            function LeafBlot() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            LeafBlot.value = function (domNode) {
              return true;
            };

            LeafBlot.prototype.index = function (node, offset) {
              if (this.domNode === node || this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                return Math.min(offset, 1);
              }

              return -1;
            };

            LeafBlot.prototype.position = function (index, inclusive) {
              var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
              if (index > 0) offset += 1;
              return [this.parent.domNode, offset];
            };

            LeafBlot.prototype.value = function () {
              var _a;

              return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
            };

            LeafBlot.scope = Registry.Scope.INLINE_BLOT;
            return LeafBlot;
          }(shadow_1["default"]);

          exports["default"] = LeafBlot;
          /***/
        },
        /* 20 */

        /***/
        function (module, exports, __webpack_require__) {
          var equal = __webpack_require__(11);

          var extend = __webpack_require__(3);

          var lib = {
            attributes: {
              compose: function compose(a, b, keepNull) {
                if (typeof a !== 'object') a = {};
                if (typeof b !== 'object') b = {};
                var attributes = extend(true, {}, b);

                if (!keepNull) {
                  attributes = Object.keys(attributes).reduce(function (copy, key) {
                    if (attributes[key] != null) {
                      copy[key] = attributes[key];
                    }

                    return copy;
                  }, {});
                }

                for (var key in a) {
                  if (a[key] !== undefined && b[key] === undefined) {
                    attributes[key] = a[key];
                  }
                }

                return Object.keys(attributes).length > 0 ? attributes : undefined;
              },
              diff: function diff(a, b) {
                if (typeof a !== 'object') a = {};
                if (typeof b !== 'object') b = {};
                var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {
                  if (!equal(a[key], b[key])) {
                    attributes[key] = b[key] === undefined ? null : b[key];
                  }

                  return attributes;
                }, {});
                return Object.keys(attributes).length > 0 ? attributes : undefined;
              },
              transform: function transform(a, b, priority) {
                if (typeof a !== 'object') return b;
                if (typeof b !== 'object') return undefined;
                if (!priority) return b; // b simply overwrites us without priority

                var attributes = Object.keys(b).reduce(function (attributes, key) {
                  if (a[key] === undefined) attributes[key] = b[key]; // null is a valid value

                  return attributes;
                }, {});
                return Object.keys(attributes).length > 0 ? attributes : undefined;
              }
            },
            iterator: function iterator(ops) {
              return new Iterator(ops);
            },
            length: function length(op) {
              if (typeof op['delete'] === 'number') {
                return op['delete'];
              } else if (typeof op.retain === 'number') {
                return op.retain;
              } else {
                return typeof op.insert === 'string' ? op.insert.length : 1;
              }
            }
          };

          function Iterator(ops) {
            this.ops = ops;
            this.index = 0;
            this.offset = 0;
          }

          ;

          Iterator.prototype.hasNext = function () {
            return this.peekLength() < Infinity;
          };

          Iterator.prototype.next = function (length) {
            if (!length) length = Infinity;
            var nextOp = this.ops[this.index];

            if (nextOp) {
              var offset = this.offset;
              var opLength = lib.length(nextOp);

              if (length >= opLength - offset) {
                length = opLength - offset;
                this.index += 1;
                this.offset = 0;
              } else {
                this.offset += length;
              }

              if (typeof nextOp['delete'] === 'number') {
                return {
                  'delete': length
                };
              } else {
                var retOp = {};

                if (nextOp.attributes) {
                  retOp.attributes = nextOp.attributes;
                }

                if (typeof nextOp.retain === 'number') {
                  retOp.retain = length;
                } else if (typeof nextOp.insert === 'string') {
                  retOp.insert = nextOp.insert.substr(offset, length);
                } else {
                  // offset should === 0, length should === 1
                  retOp.insert = nextOp.insert;
                }

                return retOp;
              }
            } else {
              return {
                retain: Infinity
              };
            }
          };

          Iterator.prototype.peek = function () {
            return this.ops[this.index];
          };

          Iterator.prototype.peekLength = function () {
            if (this.ops[this.index]) {
              // Should never return 0 if our index is being managed correctly
              return lib.length(this.ops[this.index]) - this.offset;
            } else {
              return Infinity;
            }
          };

          Iterator.prototype.peekType = function () {
            if (this.ops[this.index]) {
              if (typeof this.ops[this.index]['delete'] === 'number') {
                return 'delete';
              } else if (typeof this.ops[this.index].retain === 'number') {
                return 'retain';
              } else {
                return 'insert';
              }
            }

            return 'retain';
          };

          Iterator.prototype.rest = function () {
            if (!this.hasNext()) {
              return [];
            } else if (this.offset === 0) {
              return this.ops.slice(this.index);
            } else {
              var offset = this.offset;
              var index = this.index;
              var next = this.next();
              var rest = this.ops.slice(this.index);
              this.offset = offset;
              this.index = index;
              return [next].concat(rest);
            }
          };

          module.exports = lib;
          /***/
        },
        /* 21 */

        /***/
        function (module, exports) {
          var clone = function () {
            'use strict';

            function _instanceof(obj, type) {
              return type != null && obj instanceof type;
            }

            var nativeMap;

            try {
              nativeMap = Map;
            } catch (_) {
              // maybe a reference error because no `Map`. Give it a dummy value that no
              // value will ever be an instanceof.
              nativeMap = function nativeMap() {};
            }

            var nativeSet;

            try {
              nativeSet = Set;
            } catch (_) {
              nativeSet = function nativeSet() {};
            }

            var nativePromise;

            try {
              nativePromise = Promise;
            } catch (_) {
              nativePromise = function nativePromise() {};
            }
            /**
             * Clones (copies) an Object using deep copying.
             *
             * This function supports circular references by default, but if you are certain
             * there are no circular references in your object, you can save some CPU time
             * by calling clone(obj, false).
             *
             * Caution: if `circular` is false and `parent` contains circular references,
             * your program may enter an infinite loop and crash.
             *
             * @param `parent` - the object to be cloned
             * @param `circular` - set to true if the object to be cloned may contain
             *    circular references. (optional - true by default)
             * @param `depth` - set to a number if the object is only to be cloned to
             *    a particular depth. (optional - defaults to Infinity)
             * @param `prototype` - sets the prototype to be used when cloning an object.
             *    (optional - defaults to parent prototype).
             * @param `includeNonEnumerable` - set to true if the non-enumerable properties
             *    should be cloned as well. Non-enumerable properties on the prototype
             *    chain will be ignored. (optional - false by default)
            */


            function clone(parent, circular, depth, prototype, includeNonEnumerable) {
              if (typeof circular === 'object') {
                depth = circular.depth;
                prototype = circular.prototype;
                includeNonEnumerable = circular.includeNonEnumerable;
                circular = circular.circular;
              } // maintain two arrays for circular references, where corresponding parents
              // and children have the same index


              var allParents = [];
              var allChildren = [];
              var useBuffer = typeof Buffer != 'undefined';
              if (typeof circular == 'undefined') circular = true;
              if (typeof depth == 'undefined') depth = Infinity; // recurse this function so we don't reset allParents and allChildren

              function _clone(parent, depth) {
                // cloning null always returns null
                if (parent === null) return null;
                if (depth === 0) return parent;
                var child;
                var proto;

                if (typeof parent != 'object') {
                  return parent;
                }

                if (_instanceof(parent, nativeMap)) {
                  child = new nativeMap();
                } else if (_instanceof(parent, nativeSet)) {
                  child = new nativeSet();
                } else if (_instanceof(parent, nativePromise)) {
                  child = new nativePromise(function (resolve, reject) {
                    parent.then(function (value) {
                      resolve(_clone(value, depth - 1));
                    }, function (err) {
                      reject(_clone(err, depth - 1));
                    });
                  });
                } else if (clone.__isArray(parent)) {
                  child = [];
                } else if (clone.__isRegExp(parent)) {
                  child = new RegExp(parent.source, __getRegExpFlags(parent));
                  if (parent.lastIndex) child.lastIndex = parent.lastIndex;
                } else if (clone.__isDate(parent)) {
                  child = new Date(parent.getTime());
                } else if (useBuffer && Buffer.isBuffer(parent)) {
                  if (Buffer.allocUnsafe) {
                    // Node.js >= 4.5.0
                    child = Buffer.allocUnsafe(parent.length);
                  } else {
                    // Older Node.js versions
                    child = new Buffer(parent.length);
                  }

                  parent.copy(child);
                  return child;
                } else if (_instanceof(parent, Error)) {
                  child = Object.create(parent);
                } else {
                  if (typeof prototype == 'undefined') {
                    proto = Object.getPrototypeOf(parent);
                    child = Object.create(proto);
                  } else {
                    child = Object.create(prototype);
                    proto = prototype;
                  }
                }

                if (circular) {
                  var index = allParents.indexOf(parent);

                  if (index != -1) {
                    return allChildren[index];
                  }

                  allParents.push(parent);
                  allChildren.push(child);
                }

                if (_instanceof(parent, nativeMap)) {
                  parent.forEach(function (value, key) {
                    var keyChild = _clone(key, depth - 1);

                    var valueChild = _clone(value, depth - 1);

                    child.set(keyChild, valueChild);
                  });
                }

                if (_instanceof(parent, nativeSet)) {
                  parent.forEach(function (value) {
                    var entryChild = _clone(value, depth - 1);

                    child.add(entryChild);
                  });
                }

                for (var i in parent) {
                  var attrs;

                  if (proto) {
                    attrs = Object.getOwnPropertyDescriptor(proto, i);
                  }

                  if (attrs && attrs.set == null) {
                    continue;
                  }

                  child[i] = _clone(parent[i], depth - 1);
                }

                if (Object.getOwnPropertySymbols) {
                  var symbols = Object.getOwnPropertySymbols(parent);

                  for (var i = 0; i < symbols.length; i++) {
                    // Don't need to worry about cloning a symbol because it is a primitive,
                    // like a number or string.
                    var symbol = symbols[i];
                    var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);

                    if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
                      continue;
                    }

                    child[symbol] = _clone(parent[symbol], depth - 1);

                    if (!descriptor.enumerable) {
                      Object.defineProperty(child, symbol, {
                        enumerable: false
                      });
                    }
                  }
                }

                if (includeNonEnumerable) {
                  var allPropertyNames = Object.getOwnPropertyNames(parent);

                  for (var i = 0; i < allPropertyNames.length; i++) {
                    var propertyName = allPropertyNames[i];
                    var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);

                    if (descriptor && descriptor.enumerable) {
                      continue;
                    }

                    child[propertyName] = _clone(parent[propertyName], depth - 1);
                    Object.defineProperty(child, propertyName, {
                      enumerable: false
                    });
                  }
                }

                return child;
              }

              return _clone(parent, depth);
            }
            /**
             * Simple flat clone using prototype, accepts only objects, usefull for property
             * override on FLAT configuration object (no nested props).
             *
             * USE WITH CAUTION! This may not behave as you wish if you do not know how this
             * works.
             */


            clone.clonePrototype = function clonePrototype(parent) {
              if (parent === null) return null;

              var c = function c() {};

              c.prototype = parent;
              return new c();
            }; // private utility functions


            function __objToStr(o) {
              return Object.prototype.toString.call(o);
            }

            clone.__objToStr = __objToStr;

            function __isDate(o) {
              return typeof o === 'object' && __objToStr(o) === '[object Date]';
            }

            clone.__isDate = __isDate;

            function __isArray(o) {
              return typeof o === 'object' && __objToStr(o) === '[object Array]';
            }

            clone.__isArray = __isArray;

            function __isRegExp(o) {
              return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
            }

            clone.__isRegExp = __isRegExp;

            function __getRegExpFlags(re) {
              var flags = '';
              if (re.global) flags += 'g';
              if (re.ignoreCase) flags += 'i';
              if (re.multiline) flags += 'm';
              return flags;
            }

            clone.__getRegExpFlags = __getRegExpFlags;
            return clone;
          }();

          if (typeof module === 'object' && module.exports) {
            module.exports = clone;
          }
          /***/

        },
        /* 22 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _emitter = __webpack_require__(8);

          var _emitter2 = _interopRequireDefault(_emitter);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          var _break = __webpack_require__(16);

          var _break2 = _interopRequireDefault(_break);

          var _code = __webpack_require__(13);

          var _code2 = _interopRequireDefault(_code);

          var _container = __webpack_require__(25);

          var _container2 = _interopRequireDefault(_container);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          function isLine(blot) {
            return blot instanceof _block2["default"] || blot instanceof _block.BlockEmbed;
          }

          var Scroll = function (_Parchment$Scroll) {
            _inherits(Scroll, _Parchment$Scroll);

            function Scroll(domNode, config) {
              _classCallCheck(this, Scroll);

              var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));

              _this.emitter = config.emitter;

              if (Array.isArray(config.whitelist)) {
                _this.whitelist = config.whitelist.reduce(function (whitelist, format) {
                  whitelist[format] = true;
                  return whitelist;
                }, {});
              } // Some reason fixes composition issues with character languages in Windows/Chrome, Safari


              _this.domNode.addEventListener('DOMNodeInserted', function () {});

              _this.optimize();

              _this.enable();

              return _this;
            }

            _createClass(Scroll, [{
              key: 'batchStart',
              value: function batchStart() {
                this.batch = true;
              }
            }, {
              key: 'batchEnd',
              value: function batchEnd() {
                this.batch = false;
                this.optimize();
              }
            }, {
              key: 'deleteAt',
              value: function deleteAt(index, length) {
                var _line = this.line(index),
                    _line2 = _slicedToArray(_line, 2),
                    first = _line2[0],
                    offset = _line2[1];

                var _line3 = this.line(index + length),
                    _line4 = _slicedToArray(_line3, 1),
                    last = _line4[0];

                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'deleteAt', this).call(this, index, length);

                if (last != null && first !== last && offset > 0) {
                  if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
                    this.optimize();
                    return;
                  }

                  if (first instanceof _code2["default"]) {
                    var newlineIndex = first.newlineIndex(first.length(), true);

                    if (newlineIndex > -1) {
                      first = first.split(newlineIndex + 1);

                      if (first === last) {
                        this.optimize();
                        return;
                      }
                    }
                  } else if (last instanceof _code2["default"]) {
                    var _newlineIndex = last.newlineIndex(0);

                    if (_newlineIndex > -1) {
                      last.split(_newlineIndex + 1);
                    }
                  }

                  var ref = last.children.head instanceof _break2["default"] ? null : last.children.head;
                  first.moveChildren(last, ref);
                  first.remove();
                }

                this.optimize();
              }
            }, {
              key: 'enable',
              value: function enable() {
                var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
                this.domNode.setAttribute('contenteditable', enabled);
              }
            }, {
              key: 'formatAt',
              value: function formatAt(index, length, format, value) {
                if (this.whitelist != null && !this.whitelist[format]) return;

                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'formatAt', this).call(this, index, length, format, value);

                this.optimize();
              }
            }, {
              key: 'insertAt',
              value: function insertAt(index, value, def) {
                if (def != null && this.whitelist != null && !this.whitelist[value]) return;

                if (index >= this.length()) {
                  if (def == null || _parchment2["default"].query(value, _parchment2["default"].Scope.BLOCK) == null) {
                    var blot = _parchment2["default"].create(this.statics.defaultChild);

                    this.appendChild(blot);

                    if (def == null && value.endsWith('\n')) {
                      value = value.slice(0, -1);
                    }

                    blot.insertAt(0, value, def);
                  } else {
                    var embed = _parchment2["default"].create(value, def);

                    this.appendChild(embed);
                  }
                } else {
                  _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertAt', this).call(this, index, value, def);
                }

                this.optimize();
              }
            }, {
              key: 'insertBefore',
              value: function insertBefore(blot, ref) {
                if (blot.statics.scope === _parchment2["default"].Scope.INLINE_BLOT) {
                  var wrapper = _parchment2["default"].create(this.statics.defaultChild);

                  wrapper.appendChild(blot);
                  blot = wrapper;
                }

                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertBefore', this).call(this, blot, ref);
              }
            }, {
              key: 'leaf',
              value: function leaf(index) {
                return this.path(index).pop() || [null, -1];
              }
            }, {
              key: 'line',
              value: function line(index) {
                if (index === this.length()) {
                  return this.line(index - 1);
                }

                return this.descendant(isLine, index);
              }
            }, {
              key: 'lines',
              value: function lines() {
                var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
                var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

                var getLines = function getLines(blot, index, length) {
                  var lines = [],
                      lengthLeft = length;
                  blot.children.forEachAt(index, length, function (child, index, length) {
                    if (isLine(child)) {
                      lines.push(child);
                    } else if (child instanceof _parchment2["default"].Container) {
                      lines = lines.concat(getLines(child, index, lengthLeft));
                    }

                    lengthLeft -= length;
                  });
                  return lines;
                };

                return getLines(this, index, length);
              }
            }, {
              key: 'optimize',
              value: function optimize() {
                var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
                var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                if (this.batch === true) return;

                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'optimize', this).call(this, mutations, context);

                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2["default"].events.SCROLL_OPTIMIZE, mutations, context);
                }
              }
            }, {
              key: 'path',
              value: function path(index) {
                return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'path', this).call(this, index).slice(1); // Exclude self
              }
            }, {
              key: 'update',
              value: function update(mutations) {
                if (this.batch === true) return;
                var source = _emitter2["default"].sources.USER;

                if (typeof mutations === 'string') {
                  source = mutations;
                }

                if (!Array.isArray(mutations)) {
                  mutations = this.observer.takeRecords();
                }

                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2["default"].events.SCROLL_BEFORE_UPDATE, source, mutations);
                }

                _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'update', this).call(this, mutations.concat([])); // pass copy


                if (mutations.length > 0) {
                  this.emitter.emit(_emitter2["default"].events.SCROLL_UPDATE, source, mutations);
                }
              }
            }]);

            return Scroll;
          }(_parchment2["default"].Scroll);

          Scroll.blotName = 'scroll';
          Scroll.className = 'ql-editor';
          Scroll.tagName = 'DIV';
          Scroll.defaultChild = 'block';
          Scroll.allowedChildren = [_block2["default"], _block.BlockEmbed, _container2["default"]];
          exports["default"] = Scroll;
          /***/
        },
        /* 23 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.SHORTKEY = exports["default"] = undefined;

          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
          } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _clone = __webpack_require__(21);

          var _clone2 = _interopRequireDefault(_clone);

          var _deepEqual = __webpack_require__(11);

          var _deepEqual2 = _interopRequireDefault(_deepEqual);

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _op = __webpack_require__(20);

          var _op2 = _interopRequireDefault(_op);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var debug = (0, _logger2["default"])('quill:keyboard');
          var SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';

          var Keyboard = function (_Module) {
            _inherits(Keyboard, _Module);

            _createClass(Keyboard, null, [{
              key: 'match',
              value: function match(evt, binding) {
                binding = normalize(binding);

                if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {
                  return !!binding[key] !== evt[key] && binding[key] !== null;
                })) {
                  return false;
                }

                return binding.key === (evt.which || evt.keyCode);
              }
            }]);

            function Keyboard(quill, options) {
              _classCallCheck(this, Keyboard);

              var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));

              _this.bindings = {};
              Object.keys(_this.options.bindings).forEach(function (name) {
                if (name === 'list autofill' && quill.scroll.whitelist != null && !quill.scroll.whitelist['list']) {
                  return;
                }

                if (_this.options.bindings[name]) {
                  _this.addBinding(_this.options.bindings[name]);
                }
              });

              _this.addBinding({
                key: Keyboard.keys.ENTER,
                shiftKey: null
              }, handleEnter);

              _this.addBinding({
                key: Keyboard.keys.ENTER,
                metaKey: null,
                ctrlKey: null,
                altKey: null
              }, function () {});

              if (/Firefox/i.test(navigator.userAgent)) {
                // Need to handle delete and backspace for Firefox in the general case #1171
                _this.addBinding({
                  key: Keyboard.keys.BACKSPACE
                }, {
                  collapsed: true
                }, handleBackspace);

                _this.addBinding({
                  key: Keyboard.keys.DELETE
                }, {
                  collapsed: true
                }, handleDelete);
              } else {
                _this.addBinding({
                  key: Keyboard.keys.BACKSPACE
                }, {
                  collapsed: true,
                  prefix: /^.?$/
                }, handleBackspace);

                _this.addBinding({
                  key: Keyboard.keys.DELETE
                }, {
                  collapsed: true,
                  suffix: /^.?$/
                }, handleDelete);
              }

              _this.addBinding({
                key: Keyboard.keys.BACKSPACE
              }, {
                collapsed: false
              }, handleDeleteRange);

              _this.addBinding({
                key: Keyboard.keys.DELETE
              }, {
                collapsed: false
              }, handleDeleteRange);

              _this.addBinding({
                key: Keyboard.keys.BACKSPACE,
                altKey: null,
                ctrlKey: null,
                metaKey: null,
                shiftKey: null
              }, {
                collapsed: true,
                offset: 0
              }, handleBackspace);

              _this.listen();

              return _this;
            }

            _createClass(Keyboard, [{
              key: 'addBinding',
              value: function addBinding(key) {
                var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
                var binding = normalize(key);

                if (binding == null || binding.key == null) {
                  return debug.warn('Attempted to add invalid keyboard binding', binding);
                }

                if (typeof context === 'function') {
                  context = {
                    handler: context
                  };
                }

                if (typeof handler === 'function') {
                  handler = {
                    handler: handler
                  };
                }

                binding = (0, _extend2["default"])(binding, context, handler);
                this.bindings[binding.key] = this.bindings[binding.key] || [];
                this.bindings[binding.key].push(binding);
              }
            }, {
              key: 'listen',
              value: function listen() {
                var _this2 = this;

                this.quill.root.addEventListener('keydown', function (evt) {
                  if (evt.defaultPrevented) return;
                  var which = evt.which || evt.keyCode;
                  var bindings = (_this2.bindings[which] || []).filter(function (binding) {
                    return Keyboard.match(evt, binding);
                  });
                  if (bindings.length === 0) return;

                  var range = _this2.quill.getSelection();

                  if (range == null || !_this2.quill.hasFocus()) return;

                  var _quill$getLine = _this2.quill.getLine(range.index),
                      _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
                      line = _quill$getLine2[0],
                      offset = _quill$getLine2[1];

                  var _quill$getLeaf = _this2.quill.getLeaf(range.index),
                      _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
                      leafStart = _quill$getLeaf2[0],
                      offsetStart = _quill$getLeaf2[1];

                  var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length),
                      _ref2 = _slicedToArray(_ref, 2),
                      leafEnd = _ref2[0],
                      offsetEnd = _ref2[1];

                  var prefixText = leafStart instanceof _parchment2["default"].Text ? leafStart.value().slice(0, offsetStart) : '';
                  var suffixText = leafEnd instanceof _parchment2["default"].Text ? leafEnd.value().slice(offsetEnd) : '';
                  var curContext = {
                    collapsed: range.length === 0,
                    empty: range.length === 0 && line.length() <= 1,
                    format: _this2.quill.getFormat(range),
                    offset: offset,
                    prefix: prefixText,
                    suffix: suffixText
                  };
                  var prevented = bindings.some(function (binding) {
                    if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;
                    if (binding.empty != null && binding.empty !== curContext.empty) return false;
                    if (binding.offset != null && binding.offset !== curContext.offset) return false;

                    if (Array.isArray(binding.format)) {
                      // any format is present
                      if (binding.format.every(function (name) {
                        return curContext.format[name] == null;
                      })) {
                        return false;
                      }
                    } else if (_typeof(binding.format) === 'object') {
                      // all formats must match
                      if (!Object.keys(binding.format).every(function (name) {
                        if (binding.format[name] === true) return curContext.format[name] != null;
                        if (binding.format[name] === false) return curContext.format[name] == null;
                        return (0, _deepEqual2["default"])(binding.format[name], curContext.format[name]);
                      })) {
                        return false;
                      }
                    }

                    if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;
                    if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;
                    return binding.handler.call(_this2, range, curContext) !== true;
                  });

                  if (prevented) {
                    evt.preventDefault();
                  }
                });
              }
            }]);

            return Keyboard;
          }(_module2["default"]);

          Keyboard.keys = {
            BACKSPACE: 8,
            TAB: 9,
            ENTER: 13,
            ESCAPE: 27,
            LEFT: 37,
            UP: 38,
            RIGHT: 39,
            DOWN: 40,
            DELETE: 46
          };
          Keyboard.DEFAULTS = {
            bindings: {
              'bold': makeFormatHandler('bold'),
              'italic': makeFormatHandler('italic'),
              'underline': makeFormatHandler('underline'),
              'indent': {
                // highlight tab or tab at beginning of list, indent or blockquote
                key: Keyboard.keys.TAB,
                format: ['blockquote', 'indent', 'list'],
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0) return true;
                  this.quill.format('indent', '+1', _quill2["default"].sources.USER);
                }
              },
              'outdent': {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                format: ['blockquote', 'indent', 'list'],
                // highlight tab or tab at beginning of list, indent or blockquote
                handler: function handler(range, context) {
                  if (context.collapsed && context.offset !== 0) return true;
                  this.quill.format('indent', '-1', _quill2["default"].sources.USER);
                }
              },
              'outdent backspace': {
                key: Keyboard.keys.BACKSPACE,
                collapsed: true,
                shiftKey: null,
                metaKey: null,
                ctrlKey: null,
                altKey: null,
                format: ['indent', 'list'],
                offset: 0,
                handler: function handler(range, context) {
                  if (context.format.indent != null) {
                    this.quill.format('indent', '-1', _quill2["default"].sources.USER);
                  } else if (context.format.list != null) {
                    this.quill.format('list', false, _quill2["default"].sources.USER);
                  }
                }
              },
              'indent code-block': makeCodeBlockHandler(true),
              'outdent code-block': makeCodeBlockHandler(false),
              'remove tab': {
                key: Keyboard.keys.TAB,
                shiftKey: true,
                collapsed: true,
                prefix: /\t$/,
                handler: function handler(range) {
                  this.quill.deleteText(range.index - 1, 1, _quill2["default"].sources.USER);
                }
              },
              'tab': {
                key: Keyboard.keys.TAB,
                handler: function handler(range) {
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2["default"]().retain(range.index)["delete"](range.length).insert('\t');
                  this.quill.updateContents(delta, _quill2["default"].sources.USER);
                  this.quill.history.cutoff();
                  this.quill.setSelection(range.index + 1, _quill2["default"].sources.SILENT);
                }
              },
              'list empty enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['list'],
                empty: true,
                handler: function handler(range, context) {
                  this.quill.format('list', false, _quill2["default"].sources.USER);

                  if (context.format.indent) {
                    this.quill.format('indent', false, _quill2["default"].sources.USER);
                  }
                }
              },
              'checklist enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: {
                  list: 'checked'
                },
                handler: function handler(range) {
                  var _quill$getLine3 = this.quill.getLine(range.index),
                      _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
                      line = _quill$getLine4[0],
                      offset = _quill$getLine4[1];

                  var formats = (0, _extend2["default"])({}, line.formats(), {
                    list: 'checked'
                  });
                  var delta = new _quillDelta2["default"]().retain(range.index).insert('\n', formats).retain(line.length() - offset - 1).retain(1, {
                    list: 'unchecked'
                  });
                  this.quill.updateContents(delta, _quill2["default"].sources.USER);
                  this.quill.setSelection(range.index + 1, _quill2["default"].sources.SILENT);
                  this.quill.scrollIntoView();
                }
              },
              'header enter': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['header'],
                suffix: /^$/,
                handler: function handler(range, context) {
                  var _quill$getLine5 = this.quill.getLine(range.index),
                      _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
                      line = _quill$getLine6[0],
                      offset = _quill$getLine6[1];

                  var delta = new _quillDelta2["default"]().retain(range.index).insert('\n', context.format).retain(line.length() - offset - 1).retain(1, {
                    header: null
                  });
                  this.quill.updateContents(delta, _quill2["default"].sources.USER);
                  this.quill.setSelection(range.index + 1, _quill2["default"].sources.SILENT);
                  this.quill.scrollIntoView();
                }
              },
              'list autofill': {
                key: ' ',
                collapsed: true,
                format: {
                  list: false
                },
                prefix: /^\s*?(\d+\.|-|\*|\[ ?\]|\[x\])$/,
                handler: function handler(range, context) {
                  var length = context.prefix.length;

                  var _quill$getLine7 = this.quill.getLine(range.index),
                      _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
                      line = _quill$getLine8[0],
                      offset = _quill$getLine8[1];

                  if (offset > length) return true;
                  var value = void 0;

                  switch (context.prefix.trim()) {
                    case '[]':
                    case '[ ]':
                      value = 'unchecked';
                      break;

                    case '[x]':
                      value = 'checked';
                      break;

                    case '-':
                    case '*':
                      value = 'bullet';
                      break;

                    default:
                      value = 'ordered';
                  }

                  this.quill.insertText(range.index, ' ', _quill2["default"].sources.USER);
                  this.quill.history.cutoff();
                  var delta = new _quillDelta2["default"]().retain(range.index - offset)["delete"](length + 1).retain(line.length() - 2 - offset).retain(1, {
                    list: value
                  });
                  this.quill.updateContents(delta, _quill2["default"].sources.USER);
                  this.quill.history.cutoff();
                  this.quill.setSelection(range.index - length, _quill2["default"].sources.SILENT);
                }
              },
              'code exit': {
                key: Keyboard.keys.ENTER,
                collapsed: true,
                format: ['code-block'],
                prefix: /\n\n$/,
                suffix: /^\s+$/,
                handler: function handler(range) {
                  var _quill$getLine9 = this.quill.getLine(range.index),
                      _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
                      line = _quill$getLine10[0],
                      offset = _quill$getLine10[1];

                  var delta = new _quillDelta2["default"]().retain(range.index + line.length() - offset - 2).retain(1, {
                    'code-block': null
                  })["delete"](1);
                  this.quill.updateContents(delta, _quill2["default"].sources.USER);
                }
              },
              'embed left': makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
              'embed left shift': makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
              'embed right': makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
              'embed right shift': makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
            }
          };

          function makeEmbedArrowHandler(key, shiftKey) {
            var _ref3;

            var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
            return _ref3 = {
              key: key,
              shiftKey: shiftKey,
              altKey: null
            }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, 'handler', function handler(range) {
              var index = range.index;

              if (key === Keyboard.keys.RIGHT) {
                index += range.length + 1;
              }

              var _quill$getLeaf3 = this.quill.getLeaf(index),
                  _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
                  leaf = _quill$getLeaf4[0];

              if (!(leaf instanceof _parchment2["default"].Embed)) return true;

              if (key === Keyboard.keys.LEFT) {
                if (shiftKey) {
                  this.quill.setSelection(range.index - 1, range.length + 1, _quill2["default"].sources.USER);
                } else {
                  this.quill.setSelection(range.index - 1, _quill2["default"].sources.USER);
                }
              } else {
                if (shiftKey) {
                  this.quill.setSelection(range.index, range.length + 1, _quill2["default"].sources.USER);
                } else {
                  this.quill.setSelection(range.index + range.length + 1, _quill2["default"].sources.USER);
                }
              }

              return false;
            }), _ref3;
          }

          function handleBackspace(range, context) {
            if (range.index === 0 || this.quill.getLength() <= 1) return;

            var _quill$getLine11 = this.quill.getLine(range.index),
                _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
                line = _quill$getLine12[0];

            var formats = {};

            if (context.offset === 0) {
              var _quill$getLine13 = this.quill.getLine(range.index - 1),
                  _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
                  prev = _quill$getLine14[0];

              if (prev != null && prev.length() > 1) {
                var curFormats = line.formats();
                var prevFormats = this.quill.getFormat(range.index - 1, 1);
                formats = _op2["default"].attributes.diff(curFormats, prevFormats) || {};
              }
            } // Check for astral symbols


            var length = /[\uD800-\uDBFF][\uDC00-\uDFFF]$/.test(context.prefix) ? 2 : 1;
            this.quill.deleteText(range.index - length, length, _quill2["default"].sources.USER);

            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index - length, length, formats, _quill2["default"].sources.USER);
            }

            this.quill.focus();
          }

          function handleDelete(range, context) {
            // Check for astral symbols
            var length = /^[\uD800-\uDBFF][\uDC00-\uDFFF]/.test(context.suffix) ? 2 : 1;
            if (range.index >= this.quill.getLength() - length) return;
            var formats = {},
                nextLength = 0;

            var _quill$getLine15 = this.quill.getLine(range.index),
                _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
                line = _quill$getLine16[0];

            if (context.offset >= line.length() - 1) {
              var _quill$getLine17 = this.quill.getLine(range.index + 1),
                  _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
                  next = _quill$getLine18[0];

              if (next) {
                var curFormats = line.formats();
                var nextFormats = this.quill.getFormat(range.index, 1);
                formats = _op2["default"].attributes.diff(curFormats, nextFormats) || {};
                nextLength = next.length();
              }
            }

            this.quill.deleteText(range.index, length, _quill2["default"].sources.USER);

            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2["default"].sources.USER);
            }
          }

          function handleDeleteRange(range) {
            var lines = this.quill.getLines(range);
            var formats = {};

            if (lines.length > 1) {
              var firstFormats = lines[0].formats();
              var lastFormats = lines[lines.length - 1].formats();
              formats = _op2["default"].attributes.diff(lastFormats, firstFormats) || {};
            }

            this.quill.deleteText(range, _quill2["default"].sources.USER);

            if (Object.keys(formats).length > 0) {
              this.quill.formatLine(range.index, 1, formats, _quill2["default"].sources.USER);
            }

            this.quill.setSelection(range.index, _quill2["default"].sources.SILENT);
            this.quill.focus();
          }

          function handleEnter(range, context) {
            var _this3 = this;

            if (range.length > 0) {
              this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change
            }

            var lineFormats = Object.keys(context.format).reduce(function (lineFormats, format) {
              if (_parchment2["default"].query(format, _parchment2["default"].Scope.BLOCK) && !Array.isArray(context.format[format])) {
                lineFormats[format] = context.format[format];
              }

              return lineFormats;
            }, {});
            this.quill.insertText(range.index, '\n', lineFormats, _quill2["default"].sources.USER); // Earlier scroll.deleteAt might have messed up our selection,
            // so insertText's built in selection preservation is not reliable

            this.quill.setSelection(range.index + 1, _quill2["default"].sources.SILENT);
            this.quill.focus();
            Object.keys(context.format).forEach(function (name) {
              if (lineFormats[name] != null) return;
              if (Array.isArray(context.format[name])) return;
              if (name === 'link') return;

              _this3.quill.format(name, context.format[name], _quill2["default"].sources.USER);
            });
          }

          function makeCodeBlockHandler(indent) {
            return {
              key: Keyboard.keys.TAB,
              shiftKey: !indent,
              format: {
                'code-block': true
              },
              handler: function handler(range) {
                var CodeBlock = _parchment2["default"].query('code-block');

                var index = range.index,
                    length = range.length;

                var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index),
                    _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
                    block = _quill$scroll$descend2[0],
                    offset = _quill$scroll$descend2[1];

                if (block == null) return;
                var scrollIndex = this.quill.getIndex(block);
                var start = block.newlineIndex(offset, true) + 1;
                var end = block.newlineIndex(scrollIndex + offset + length);
                var lines = block.domNode.textContent.slice(start, end).split('\n');
                offset = 0;
                lines.forEach(function (line, i) {
                  if (indent) {
                    block.insertAt(start + offset, CodeBlock.TAB);
                    offset += CodeBlock.TAB.length;

                    if (i === 0) {
                      index += CodeBlock.TAB.length;
                    } else {
                      length += CodeBlock.TAB.length;
                    }
                  } else if (line.startsWith(CodeBlock.TAB)) {
                    block.deleteAt(start + offset, CodeBlock.TAB.length);
                    offset -= CodeBlock.TAB.length;

                    if (i === 0) {
                      index -= CodeBlock.TAB.length;
                    } else {
                      length -= CodeBlock.TAB.length;
                    }
                  }

                  offset += line.length + 1;
                });
                this.quill.update(_quill2["default"].sources.USER);
                this.quill.setSelection(index, length, _quill2["default"].sources.SILENT);
              }
            };
          }

          function makeFormatHandler(format) {
            return {
              key: format[0].toUpperCase(),
              shortKey: true,
              handler: function handler(range, context) {
                this.quill.format(format, !context.format[format], _quill2["default"].sources.USER);
              }
            };
          }

          function normalize(binding) {
            if (typeof binding === 'string' || typeof binding === 'number') {
              return normalize({
                key: binding
              });
            }

            if ((typeof binding === 'undefined' ? 'undefined' : _typeof(binding)) === 'object') {
              binding = (0, _clone2["default"])(binding, false);
            }

            if (typeof binding.key === 'string') {
              if (Keyboard.keys[binding.key.toUpperCase()] != null) {
                binding.key = Keyboard.keys[binding.key.toUpperCase()];
              } else if (binding.key.length === 1) {
                binding.key = binding.key.toUpperCase().charCodeAt(0);
              } else {
                return null;
              }
            }

            if (binding.shortKey) {
              binding[SHORTKEY] = binding.shortKey;
              delete binding.shortKey;
            }

            return binding;
          }

          exports["default"] = Keyboard;
          exports.SHORTKEY = SHORTKEY;
          /***/
        },
        /* 24 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Cursor = function (_Parchment$Embed) {
            _inherits(Cursor, _Parchment$Embed);

            _createClass(Cursor, null, [{
              key: 'value',
              value: function value() {
                return undefined;
              }
            }]);

            function Cursor(domNode, selection) {
              _classCallCheck(this, Cursor);

              var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));

              _this.selection = selection;
              _this.textNode = document.createTextNode(Cursor.CONTENTS);

              _this.domNode.appendChild(_this.textNode);

              _this._length = 0;
              return _this;
            }

            _createClass(Cursor, [{
              key: 'detach',
              value: function detach() {
                // super.detach() will also clear domNode.__blot
                if (this.parent != null) this.parent.removeChild(this);
              }
            }, {
              key: 'format',
              value: function format(name, value) {
                if (this._length !== 0) {
                  return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'format', this).call(this, name, value);
                }

                var target = this,
                    index = 0;

                while (target != null && target.statics.scope !== _parchment2["default"].Scope.BLOCK_BLOT) {
                  index += target.offset(target.parent);
                  target = target.parent;
                }

                if (target != null) {
                  this._length = Cursor.CONTENTS.length;
                  target.optimize();
                  target.formatAt(index, Cursor.CONTENTS.length, name, value);
                  this._length = 0;
                }
              }
            }, {
              key: 'index',
              value: function index(node, offset) {
                if (node === this.textNode) return 0;
                return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'index', this).call(this, node, offset);
              }
            }, {
              key: 'length',
              value: function length() {
                return this._length;
              }
            }, {
              key: 'position',
              value: function position() {
                return [this.textNode, this.textNode.data.length];
              }
            }, {
              key: 'remove',
              value: function remove() {
                _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'remove', this).call(this);

                this.parent = null;
              }
            }, {
              key: 'restore',
              value: function restore() {
                if (this.selection.composing || this.parent == null) return;
                var textNode = this.textNode;
                var range = this.selection.getNativeRange();
                var restoreText = void 0,
                    start = void 0,
                    end = void 0;

                if (range != null && range.start.node === textNode && range.end.node === textNode) {
                  var _ref = [textNode, range.start.offset, range.end.offset];
                  restoreText = _ref[0];
                  start = _ref[1];
                  end = _ref[2];
                } // Link format will insert text outside of anchor tag


                while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
                  this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
                }

                if (this.textNode.data !== Cursor.CONTENTS) {
                  var text = this.textNode.data.split(Cursor.CONTENTS).join('');

                  if (this.next instanceof _text2["default"]) {
                    restoreText = this.next.domNode;
                    this.next.insertAt(0, text);
                    this.textNode.data = Cursor.CONTENTS;
                  } else {
                    this.textNode.data = text;
                    this.parent.insertBefore(_parchment2["default"].create(this.textNode), this);
                    this.textNode = document.createTextNode(Cursor.CONTENTS);
                    this.domNode.appendChild(this.textNode);
                  }
                }

                this.remove();

                if (start != null) {
                  var _map = [start, end].map(function (offset) {
                    return Math.max(0, Math.min(restoreText.data.length, offset - 1));
                  });

                  var _map2 = _slicedToArray(_map, 2);

                  start = _map2[0];
                  end = _map2[1];
                  return {
                    startNode: restoreText,
                    startOffset: start,
                    endNode: restoreText,
                    endOffset: end
                  };
                }
              }
            }, {
              key: 'update',
              value: function update(mutations, context) {
                var _this2 = this;

                if (mutations.some(function (mutation) {
                  return mutation.type === 'characterData' && mutation.target === _this2.textNode;
                })) {
                  var range = this.restore();
                  if (range) context.range = range;
                }
              }
            }, {
              key: 'value',
              value: function value() {
                return '';
              }
            }]);

            return Cursor;
          }(_parchment2["default"].Embed);

          Cursor.blotName = 'cursor';
          Cursor.className = 'ql-cursor';
          Cursor.tagName = 'span';
          Cursor.CONTENTS = "\uFEFF"; // Zero width no break space

          exports["default"] = Cursor;
          /***/
        },
        /* 25 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Container = function (_Parchment$Container) {
            _inherits(Container, _Parchment$Container);

            function Container() {
              _classCallCheck(this, Container);

              return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
            }

            return Container;
          }(_parchment2["default"].Container);

          Container.allowedChildren = [_block2["default"], _block.BlockEmbed, Container];
          exports["default"] = Container;
          /***/
        },
        /* 26 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ColorAttributor = function (_Parchment$Attributor) {
            _inherits(ColorAttributor, _Parchment$Attributor);

            function ColorAttributor() {
              _classCallCheck(this, ColorAttributor);

              return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));
            }

            _createClass(ColorAttributor, [{
              key: 'value',
              value: function value(domNode) {
                var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), 'value', this).call(this, domNode);

                if (!value.startsWith('rgb(')) return value;
                value = value.replace(/^[^\d]+/, '').replace(/[^\d]+$/, '');
                return '#' + value.split(',').map(function (component) {
                  return ('00' + parseInt(component).toString(16)).slice(-2);
                }).join('');
              }
            }]);

            return ColorAttributor;
          }(_parchment2["default"].Attributor.Style);

          var ColorClass = new _parchment2["default"].Attributor.Class('color', 'ql-color', {
            scope: _parchment2["default"].Scope.INLINE
          });
          var ColorStyle = new ColorAttributor('color', 'color', {
            scope: _parchment2["default"].Scope.INLINE
          });
          exports.ColorAttributor = ColorAttributor;
          exports.ColorClass = ColorClass;
          exports.ColorStyle = ColorStyle;
          /***/
        },
        /* 27 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.sanitize = exports["default"] = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Link = function (_Inline) {
            _inherits(Link, _Inline);

            function Link() {
              _classCallCheck(this, Link);

              return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
            }

            _createClass(Link, [{
              key: 'format',
              value: function format(name, value) {
                if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), 'format', this).call(this, name, value);
                value = this.constructor.sanitize(value);
                this.domNode.setAttribute('href', value);
              }
            }], [{
              key: 'create',
              value: function create(value) {
                var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), 'create', this).call(this, value);

                value = this.sanitize(value);
                node.setAttribute('href', value);
                node.setAttribute('rel', 'noopener noreferrer');
                node.setAttribute('target', '_blank');
                return node;
              }
            }, {
              key: 'formats',
              value: function formats(domNode) {
                return domNode.getAttribute('href');
              }
            }, {
              key: 'sanitize',
              value: function sanitize(url) {
                return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
              }
            }]);

            return Link;
          }(_inline2["default"]);

          Link.blotName = 'link';
          Link.tagName = 'A';
          Link.SANITIZED_URL = 'about:blank';
          Link.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];

          function _sanitize(url, protocols) {
            var anchor = document.createElement('a');
            anchor.href = url;
            var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
            return protocols.indexOf(protocol) > -1;
          }

          exports["default"] = Link;
          exports.sanitize = _sanitize;
          /***/
        },
        /* 28 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
          } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _keyboard = __webpack_require__(23);

          var _keyboard2 = _interopRequireDefault(_keyboard);

          var _dropdown = __webpack_require__(107);

          var _dropdown2 = _interopRequireDefault(_dropdown);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var optionsCounter = 0;

          function toggleAriaAttribute(element, attribute) {
            element.setAttribute(attribute, !(element.getAttribute(attribute) === 'true'));
          }

          var Picker = function () {
            function Picker(select) {
              var _this = this;

              _classCallCheck(this, Picker);

              this.select = select;
              this.container = document.createElement('span');
              this.buildPicker();
              this.select.style.display = 'none';
              this.select.parentNode.insertBefore(this.container, this.select);
              this.label.addEventListener('mousedown', function () {
                _this.togglePicker();
              });
              this.label.addEventListener('keydown', function (event) {
                switch (event.keyCode) {
                  // Allows the "Enter" key to open the picker
                  case _keyboard2["default"].keys.ENTER:
                    _this.togglePicker();

                    break;
                  // Allows the "Escape" key to close the picker

                  case _keyboard2["default"].keys.ESCAPE:
                    _this.escape();

                    event.preventDefault();
                    break;

                  default:
                }
              });
              this.select.addEventListener('change', this.update.bind(this));
            }

            _createClass(Picker, [{
              key: 'togglePicker',
              value: function togglePicker() {
                this.container.classList.toggle('ql-expanded'); // Toggle aria-expanded and aria-hidden to make the picker accessible

                toggleAriaAttribute(this.label, 'aria-expanded');
                toggleAriaAttribute(this.options, 'aria-hidden');
              }
            }, {
              key: 'buildItem',
              value: function buildItem(option) {
                var _this2 = this;

                var item = document.createElement('span');
                item.tabIndex = '0';
                item.setAttribute('role', 'button');
                item.classList.add('ql-picker-item');

                if (option.hasAttribute('value')) {
                  item.setAttribute('data-value', option.getAttribute('value'));
                }

                if (option.textContent) {
                  item.setAttribute('data-label', option.textContent);
                }

                item.addEventListener('click', function () {
                  _this2.selectItem(item, true);
                });
                item.addEventListener('keydown', function (event) {
                  switch (event.keyCode) {
                    // Allows the "Enter" key to select an item
                    case _keyboard2["default"].keys.ENTER:
                      _this2.selectItem(item, true);

                      event.preventDefault();
                      break;
                    // Allows the "Escape" key to close the picker

                    case _keyboard2["default"].keys.ESCAPE:
                      _this2.escape();

                      event.preventDefault();
                      break;

                    default:
                  }
                });
                return item;
              }
            }, {
              key: 'buildLabel',
              value: function buildLabel() {
                var label = document.createElement('span');
                label.classList.add('ql-picker-label');
                label.innerHTML = _dropdown2["default"];
                label.tabIndex = '0';
                label.setAttribute('role', 'button');
                label.setAttribute('aria-expanded', 'false');
                this.container.appendChild(label);
                return label;
              }
            }, {
              key: 'buildOptions',
              value: function buildOptions() {
                var _this3 = this;

                var options = document.createElement('span');
                options.classList.add('ql-picker-options'); // Don't want screen readers to read this until options are visible

                options.setAttribute('aria-hidden', 'true');
                options.tabIndex = '-1'; // Need a unique id for aria-controls

                options.id = 'ql-picker-options-' + optionsCounter;
                optionsCounter += 1;
                this.label.setAttribute('aria-controls', options.id);
                this.options = options;
                [].slice.call(this.select.options).forEach(function (option) {
                  var item = _this3.buildItem(option);

                  options.appendChild(item);

                  if (option.selected === true) {
                    _this3.selectItem(item);
                  }
                });
                this.container.appendChild(options);
              }
            }, {
              key: 'buildPicker',
              value: function buildPicker() {
                var _this4 = this;

                [].slice.call(this.select.attributes).forEach(function (item) {
                  _this4.container.setAttribute(item.name, item.value);
                });
                this.container.classList.add('ql-picker');
                this.label = this.buildLabel();
                this.buildOptions();
              }
            }, {
              key: 'escape',
              value: function escape() {
                var _this5 = this; // Close menu and return focus to trigger label


                this.close(); // Need setTimeout for accessibility to ensure that the browser executes
                // focus on the next process thread and after any DOM content changes

                setTimeout(function () {
                  return _this5.label.focus();
                }, 1);
              }
            }, {
              key: 'close',
              value: function close() {
                this.container.classList.remove('ql-expanded');
                this.label.setAttribute('aria-expanded', 'false');
                this.options.setAttribute('aria-hidden', 'true');
              }
            }, {
              key: 'selectItem',
              value: function selectItem(item) {
                var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                var selected = this.container.querySelector('.ql-selected');
                if (item === selected) return;

                if (selected != null) {
                  selected.classList.remove('ql-selected');
                }

                if (item == null) return;
                item.classList.add('ql-selected');
                this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);

                if (item.hasAttribute('data-value')) {
                  this.label.setAttribute('data-value', item.getAttribute('data-value'));
                } else {
                  this.label.removeAttribute('data-value');
                }

                if (item.hasAttribute('data-label')) {
                  this.label.setAttribute('data-label', item.getAttribute('data-label'));
                } else {
                  this.label.removeAttribute('data-label');
                }

                if (trigger) {
                  if (typeof Event === 'function') {
                    this.select.dispatchEvent(new Event('change'));
                  } else if ((typeof Event === 'undefined' ? 'undefined' : _typeof(Event)) === 'object') {
                    // IE11
                    var event = document.createEvent('Event');
                    event.initEvent('change', true, true);
                    this.select.dispatchEvent(event);
                  }

                  this.close();
                }
              }
            }, {
              key: 'update',
              value: function update() {
                var option = void 0;

                if (this.select.selectedIndex > -1) {
                  var item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];
                  option = this.select.options[this.select.selectedIndex];
                  this.selectItem(item);
                } else {
                  this.selectItem(null);
                }

                var isActive = option != null && option !== this.select.querySelector('option[selected]');
                this.label.classList.toggle('ql-active', isActive);
              }
            }]);

            return Picker;
          }();

          exports["default"] = Picker;
          /***/
        },
        /* 29 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          var _break = __webpack_require__(16);

          var _break2 = _interopRequireDefault(_break);

          var _container = __webpack_require__(25);

          var _container2 = _interopRequireDefault(_container);

          var _cursor = __webpack_require__(24);

          var _cursor2 = _interopRequireDefault(_cursor);

          var _embed = __webpack_require__(35);

          var _embed2 = _interopRequireDefault(_embed);

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          var _scroll = __webpack_require__(22);

          var _scroll2 = _interopRequireDefault(_scroll);

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          var _clipboard = __webpack_require__(55);

          var _clipboard2 = _interopRequireDefault(_clipboard);

          var _history = __webpack_require__(42);

          var _history2 = _interopRequireDefault(_history);

          var _keyboard = __webpack_require__(23);

          var _keyboard2 = _interopRequireDefault(_keyboard);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          _quill2["default"].register({
            'blots/block': _block2["default"],
            'blots/block/embed': _block.BlockEmbed,
            'blots/break': _break2["default"],
            'blots/container': _container2["default"],
            'blots/cursor': _cursor2["default"],
            'blots/embed': _embed2["default"],
            'blots/inline': _inline2["default"],
            'blots/scroll': _scroll2["default"],
            'blots/text': _text2["default"],
            'modules/clipboard': _clipboard2["default"],
            'modules/history': _history2["default"],
            'modules/keyboard': _keyboard2["default"]
          });

          _parchment2["default"].register(_block2["default"], _break2["default"], _cursor2["default"], _inline2["default"], _scroll2["default"], _text2["default"]);

          exports["default"] = _quill2["default"];
          /***/
        },
        /* 30 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var Registry = __webpack_require__(1);

          var ShadowBlot =
          /** @class */
          function () {
            function ShadowBlot(domNode) {
              this.domNode = domNode; // @ts-ignore

              this.domNode[Registry.DATA_KEY] = {
                blot: this
              };
            }

            Object.defineProperty(ShadowBlot.prototype, "statics", {
              // Hack for accessing inherited static methods
              get: function get() {
                return this.constructor;
              },
              enumerable: true,
              configurable: true
            });

            ShadowBlot.create = function (value) {
              if (this.tagName == null) {
                throw new Registry.ParchmentError('Blot definition missing tagName');
              }

              var node;

              if (Array.isArray(this.tagName)) {
                if (typeof value === 'string') {
                  value = value.toUpperCase();

                  if (parseInt(value).toString() === value) {
                    value = parseInt(value);
                  }
                }

                if (typeof value === 'number') {
                  node = document.createElement(this.tagName[value - 1]);
                } else if (this.tagName.indexOf(value) > -1) {
                  node = document.createElement(value);
                } else {
                  node = document.createElement(this.tagName[0]);
                }
              } else {
                node = document.createElement(this.tagName);
              }

              if (this.className) {
                node.classList.add(this.className);
              }

              return node;
            };

            ShadowBlot.prototype.attach = function () {
              if (this.parent != null) {
                this.scroll = this.parent.scroll;
              }
            };

            ShadowBlot.prototype.clone = function () {
              var domNode = this.domNode.cloneNode(false);
              return Registry.create(domNode);
            };

            ShadowBlot.prototype.detach = function () {
              if (this.parent != null) this.parent.removeChild(this); // @ts-ignore

              delete this.domNode[Registry.DATA_KEY];
            };

            ShadowBlot.prototype.deleteAt = function (index, length) {
              var blot = this.isolate(index, length);
              blot.remove();
            };

            ShadowBlot.prototype.formatAt = function (index, length, name, value) {
              var blot = this.isolate(index, length);

              if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
                blot.wrap(name, value);
              } else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
                var parent = Registry.create(this.statics.scope);
                blot.wrap(parent);
                parent.format(name, value);
              }
            };

            ShadowBlot.prototype.insertAt = function (index, value, def) {
              var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
              var ref = this.split(index);
              this.parent.insertBefore(blot, ref);
            };

            ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {
              if (refBlot === void 0) {
                refBlot = null;
              }

              if (this.parent != null) {
                this.parent.children.remove(this);
              }

              var refDomNode = null;
              parentBlot.children.insertBefore(this, refBlot);

              if (refBlot != null) {
                refDomNode = refBlot.domNode;
              }

              if (this.domNode.parentNode != parentBlot.domNode || this.domNode.nextSibling != refDomNode) {
                parentBlot.domNode.insertBefore(this.domNode, refDomNode);
              }

              this.parent = parentBlot;
              this.attach();
            };

            ShadowBlot.prototype.isolate = function (index, length) {
              var target = this.split(index);
              target.split(length);
              return target;
            };

            ShadowBlot.prototype.length = function () {
              return 1;
            };

            ShadowBlot.prototype.offset = function (root) {
              if (root === void 0) {
                root = this.parent;
              }

              if (this.parent == null || this == root) return 0;
              return this.parent.children.offset(this) + this.parent.offset(root);
            };

            ShadowBlot.prototype.optimize = function (context) {
              // TODO clean up once we use WeakMap
              // @ts-ignore
              if (this.domNode[Registry.DATA_KEY] != null) {
                // @ts-ignore
                delete this.domNode[Registry.DATA_KEY].mutations;
              }
            };

            ShadowBlot.prototype.remove = function () {
              if (this.domNode.parentNode != null) {
                this.domNode.parentNode.removeChild(this.domNode);
              }

              this.detach();
            };

            ShadowBlot.prototype.replace = function (target) {
              if (target.parent == null) return;
              target.parent.insertBefore(this, target.next);
              target.remove();
            };

            ShadowBlot.prototype.replaceWith = function (name, value) {
              var replacement = typeof name === 'string' ? Registry.create(name, value) : name;
              replacement.replace(this);
              return replacement;
            };

            ShadowBlot.prototype.split = function (index, force) {
              return index === 0 ? this : this.next;
            };

            ShadowBlot.prototype.update = function (mutations, context) {// Nothing to do by default
            };

            ShadowBlot.prototype.wrap = function (name, value) {
              var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;

              if (this.parent != null) {
                this.parent.insertBefore(wrapper, this.next);
              }

              wrapper.appendChild(this);
              return wrapper;
            };

            ShadowBlot.blotName = 'abstract';
            return ShadowBlot;
          }();

          exports["default"] = ShadowBlot;
          /***/
        },
        /* 31 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var attributor_1 = __webpack_require__(12);

          var class_1 = __webpack_require__(32);

          var style_1 = __webpack_require__(33);

          var Registry = __webpack_require__(1);

          var AttributorStore =
          /** @class */
          function () {
            function AttributorStore(domNode) {
              this.attributes = {};
              this.domNode = domNode;
              this.build();
            }

            AttributorStore.prototype.attribute = function (attribute, value) {
              // verb
              if (value) {
                if (attribute.add(this.domNode, value)) {
                  if (attribute.value(this.domNode) != null) {
                    this.attributes[attribute.attrName] = attribute;
                  } else {
                    delete this.attributes[attribute.attrName];
                  }
                }
              } else {
                attribute.remove(this.domNode);
                delete this.attributes[attribute.attrName];
              }
            };

            AttributorStore.prototype.build = function () {
              var _this = this;

              this.attributes = {};
              var attributes = attributor_1["default"].keys(this.domNode);
              var classes = class_1["default"].keys(this.domNode);
              var styles = style_1["default"].keys(this.domNode);
              attributes.concat(classes).concat(styles).forEach(function (name) {
                var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);

                if (attr instanceof attributor_1["default"]) {
                  _this.attributes[attr.attrName] = attr;
                }
              });
            };

            AttributorStore.prototype.copy = function (target) {
              var _this = this;

              Object.keys(this.attributes).forEach(function (key) {
                var value = _this.attributes[key].value(_this.domNode);

                target.format(key, value);
              });
            };

            AttributorStore.prototype.move = function (target) {
              var _this = this;

              this.copy(target);
              Object.keys(this.attributes).forEach(function (key) {
                _this.attributes[key].remove(_this.domNode);
              });
              this.attributes = {};
            };

            AttributorStore.prototype.values = function () {
              var _this = this;

              return Object.keys(this.attributes).reduce(function (attributes, name) {
                attributes[name] = _this.attributes[name].value(_this.domNode);
                return attributes;
              }, {});
            };

            return AttributorStore;
          }();

          exports["default"] = AttributorStore;
          /***/
        },
        /* 32 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var attributor_1 = __webpack_require__(12);

          function match(node, prefix) {
            var className = node.getAttribute('class') || '';
            return className.split(/\s+/).filter(function (name) {
              return name.indexOf(prefix + "-") === 0;
            });
          }

          var ClassAttributor =
          /** @class */
          function (_super) {
            __extends(ClassAttributor, _super);

            function ClassAttributor() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            ClassAttributor.keys = function (node) {
              return (node.getAttribute('class') || '').split(/\s+/).map(function (name) {
                return name.split('-').slice(0, -1).join('-');
              });
            };

            ClassAttributor.prototype.add = function (node, value) {
              if (!this.canAdd(node, value)) return false;
              this.remove(node);
              node.classList.add(this.keyName + "-" + value);
              return true;
            };

            ClassAttributor.prototype.remove = function (node) {
              var matches = match(node, this.keyName);
              matches.forEach(function (name) {
                node.classList.remove(name);
              });

              if (node.classList.length === 0) {
                node.removeAttribute('class');
              }
            };

            ClassAttributor.prototype.value = function (node) {
              var result = match(node, this.keyName)[0] || '';
              var value = result.slice(this.keyName.length + 1); // +1 for hyphen

              return this.canAdd(node, value) ? value : '';
            };

            return ClassAttributor;
          }(attributor_1["default"]);

          exports["default"] = ClassAttributor;
          /***/
        },
        /* 33 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var attributor_1 = __webpack_require__(12);

          function camelize(name) {
            var parts = name.split('-');
            var rest = parts.slice(1).map(function (part) {
              return part[0].toUpperCase() + part.slice(1);
            }).join('');
            return parts[0] + rest;
          }

          var StyleAttributor =
          /** @class */
          function (_super) {
            __extends(StyleAttributor, _super);

            function StyleAttributor() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            StyleAttributor.keys = function (node) {
              return (node.getAttribute('style') || '').split(';').map(function (value) {
                var arr = value.split(':');
                return arr[0].trim();
              });
            };

            StyleAttributor.prototype.add = function (node, value) {
              if (!this.canAdd(node, value)) return false; // @ts-ignore

              node.style[camelize(this.keyName)] = value;
              return true;
            };

            StyleAttributor.prototype.remove = function (node) {
              // @ts-ignore
              node.style[camelize(this.keyName)] = '';

              if (!node.getAttribute('style')) {
                node.removeAttribute('style');
              }
            };

            StyleAttributor.prototype.value = function (node) {
              // @ts-ignore
              var value = node.style[camelize(this.keyName)];
              return this.canAdd(node, value) ? value : '';
            };

            return StyleAttributor;
          }(attributor_1["default"]);

          exports["default"] = StyleAttributor;
          /***/
        },
        /* 34 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var Theme = function () {
            function Theme(quill, options) {
              _classCallCheck(this, Theme);

              this.quill = quill;
              this.options = options;
              this.modules = {};
            }

            _createClass(Theme, [{
              key: 'init',
              value: function init() {
                var _this = this;

                Object.keys(this.options.modules).forEach(function (name) {
                  if (_this.modules[name] == null) {
                    _this.addModule(name);
                  }
                });
              }
            }, {
              key: 'addModule',
              value: function addModule(name) {
                var moduleClass = this.quill.constructor["import"]('modules/' + name);
                this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
                return this.modules[name];
              }
            }]);

            return Theme;
          }();

          Theme.DEFAULTS = {
            modules: {}
          };
          Theme.themes = {
            'default': Theme
          };
          exports["default"] = Theme;
          /***/
        },
        /* 35 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _text = __webpack_require__(7);

          var _text2 = _interopRequireDefault(_text);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var GUARD_TEXT = "\uFEFF";

          var Embed = function (_Parchment$Embed) {
            _inherits(Embed, _Parchment$Embed);

            function Embed(node) {
              _classCallCheck(this, Embed);

              var _this = _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(this, node));

              _this.contentNode = document.createElement('span');

              _this.contentNode.setAttribute('contenteditable', false);

              [].slice.call(_this.domNode.childNodes).forEach(function (childNode) {
                _this.contentNode.appendChild(childNode);
              });
              _this.leftGuard = document.createTextNode(GUARD_TEXT);
              _this.rightGuard = document.createTextNode(GUARD_TEXT);

              _this.domNode.appendChild(_this.leftGuard);

              _this.domNode.appendChild(_this.contentNode);

              _this.domNode.appendChild(_this.rightGuard);

              return _this;
            }

            _createClass(Embed, [{
              key: 'index',
              value: function index(node, offset) {
                if (node === this.leftGuard) return 0;
                if (node === this.rightGuard) return 1;
                return _get(Embed.prototype.__proto__ || Object.getPrototypeOf(Embed.prototype), 'index', this).call(this, node, offset);
              }
            }, {
              key: 'restore',
              value: function restore(node) {
                var range = void 0,
                    textNode = void 0;
                var text = node.data.split(GUARD_TEXT).join('');

                if (node === this.leftGuard) {
                  if (this.prev instanceof _text2["default"]) {
                    var prevLength = this.prev.length();
                    this.prev.insertAt(prevLength, text);
                    range = {
                      startNode: this.prev.domNode,
                      startOffset: prevLength + text.length
                    };
                  } else {
                    textNode = document.createTextNode(text);
                    this.parent.insertBefore(_parchment2["default"].create(textNode), this);
                    range = {
                      startNode: textNode,
                      startOffset: text.length
                    };
                  }
                } else if (node === this.rightGuard) {
                  if (this.next instanceof _text2["default"]) {
                    this.next.insertAt(0, text);
                    range = {
                      startNode: this.next.domNode,
                      startOffset: text.length
                    };
                  } else {
                    textNode = document.createTextNode(text);
                    this.parent.insertBefore(_parchment2["default"].create(textNode), this.next);
                    range = {
                      startNode: textNode,
                      startOffset: text.length
                    };
                  }
                }

                node.data = GUARD_TEXT;
                return range;
              }
            }, {
              key: 'update',
              value: function update(mutations, context) {
                var _this2 = this;

                mutations.forEach(function (mutation) {
                  if (mutation.type === 'characterData' && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
                    var range = _this2.restore(mutation.target);

                    if (range) context.range = range;
                  }
                });
              }
            }]);

            return Embed;
          }(_parchment2["default"].Embed);

          exports["default"] = Embed;
          /***/
        },
        /* 36 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          var config = {
            scope: _parchment2["default"].Scope.BLOCK,
            whitelist: ['right', 'center', 'justify']
          };
          var AlignAttribute = new _parchment2["default"].Attributor.Attribute('align', 'align', config);
          var AlignClass = new _parchment2["default"].Attributor.Class('align', 'ql-align', config);
          var AlignStyle = new _parchment2["default"].Attributor.Style('align', 'text-align', config);
          exports.AlignAttribute = AlignAttribute;
          exports.AlignClass = AlignClass;
          exports.AlignStyle = AlignStyle;
          /***/
        },
        /* 37 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.BackgroundStyle = exports.BackgroundClass = undefined;

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _color = __webpack_require__(26);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          var BackgroundClass = new _parchment2["default"].Attributor.Class('background', 'ql-bg', {
            scope: _parchment2["default"].Scope.INLINE
          });
          var BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {
            scope: _parchment2["default"].Scope.INLINE
          });
          exports.BackgroundClass = BackgroundClass;
          exports.BackgroundStyle = BackgroundStyle;
          /***/
        },
        /* 38 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          var config = {
            scope: _parchment2["default"].Scope.BLOCK,
            whitelist: ['rtl']
          };
          var DirectionAttribute = new _parchment2["default"].Attributor.Attribute('direction', 'dir', config);
          var DirectionClass = new _parchment2["default"].Attributor.Class('direction', 'ql-direction', config);
          var DirectionStyle = new _parchment2["default"].Attributor.Style('direction', 'direction', config);
          exports.DirectionAttribute = DirectionAttribute;
          exports.DirectionClass = DirectionClass;
          exports.DirectionStyle = DirectionStyle;
          /***/
        },
        /* 39 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.FontClass = exports.FontStyle = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var config = {
            scope: _parchment2["default"].Scope.INLINE,
            whitelist: ['serif', 'monospace']
          };
          var FontClass = new _parchment2["default"].Attributor.Class('font', 'ql-font', config);

          var FontStyleAttributor = function (_Parchment$Attributor) {
            _inherits(FontStyleAttributor, _Parchment$Attributor);

            function FontStyleAttributor() {
              _classCallCheck(this, FontStyleAttributor);

              return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));
            }

            _createClass(FontStyleAttributor, [{
              key: 'value',
              value: function value(node) {
                return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), 'value', this).call(this, node).replace(/["']/g, '');
              }
            }]);

            return FontStyleAttributor;
          }(_parchment2["default"].Attributor.Style);

          var FontStyle = new FontStyleAttributor('font', 'font-family', config);
          exports.FontStyle = FontStyle;
          exports.FontClass = FontClass;
          /***/
        },
        /* 40 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.SizeStyle = exports.SizeClass = undefined;

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          var SizeClass = new _parchment2["default"].Attributor.Class('size', 'ql-size', {
            scope: _parchment2["default"].Scope.INLINE,
            whitelist: ['small', 'large', 'huge']
          });
          var SizeStyle = new _parchment2["default"].Attributor.Style('size', 'font-size', {
            scope: _parchment2["default"].Scope.INLINE,
            whitelist: ['10px', '18px', '32px']
          });
          exports.SizeClass = SizeClass;
          exports.SizeStyle = SizeStyle;
          /***/
        },
        /* 41 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          module.exports = {
            'align': {
              '': __webpack_require__(76),
              'center': __webpack_require__(77),
              'right': __webpack_require__(78),
              'justify': __webpack_require__(79)
            },
            'background': __webpack_require__(80),
            'blockquote': __webpack_require__(81),
            'bold': __webpack_require__(82),
            'clean': __webpack_require__(83),
            'code': __webpack_require__(58),
            'code-block': __webpack_require__(58),
            'color': __webpack_require__(84),
            'direction': {
              '': __webpack_require__(85),
              'rtl': __webpack_require__(86)
            },
            'float': {
              'center': __webpack_require__(87),
              'full': __webpack_require__(88),
              'left': __webpack_require__(89),
              'right': __webpack_require__(90)
            },
            'formula': __webpack_require__(91),
            'header': {
              '1': __webpack_require__(92),
              '2': __webpack_require__(93)
            },
            'italic': __webpack_require__(94),
            'image': __webpack_require__(95),
            'indent': {
              '+1': __webpack_require__(96),
              '-1': __webpack_require__(97)
            },
            'link': __webpack_require__(98),
            'list': {
              'ordered': __webpack_require__(99),
              'bullet': __webpack_require__(100),
              'check': __webpack_require__(101)
            },
            'script': {
              'sub': __webpack_require__(102),
              'super': __webpack_require__(103)
            },
            'strike': __webpack_require__(104),
            'underline': __webpack_require__(105),
            'video': __webpack_require__(106)
          };
          /***/
        },
        /* 42 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.getLastChangeIndex = exports["default"] = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var History = function (_Module) {
            _inherits(History, _Module);

            function History(quill, options) {
              _classCallCheck(this, History);

              var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));

              _this.lastRecorded = 0;
              _this.ignoreChange = false;

              _this.clear();

              _this.quill.on(_quill2["default"].events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {
                if (eventName !== _quill2["default"].events.TEXT_CHANGE || _this.ignoreChange) return;

                if (!_this.options.userOnly || source === _quill2["default"].sources.USER) {
                  _this.record(delta, oldDelta);
                } else {
                  _this.transform(delta);
                }
              });

              _this.quill.keyboard.addBinding({
                key: 'Z',
                shortKey: true
              }, _this.undo.bind(_this));

              _this.quill.keyboard.addBinding({
                key: 'Z',
                shortKey: true,
                shiftKey: true
              }, _this.redo.bind(_this));

              if (/Win/i.test(navigator.platform)) {
                _this.quill.keyboard.addBinding({
                  key: 'Y',
                  shortKey: true
                }, _this.redo.bind(_this));
              }

              return _this;
            }

            _createClass(History, [{
              key: 'change',
              value: function change(source, dest) {
                if (this.stack[source].length === 0) return;
                var delta = this.stack[source].pop();
                this.stack[dest].push(delta);
                this.lastRecorded = 0;
                this.ignoreChange = true;
                this.quill.updateContents(delta[source], _quill2["default"].sources.USER);
                this.ignoreChange = false;
                var index = getLastChangeIndex(delta[source]);
                this.quill.setSelection(index);
              }
            }, {
              key: 'clear',
              value: function clear() {
                this.stack = {
                  undo: [],
                  redo: []
                };
              }
            }, {
              key: 'cutoff',
              value: function cutoff() {
                this.lastRecorded = 0;
              }
            }, {
              key: 'record',
              value: function record(changeDelta, oldDelta) {
                if (changeDelta.ops.length === 0) return;
                this.stack.redo = [];
                var undoDelta = this.quill.getContents().diff(oldDelta);
                var timestamp = Date.now();

                if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
                  var delta = this.stack.undo.pop();
                  undoDelta = undoDelta.compose(delta.undo);
                  changeDelta = delta.redo.compose(changeDelta);
                } else {
                  this.lastRecorded = timestamp;
                }

                this.stack.undo.push({
                  redo: changeDelta,
                  undo: undoDelta
                });

                if (this.stack.undo.length > this.options.maxStack) {
                  this.stack.undo.shift();
                }
              }
            }, {
              key: 'redo',
              value: function redo() {
                this.change('redo', 'undo');
              }
            }, {
              key: 'transform',
              value: function transform(delta) {
                this.stack.undo.forEach(function (change) {
                  change.undo = delta.transform(change.undo, true);
                  change.redo = delta.transform(change.redo, true);
                });
                this.stack.redo.forEach(function (change) {
                  change.undo = delta.transform(change.undo, true);
                  change.redo = delta.transform(change.redo, true);
                });
              }
            }, {
              key: 'undo',
              value: function undo() {
                this.change('undo', 'redo');
              }
            }]);

            return History;
          }(_module2["default"]);

          History.DEFAULTS = {
            delay: 1000,
            maxStack: 100,
            userOnly: false
          };

          function endsWithNewlineChange(delta) {
            var lastOp = delta.ops[delta.ops.length - 1];
            if (lastOp == null) return false;

            if (lastOp.insert != null) {
              return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\n');
            }

            if (lastOp.attributes != null) {
              return Object.keys(lastOp.attributes).some(function (attr) {
                return _parchment2["default"].query(attr, _parchment2["default"].Scope.BLOCK) != null;
              });
            }

            return false;
          }

          function getLastChangeIndex(delta) {
            var deleteLength = delta.reduce(function (length, op) {
              length += op["delete"] || 0;
              return length;
            }, 0);
            var changeIndex = delta.length() - deleteLength;

            if (endsWithNewlineChange(delta)) {
              changeIndex -= 1;
            }

            return changeIndex;
          }

          exports["default"] = History;
          exports.getLastChangeIndex = getLastChangeIndex;
          /***/
        },
        /* 43 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.BaseTooltip = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _emitter = __webpack_require__(8);

          var _emitter2 = _interopRequireDefault(_emitter);

          var _keyboard = __webpack_require__(23);

          var _keyboard2 = _interopRequireDefault(_keyboard);

          var _theme = __webpack_require__(34);

          var _theme2 = _interopRequireDefault(_theme);

          var _colorPicker = __webpack_require__(59);

          var _colorPicker2 = _interopRequireDefault(_colorPicker);

          var _iconPicker = __webpack_require__(60);

          var _iconPicker2 = _interopRequireDefault(_iconPicker);

          var _picker = __webpack_require__(28);

          var _picker2 = _interopRequireDefault(_picker);

          var _tooltip = __webpack_require__(61);

          var _tooltip2 = _interopRequireDefault(_tooltip);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ALIGNS = [false, 'center', 'right', 'justify'];
          var COLORS = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];
          var FONTS = [false, 'serif', 'monospace'];
          var HEADERS = ['1', '2', '3', false];
          var SIZES = ['small', false, 'large', 'huge'];

          var BaseTheme = function (_Theme) {
            _inherits(BaseTheme, _Theme);

            function BaseTheme(quill, options) {
              _classCallCheck(this, BaseTheme);

              var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));

              var listener = function listener(e) {
                if (!document.body.contains(quill.root)) {
                  return document.body.removeEventListener('click', listener);
                }

                if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
                  _this.tooltip.hide();
                }

                if (_this.pickers != null) {
                  _this.pickers.forEach(function (picker) {
                    if (!picker.container.contains(e.target)) {
                      picker.close();
                    }
                  });
                }
              };

              quill.emitter.listenDOM('click', document.body, listener);
              return _this;
            }

            _createClass(BaseTheme, [{
              key: 'addModule',
              value: function addModule(name) {
                var module = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), 'addModule', this).call(this, name);

                if (name === 'toolbar') {
                  this.extendToolbar(module);
                }

                return module;
              }
            }, {
              key: 'buildButtons',
              value: function buildButtons(buttons, icons) {
                buttons.forEach(function (button) {
                  var className = button.getAttribute('class') || '';
                  className.split(/\s+/).forEach(function (name) {
                    if (!name.startsWith('ql-')) return;
                    name = name.slice('ql-'.length);
                    if (icons[name] == null) return;

                    if (name === 'direction') {
                      button.innerHTML = icons[name][''] + icons[name]['rtl'];
                    } else if (typeof icons[name] === 'string') {
                      button.innerHTML = icons[name];
                    } else {
                      var value = button.value || '';

                      if (value != null && icons[name][value]) {
                        button.innerHTML = icons[name][value];
                      }
                    }
                  });
                });
              }
            }, {
              key: 'buildPickers',
              value: function buildPickers(selects, icons) {
                var _this2 = this;

                this.pickers = selects.map(function (select) {
                  if (select.classList.contains('ql-align')) {
                    if (select.querySelector('option') == null) {
                      fillSelect(select, ALIGNS);
                    }

                    return new _iconPicker2["default"](select, icons.align);
                  } else if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {
                    var format = select.classList.contains('ql-background') ? 'background' : 'color';

                    if (select.querySelector('option') == null) {
                      fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');
                    }

                    return new _colorPicker2["default"](select, icons[format]);
                  } else {
                    if (select.querySelector('option') == null) {
                      if (select.classList.contains('ql-font')) {
                        fillSelect(select, FONTS);
                      } else if (select.classList.contains('ql-header')) {
                        fillSelect(select, HEADERS);
                      } else if (select.classList.contains('ql-size')) {
                        fillSelect(select, SIZES);
                      }
                    }

                    return new _picker2["default"](select);
                  }
                });

                var update = function update() {
                  _this2.pickers.forEach(function (picker) {
                    picker.update();
                  });
                };

                this.quill.on(_emitter2["default"].events.EDITOR_CHANGE, update);
              }
            }]);

            return BaseTheme;
          }(_theme2["default"]);

          BaseTheme.DEFAULTS = (0, _extend2["default"])(true, {}, _theme2["default"].DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  formula: function formula() {
                    this.quill.theme.tooltip.edit('formula');
                  },
                  image: function image() {
                    var _this3 = this;

                    var fileInput = this.container.querySelector('input.ql-image[type=file]');

                    if (fileInput == null) {
                      fileInput = document.createElement('input');
                      fileInput.setAttribute('type', 'file');
                      fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
                      fileInput.classList.add('ql-image');
                      fileInput.addEventListener('change', function () {
                        if (fileInput.files != null && fileInput.files[0] != null) {
                          var reader = new FileReader();

                          reader.onload = function (e) {
                            var range = _this3.quill.getSelection(true);

                            _this3.quill.updateContents(new _quillDelta2["default"]().retain(range.index)["delete"](range.length).insert({
                              image: e.target.result
                            }), _emitter2["default"].sources.USER);

                            _this3.quill.setSelection(range.index + 1, _emitter2["default"].sources.SILENT);

                            fileInput.value = "";
                          };

                          reader.readAsDataURL(fileInput.files[0]);
                        }
                      });
                      this.container.appendChild(fileInput);
                    }

                    fileInput.click();
                  },
                  video: function video() {
                    this.quill.theme.tooltip.edit('video');
                  }
                }
              }
            }
          });

          var BaseTooltip = function (_Tooltip) {
            _inherits(BaseTooltip, _Tooltip);

            function BaseTooltip(quill, boundsContainer) {
              _classCallCheck(this, BaseTooltip);

              var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));

              _this4.textbox = _this4.root.querySelector('input[type="text"]');

              _this4.listen();

              return _this4;
            }

            _createClass(BaseTooltip, [{
              key: 'listen',
              value: function listen() {
                var _this5 = this;

                this.textbox.addEventListener('keydown', function (event) {
                  if (_keyboard2["default"].match(event, 'enter')) {
                    _this5.save();

                    event.preventDefault();
                  } else if (_keyboard2["default"].match(event, 'escape')) {
                    _this5.cancel();

                    event.preventDefault();
                  }
                });
              }
            }, {
              key: 'cancel',
              value: function cancel() {
                this.hide();
              }
            }, {
              key: 'edit',
              value: function edit() {
                var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'link';
                var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                this.root.classList.remove('ql-hidden');
                this.root.classList.add('ql-editing');

                if (preview != null) {
                  this.textbox.value = preview;
                } else if (mode !== this.root.getAttribute('data-mode')) {
                  this.textbox.value = '';
                }

                this.position(this.quill.getBounds(this.quill.selection.savedRange));
                this.textbox.select();
                this.textbox.setAttribute('placeholder', this.textbox.getAttribute('data-' + mode) || '');
                this.root.setAttribute('data-mode', mode);
              }
            }, {
              key: 'restoreFocus',
              value: function restoreFocus() {
                var scrollTop = this.quill.scrollingContainer.scrollTop;
                this.quill.focus();
                this.quill.scrollingContainer.scrollTop = scrollTop;
              }
            }, {
              key: 'save',
              value: function save() {
                var value = this.textbox.value;

                switch (this.root.getAttribute('data-mode')) {
                  case 'link':
                    {
                      var scrollTop = this.quill.root.scrollTop;

                      if (this.linkRange) {
                        this.quill.formatText(this.linkRange, 'link', value, _emitter2["default"].sources.USER);
                        delete this.linkRange;
                      } else {
                        this.restoreFocus();
                        this.quill.format('link', value, _emitter2["default"].sources.USER);
                      }

                      this.quill.root.scrollTop = scrollTop;
                      break;
                    }

                  case 'video':
                    {
                      value = extractVideoUrl(value);
                    }
                  // eslint-disable-next-line no-fallthrough

                  case 'formula':
                    {
                      if (!value) break;
                      var range = this.quill.getSelection(true);

                      if (range != null) {
                        var index = range.index + range.length;
                        this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2["default"].sources.USER);

                        if (this.root.getAttribute('data-mode') === 'formula') {
                          this.quill.insertText(index + 1, ' ', _emitter2["default"].sources.USER);
                        }

                        this.quill.setSelection(index + 2, _emitter2["default"].sources.USER);
                      }

                      break;
                    }

                  default:
                }

                this.textbox.value = '';
                this.hide();
              }
            }]);

            return BaseTooltip;
          }(_tooltip2["default"]);

          function extractVideoUrl(url) {
            var match = url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtube\.com\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\/\/)?(?:(?:www|m)\.)?youtu\.be\/([a-zA-Z0-9_-]+)/);

            if (match) {
              return (match[1] || 'https') + '://www.youtube.com/embed/' + match[2] + '?showinfo=0';
            }

            if (match = url.match(/^(?:(https?):\/\/)?(?:www\.)?vimeo\.com\/(\d+)/)) {
              // eslint-disable-line no-cond-assign
              return (match[1] || 'https') + '://player.vimeo.com/video/' + match[2] + '/';
            }

            return url;
          }

          function fillSelect(select, values) {
            var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            values.forEach(function (value) {
              var option = document.createElement('option');

              if (value === defaultValue) {
                option.setAttribute('selected', 'selected');
              } else {
                option.setAttribute('value', value);
              }

              select.appendChild(option);
            });
          }

          exports.BaseTooltip = BaseTooltip;
          exports["default"] = BaseTheme;
          /***/
        },
        /* 44 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var LinkedList =
          /** @class */
          function () {
            function LinkedList() {
              this.head = this.tail = null;
              this.length = 0;
            }

            LinkedList.prototype.append = function () {
              var nodes = [];

              for (var _i = 0; _i < arguments.length; _i++) {
                nodes[_i] = arguments[_i];
              }

              this.insertBefore(nodes[0], null);

              if (nodes.length > 1) {
                this.append.apply(this, nodes.slice(1));
              }
            };

            LinkedList.prototype.contains = function (node) {
              var cur,
                  next = this.iterator();

              while (cur = next()) {
                if (cur === node) return true;
              }

              return false;
            };

            LinkedList.prototype.insertBefore = function (node, refNode) {
              if (!node) return;
              node.next = refNode;

              if (refNode != null) {
                node.prev = refNode.prev;

                if (refNode.prev != null) {
                  refNode.prev.next = node;
                }

                refNode.prev = node;

                if (refNode === this.head) {
                  this.head = node;
                }
              } else if (this.tail != null) {
                this.tail.next = node;
                node.prev = this.tail;
                this.tail = node;
              } else {
                node.prev = null;
                this.head = this.tail = node;
              }

              this.length += 1;
            };

            LinkedList.prototype.offset = function (target) {
              var index = 0,
                  cur = this.head;

              while (cur != null) {
                if (cur === target) return index;
                index += cur.length();
                cur = cur.next;
              }

              return -1;
            };

            LinkedList.prototype.remove = function (node) {
              if (!this.contains(node)) return;
              if (node.prev != null) node.prev.next = node.next;
              if (node.next != null) node.next.prev = node.prev;
              if (node === this.head) this.head = node.next;
              if (node === this.tail) this.tail = node.prev;
              this.length -= 1;
            };

            LinkedList.prototype.iterator = function (curNode) {
              if (curNode === void 0) {
                curNode = this.head;
              } // TODO use yield when we can


              return function () {
                var ret = curNode;
                if (curNode != null) curNode = curNode.next;
                return ret;
              };
            };

            LinkedList.prototype.find = function (index, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }

              var cur,
                  next = this.iterator();

              while (cur = next()) {
                var length = cur.length();

                if (index < length || inclusive && index === length && (cur.next == null || cur.next.length() !== 0)) {
                  return [cur, index];
                }

                index -= length;
              }

              return [null, 0];
            };

            LinkedList.prototype.forEach = function (callback) {
              var cur,
                  next = this.iterator();

              while (cur = next()) {
                callback(cur);
              }
            };

            LinkedList.prototype.forEachAt = function (index, length, callback) {
              if (length <= 0) return;

              var _a = this.find(index),
                  startNode = _a[0],
                  offset = _a[1];

              var cur,
                  curIndex = index - offset,
                  next = this.iterator(startNode);

              while ((cur = next()) && curIndex < index + length) {
                var curLength = cur.length();

                if (index > curIndex) {
                  callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
                } else {
                  callback(cur, 0, Math.min(curLength, index + length - curIndex));
                }

                curIndex += curLength;
              }
            };

            LinkedList.prototype.map = function (callback) {
              return this.reduce(function (memo, cur) {
                memo.push(callback(cur));
                return memo;
              }, []);
            };

            LinkedList.prototype.reduce = function (callback, memo) {
              var cur,
                  next = this.iterator();

              while (cur = next()) {
                memo = callback(memo, cur);
              }

              return memo;
            };

            return LinkedList;
          }();

          exports["default"] = LinkedList;
          /***/
        },
        /* 45 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var container_1 = __webpack_require__(17);

          var Registry = __webpack_require__(1);

          var OBSERVER_CONFIG = {
            attributes: true,
            characterData: true,
            characterDataOldValue: true,
            childList: true,
            subtree: true
          };
          var MAX_OPTIMIZE_ITERATIONS = 100;

          var ScrollBlot =
          /** @class */
          function (_super) {
            __extends(ScrollBlot, _super);

            function ScrollBlot(node) {
              var _this = _super.call(this, node) || this;

              _this.scroll = _this;
              _this.observer = new MutationObserver(function (mutations) {
                _this.update(mutations);
              });

              _this.observer.observe(_this.domNode, OBSERVER_CONFIG);

              _this.attach();

              return _this;
            }

            ScrollBlot.prototype.detach = function () {
              _super.prototype.detach.call(this);

              this.observer.disconnect();
            };

            ScrollBlot.prototype.deleteAt = function (index, length) {
              this.update();

              if (index === 0 && length === this.length()) {
                this.children.forEach(function (child) {
                  child.remove();
                });
              } else {
                _super.prototype.deleteAt.call(this, index, length);
              }
            };

            ScrollBlot.prototype.formatAt = function (index, length, name, value) {
              this.update();

              _super.prototype.formatAt.call(this, index, length, name, value);
            };

            ScrollBlot.prototype.insertAt = function (index, value, def) {
              this.update();

              _super.prototype.insertAt.call(this, index, value, def);
            };

            ScrollBlot.prototype.optimize = function (mutations, context) {
              var _this = this;

              if (mutations === void 0) {
                mutations = [];
              }

              if (context === void 0) {
                context = {};
              }

              _super.prototype.optimize.call(this, context); // We must modify mutations directly, cannot make copy and then modify


              var records = [].slice.call(this.observer.takeRecords()); // Array.push currently seems to be implemented by a non-tail recursive function
              // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());

              while (records.length > 0) {
                mutations.push(records.pop());
              } // TODO use WeakMap


              var mark = function mark(blot, markParent) {
                if (markParent === void 0) {
                  markParent = true;
                }

                if (blot == null || blot === _this) return;
                if (blot.domNode.parentNode == null) return; // @ts-ignore

                if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                  // @ts-ignore
                  blot.domNode[Registry.DATA_KEY].mutations = [];
                }

                if (markParent) mark(blot.parent);
              };

              var optimize = function optimize(blot) {
                // Post-order traversal
                if ( // @ts-ignore
                blot.domNode[Registry.DATA_KEY] == null || // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations == null) {
                  return;
                }

                if (blot instanceof container_1["default"]) {
                  blot.children.forEach(optimize);
                }

                blot.optimize(context);
              };

              var remaining = mutations;

              for (var i = 0; remaining.length > 0; i += 1) {
                if (i >= MAX_OPTIMIZE_ITERATIONS) {
                  throw new Error('[Parchment] Maximum optimize iterations reached');
                }

                remaining.forEach(function (mutation) {
                  var blot = Registry.find(mutation.target, true);
                  if (blot == null) return;

                  if (blot.domNode === mutation.target) {
                    if (mutation.type === 'childList') {
                      mark(Registry.find(mutation.previousSibling, false));
                      [].forEach.call(mutation.addedNodes, function (node) {
                        var child = Registry.find(node, false);
                        mark(child, false);

                        if (child instanceof container_1["default"]) {
                          child.children.forEach(function (grandChild) {
                            mark(grandChild, false);
                          });
                        }
                      });
                    } else if (mutation.type === 'attributes') {
                      mark(blot.prev);
                    }
                  }

                  mark(blot);
                });
                this.children.forEach(optimize);
                remaining = [].slice.call(this.observer.takeRecords());
                records = remaining.slice();

                while (records.length > 0) {
                  mutations.push(records.pop());
                }
              }
            };

            ScrollBlot.prototype.update = function (mutations, context) {
              var _this = this;

              if (context === void 0) {
                context = {};
              }

              mutations = mutations || this.observer.takeRecords(); // TODO use WeakMap

              mutations.map(function (mutation) {
                var blot = Registry.find(mutation.target, true);
                if (blot == null) return null; // @ts-ignore

                if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                  // @ts-ignore
                  blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                  return blot;
                } else {
                  // @ts-ignore
                  blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                  return null;
                }
              }).forEach(function (blot) {
                if (blot == null || blot === _this || //@ts-ignore
                blot.domNode[Registry.DATA_KEY] == null) return; // @ts-ignore

                blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
              }); // @ts-ignore

              if (this.domNode[Registry.DATA_KEY].mutations != null) {
                // @ts-ignore
                _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
              }

              this.optimize(mutations, context);
            };

            ScrollBlot.blotName = 'scroll';
            ScrollBlot.defaultChild = 'block';
            ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
            ScrollBlot.tagName = 'DIV';
            return ScrollBlot;
          }(container_1["default"]);

          exports["default"] = ScrollBlot;
          /***/
        },
        /* 46 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var format_1 = __webpack_require__(18);

          var Registry = __webpack_require__(1); // Shallow object comparison


          function isEqual(obj1, obj2) {
            if (Object.keys(obj1).length !== Object.keys(obj2).length) return false; // @ts-ignore

            for (var prop in obj1) {
              // @ts-ignore
              if (obj1[prop] !== obj2[prop]) return false;
            }

            return true;
          }

          var InlineBlot =
          /** @class */
          function (_super) {
            __extends(InlineBlot, _super);

            function InlineBlot() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            InlineBlot.formats = function (domNode) {
              if (domNode.tagName === InlineBlot.tagName) return undefined;
              return _super.formats.call(this, domNode);
            };

            InlineBlot.prototype.format = function (name, value) {
              var _this = this;

              if (name === this.statics.blotName && !value) {
                this.children.forEach(function (child) {
                  if (!(child instanceof format_1["default"])) {
                    child = child.wrap(InlineBlot.blotName, true);
                  }

                  _this.attributes.copy(child);
                });
                this.unwrap();
              } else {
                _super.prototype.format.call(this, name, value);
              }
            };

            InlineBlot.prototype.formatAt = function (index, length, name, value) {
              if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
                var blot = this.isolate(index, length);
                blot.format(name, value);
              } else {
                _super.prototype.formatAt.call(this, index, length, name, value);
              }
            };

            InlineBlot.prototype.optimize = function (context) {
              _super.prototype.optimize.call(this, context);

              var formats = this.formats();

              if (Object.keys(formats).length === 0) {
                return this.unwrap(); // unformatted span
              }

              var next = this.next;

              if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {
                next.moveChildren(this);
                next.remove();
              }
            };

            InlineBlot.blotName = 'inline';
            InlineBlot.scope = Registry.Scope.INLINE_BLOT;
            InlineBlot.tagName = 'SPAN';
            return InlineBlot;
          }(format_1["default"]);

          exports["default"] = InlineBlot;
          /***/
        },
        /* 47 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var format_1 = __webpack_require__(18);

          var Registry = __webpack_require__(1);

          var BlockBlot =
          /** @class */
          function (_super) {
            __extends(BlockBlot, _super);

            function BlockBlot() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            BlockBlot.formats = function (domNode) {
              var tagName = Registry.query(BlockBlot.blotName).tagName;
              if (domNode.tagName === tagName) return undefined;
              return _super.formats.call(this, domNode);
            };

            BlockBlot.prototype.format = function (name, value) {
              if (Registry.query(name, Registry.Scope.BLOCK) == null) {
                return;
              } else if (name === this.statics.blotName && !value) {
                this.replaceWith(BlockBlot.blotName);
              } else {
                _super.prototype.format.call(this, name, value);
              }
            };

            BlockBlot.prototype.formatAt = function (index, length, name, value) {
              if (Registry.query(name, Registry.Scope.BLOCK) != null) {
                this.format(name, value);
              } else {
                _super.prototype.formatAt.call(this, index, length, name, value);
              }
            };

            BlockBlot.prototype.insertAt = function (index, value, def) {
              if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
                // Insert text or inline
                _super.prototype.insertAt.call(this, index, value, def);
              } else {
                var after = this.split(index);
                var blot = Registry.create(value, def);
                after.parent.insertBefore(blot, after);
              }
            };

            BlockBlot.prototype.update = function (mutations, context) {
              if (navigator.userAgent.match(/Trident/)) {
                this.build();
              } else {
                _super.prototype.update.call(this, mutations, context);
              }
            };

            BlockBlot.blotName = 'block';
            BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
            BlockBlot.tagName = 'P';
            return BlockBlot;
          }(format_1["default"]);

          exports["default"] = BlockBlot;
          /***/
        },
        /* 48 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var leaf_1 = __webpack_require__(19);

          var EmbedBlot =
          /** @class */
          function (_super) {
            __extends(EmbedBlot, _super);

            function EmbedBlot() {
              return _super !== null && _super.apply(this, arguments) || this;
            }

            EmbedBlot.formats = function (domNode) {
              return undefined;
            };

            EmbedBlot.prototype.format = function (name, value) {
              // super.formatAt wraps, which is what we want in general,
              // but this allows subclasses to overwrite for formats
              // that just apply to particular embeds
              _super.prototype.formatAt.call(this, 0, this.length(), name, value);
            };

            EmbedBlot.prototype.formatAt = function (index, length, name, value) {
              if (index === 0 && length === this.length()) {
                this.format(name, value);
              } else {
                _super.prototype.formatAt.call(this, index, length, name, value);
              }
            };

            EmbedBlot.prototype.formats = function () {
              return this.statics.formats(this.domNode);
            };

            return EmbedBlot;
          }(leaf_1["default"]);

          exports["default"] = EmbedBlot;
          /***/
        },
        /* 49 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var __extends = this && this.__extends || function () {
            var extendStatics = Object.setPrototypeOf || {
              __proto__: []
            } instanceof Array && function (d, b) {
              d.__proto__ = b;
            } || function (d, b) {
              for (var p in b) {
                if (b.hasOwnProperty(p)) d[p] = b[p];
              }
            };

            return function (d, b) {
              extendStatics(d, b);

              function __() {
                this.constructor = d;
              }

              d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
          }();

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var leaf_1 = __webpack_require__(19);

          var Registry = __webpack_require__(1);

          var TextBlot =
          /** @class */
          function (_super) {
            __extends(TextBlot, _super);

            function TextBlot(node) {
              var _this = _super.call(this, node) || this;

              _this.text = _this.statics.value(_this.domNode);
              return _this;
            }

            TextBlot.create = function (value) {
              return document.createTextNode(value);
            };

            TextBlot.value = function (domNode) {
              var text = domNode.data; // @ts-ignore

              if (text['normalize']) text = text['normalize']();
              return text;
            };

            TextBlot.prototype.deleteAt = function (index, length) {
              this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
            };

            TextBlot.prototype.index = function (node, offset) {
              if (this.domNode === node) {
                return offset;
              }

              return -1;
            };

            TextBlot.prototype.insertAt = function (index, value, def) {
              if (def == null) {
                this.text = this.text.slice(0, index) + value + this.text.slice(index);
                this.domNode.data = this.text;
              } else {
                _super.prototype.insertAt.call(this, index, value, def);
              }
            };

            TextBlot.prototype.length = function () {
              return this.text.length;
            };

            TextBlot.prototype.optimize = function (context) {
              _super.prototype.optimize.call(this, context);

              this.text = this.statics.value(this.domNode);

              if (this.text.length === 0) {
                this.remove();
              } else if (this.next instanceof TextBlot && this.next.prev === this) {
                this.insertAt(this.length(), this.next.value());
                this.next.remove();
              }
            };

            TextBlot.prototype.position = function (index, inclusive) {
              if (inclusive === void 0) {
                inclusive = false;
              }

              return [this.domNode, index];
            };

            TextBlot.prototype.split = function (index, force) {
              if (force === void 0) {
                force = false;
              }

              if (!force) {
                if (index === 0) return this;
                if (index === this.length()) return this.next;
              }

              var after = Registry.create(this.domNode.splitText(index));
              this.parent.insertBefore(after, this.next);
              this.text = this.statics.value(this.domNode);
              return after;
            };

            TextBlot.prototype.update = function (mutations, context) {
              var _this = this;

              if (mutations.some(function (mutation) {
                return mutation.type === 'characterData' && mutation.target === _this.domNode;
              })) {
                this.text = this.statics.value(this.domNode);
              }
            };

            TextBlot.prototype.value = function () {
              return this.text;
            };

            TextBlot.blotName = 'text';
            TextBlot.scope = Registry.Scope.INLINE_BLOT;
            return TextBlot;
          }(leaf_1["default"]);

          exports["default"] = TextBlot;
          /***/
        },
        /* 50 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          var elem = document.createElement('div');
          elem.classList.toggle('test-class', false);

          if (elem.classList.contains('test-class')) {
            var _toggle = DOMTokenList.prototype.toggle;

            DOMTokenList.prototype.toggle = function (token, force) {
              if (arguments.length > 1 && !this.contains(token) === !force) {
                return force;
              } else {
                return _toggle.call(this, token);
              }
            };
          }

          if (!String.prototype.startsWith) {
            String.prototype.startsWith = function (searchString, position) {
              position = position || 0;
              return this.substr(position, searchString.length) === searchString;
            };
          }

          if (!String.prototype.endsWith) {
            String.prototype.endsWith = function (searchString, position) {
              var subjectString = this.toString();

              if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
                position = subjectString.length;
              }

              position -= searchString.length;
              var lastIndex = subjectString.indexOf(searchString, position);
              return lastIndex !== -1 && lastIndex === position;
            };
          }

          if (!Array.prototype.find) {
            Object.defineProperty(Array.prototype, "find", {
              value: function value(predicate) {
                if (this === null) {
                  throw new TypeError('Array.prototype.find called on null or undefined');
                }

                if (typeof predicate !== 'function') {
                  throw new TypeError('predicate must be a function');
                }

                var list = Object(this);
                var length = list.length >>> 0;
                var thisArg = arguments[1];
                var value;

                for (var i = 0; i < length; i++) {
                  value = list[i];

                  if (predicate.call(thisArg, value, i, list)) {
                    return value;
                  }
                }

                return undefined;
              }
            });
          }

          document.addEventListener("DOMContentLoaded", function () {
            // Disable resizing in Firefox
            document.execCommand("enableObjectResizing", false, false); // Disable automatic linkifying in IE11

            document.execCommand("autoUrlDetect", false, false);
          });
          /***/
        },
        /* 51 */

        /***/
        function (module, exports) {
          /**
           * This library modifies the diff-patch-match library by Neil Fraser
           * by removing the patch and match functionality and certain advanced
           * options in the diff function. The original license is as follows:
           *
           * ===
           *
           * Diff Match and Patch
           *
           * Copyright 2006 Google Inc.
           * http://code.google.com/p/google-diff-match-patch/
           *
           * Licensed under the Apache License, Version 2.0 (the "License");
           * you may not use this file except in compliance with the License.
           * You may obtain a copy of the License at
           *
           *   http://www.apache.org/licenses/LICENSE-2.0
           *
           * Unless required by applicable law or agreed to in writing, software
           * distributed under the License is distributed on an "AS IS" BASIS,
           * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           * See the License for the specific language governing permissions and
           * limitations under the License.
           */

          /**
           * The data structure representing a diff is an array of tuples:
           * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
           * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
           */
          var DIFF_DELETE = -1;
          var DIFF_INSERT = 1;
          var DIFF_EQUAL = 0;
          /**
           * Find the differences between two texts.  Simplifies the problem by stripping
           * any common prefix or suffix off the texts before diffing.
           * @param {string} text1 Old string to be diffed.
           * @param {string} text2 New string to be diffed.
           * @param {Int} cursor_pos Expected edit position in text1 (optional)
           * @return {Array} Array of diff tuples.
           */

          function diff_main(text1, text2, cursor_pos) {
            // Check for equality (speedup).
            if (text1 == text2) {
              if (text1) {
                return [[DIFF_EQUAL, text1]];
              }

              return [];
            } // Check cursor_pos within bounds


            if (cursor_pos < 0 || text1.length < cursor_pos) {
              cursor_pos = null;
            } // Trim off common prefix (speedup).


            var commonlength = diff_commonPrefix(text1, text2);
            var commonprefix = text1.substring(0, commonlength);
            text1 = text1.substring(commonlength);
            text2 = text2.substring(commonlength); // Trim off common suffix (speedup).

            commonlength = diff_commonSuffix(text1, text2);
            var commonsuffix = text1.substring(text1.length - commonlength);
            text1 = text1.substring(0, text1.length - commonlength);
            text2 = text2.substring(0, text2.length - commonlength); // Compute the diff on the middle block.

            var diffs = diff_compute_(text1, text2); // Restore the prefix and suffix.

            if (commonprefix) {
              diffs.unshift([DIFF_EQUAL, commonprefix]);
            }

            if (commonsuffix) {
              diffs.push([DIFF_EQUAL, commonsuffix]);
            }

            diff_cleanupMerge(diffs);

            if (cursor_pos != null) {
              diffs = fix_cursor(diffs, cursor_pos);
            }

            diffs = fix_emoji(diffs);
            return diffs;
          }

          ;
          /**
           * Find the differences between two texts.  Assumes that the texts do not
           * have any common prefix or suffix.
           * @param {string} text1 Old string to be diffed.
           * @param {string} text2 New string to be diffed.
           * @return {Array} Array of diff tuples.
           */

          function diff_compute_(text1, text2) {
            var diffs;

            if (!text1) {
              // Just add some text (speedup).
              return [[DIFF_INSERT, text2]];
            }

            if (!text2) {
              // Just delete some text (speedup).
              return [[DIFF_DELETE, text1]];
            }

            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;
            var i = longtext.indexOf(shorttext);

            if (i != -1) {
              // Shorter text is inside the longer text (speedup).
              diffs = [[DIFF_INSERT, longtext.substring(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.substring(i + shorttext.length)]]; // Swap insertions for deletions if diff is reversed.

              if (text1.length > text2.length) {
                diffs[0][0] = diffs[2][0] = DIFF_DELETE;
              }

              return diffs;
            }

            if (shorttext.length == 1) {
              // Single character string.
              // After the previous speedup, the character can't be an equality.
              return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
            } // Check to see if the problem can be split in two.


            var hm = diff_halfMatch_(text1, text2);

            if (hm) {
              // A half-match was found, sort out the return data.
              var text1_a = hm[0];
              var text1_b = hm[1];
              var text2_a = hm[2];
              var text2_b = hm[3];
              var mid_common = hm[4]; // Send both pairs off for separate processing.

              var diffs_a = diff_main(text1_a, text2_a);
              var diffs_b = diff_main(text1_b, text2_b); // Merge the results.

              return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
            }

            return diff_bisect_(text1, text2);
          }

          ;
          /**
           * Find the 'middle snake' of a diff, split the problem in two
           * and return the recursively constructed diff.
           * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
           * @param {string} text1 Old string to be diffed.
           * @param {string} text2 New string to be diffed.
           * @return {Array} Array of diff tuples.
           * @private
           */

          function diff_bisect_(text1, text2) {
            // Cache the text lengths to prevent multiple calls.
            var text1_length = text1.length;
            var text2_length = text2.length;
            var max_d = Math.ceil((text1_length + text2_length) / 2);
            var v_offset = max_d;
            var v_length = 2 * max_d;
            var v1 = new Array(v_length);
            var v2 = new Array(v_length); // Setting all elements to -1 is faster in Chrome & Firefox than mixing
            // integers and undefined.

            for (var x = 0; x < v_length; x++) {
              v1[x] = -1;
              v2[x] = -1;
            }

            v1[v_offset + 1] = 0;
            v2[v_offset + 1] = 0;
            var delta = text1_length - text2_length; // If the total number of characters is odd, then the front path will collide
            // with the reverse path.

            var front = delta % 2 != 0; // Offsets for start and end of k loop.
            // Prevents mapping of space beyond the grid.

            var k1start = 0;
            var k1end = 0;
            var k2start = 0;
            var k2end = 0;

            for (var d = 0; d < max_d; d++) {
              // Walk the front path one step.
              for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
                var k1_offset = v_offset + k1;
                var x1;

                if (k1 == -d || k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1]) {
                  x1 = v1[k1_offset + 1];
                } else {
                  x1 = v1[k1_offset - 1] + 1;
                }

                var y1 = x1 - k1;

                while (x1 < text1_length && y1 < text2_length && text1.charAt(x1) == text2.charAt(y1)) {
                  x1++;
                  y1++;
                }

                v1[k1_offset] = x1;

                if (x1 > text1_length) {
                  // Ran off the right of the graph.
                  k1end += 2;
                } else if (y1 > text2_length) {
                  // Ran off the bottom of the graph.
                  k1start += 2;
                } else if (front) {
                  var k2_offset = v_offset + delta - k1;

                  if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
                    // Mirror x2 onto top-left coordinate system.
                    var x2 = text1_length - v2[k2_offset];

                    if (x1 >= x2) {
                      // Overlap detected.
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              } // Walk the reverse path one step.


              for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
                var k2_offset = v_offset + k2;
                var x2;

                if (k2 == -d || k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1]) {
                  x2 = v2[k2_offset + 1];
                } else {
                  x2 = v2[k2_offset - 1] + 1;
                }

                var y2 = x2 - k2;

                while (x2 < text1_length && y2 < text2_length && text1.charAt(text1_length - x2 - 1) == text2.charAt(text2_length - y2 - 1)) {
                  x2++;
                  y2++;
                }

                v2[k2_offset] = x2;

                if (x2 > text1_length) {
                  // Ran off the left of the graph.
                  k2end += 2;
                } else if (y2 > text2_length) {
                  // Ran off the top of the graph.
                  k2start += 2;
                } else if (!front) {
                  var k1_offset = v_offset + delta - k2;

                  if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
                    var x1 = v1[k1_offset];
                    var y1 = v_offset + x1 - k1_offset; // Mirror x2 onto top-left coordinate system.

                    x2 = text1_length - x2;

                    if (x1 >= x2) {
                      // Overlap detected.
                      return diff_bisectSplit_(text1, text2, x1, y1);
                    }
                  }
                }
              }
            } // Diff took too long and hit the deadline or
            // number of diffs equals number of characters, no commonality at all.


            return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
          }

          ;
          /**
           * Given the location of the 'middle snake', split the diff in two parts
           * and recurse.
           * @param {string} text1 Old string to be diffed.
           * @param {string} text2 New string to be diffed.
           * @param {number} x Index of split point in text1.
           * @param {number} y Index of split point in text2.
           * @return {Array} Array of diff tuples.
           */

          function diff_bisectSplit_(text1, text2, x, y) {
            var text1a = text1.substring(0, x);
            var text2a = text2.substring(0, y);
            var text1b = text1.substring(x);
            var text2b = text2.substring(y); // Compute both diffs serially.

            var diffs = diff_main(text1a, text2a);
            var diffsb = diff_main(text1b, text2b);
            return diffs.concat(diffsb);
          }

          ;
          /**
           * Determine the common prefix of two strings.
           * @param {string} text1 First string.
           * @param {string} text2 Second string.
           * @return {number} The number of characters common to the start of each
           *     string.
           */

          function diff_commonPrefix(text1, text2) {
            // Quick check for common null cases.
            if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
              return 0;
            } // Binary search.
            // Performance analysis: http://neil.fraser.name/news/2007/10/09/


            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerstart = 0;

            while (pointermin < pointermid) {
              if (text1.substring(pointerstart, pointermid) == text2.substring(pointerstart, pointermid)) {
                pointermin = pointermid;
                pointerstart = pointermin;
              } else {
                pointermax = pointermid;
              }

              pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
            }

            return pointermid;
          }

          ;
          /**
           * Determine the common suffix of two strings.
           * @param {string} text1 First string.
           * @param {string} text2 Second string.
           * @return {number} The number of characters common to the end of each string.
           */

          function diff_commonSuffix(text1, text2) {
            // Quick check for common null cases.
            if (!text1 || !text2 || text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
              return 0;
            } // Binary search.
            // Performance analysis: http://neil.fraser.name/news/2007/10/09/


            var pointermin = 0;
            var pointermax = Math.min(text1.length, text2.length);
            var pointermid = pointermax;
            var pointerend = 0;

            while (pointermin < pointermid) {
              if (text1.substring(text1.length - pointermid, text1.length - pointerend) == text2.substring(text2.length - pointermid, text2.length - pointerend)) {
                pointermin = pointermid;
                pointerend = pointermin;
              } else {
                pointermax = pointermid;
              }

              pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
            }

            return pointermid;
          }

          ;
          /**
           * Do the two texts share a substring which is at least half the length of the
           * longer text?
           * This speedup can produce non-minimal diffs.
           * @param {string} text1 First string.
           * @param {string} text2 Second string.
           * @return {Array.<string>} Five element Array, containing the prefix of
           *     text1, the suffix of text1, the prefix of text2, the suffix of
           *     text2 and the common middle.  Or null if there was no match.
           */

          function diff_halfMatch_(text1, text2) {
            var longtext = text1.length > text2.length ? text1 : text2;
            var shorttext = text1.length > text2.length ? text2 : text1;

            if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
              return null; // Pointless.
            }
            /**
             * Does a substring of shorttext exist within longtext such that the substring
             * is at least half the length of longtext?
             * Closure, but does not reference any external variables.
             * @param {string} longtext Longer string.
             * @param {string} shorttext Shorter string.
             * @param {number} i Start index of quarter length substring within longtext.
             * @return {Array.<string>} Five element Array, containing the prefix of
             *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
             *     of shorttext and the common middle.  Or null if there was no match.
             * @private
             */


            function diff_halfMatchI_(longtext, shorttext, i) {
              // Start with a 1/4 length substring at position i as a seed.
              var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
              var j = -1;
              var best_common = '';
              var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;

              while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
                var prefixLength = diff_commonPrefix(longtext.substring(i), shorttext.substring(j));
                var suffixLength = diff_commonSuffix(longtext.substring(0, i), shorttext.substring(0, j));

                if (best_common.length < suffixLength + prefixLength) {
                  best_common = shorttext.substring(j - suffixLength, j) + shorttext.substring(j, j + prefixLength);
                  best_longtext_a = longtext.substring(0, i - suffixLength);
                  best_longtext_b = longtext.substring(i + prefixLength);
                  best_shorttext_a = shorttext.substring(0, j - suffixLength);
                  best_shorttext_b = shorttext.substring(j + prefixLength);
                }
              }

              if (best_common.length * 2 >= longtext.length) {
                return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];
              } else {
                return null;
              }
            } // First check if the second quarter is the seed for a half-match.


            var hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4)); // Check again based on the third quarter.

            var hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));
            var hm;

            if (!hm1 && !hm2) {
              return null;
            } else if (!hm2) {
              hm = hm1;
            } else if (!hm1) {
              hm = hm2;
            } else {
              // Both matched.  Select the longest.
              hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
            } // A half-match was found, sort out the return data.


            var text1_a, text1_b, text2_a, text2_b;

            if (text1.length > text2.length) {
              text1_a = hm[0];
              text1_b = hm[1];
              text2_a = hm[2];
              text2_b = hm[3];
            } else {
              text2_a = hm[0];
              text2_b = hm[1];
              text1_a = hm[2];
              text1_b = hm[3];
            }

            var mid_common = hm[4];
            return [text1_a, text1_b, text2_a, text2_b, mid_common];
          }

          ;
          /**
           * Reorder and merge like edit sections.  Merge equalities.
           * Any edit section can move as long as it doesn't cross an equality.
           * @param {Array} diffs Array of diff tuples.
           */

          function diff_cleanupMerge(diffs) {
            diffs.push([DIFF_EQUAL, '']); // Add a dummy entry at the end.

            var pointer = 0;
            var count_delete = 0;
            var count_insert = 0;
            var text_delete = '';
            var text_insert = '';
            var commonlength;

            while (pointer < diffs.length) {
              switch (diffs[pointer][0]) {
                case DIFF_INSERT:
                  count_insert++;
                  text_insert += diffs[pointer][1];
                  pointer++;
                  break;

                case DIFF_DELETE:
                  count_delete++;
                  text_delete += diffs[pointer][1];
                  pointer++;
                  break;

                case DIFF_EQUAL:
                  // Upon reaching an equality, check for prior redundancies.
                  if (count_delete + count_insert > 1) {
                    if (count_delete !== 0 && count_insert !== 0) {
                      // Factor out any common prefixies.
                      commonlength = diff_commonPrefix(text_insert, text_delete);

                      if (commonlength !== 0) {
                        if (pointer - count_delete - count_insert > 0 && diffs[pointer - count_delete - count_insert - 1][0] == DIFF_EQUAL) {
                          diffs[pointer - count_delete - count_insert - 1][1] += text_insert.substring(0, commonlength);
                        } else {
                          diffs.splice(0, 0, [DIFF_EQUAL, text_insert.substring(0, commonlength)]);
                          pointer++;
                        }

                        text_insert = text_insert.substring(commonlength);
                        text_delete = text_delete.substring(commonlength);
                      } // Factor out any common suffixies.


                      commonlength = diff_commonSuffix(text_insert, text_delete);

                      if (commonlength !== 0) {
                        diffs[pointer][1] = text_insert.substring(text_insert.length - commonlength) + diffs[pointer][1];
                        text_insert = text_insert.substring(0, text_insert.length - commonlength);
                        text_delete = text_delete.substring(0, text_delete.length - commonlength);
                      }
                    } // Delete the offending records and add the merged ones.


                    if (count_delete === 0) {
                      diffs.splice(pointer - count_insert, count_delete + count_insert, [DIFF_INSERT, text_insert]);
                    } else if (count_insert === 0) {
                      diffs.splice(pointer - count_delete, count_delete + count_insert, [DIFF_DELETE, text_delete]);
                    } else {
                      diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);
                    }

                    pointer = pointer - count_delete - count_insert + (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
                  } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
                    // Merge this equality with the previous one.
                    diffs[pointer - 1][1] += diffs[pointer][1];
                    diffs.splice(pointer, 1);
                  } else {
                    pointer++;
                  }

                  count_insert = 0;
                  count_delete = 0;
                  text_delete = '';
                  text_insert = '';
                  break;
              }
            }

            if (diffs[diffs.length - 1][1] === '') {
              diffs.pop(); // Remove the dummy entry at the end.
            } // Second pass: look for single edits surrounded on both sides by equalities
            // which can be shifted sideways to eliminate an equality.
            // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC


            var changes = false;
            pointer = 1; // Intentionally ignore the first and last element (don't need checking).

            while (pointer < diffs.length - 1) {
              if (diffs[pointer - 1][0] == DIFF_EQUAL && diffs[pointer + 1][0] == DIFF_EQUAL) {
                // This is a single edit surrounded by equalities.
                if (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
                  // Shift the edit over the previous equality.
                  diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);
                  diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
                  diffs.splice(pointer - 1, 1);
                  changes = true;
                } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) == diffs[pointer + 1][1]) {
                  // Shift the edit over the next equality.
                  diffs[pointer - 1][1] += diffs[pointer + 1][1];
                  diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1];
                  diffs.splice(pointer + 1, 1);
                  changes = true;
                }
              }

              pointer++;
            } // If shifts were made, the diff needs reordering and another shift sweep.


            if (changes) {
              diff_cleanupMerge(diffs);
            }
          }

          ;
          var diff = diff_main;
          diff.INSERT = DIFF_INSERT;
          diff.DELETE = DIFF_DELETE;
          diff.EQUAL = DIFF_EQUAL;
          module.exports = diff;
          /*
           * Modify a diff such that the cursor position points to the start of a change:
           * E.g.
           *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
           *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
           *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
           *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
           *
           * @param {Array} diffs Array of diff tuples
           * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
           * @return {Array} A tuple [cursor location in the modified diff, modified diff]
           */

          function cursor_normalize_diff(diffs, cursor_pos) {
            if (cursor_pos === 0) {
              return [DIFF_EQUAL, diffs];
            }

            for (var current_pos = 0, i = 0; i < diffs.length; i++) {
              var d = diffs[i];

              if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
                var next_pos = current_pos + d[1].length;

                if (cursor_pos === next_pos) {
                  return [i + 1, diffs];
                } else if (cursor_pos < next_pos) {
                  // copy to prevent side effects
                  diffs = diffs.slice(); // split d into two diff changes

                  var split_pos = cursor_pos - current_pos;
                  var d_left = [d[0], d[1].slice(0, split_pos)];
                  var d_right = [d[0], d[1].slice(split_pos)];
                  diffs.splice(i, 1, d_left, d_right);
                  return [i + 1, diffs];
                } else {
                  current_pos = next_pos;
                }
              }
            }

            throw new Error('cursor_pos is out of bounds!');
          }
          /*
           * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
           *
           * Case 1)
           *   Check if a naive shift is possible:
           *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
           *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
           * Case 2)
           *   Check if the following shifts are possible:
           *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
           *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
           *         ^            ^
           *         d          d_next
           *
           * @param {Array} diffs Array of diff tuples
           * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
           * @return {Array} Array of diff tuples
           */


          function fix_cursor(diffs, cursor_pos) {
            var norm = cursor_normalize_diff(diffs, cursor_pos);
            var ndiffs = norm[1];
            var cursor_pointer = norm[0];
            var d = ndiffs[cursor_pointer];
            var d_next = ndiffs[cursor_pointer + 1];

            if (d == null) {
              // Text was deleted from end of original string,
              // cursor is now out of bounds in new string
              return diffs;
            } else if (d[0] !== DIFF_EQUAL) {
              // A modification happened at the cursor location.
              // This is the expected outcome, so we can return the original diff.
              return diffs;
            } else {
              if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
                // Case 1)
                // It is possible to perform a naive shift
                ndiffs.splice(cursor_pointer, 2, d_next, d);
                return merge_tuples(ndiffs, cursor_pointer, 2);
              } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
                // Case 2)
                // d[1] is a prefix of d_next[1]
                // We can assume that d_next[0] !== 0, since d[0] === 0
                // Shift edit locations..
                ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
                var suffix = d_next[1].slice(d[1].length);

                if (suffix.length > 0) {
                  ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
                }

                return merge_tuples(ndiffs, cursor_pointer, 3);
              } else {
                // Not possible to perform any modification
                return diffs;
              }
            }
          }
          /*
           * Check diff did not split surrogate pairs.
           * Ex. [0, '\uD83D'], [-1, '\uDC36'], [1, '\uDC2F'] -> [-1, '\uD83D\uDC36'], [1, '\uD83D\uDC2F']
           *     '\uD83D\uDC36' === '🐶', '\uD83D\uDC2F' === '🐯'
           *
           * @param {Array} diffs Array of diff tuples
           * @return {Array} Array of diff tuples
           */


          function fix_emoji(diffs) {
            var compact = false;

            var starts_with_pair_end = function starts_with_pair_end(str) {
              return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;
            };

            var ends_with_pair_start = function ends_with_pair_start(str) {
              return str.charCodeAt(str.length - 1) >= 0xD800 && str.charCodeAt(str.length - 1) <= 0xDBFF;
            };

            for (var i = 2; i < diffs.length; i += 1) {
              if (diffs[i - 2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i - 2][1]) && diffs[i - 1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i - 1][1]) && diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
                compact = true;
                diffs[i - 1][1] = diffs[i - 2][1].slice(-1) + diffs[i - 1][1];
                diffs[i][1] = diffs[i - 2][1].slice(-1) + diffs[i][1];
                diffs[i - 2][1] = diffs[i - 2][1].slice(0, -1);
              }
            }

            if (!compact) {
              return diffs;
            }

            var fixed_diffs = [];

            for (var i = 0; i < diffs.length; i += 1) {
              if (diffs[i][1].length > 0) {
                fixed_diffs.push(diffs[i]);
              }
            }

            return fixed_diffs;
          }
          /*
           * Try to merge tuples with their neigbors in a given range.
           * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
           *
           * @param {Array} diffs Array of diff tuples.
           * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
           * @param {Int} length Number of consecutive elements to check.
           * @return {Array} Array of merged diff tuples.
           */


          function merge_tuples(diffs, start, length) {
            // Check from (start-1) to (start+length).
            for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
              if (i + 1 < diffs.length) {
                var left_d = diffs[i];
                var right_d = diffs[i + 1];

                if (left_d[0] === right_d[1]) {
                  diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
                }
              }
            }

            return diffs;
          }
          /***/

        },
        /* 52 */

        /***/
        function (module, exports) {
          exports = module.exports = typeof Object.keys === 'function' ? Object.keys : shim;
          exports.shim = shim;

          function shim(obj) {
            var keys = [];

            for (var key in obj) {
              keys.push(key);
            }

            return keys;
          }
          /***/

        },
        /* 53 */

        /***/
        function (module, exports) {
          var supportsArgumentsClass = function () {
            return Object.prototype.toString.call(arguments);
          }() == '[object Arguments]';

          exports = module.exports = supportsArgumentsClass ? supported : unsupported;
          exports.supported = supported;

          function supported(object) {
            return Object.prototype.toString.call(object) == '[object Arguments]';
          }

          ;
          exports.unsupported = unsupported;

          function unsupported(object) {
            return object && typeof object == 'object' && typeof object.length == 'number' && Object.prototype.hasOwnProperty.call(object, 'callee') && !Object.prototype.propertyIsEnumerable.call(object, 'callee') || false;
          }

          ;
          /***/
        },
        /* 54 */

        /***/
        function (module, exports) {
          'use strict';

          var has = Object.prototype.hasOwnProperty,
              prefix = '~';
          /**
           * Constructor to create a storage for our `EE` objects.
           * An `Events` instance is a plain object whose properties are event names.
           *
           * @constructor
           * @api private
           */

          function Events() {} //
          // We try to not inherit from `Object.prototype`. In some engines creating an
          // instance in this way is faster than calling `Object.create(null)` directly.
          // If `Object.create(null)` is not supported we prefix the event names with a
          // character to make sure that the built-in object properties are not
          // overridden or used as an attack vector.
          //


          if (Object.create) {
            Events.prototype = Object.create(null); //
            // This hack is needed because the `__proto__` property is still inherited in
            // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
            //

            if (!new Events().__proto__) prefix = false;
          }
          /**
           * Representation of a single event listener.
           *
           * @param {Function} fn The listener function.
           * @param {Mixed} context The context to invoke the listener with.
           * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
           * @constructor
           * @api private
           */


          function EE(fn, context, once) {
            this.fn = fn;
            this.context = context;
            this.once = once || false;
          }
          /**
           * Minimal `EventEmitter` interface that is molded against the Node.js
           * `EventEmitter` interface.
           *
           * @constructor
           * @api public
           */


          function EventEmitter() {
            this._events = new Events();
            this._eventsCount = 0;
          }
          /**
           * Return an array listing the events for which the emitter has registered
           * listeners.
           *
           * @returns {Array}
           * @api public
           */


          EventEmitter.prototype.eventNames = function eventNames() {
            var names = [],
                events,
                name;
            if (this._eventsCount === 0) return names;

            for (name in events = this._events) {
              if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
            }

            if (Object.getOwnPropertySymbols) {
              return names.concat(Object.getOwnPropertySymbols(events));
            }

            return names;
          };
          /**
           * Return the listeners registered for a given event.
           *
           * @param {String|Symbol} event The event name.
           * @param {Boolean} exists Only check if there are listeners.
           * @returns {Array|Boolean}
           * @api public
           */


          EventEmitter.prototype.listeners = function listeners(event, exists) {
            var evt = prefix ? prefix + event : event,
                available = this._events[evt];
            if (exists) return !!available;
            if (!available) return [];
            if (available.fn) return [available.fn];

            for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
              ee[i] = available[i].fn;
            }

            return ee;
          };
          /**
           * Calls each of the listeners registered for a given event.
           *
           * @param {String|Symbol} event The event name.
           * @returns {Boolean} `true` if the event had listeners, else `false`.
           * @api public
           */


          EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return false;
            var listeners = this._events[evt],
                len = arguments.length,
                args,
                i;

            if (listeners.fn) {
              if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

              switch (len) {
                case 1:
                  return listeners.fn.call(listeners.context), true;

                case 2:
                  return listeners.fn.call(listeners.context, a1), true;

                case 3:
                  return listeners.fn.call(listeners.context, a1, a2), true;

                case 4:
                  return listeners.fn.call(listeners.context, a1, a2, a3), true;

                case 5:
                  return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;

                case 6:
                  return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
              }

              for (i = 1, args = new Array(len - 1); i < len; i++) {
                args[i - 1] = arguments[i];
              }

              listeners.fn.apply(listeners.context, args);
            } else {
              var length = listeners.length,
                  j;

              for (i = 0; i < length; i++) {
                if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

                switch (len) {
                  case 1:
                    listeners[i].fn.call(listeners[i].context);
                    break;

                  case 2:
                    listeners[i].fn.call(listeners[i].context, a1);
                    break;

                  case 3:
                    listeners[i].fn.call(listeners[i].context, a1, a2);
                    break;

                  case 4:
                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                    break;

                  default:
                    if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) {
                      args[j - 1] = arguments[j];
                    }
                    listeners[i].fn.apply(listeners[i].context, args);
                }
              }
            }

            return true;
          };
          /**
           * Add a listener for a given event.
           *
           * @param {String|Symbol} event The event name.
           * @param {Function} fn The listener function.
           * @param {Mixed} [context=this] The context to invoke the listener with.
           * @returns {EventEmitter} `this`.
           * @api public
           */


          EventEmitter.prototype.on = function on(event, fn, context) {
            var listener = new EE(fn, context || this),
                evt = prefix ? prefix + event : event;
            if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;else if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];
            return this;
          };
          /**
           * Add a one-time listener for a given event.
           *
           * @param {String|Symbol} event The event name.
           * @param {Function} fn The listener function.
           * @param {Mixed} [context=this] The context to invoke the listener with.
           * @returns {EventEmitter} `this`.
           * @api public
           */


          EventEmitter.prototype.once = function once(event, fn, context) {
            var listener = new EE(fn, context || this, true),
                evt = prefix ? prefix + event : event;
            if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;else if (!this._events[evt].fn) this._events[evt].push(listener);else this._events[evt] = [this._events[evt], listener];
            return this;
          };
          /**
           * Remove the listeners of a given event.
           *
           * @param {String|Symbol} event The event name.
           * @param {Function} fn Only remove the listeners that match this function.
           * @param {Mixed} context Only remove the listeners that have this context.
           * @param {Boolean} once Only remove one-time listeners.
           * @returns {EventEmitter} `this`.
           * @api public
           */


          EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return this;

            if (!fn) {
              if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
              return this;
            }

            var listeners = this._events[evt];

            if (listeners.fn) {
              if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
                if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
              }
            } else {
              for (var i = 0, events = [], length = listeners.length; i < length; i++) {
                if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
                  events.push(listeners[i]);
                }
              } //
              // Reset the array, or remove it completely if we have no more listeners.
              //


              if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;else if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
            }

            return this;
          };
          /**
           * Remove all listeners, or those of the specified event.
           *
           * @param {String|Symbol} [event] The event name.
           * @returns {EventEmitter} `this`.
           * @api public
           */


          EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
            var evt;

            if (event) {
              evt = prefix ? prefix + event : event;

              if (this._events[evt]) {
                if (--this._eventsCount === 0) this._events = new Events();else delete this._events[evt];
              }
            } else {
              this._events = new Events();
              this._eventsCount = 0;
            }

            return this;
          }; //
          // Alias methods names because people roll like that.
          //


          EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
          EventEmitter.prototype.addListener = EventEmitter.prototype.on; //
          // This function doesn't apply anymore.
          //

          EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
            return this;
          }; //
          // Expose the prefix.
          //


          EventEmitter.prefixed = prefix; //
          // Allow `EventEmitter` to be imported as module namespace.
          //

          EventEmitter.EventEmitter = EventEmitter; //
          // Expose the module.
          //

          if ('undefined' !== typeof module) {
            module.exports = EventEmitter;
          }
          /***/

        },
        /* 55 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports["default"] = undefined;

          var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
            return typeof obj;
          } : function (obj) {
            return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
          };

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _extend2 = __webpack_require__(3);

          var _extend3 = _interopRequireDefault(_extend2);

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          var _align = __webpack_require__(36);

          var _background = __webpack_require__(37);

          var _code = __webpack_require__(13);

          var _code2 = _interopRequireDefault(_code);

          var _color = __webpack_require__(26);

          var _direction = __webpack_require__(38);

          var _font = __webpack_require__(39);

          var _size = __webpack_require__(40);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var debug = (0, _logger2["default"])('quill:clipboard');
          var DOM_KEY = '__ql-matcher';
          var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];
          var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function (memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});
          var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function (memo, attr) {
            memo[attr.keyName] = attr;
            return memo;
          }, {});

          var Clipboard = function (_Module) {
            _inherits(Clipboard, _Module);

            function Clipboard(quill, options) {
              _classCallCheck(this, Clipboard);

              var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));

              _this.quill.root.addEventListener('paste', _this.onPaste.bind(_this));

              _this.container = _this.quill.addContainer('ql-clipboard');

              _this.container.setAttribute('contenteditable', true);

              _this.container.setAttribute('tabindex', -1);

              _this.matchers = [];
              CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function (_ref) {
                var _ref2 = _slicedToArray(_ref, 2),
                    selector = _ref2[0],
                    matcher = _ref2[1];

                if (!options.matchVisual && matcher === matchSpacing) return;

                _this.addMatcher(selector, matcher);
              });
              return _this;
            }

            _createClass(Clipboard, [{
              key: 'addMatcher',
              value: function addMatcher(selector, matcher) {
                this.matchers.push([selector, matcher]);
              }
            }, {
              key: 'convert',
              value: function convert(html) {
                if (typeof html === 'string') {
                  this.container.innerHTML = html.replace(/\>\r?\n +\</g, '><'); // Remove spaces between tags

                  return this.convert();
                }

                var formats = this.quill.getFormat(this.quill.selection.savedRange.index);

                if (formats[_code2["default"].blotName]) {
                  var text = this.container.innerText;
                  this.container.innerHTML = '';
                  return new _quillDelta2["default"]().insert(text, _defineProperty({}, _code2["default"].blotName, formats[_code2["default"].blotName]));
                }

                var _prepareMatching = this.prepareMatching(),
                    _prepareMatching2 = _slicedToArray(_prepareMatching, 2),
                    elementMatchers = _prepareMatching2[0],
                    textMatchers = _prepareMatching2[1];

                var delta = traverse(this.container, elementMatchers, textMatchers); // Remove trailing newline

                if (deltaEndsWith(delta, '\n') && delta.ops[delta.ops.length - 1].attributes == null) {
                  delta = delta.compose(new _quillDelta2["default"]().retain(delta.length() - 1)["delete"](1));
                }

                debug.log('convert', this.container.innerHTML, delta);
                this.container.innerHTML = '';
                return delta;
              }
            }, {
              key: 'dangerouslyPasteHTML',
              value: function dangerouslyPasteHTML(index, html) {
                var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2["default"].sources.API;

                if (typeof index === 'string') {
                  this.quill.setContents(this.convert(index), html);
                  this.quill.setSelection(0, _quill2["default"].sources.SILENT);
                } else {
                  var paste = this.convert(html);
                  this.quill.updateContents(new _quillDelta2["default"]().retain(index).concat(paste), source);
                  this.quill.setSelection(index + paste.length(), _quill2["default"].sources.SILENT);
                }
              }
            }, {
              key: 'onPaste',
              value: function onPaste(e) {
                var _this2 = this;

                if (e.defaultPrevented || !this.quill.isEnabled()) return;
                var range = this.quill.getSelection();
                var delta = new _quillDelta2["default"]().retain(range.index);
                var scrollTop = this.quill.scrollingContainer.scrollTop;
                this.container.focus();
                this.quill.selection.update(_quill2["default"].sources.SILENT);
                setTimeout(function () {
                  delta = delta.concat(_this2.convert())["delete"](range.length);

                  _this2.quill.updateContents(delta, _quill2["default"].sources.USER); // range.length contributes to delta.length()


                  _this2.quill.setSelection(delta.length() - range.length, _quill2["default"].sources.SILENT);

                  _this2.quill.scrollingContainer.scrollTop = scrollTop;

                  _this2.quill.focus();
                }, 1);
              }
            }, {
              key: 'prepareMatching',
              value: function prepareMatching() {
                var _this3 = this;

                var elementMatchers = [],
                    textMatchers = [];
                this.matchers.forEach(function (pair) {
                  var _pair = _slicedToArray(pair, 2),
                      selector = _pair[0],
                      matcher = _pair[1];

                  switch (selector) {
                    case Node.TEXT_NODE:
                      textMatchers.push(matcher);
                      break;

                    case Node.ELEMENT_NODE:
                      elementMatchers.push(matcher);
                      break;

                    default:
                      [].forEach.call(_this3.container.querySelectorAll(selector), function (node) {
                        // TODO use weakmap
                        node[DOM_KEY] = node[DOM_KEY] || [];
                        node[DOM_KEY].push(matcher);
                      });
                      break;
                  }
                });
                return [elementMatchers, textMatchers];
              }
            }]);

            return Clipboard;
          }(_module2["default"]);

          Clipboard.DEFAULTS = {
            matchers: [],
            matchVisual: true
          };

          function applyFormat(delta, format, value) {
            if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {
              return Object.keys(format).reduce(function (delta, key) {
                return applyFormat(delta, key, format[key]);
              }, delta);
            } else {
              return delta.reduce(function (delta, op) {
                if (op.attributes && op.attributes[format]) {
                  return delta.push(op);
                } else {
                  return delta.insert(op.insert, (0, _extend3["default"])({}, _defineProperty({}, format, value), op.attributes));
                }
              }, new _quillDelta2["default"]());
            }
          }

          function computeStyle(node) {
            if (node.nodeType !== Node.ELEMENT_NODE) return {};
            var DOM_KEY = '__ql-computed-style';
            return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));
          }

          function deltaEndsWith(delta, text) {
            var endText = "";

            for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i) {
              var op = delta.ops[i];
              if (typeof op.insert !== 'string') break;
              endText = op.insert + endText;
            }

            return endText.slice(-1 * text.length) === text;
          }

          function isLine(node) {
            if (node.childNodes.length === 0) return false; // Exclude embed blocks

            var style = computeStyle(node);
            return ['block', 'list-item'].indexOf(style.display) > -1;
          }

          function traverse(node, elementMatchers, textMatchers) {
            // Post-order
            if (node.nodeType === node.TEXT_NODE) {
              return textMatchers.reduce(function (delta, matcher) {
                return matcher(node, delta);
              }, new _quillDelta2["default"]());
            } else if (node.nodeType === node.ELEMENT_NODE) {
              return [].reduce.call(node.childNodes || [], function (delta, childNode) {
                var childrenDelta = traverse(childNode, elementMatchers, textMatchers);

                if (childNode.nodeType === node.ELEMENT_NODE) {
                  childrenDelta = elementMatchers.reduce(function (childrenDelta, matcher) {
                    return matcher(childNode, childrenDelta);
                  }, childrenDelta);
                  childrenDelta = (childNode[DOM_KEY] || []).reduce(function (childrenDelta, matcher) {
                    return matcher(childNode, childrenDelta);
                  }, childrenDelta);
                }

                return delta.concat(childrenDelta);
              }, new _quillDelta2["default"]());
            } else {
              return new _quillDelta2["default"]();
            }
          }

          function matchAlias(format, node, delta) {
            return applyFormat(delta, format, true);
          }

          function matchAttributor(node, delta) {
            var attributes = _parchment2["default"].Attributor.Attribute.keys(node);

            var classes = _parchment2["default"].Attributor.Class.keys(node);

            var styles = _parchment2["default"].Attributor.Style.keys(node);

            var formats = {};
            attributes.concat(classes).concat(styles).forEach(function (name) {
              var attr = _parchment2["default"].query(name, _parchment2["default"].Scope.ATTRIBUTE);

              if (attr != null) {
                formats[attr.attrName] = attr.value(node);
                if (formats[attr.attrName]) return;
              }

              attr = ATTRIBUTE_ATTRIBUTORS[name];

              if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                formats[attr.attrName] = attr.value(node) || undefined;
              }

              attr = STYLE_ATTRIBUTORS[name];

              if (attr != null && (attr.attrName === name || attr.keyName === name)) {
                attr = STYLE_ATTRIBUTORS[name];
                formats[attr.attrName] = attr.value(node) || undefined;
              }
            });

            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }

            return delta;
          }

          function matchBlot(node, delta) {
            var match = _parchment2["default"].query(node);

            if (match == null) return delta;

            if (match.prototype instanceof _parchment2["default"].Embed) {
              var embed = {};
              var value = match.value(node);

              if (value != null) {
                embed[match.blotName] = value;
                delta = new _quillDelta2["default"]().insert(embed, match.formats(node));
              }
            } else if (typeof match.formats === 'function') {
              delta = applyFormat(delta, match.blotName, match.formats(node));
            }

            return delta;
          }

          function matchBreak(node, delta) {
            if (!deltaEndsWith(delta, '\n')) {
              delta.insert('\n');
            }

            return delta;
          }

          function matchIgnore() {
            return new _quillDelta2["default"]();
          }

          function matchIndent(node, delta) {
            var match = _parchment2["default"].query(node);

            if (match == null || match.blotName !== 'list-item' || !deltaEndsWith(delta, '\n')) {
              return delta;
            }

            var indent = -1,
                parent = node.parentNode;

            while (!parent.classList.contains('ql-clipboard')) {
              if ((_parchment2["default"].query(parent) || {}).blotName === 'list') {
                indent += 1;
              }

              parent = parent.parentNode;
            }

            if (indent <= 0) return delta;
            return delta.compose(new _quillDelta2["default"]().retain(delta.length() - 1).retain(1, {
              indent: indent
            }));
          }

          function matchNewline(node, delta) {
            if (!deltaEndsWith(delta, '\n')) {
              if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
                delta.insert('\n');
              }
            }

            return delta;
          }

          function matchSpacing(node, delta) {
            if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, '\n\n')) {
              var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);

              if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
                delta.insert('\n');
              }
            }

            return delta;
          }

          function matchStyles(node, delta) {
            var formats = {};
            var style = node.style || {};

            if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {
              formats.italic = true;
            }

            if (style.fontWeight && (computeStyle(node).fontWeight.startsWith('bold') || parseInt(computeStyle(node).fontWeight) >= 700)) {
              formats.bold = true;
            }

            if (Object.keys(formats).length > 0) {
              delta = applyFormat(delta, formats);
            }

            if (parseFloat(style.textIndent || 0) > 0) {
              // Could be 0.5in
              delta = new _quillDelta2["default"]().insert('\t').concat(delta);
            }

            return delta;
          }

          function matchText(node, delta) {
            var text = node.data; // Word represents empty line with <o:p>&nbsp;</o:p>

            if (node.parentNode.tagName === 'O:P') {
              return delta.insert(text.trim());
            }

            if (text.trim().length === 0 && node.parentNode.classList.contains('ql-clipboard')) {
              return delta;
            }

            if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {
              // eslint-disable-next-line func-style
              var replacer = function replacer(collapse, match) {
                match = match.replace(/[^\u00a0]/g, ''); // \u00a0 is nbsp;

                return match.length < 1 && collapse ? ' ' : match;
              };

              text = text.replace(/\r\n/g, ' ').replace(/\n/g, ' ');
              text = text.replace(/\s\s+/g, replacer.bind(replacer, true)); // collapse whitespace

              if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
                text = text.replace(/^\s+/, replacer.bind(replacer, false));
              }

              if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
                text = text.replace(/\s+$/, replacer.bind(replacer, false));
              }
            }

            return delta.insert(text);
          }

          exports["default"] = Clipboard;
          exports.matchAttributor = matchAttributor;
          exports.matchBlot = matchBlot;
          exports.matchNewline = matchNewline;
          exports.matchSpacing = matchSpacing;
          exports.matchText = matchText;
          /***/
        },
        /* 56 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Bold = function (_Inline) {
            _inherits(Bold, _Inline);

            function Bold() {
              _classCallCheck(this, Bold);

              return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));
            }

            _createClass(Bold, [{
              key: 'optimize',
              value: function optimize(context) {
                _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), 'optimize', this).call(this, context);

                if (this.domNode.tagName !== this.statics.tagName[0]) {
                  this.replaceWith(this.statics.blotName);
                }
              }
            }], [{
              key: 'create',
              value: function create() {
                return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), 'create', this).call(this);
              }
            }, {
              key: 'formats',
              value: function formats() {
                return true;
              }
            }]);

            return Bold;
          }(_inline2["default"]);

          Bold.blotName = 'bold';
          Bold.tagName = ['STRONG', 'B'];
          exports["default"] = Bold;
          /***/
        },
        /* 57 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.addControls = exports["default"] = undefined;

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _quillDelta = __webpack_require__(2);

          var _quillDelta2 = _interopRequireDefault(_quillDelta);

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _logger = __webpack_require__(10);

          var _logger2 = _interopRequireDefault(_logger);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var debug = (0, _logger2["default"])('quill:toolbar');

          var Toolbar = function (_Module) {
            _inherits(Toolbar, _Module);

            function Toolbar(quill, options) {
              _classCallCheck(this, Toolbar);

              var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));

              if (Array.isArray(_this.options.container)) {
                var container = document.createElement('div');
                addControls(container, _this.options.container);
                quill.container.parentNode.insertBefore(container, quill.container);
                _this.container = container;
              } else if (typeof _this.options.container === 'string') {
                _this.container = document.querySelector(_this.options.container);
              } else {
                _this.container = _this.options.container;
              }

              if (!(_this.container instanceof HTMLElement)) {
                var _ret;

                return _ret = debug.error('Container required for toolbar', _this.options), _possibleConstructorReturn(_this, _ret);
              }

              _this.container.classList.add('ql-toolbar');

              _this.controls = [];
              _this.handlers = {};
              Object.keys(_this.options.handlers).forEach(function (format) {
                _this.addHandler(format, _this.options.handlers[format]);
              });
              [].forEach.call(_this.container.querySelectorAll('button, select'), function (input) {
                _this.attach(input);
              });

              _this.quill.on(_quill2["default"].events.EDITOR_CHANGE, function (type, range) {
                if (type === _quill2["default"].events.SELECTION_CHANGE) {
                  _this.update(range);
                }
              });

              _this.quill.on(_quill2["default"].events.SCROLL_OPTIMIZE, function () {
                var _this$quill$selection = _this.quill.selection.getRange(),
                    _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),
                    range = _this$quill$selection2[0]; // quill.getSelection triggers update


                _this.update(range);
              });

              return _this;
            }

            _createClass(Toolbar, [{
              key: 'addHandler',
              value: function addHandler(format, handler) {
                this.handlers[format] = handler;
              }
            }, {
              key: 'attach',
              value: function attach(input) {
                var _this2 = this;

                var format = [].find.call(input.classList, function (className) {
                  return className.indexOf('ql-') === 0;
                });
                if (!format) return;
                format = format.slice('ql-'.length);

                if (input.tagName === 'BUTTON') {
                  input.setAttribute('type', 'button');
                }

                if (this.handlers[format] == null) {
                  if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
                    debug.warn('ignoring attaching to disabled format', format, input);
                    return;
                  }

                  if (_parchment2["default"].query(format) == null) {
                    debug.warn('ignoring attaching to nonexistent format', format, input);
                    return;
                  }
                }

                var eventName = input.tagName === 'SELECT' ? 'change' : 'click';
                input.addEventListener(eventName, function (e) {
                  var value = void 0;

                  if (input.tagName === 'SELECT') {
                    if (input.selectedIndex < 0) return;
                    var selected = input.options[input.selectedIndex];

                    if (selected.hasAttribute('selected')) {
                      value = false;
                    } else {
                      value = selected.value || false;
                    }
                  } else {
                    if (input.classList.contains('ql-active')) {
                      value = false;
                    } else {
                      value = input.value || !input.hasAttribute('value');
                    }

                    e.preventDefault();
                  }

                  _this2.quill.focus();

                  var _quill$selection$getR = _this2.quill.selection.getRange(),
                      _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1),
                      range = _quill$selection$getR2[0];

                  if (_this2.handlers[format] != null) {
                    _this2.handlers[format].call(_this2, value);
                  } else if (_parchment2["default"].query(format).prototype instanceof _parchment2["default"].Embed) {
                    value = prompt('Enter ' + format);
                    if (!value) return;

                    _this2.quill.updateContents(new _quillDelta2["default"]().retain(range.index)["delete"](range.length).insert(_defineProperty({}, format, value)), _quill2["default"].sources.USER);
                  } else {
                    _this2.quill.format(format, value, _quill2["default"].sources.USER);
                  }

                  _this2.update(range);
                }); // TODO use weakmap

                this.controls.push([format, input]);
              }
            }, {
              key: 'update',
              value: function update(range) {
                var formats = range == null ? {} : this.quill.getFormat(range);
                this.controls.forEach(function (pair) {
                  var _pair = _slicedToArray(pair, 2),
                      format = _pair[0],
                      input = _pair[1];

                  if (input.tagName === 'SELECT') {
                    var option = void 0;

                    if (range == null) {
                      option = null;
                    } else if (formats[format] == null) {
                      option = input.querySelector('option[selected]');
                    } else if (!Array.isArray(formats[format])) {
                      var value = formats[format];

                      if (typeof value === 'string') {
                        value = value.replace(/\"/g, '\\"');
                      }

                      option = input.querySelector('option[value="' + value + '"]');
                    }

                    if (option == null) {
                      input.value = ''; // TODO make configurable?

                      input.selectedIndex = -1;
                    } else {
                      option.selected = true;
                    }
                  } else {
                    if (range == null) {
                      input.classList.remove('ql-active');
                    } else if (input.hasAttribute('value')) {
                      // both being null should match (default values)
                      // '1' should match with 1 (headers)
                      var isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');
                      input.classList.toggle('ql-active', isActive);
                    } else {
                      input.classList.toggle('ql-active', formats[format] != null);
                    }
                  }
                });
              }
            }]);

            return Toolbar;
          }(_module2["default"]);

          Toolbar.DEFAULTS = {};

          function addButton(container, format, value) {
            var input = document.createElement('button');
            input.setAttribute('type', 'button');
            input.classList.add('ql-' + format);

            if (value != null) {
              input.value = value;
            }

            container.appendChild(input);
          }

          function addControls(container, groups) {
            if (!Array.isArray(groups[0])) {
              groups = [groups];
            }

            groups.forEach(function (controls) {
              var group = document.createElement('span');
              group.classList.add('ql-formats');
              controls.forEach(function (control) {
                if (typeof control === 'string') {
                  addButton(group, control);
                } else {
                  var format = Object.keys(control)[0];
                  var value = control[format];

                  if (Array.isArray(value)) {
                    addSelect(group, format, value);
                  } else {
                    addButton(group, format, value);
                  }
                }
              });
              container.appendChild(group);
            });
          }

          function addSelect(container, format, values) {
            var input = document.createElement('select');
            input.classList.add('ql-' + format);
            values.forEach(function (value) {
              var option = document.createElement('option');

              if (value !== false) {
                option.setAttribute('value', value);
              } else {
                option.setAttribute('selected', 'selected');
              }

              input.appendChild(option);
            });
            container.appendChild(input);
          }

          Toolbar.DEFAULTS = {
            container: null,
            handlers: {
              clean: function clean() {
                var _this3 = this;

                var range = this.quill.getSelection();
                if (range == null) return;

                if (range.length == 0) {
                  var formats = this.quill.getFormat();
                  Object.keys(formats).forEach(function (name) {
                    // Clean functionality in existing apps only clean inline formats
                    if (_parchment2["default"].query(name, _parchment2["default"].Scope.INLINE) != null) {
                      _this3.quill.format(name, false);
                    }
                  });
                } else {
                  this.quill.removeFormat(range, _quill2["default"].sources.USER);
                }
              },
              direction: function direction(value) {
                var align = this.quill.getFormat()['align'];

                if (value === 'rtl' && align == null) {
                  this.quill.format('align', 'right', _quill2["default"].sources.USER);
                } else if (!value && align === 'right') {
                  this.quill.format('align', false, _quill2["default"].sources.USER);
                }

                this.quill.format('direction', value, _quill2["default"].sources.USER);
              },
              indent: function indent(value) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);
                var indent = parseInt(formats.indent || 0);

                if (value === '+1' || value === '-1') {
                  var modifier = value === '+1' ? 1 : -1;
                  if (formats.direction === 'rtl') modifier *= -1;
                  this.quill.format('indent', indent + modifier, _quill2["default"].sources.USER);
                }
              },
              link: function link(value) {
                if (value === true) {
                  value = prompt('Enter link URL:');
                }

                this.quill.format('link', value, _quill2["default"].sources.USER);
              },
              list: function list(value) {
                var range = this.quill.getSelection();
                var formats = this.quill.getFormat(range);

                if (value === 'check') {
                  if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {
                    this.quill.format('list', false, _quill2["default"].sources.USER);
                  } else {
                    this.quill.format('list', 'unchecked', _quill2["default"].sources.USER);
                  }
                } else {
                  this.quill.format('list', value, _quill2["default"].sources.USER);
                }
              }
            }
          };
          exports["default"] = Toolbar;
          exports.addControls = addControls;
          /***/
        },
        /* 58 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <polyline class=\"ql-even ql-stroke\" points=\"5 7 3 9 5 11\"></polyline> <polyline class=\"ql-even ql-stroke\" points=\"13 7 15 9 13 11\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>";
          /***/
        },
        /* 59 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _picker = __webpack_require__(28);

          var _picker2 = _interopRequireDefault(_picker);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ColorPicker = function (_Picker) {
            _inherits(ColorPicker, _Picker);

            function ColorPicker(select, label) {
              _classCallCheck(this, ColorPicker);

              var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));

              _this.label.innerHTML = label;

              _this.container.classList.add('ql-color-picker');

              [].slice.call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7).forEach(function (item) {
                item.classList.add('ql-primary');
              });
              return _this;
            }

            _createClass(ColorPicker, [{
              key: 'buildItem',
              value: function buildItem(option) {
                var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'buildItem', this).call(this, option);

                item.style.backgroundColor = option.getAttribute('value') || '';
                return item;
              }
            }, {
              key: 'selectItem',
              value: function selectItem(item, trigger) {
                _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'selectItem', this).call(this, item, trigger);

                var colorLabel = this.label.querySelector('.ql-color-label');
                var value = item ? item.getAttribute('data-value') || '' : '';

                if (colorLabel) {
                  if (colorLabel.tagName === 'line') {
                    colorLabel.style.stroke = value;
                  } else {
                    colorLabel.style.fill = value;
                  }
                }
              }
            }]);

            return ColorPicker;
          }(_picker2["default"]);

          exports["default"] = ColorPicker;
          /***/
        },
        /* 60 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _picker = __webpack_require__(28);

          var _picker2 = _interopRequireDefault(_picker);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var IconPicker = function (_Picker) {
            _inherits(IconPicker, _Picker);

            function IconPicker(select, icons) {
              _classCallCheck(this, IconPicker);

              var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));

              _this.container.classList.add('ql-icon-picker');

              [].forEach.call(_this.container.querySelectorAll('.ql-picker-item'), function (item) {
                item.innerHTML = icons[item.getAttribute('data-value') || ''];
              });
              _this.defaultItem = _this.container.querySelector('.ql-selected');

              _this.selectItem(_this.defaultItem);

              return _this;
            }

            _createClass(IconPicker, [{
              key: 'selectItem',
              value: function selectItem(item, trigger) {
                _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), 'selectItem', this).call(this, item, trigger);

                item = item || this.defaultItem;
                this.label.innerHTML = item.innerHTML;
              }
            }]);

            return IconPicker;
          }(_picker2["default"]);

          exports["default"] = IconPicker;
          /***/
        },
        /* 61 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          var Tooltip = function () {
            function Tooltip(quill, boundsContainer) {
              var _this = this;

              _classCallCheck(this, Tooltip);

              this.quill = quill;
              this.boundsContainer = boundsContainer || document.body;
              this.root = quill.addContainer('ql-tooltip');
              this.root.innerHTML = this.constructor.TEMPLATE;

              if (this.quill.root === this.quill.scrollingContainer) {
                this.quill.root.addEventListener('scroll', function () {
                  _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + 'px';
                });
              }

              this.hide();
            }

            _createClass(Tooltip, [{
              key: 'hide',
              value: function hide() {
                this.root.classList.add('ql-hidden');
              }
            }, {
              key: 'position',
              value: function position(reference) {
                var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2; // root.scrollTop should be 0 if scrollContainer !== root

                var top = reference.bottom + this.quill.root.scrollTop;
                this.root.style.left = left + 'px';
                this.root.style.top = top + 'px';
                this.root.classList.remove('ql-flip');
                var containerBounds = this.boundsContainer.getBoundingClientRect();
                var rootBounds = this.root.getBoundingClientRect();
                var shift = 0;

                if (rootBounds.right > containerBounds.right) {
                  shift = containerBounds.right - rootBounds.right;
                  this.root.style.left = left + shift + 'px';
                }

                if (rootBounds.left < containerBounds.left) {
                  shift = containerBounds.left - rootBounds.left;
                  this.root.style.left = left + shift + 'px';
                }

                if (rootBounds.bottom > containerBounds.bottom) {
                  var height = rootBounds.bottom - rootBounds.top;
                  var verticalShift = reference.bottom - reference.top + height;
                  this.root.style.top = top - verticalShift + 'px';
                  this.root.classList.add('ql-flip');
                }

                return shift;
              }
            }, {
              key: 'show',
              value: function show() {
                this.root.classList.remove('ql-editing');
                this.root.classList.remove('ql-hidden');
              }
            }]);

            return Tooltip;
          }();

          exports["default"] = Tooltip;
          /***/
        },
        /* 62 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _slicedToArray = function () {
            function sliceIterator(arr, i) {
              var _arr = [];
              var _n = true;
              var _d = false;
              var _e = undefined;

              try {
                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
                  _arr.push(_s.value);

                  if (i && _arr.length === i) break;
                }
              } catch (err) {
                _d = true;
                _e = err;
              } finally {
                try {
                  if (!_n && _i["return"]) _i["return"]();
                } finally {
                  if (_d) throw _e;
                }
              }

              return _arr;
            }

            return function (arr, i) {
              if (Array.isArray(arr)) {
                return arr;
              } else if (Symbol.iterator in Object(arr)) {
                return sliceIterator(arr, i);
              } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance");
              }
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _emitter = __webpack_require__(8);

          var _emitter2 = _interopRequireDefault(_emitter);

          var _base = __webpack_require__(43);

          var _base2 = _interopRequireDefault(_base);

          var _link = __webpack_require__(27);

          var _link2 = _interopRequireDefault(_link);

          var _selection = __webpack_require__(15);

          var _icons = __webpack_require__(41);

          var _icons2 = _interopRequireDefault(_icons);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var TOOLBAR_CONFIG = [[{
            header: ['1', '2', '3', false]
          }], ['bold', 'italic', 'underline', 'link'], [{
            list: 'ordered'
          }, {
            list: 'bullet'
          }], ['clean']];

          var SnowTheme = function (_BaseTheme) {
            _inherits(SnowTheme, _BaseTheme);

            function SnowTheme(quill, options) {
              _classCallCheck(this, SnowTheme);

              if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
                options.modules.toolbar.container = TOOLBAR_CONFIG;
              }

              var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));

              _this.quill.container.classList.add('ql-snow');

              return _this;
            }

            _createClass(SnowTheme, [{
              key: 'extendToolbar',
              value: function extendToolbar(toolbar) {
                toolbar.container.classList.add('ql-snow');
                this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2["default"]);
                this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2["default"]);
                this.tooltip = new SnowTooltip(this.quill, this.options.bounds);

                if (toolbar.container.querySelector('.ql-link')) {
                  this.quill.keyboard.addBinding({
                    key: 'K',
                    shortKey: true
                  }, function (range, context) {
                    toolbar.handlers['link'].call(toolbar, !context.format.link);
                  });
                }
              }
            }]);

            return SnowTheme;
          }(_base2["default"]);

          SnowTheme.DEFAULTS = (0, _extend2["default"])(true, {}, _base2["default"].DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  link: function link(value) {
                    if (value) {
                      var range = this.quill.getSelection();
                      if (range == null || range.length == 0) return;
                      var preview = this.quill.getText(range);

                      if (/^\S+@\S+\.\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {
                        preview = 'mailto:' + preview;
                      }

                      var tooltip = this.quill.theme.tooltip;
                      tooltip.edit('link', preview);
                    } else {
                      this.quill.format('link', false);
                    }
                  }
                }
              }
            }
          });

          var SnowTooltip = function (_BaseTooltip) {
            _inherits(SnowTooltip, _BaseTooltip);

            function SnowTooltip(quill, bounds) {
              _classCallCheck(this, SnowTooltip);

              var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));

              _this2.preview = _this2.root.querySelector('a.ql-preview');
              return _this2;
            }

            _createClass(SnowTooltip, [{
              key: 'listen',
              value: function listen() {
                var _this3 = this;

                _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'listen', this).call(this);

                this.root.querySelector('a.ql-action').addEventListener('click', function (event) {
                  if (_this3.root.classList.contains('ql-editing')) {
                    _this3.save();
                  } else {
                    _this3.edit('link', _this3.preview.textContent);
                  }

                  event.preventDefault();
                });
                this.root.querySelector('a.ql-remove').addEventListener('click', function (event) {
                  if (_this3.linkRange != null) {
                    var range = _this3.linkRange;

                    _this3.restoreFocus();

                    _this3.quill.formatText(range, 'link', false, _emitter2["default"].sources.USER);

                    delete _this3.linkRange;
                  }

                  event.preventDefault();

                  _this3.hide();
                });
                this.quill.on(_emitter2["default"].events.SELECTION_CHANGE, function (range, oldRange, source) {
                  if (range == null) return;

                  if (range.length === 0 && source === _emitter2["default"].sources.USER) {
                    var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2["default"], range.index),
                        _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
                        link = _quill$scroll$descend2[0],
                        offset = _quill$scroll$descend2[1];

                    if (link != null) {
                      _this3.linkRange = new _selection.Range(range.index - offset, link.length());

                      var preview = _link2["default"].formats(link.domNode);

                      _this3.preview.textContent = preview;

                      _this3.preview.setAttribute('href', preview);

                      _this3.show();

                      _this3.position(_this3.quill.getBounds(_this3.linkRange));

                      return;
                    }
                  } else {
                    delete _this3.linkRange;
                  }

                  _this3.hide();
                });
              }
            }, {
              key: 'show',
              value: function show() {
                _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'show', this).call(this);

                this.root.removeAttribute('data-mode');
              }
            }]);

            return SnowTooltip;
          }(_base.BaseTooltip);

          SnowTooltip.TEMPLATE = ['<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join('');
          exports["default"] = SnowTheme;
          /***/
        },
        /* 63 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _core = __webpack_require__(29);

          var _core2 = _interopRequireDefault(_core);

          var _align = __webpack_require__(36);

          var _direction = __webpack_require__(38);

          var _indent = __webpack_require__(64);

          var _blockquote = __webpack_require__(65);

          var _blockquote2 = _interopRequireDefault(_blockquote);

          var _header = __webpack_require__(66);

          var _header2 = _interopRequireDefault(_header);

          var _list = __webpack_require__(67);

          var _list2 = _interopRequireDefault(_list);

          var _background = __webpack_require__(37);

          var _color = __webpack_require__(26);

          var _font = __webpack_require__(39);

          var _size = __webpack_require__(40);

          var _bold = __webpack_require__(56);

          var _bold2 = _interopRequireDefault(_bold);

          var _italic = __webpack_require__(68);

          var _italic2 = _interopRequireDefault(_italic);

          var _link = __webpack_require__(27);

          var _link2 = _interopRequireDefault(_link);

          var _script = __webpack_require__(69);

          var _script2 = _interopRequireDefault(_script);

          var _strike = __webpack_require__(70);

          var _strike2 = _interopRequireDefault(_strike);

          var _underline = __webpack_require__(71);

          var _underline2 = _interopRequireDefault(_underline);

          var _image = __webpack_require__(72);

          var _image2 = _interopRequireDefault(_image);

          var _video = __webpack_require__(73);

          var _video2 = _interopRequireDefault(_video);

          var _code = __webpack_require__(13);

          var _code2 = _interopRequireDefault(_code);

          var _formula = __webpack_require__(74);

          var _formula2 = _interopRequireDefault(_formula);

          var _syntax = __webpack_require__(75);

          var _syntax2 = _interopRequireDefault(_syntax);

          var _toolbar = __webpack_require__(57);

          var _toolbar2 = _interopRequireDefault(_toolbar);

          var _icons = __webpack_require__(41);

          var _icons2 = _interopRequireDefault(_icons);

          var _picker = __webpack_require__(28);

          var _picker2 = _interopRequireDefault(_picker);

          var _colorPicker = __webpack_require__(59);

          var _colorPicker2 = _interopRequireDefault(_colorPicker);

          var _iconPicker = __webpack_require__(60);

          var _iconPicker2 = _interopRequireDefault(_iconPicker);

          var _tooltip = __webpack_require__(61);

          var _tooltip2 = _interopRequireDefault(_tooltip);

          var _bubble = __webpack_require__(108);

          var _bubble2 = _interopRequireDefault(_bubble);

          var _snow = __webpack_require__(62);

          var _snow2 = _interopRequireDefault(_snow);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          _core2["default"].register({
            'attributors/attribute/direction': _direction.DirectionAttribute,
            'attributors/class/align': _align.AlignClass,
            'attributors/class/background': _background.BackgroundClass,
            'attributors/class/color': _color.ColorClass,
            'attributors/class/direction': _direction.DirectionClass,
            'attributors/class/font': _font.FontClass,
            'attributors/class/size': _size.SizeClass,
            'attributors/style/align': _align.AlignStyle,
            'attributors/style/background': _background.BackgroundStyle,
            'attributors/style/color': _color.ColorStyle,
            'attributors/style/direction': _direction.DirectionStyle,
            'attributors/style/font': _font.FontStyle,
            'attributors/style/size': _size.SizeStyle
          }, true);

          _core2["default"].register({
            'formats/align': _align.AlignClass,
            'formats/direction': _direction.DirectionClass,
            'formats/indent': _indent.IndentClass,
            'formats/background': _background.BackgroundStyle,
            'formats/color': _color.ColorStyle,
            'formats/font': _font.FontClass,
            'formats/size': _size.SizeClass,
            'formats/blockquote': _blockquote2["default"],
            'formats/code-block': _code2["default"],
            'formats/header': _header2["default"],
            'formats/list': _list2["default"],
            'formats/bold': _bold2["default"],
            'formats/code': _code.Code,
            'formats/italic': _italic2["default"],
            'formats/link': _link2["default"],
            'formats/script': _script2["default"],
            'formats/strike': _strike2["default"],
            'formats/underline': _underline2["default"],
            'formats/image': _image2["default"],
            'formats/video': _video2["default"],
            'formats/list/item': _list.ListItem,
            'modules/formula': _formula2["default"],
            'modules/syntax': _syntax2["default"],
            'modules/toolbar': _toolbar2["default"],
            'themes/bubble': _bubble2["default"],
            'themes/snow': _snow2["default"],
            'ui/icons': _icons2["default"],
            'ui/picker': _picker2["default"],
            'ui/icon-picker': _iconPicker2["default"],
            'ui/color-picker': _colorPicker2["default"],
            'ui/tooltip': _tooltip2["default"]
          }, true);

          exports["default"] = _core2["default"];
          /***/
        },
        /* 64 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports.IndentClass = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var IdentAttributor = function (_Parchment$Attributor) {
            _inherits(IdentAttributor, _Parchment$Attributor);

            function IdentAttributor() {
              _classCallCheck(this, IdentAttributor);

              return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));
            }

            _createClass(IdentAttributor, [{
              key: 'add',
              value: function add(node, value) {
                if (value === '+1' || value === '-1') {
                  var indent = this.value(node) || 0;
                  value = value === '+1' ? indent + 1 : indent - 1;
                }

                if (value === 0) {
                  this.remove(node);
                  return true;
                } else {
                  return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'add', this).call(this, node, value);
                }
              }
            }, {
              key: 'canAdd',
              value: function canAdd(node, value) {
                return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, parseInt(value));
              }
            }, {
              key: 'value',
              value: function value(node) {
                return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'value', this).call(this, node)) || undefined; // Don't return NaN
              }
            }]);

            return IdentAttributor;
          }(_parchment2["default"].Attributor.Class);

          var IndentClass = new IdentAttributor('indent', 'ql-indent', {
            scope: _parchment2["default"].Scope.BLOCK,
            whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
          });
          exports.IndentClass = IndentClass;
          /***/
        },
        /* 65 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Blockquote = function (_Block) {
            _inherits(Blockquote, _Block);

            function Blockquote() {
              _classCallCheck(this, Blockquote);

              return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));
            }

            return Blockquote;
          }(_block2["default"]);

          Blockquote.blotName = 'blockquote';
          Blockquote.tagName = 'blockquote';
          exports["default"] = Blockquote;
          /***/
        },
        /* 66 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Header = function (_Block) {
            _inherits(Header, _Block);

            function Header() {
              _classCallCheck(this, Header);

              return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
            }

            _createClass(Header, null, [{
              key: 'formats',
              value: function formats(domNode) {
                return this.tagName.indexOf(domNode.tagName) + 1;
              }
            }]);

            return Header;
          }(_block2["default"]);

          Header.blotName = 'header';
          Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];
          exports["default"] = Header;
          /***/
        },
        /* 67 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.ListItem = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _block = __webpack_require__(4);

          var _block2 = _interopRequireDefault(_block);

          var _container = __webpack_require__(25);

          var _container2 = _interopRequireDefault(_container);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _defineProperty(obj, key, value) {
            if (key in obj) {
              Object.defineProperty(obj, key, {
                value: value,
                enumerable: true,
                configurable: true,
                writable: true
              });
            } else {
              obj[key] = value;
            }

            return obj;
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ListItem = function (_Block) {
            _inherits(ListItem, _Block);

            function ListItem() {
              _classCallCheck(this, ListItem);

              return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));
            }

            _createClass(ListItem, [{
              key: 'format',
              value: function format(name, value) {
                if (name === List.blotName && !value) {
                  this.replaceWith(_parchment2["default"].create(this.statics.scope));
                } else {
                  _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'format', this).call(this, name, value);
                }
              }
            }, {
              key: 'remove',
              value: function remove() {
                if (this.prev == null && this.next == null) {
                  this.parent.remove();
                } else {
                  _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'remove', this).call(this);
                }
              }
            }, {
              key: 'replaceWith',
              value: function replaceWith(name, value) {
                this.parent.isolate(this.offset(this.parent), this.length());

                if (name === this.parent.statics.blotName) {
                  this.parent.replaceWith(name, value);
                  return this;
                } else {
                  this.parent.unwrap();
                  return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'replaceWith', this).call(this, name, value);
                }
              }
            }], [{
              key: 'formats',
              value: function formats(domNode) {
                return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), 'formats', this).call(this, domNode);
              }
            }]);

            return ListItem;
          }(_block2["default"]);

          ListItem.blotName = 'list-item';
          ListItem.tagName = 'LI';

          var List = function (_Container) {
            _inherits(List, _Container);

            _createClass(List, null, [{
              key: 'create',
              value: function create(value) {
                var tagName = value === 'ordered' ? 'OL' : 'UL';

                var node = _get(List.__proto__ || Object.getPrototypeOf(List), 'create', this).call(this, tagName);

                if (value === 'checked' || value === 'unchecked') {
                  node.setAttribute('data-checked', value === 'checked');
                }

                return node;
              }
            }, {
              key: 'formats',
              value: function formats(domNode) {
                if (domNode.tagName === 'OL') return 'ordered';

                if (domNode.tagName === 'UL') {
                  if (domNode.hasAttribute('data-checked')) {
                    return domNode.getAttribute('data-checked') === 'true' ? 'checked' : 'unchecked';
                  } else {
                    return 'bullet';
                  }
                }

                return undefined;
              }
            }]);

            function List(domNode) {
              _classCallCheck(this, List);

              var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));

              var listEventHandler = function listEventHandler(e) {
                if (e.target.parentNode !== domNode) return;

                var format = _this2.statics.formats(domNode);

                var blot = _parchment2["default"].find(e.target);

                if (format === 'checked') {
                  blot.format('list', 'unchecked');
                } else if (format === 'unchecked') {
                  blot.format('list', 'checked');
                }
              };

              domNode.addEventListener('touchstart', listEventHandler);
              domNode.addEventListener('mousedown', listEventHandler);
              return _this2;
            }

            _createClass(List, [{
              key: 'format',
              value: function format(name, value) {
                if (this.children.length > 0) {
                  this.children.tail.format(name, value);
                }
              }
            }, {
              key: 'formats',
              value: function formats() {
                // We don't inherit from FormatBlot
                return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
              }
            }, {
              key: 'insertBefore',
              value: function insertBefore(blot, ref) {
                if (blot instanceof ListItem) {
                  _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'insertBefore', this).call(this, blot, ref);
                } else {
                  var index = ref == null ? this.length() : ref.offset(this);
                  var after = this.split(index);
                  after.parent.insertBefore(blot, after);
                }
              }
            }, {
              key: 'optimize',
              value: function optimize(context) {
                _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'optimize', this).call(this, context);

                var next = this.next;

                if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute('data-checked') === this.domNode.getAttribute('data-checked')) {
                  next.moveChildren(this);
                  next.remove();
                }
              }
            }, {
              key: 'replace',
              value: function replace(target) {
                if (target.statics.blotName !== this.statics.blotName) {
                  var item = _parchment2["default"].create(this.statics.defaultChild);

                  target.moveChildren(item);
                  this.appendChild(item);
                }

                _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'replace', this).call(this, target);
              }
            }]);

            return List;
          }(_container2["default"]);

          List.blotName = 'list';
          List.scope = _parchment2["default"].Scope.BLOCK_BLOT;
          List.tagName = ['OL', 'UL'];
          List.defaultChild = 'list-item';
          List.allowedChildren = [ListItem];
          exports.ListItem = ListItem;
          exports["default"] = List;
          /***/
        },
        /* 68 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _bold = __webpack_require__(56);

          var _bold2 = _interopRequireDefault(_bold);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Italic = function (_Bold) {
            _inherits(Italic, _Bold);

            function Italic() {
              _classCallCheck(this, Italic);

              return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));
            }

            return Italic;
          }(_bold2["default"]);

          Italic.blotName = 'italic';
          Italic.tagName = ['EM', 'I'];
          exports["default"] = Italic;
          /***/
        },
        /* 69 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Script = function (_Inline) {
            _inherits(Script, _Inline);

            function Script() {
              _classCallCheck(this, Script);

              return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));
            }

            _createClass(Script, null, [{
              key: 'create',
              value: function create(value) {
                if (value === 'super') {
                  return document.createElement('sup');
                } else if (value === 'sub') {
                  return document.createElement('sub');
                } else {
                  return _get(Script.__proto__ || Object.getPrototypeOf(Script), 'create', this).call(this, value);
                }
              }
            }, {
              key: 'formats',
              value: function formats(domNode) {
                if (domNode.tagName === 'SUB') return 'sub';
                if (domNode.tagName === 'SUP') return 'super';
                return undefined;
              }
            }]);

            return Script;
          }(_inline2["default"]);

          Script.blotName = 'script';
          Script.tagName = ['SUB', 'SUP'];
          exports["default"] = Script;
          /***/
        },
        /* 70 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Strike = function (_Inline) {
            _inherits(Strike, _Inline);

            function Strike() {
              _classCallCheck(this, Strike);

              return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));
            }

            return Strike;
          }(_inline2["default"]);

          Strike.blotName = 'strike';
          Strike.tagName = 'S';
          exports["default"] = Strike;
          /***/
        },
        /* 71 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _inline = __webpack_require__(6);

          var _inline2 = _interopRequireDefault(_inline);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var Underline = function (_Inline) {
            _inherits(Underline, _Inline);

            function Underline() {
              _classCallCheck(this, Underline);

              return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));
            }

            return Underline;
          }(_inline2["default"]);

          Underline.blotName = 'underline';
          Underline.tagName = 'U';
          exports["default"] = Underline;
          /***/
        },
        /* 72 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _link = __webpack_require__(27);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ATTRIBUTES = ['alt', 'height', 'width'];

          var Image = function (_Parchment$Embed) {
            _inherits(Image, _Parchment$Embed);

            function Image() {
              _classCallCheck(this, Image);

              return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
            }

            _createClass(Image, [{
              key: 'format',
              value: function format(name, value) {
                if (ATTRIBUTES.indexOf(name) > -1) {
                  if (value) {
                    this.domNode.setAttribute(name, value);
                  } else {
                    this.domNode.removeAttribute(name);
                  }
                } else {
                  _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'format', this).call(this, name, value);
                }
              }
            }], [{
              key: 'create',
              value: function create(value) {
                var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), 'create', this).call(this, value);

                if (typeof value === 'string') {
                  node.setAttribute('src', this.sanitize(value));
                }

                return node;
              }
            }, {
              key: 'formats',
              value: function formats(domNode) {
                return ATTRIBUTES.reduce(function (formats, attribute) {
                  if (domNode.hasAttribute(attribute)) {
                    formats[attribute] = domNode.getAttribute(attribute);
                  }

                  return formats;
                }, {});
              }
            }, {
              key: 'match',
              value: function match(url) {
                return /\.(jpe?g|gif|png)$/.test(url) || /^data:image\/.+;base64/.test(url);
              }
            }, {
              key: 'sanitize',
              value: function sanitize(url) {
                return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';
              }
            }, {
              key: 'value',
              value: function value(domNode) {
                return domNode.getAttribute('src');
              }
            }]);

            return Image;
          }(_parchment2["default"].Embed);

          Image.blotName = 'image';
          Image.tagName = 'IMG';
          exports["default"] = Image;
          /***/
        },
        /* 73 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _block = __webpack_require__(4);

          var _link = __webpack_require__(27);

          var _link2 = _interopRequireDefault(_link);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var ATTRIBUTES = ['height', 'width'];

          var Video = function (_BlockEmbed) {
            _inherits(Video, _BlockEmbed);

            function Video() {
              _classCallCheck(this, Video);

              return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));
            }

            _createClass(Video, [{
              key: 'format',
              value: function format(name, value) {
                if (ATTRIBUTES.indexOf(name) > -1) {
                  if (value) {
                    this.domNode.setAttribute(name, value);
                  } else {
                    this.domNode.removeAttribute(name);
                  }
                } else {
                  _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), 'format', this).call(this, name, value);
                }
              }
            }], [{
              key: 'create',
              value: function create(value) {
                var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), 'create', this).call(this, value);

                node.setAttribute('frameborder', '0');
                node.setAttribute('allowfullscreen', true);
                node.setAttribute('src', this.sanitize(value));
                return node;
              }
            }, {
              key: 'formats',
              value: function formats(domNode) {
                return ATTRIBUTES.reduce(function (formats, attribute) {
                  if (domNode.hasAttribute(attribute)) {
                    formats[attribute] = domNode.getAttribute(attribute);
                  }

                  return formats;
                }, {});
              }
            }, {
              key: 'sanitize',
              value: function sanitize(url) {
                return _link2["default"].sanitize(url);
              }
            }, {
              key: 'value',
              value: function value(domNode) {
                return domNode.getAttribute('src');
              }
            }]);

            return Video;
          }(_block.BlockEmbed);

          Video.blotName = 'video';
          Video.className = 'ql-video';
          Video.tagName = 'IFRAME';
          exports["default"] = Video;
          /***/
        },
        /* 74 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.FormulaBlot = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _embed = __webpack_require__(35);

          var _embed2 = _interopRequireDefault(_embed);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var FormulaBlot = function (_Embed) {
            _inherits(FormulaBlot, _Embed);

            function FormulaBlot() {
              _classCallCheck(this, FormulaBlot);

              return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));
            }

            _createClass(FormulaBlot, null, [{
              key: 'create',
              value: function create(value) {
                var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), 'create', this).call(this, value);

                if (typeof value === 'string') {
                  window.katex.render(value, node, {
                    throwOnError: false,
                    errorColor: '#f00'
                  });
                  node.setAttribute('data-value', value);
                }

                return node;
              }
            }, {
              key: 'value',
              value: function value(domNode) {
                return domNode.getAttribute('data-value');
              }
            }]);

            return FormulaBlot;
          }(_embed2["default"]);

          FormulaBlot.blotName = 'formula';
          FormulaBlot.className = 'ql-formula';
          FormulaBlot.tagName = 'SPAN';

          var Formula = function (_Module) {
            _inherits(Formula, _Module);

            _createClass(Formula, null, [{
              key: 'register',
              value: function register() {
                _quill2["default"].register(FormulaBlot, true);
              }
            }]);

            function Formula() {
              _classCallCheck(this, Formula);

              var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));

              if (window.katex == null) {
                throw new Error('Formula module requires KaTeX.');
              }

              return _this2;
            }

            return Formula;
          }(_module2["default"]);

          exports.FormulaBlot = FormulaBlot;
          exports["default"] = Formula;
          /***/
        },
        /* 75 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.CodeToken = exports.CodeBlock = undefined;

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _parchment = __webpack_require__(0);

          var _parchment2 = _interopRequireDefault(_parchment);

          var _quill = __webpack_require__(5);

          var _quill2 = _interopRequireDefault(_quill);

          var _module = __webpack_require__(9);

          var _module2 = _interopRequireDefault(_module);

          var _code = __webpack_require__(13);

          var _code2 = _interopRequireDefault(_code);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var SyntaxCodeBlock = function (_CodeBlock) {
            _inherits(SyntaxCodeBlock, _CodeBlock);

            function SyntaxCodeBlock() {
              _classCallCheck(this, SyntaxCodeBlock);

              return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));
            }

            _createClass(SyntaxCodeBlock, [{
              key: 'replaceWith',
              value: function replaceWith(block) {
                this.domNode.textContent = this.domNode.textContent;
                this.attach();

                _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), 'replaceWith', this).call(this, block);
              }
            }, {
              key: 'highlight',
              value: function highlight(_highlight) {
                var text = this.domNode.textContent;

                if (this.cachedText !== text) {
                  if (text.trim().length > 0 || this.cachedText == null) {
                    this.domNode.innerHTML = _highlight(text);
                    this.domNode.normalize();
                    this.attach();
                  }

                  this.cachedText = text;
                }
              }
            }]);

            return SyntaxCodeBlock;
          }(_code2["default"]);

          SyntaxCodeBlock.className = 'ql-syntax';
          var CodeToken = new _parchment2["default"].Attributor.Class('token', 'hljs', {
            scope: _parchment2["default"].Scope.INLINE
          });

          var Syntax = function (_Module) {
            _inherits(Syntax, _Module);

            _createClass(Syntax, null, [{
              key: 'register',
              value: function register() {
                _quill2["default"].register(CodeToken, true);

                _quill2["default"].register(SyntaxCodeBlock, true);
              }
            }]);

            function Syntax(quill, options) {
              _classCallCheck(this, Syntax);

              var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));

              if (typeof _this2.options.highlight !== 'function') {
                throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');
              }

              var timer = null;

              _this2.quill.on(_quill2["default"].events.SCROLL_OPTIMIZE, function () {
                clearTimeout(timer);
                timer = setTimeout(function () {
                  _this2.highlight();

                  timer = null;
                }, _this2.options.interval);
              });

              _this2.highlight();

              return _this2;
            }

            _createClass(Syntax, [{
              key: 'highlight',
              value: function highlight() {
                var _this3 = this;

                if (this.quill.selection.composing) return;
                this.quill.update(_quill2["default"].sources.USER);
                var range = this.quill.getSelection();
                this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function (code) {
                  code.highlight(_this3.options.highlight);
                });
                this.quill.update(_quill2["default"].sources.SILENT);

                if (range != null) {
                  this.quill.setSelection(range, _quill2["default"].sources.SILENT);
                }
              }
            }]);

            return Syntax;
          }(_module2["default"]);

          Syntax.DEFAULTS = {
            highlight: function () {
              if (window.hljs == null) return null;
              return function (text) {
                var result = window.hljs.highlightAuto(text);
                return result.value;
              };
            }(),
            interval: 1000
          };
          exports.CodeBlock = SyntaxCodeBlock;
          exports.CodeToken = CodeToken;
          exports["default"] = Syntax;
          /***/
        },
        /* 76 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>";
          /***/
        },
        /* 77 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>";
          /***/
        },
        /* 78 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>";
          /***/
        },
        /* 79 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>";
          /***/
        },
        /* 80 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <g class=\"ql-fill ql-color-label\"> <polygon points=\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\"6.817 5 6 5 6 6 6.38 6 6.817 5\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\"4.63 10 4 10 4 11 4.192 11 4.63 10\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\"12 6.868 12 6 11.62 6 12 6.868\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\"12.933 9 13 9 13 8 12.495 8 12.933 9\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\"5.5 13 9 5 12.5 13\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>";
          /***/
        },
        /* 81 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=4 y=5></rect> <rect class=\"ql-fill ql-stroke\" height=3 width=3 x=11 y=5></rect> <path class=\"ql-even ql-fill ql-stroke\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\"ql-even ql-fill ql-stroke\" d=M14,8c0,4.031-3,5-3,5></path> </svg>";
          /***/
        },
        /* 82 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>";
          /***/
        },
        /* 83 */

        /***/
        function (module, exports) {
          module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>";
          /***/
        },
        /* 84 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-color-label ql-stroke ql-transparent\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\"5.5 11 9 3 12.5 11\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>";
          /***/
        },
        /* 85 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"3 11 5 9 3 7 3 11\"></polygon> <line class=\"ql-stroke ql-fill\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>";
          /***/
        },
        /* 86 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=\"ql-stroke ql-fill\" points=\"15 12 13 10 15 8 15 12\"></polygon> <line class=\"ql-stroke ql-fill\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>";
          /***/
        },
        /* 87 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>";
          /***/
        },
        /* 88 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>";
          /***/
        },
        /* 89 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>";
          /***/
        },
        /* 90 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\"translate(24 18) rotate(-180)\"/> </svg>";
          /***/
        },
        /* 91 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>";
          /***/
        },
        /* 92 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>";
          /***/
        },
        /* 93 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewBox=\"0 0 18 18\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>";
          /***/
        },
        /* 94 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>";
          /***/
        },
        /* 95 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\"ql-even ql-fill\" points=\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\"></polyline> </svg>";
          /***/
        },
        /* 96 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\"ql-fill ql-stroke\" points=\"3 7 3 11 5 9 3 7\"></polyline> </svg>";
          /***/
        },
        /* 97 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"5 7 5 11 3 9 5 7\"></polyline> </svg>";
          /***/
        },
        /* 98 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\"ql-even ql-stroke\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\"ql-even ql-stroke\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>";
          /***/
        },
        /* 99 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\"ql-stroke ql-thin\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\"ql-stroke ql-thin\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\"ql-stroke ql-thin\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>";
          /***/
        },
        /* 100 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>";
          /***/
        },
        /* 101 */

        /***/
        function (module, exports) {
          module.exports = "<svg class=\"\" viewbox=\"0 0 18 18\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\"3 4 4 5 6 3\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\"3 14 4 15 6 13\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\"3 9 4 10 6 8\"></polyline> </svg>";
          /***/
        },
        /* 102 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>";
          /***/
        },
        /* 103 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>";
          /***/
        },
        /* 104 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <line class=\"ql-stroke ql-thin\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>";
          /***/
        },
        /* 105 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>";
          /***/
        },
        /* 106 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>";
          /***/
        },
        /* 107 */

        /***/
        function (module, exports) {
          module.exports = "<svg viewbox=\"0 0 18 18\"> <polygon class=ql-stroke points=\"7 11 9 13 11 11 7 11\"></polygon> <polygon class=ql-stroke points=\"7 7 9 5 11 7 7 7\"></polygon> </svg>";
          /***/
        },
        /* 108 */

        /***/
        function (module, exports, __webpack_require__) {
          "use strict";

          Object.defineProperty(exports, "__esModule", {
            value: true
          });
          exports["default"] = exports.BubbleTooltip = undefined;

          var _get = function get(object, property, receiver) {
            if (object === null) object = Function.prototype;
            var desc = Object.getOwnPropertyDescriptor(object, property);

            if (desc === undefined) {
              var parent = Object.getPrototypeOf(object);

              if (parent === null) {
                return undefined;
              } else {
                return get(parent, property, receiver);
              }
            } else if ("value" in desc) {
              return desc.value;
            } else {
              var getter = desc.get;

              if (getter === undefined) {
                return undefined;
              }

              return getter.call(receiver);
            }
          };

          var _createClass = function () {
            function defineProperties(target, props) {
              for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
              }
            }

            return function (Constructor, protoProps, staticProps) {
              if (protoProps) defineProperties(Constructor.prototype, protoProps);
              if (staticProps) defineProperties(Constructor, staticProps);
              return Constructor;
            };
          }();

          var _extend = __webpack_require__(3);

          var _extend2 = _interopRequireDefault(_extend);

          var _emitter = __webpack_require__(8);

          var _emitter2 = _interopRequireDefault(_emitter);

          var _base = __webpack_require__(43);

          var _base2 = _interopRequireDefault(_base);

          var _selection = __webpack_require__(15);

          var _icons = __webpack_require__(41);

          var _icons2 = _interopRequireDefault(_icons);

          function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
              "default": obj
            };
          }

          function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
              throw new TypeError("Cannot call a class as a function");
            }
          }

          function _possibleConstructorReturn(self, call) {
            if (!self) {
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            }

            return call && (typeof call === "object" || typeof call === "function") ? call : self;
          }

          function _inherits(subClass, superClass) {
            if (typeof superClass !== "function" && superClass !== null) {
              throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
            }

            subClass.prototype = Object.create(superClass && superClass.prototype, {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
            if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
          }

          var TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{
            header: 1
          }, {
            header: 2
          }, 'blockquote']];

          var BubbleTheme = function (_BaseTheme) {
            _inherits(BubbleTheme, _BaseTheme);

            function BubbleTheme(quill, options) {
              _classCallCheck(this, BubbleTheme);

              if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
                options.modules.toolbar.container = TOOLBAR_CONFIG;
              }

              var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));

              _this.quill.container.classList.add('ql-bubble');

              return _this;
            }

            _createClass(BubbleTheme, [{
              key: 'extendToolbar',
              value: function extendToolbar(toolbar) {
                this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
                this.tooltip.root.appendChild(toolbar.container);
                this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2["default"]);
                this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2["default"]);
              }
            }]);

            return BubbleTheme;
          }(_base2["default"]);

          BubbleTheme.DEFAULTS = (0, _extend2["default"])(true, {}, _base2["default"].DEFAULTS, {
            modules: {
              toolbar: {
                handlers: {
                  link: function link(value) {
                    if (!value) {
                      this.quill.format('link', false);
                    } else {
                      this.quill.theme.tooltip.edit();
                    }
                  }
                }
              }
            }
          });

          var BubbleTooltip = function (_BaseTooltip) {
            _inherits(BubbleTooltip, _BaseTooltip);

            function BubbleTooltip(quill, bounds) {
              _classCallCheck(this, BubbleTooltip);

              var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));

              _this2.quill.on(_emitter2["default"].events.EDITOR_CHANGE, function (type, range, oldRange, source) {
                if (type !== _emitter2["default"].events.SELECTION_CHANGE) return;

                if (range != null && range.length > 0 && source === _emitter2["default"].sources.USER) {
                  _this2.show(); // Lock our width so we will expand beyond our offsetParent boundaries


                  _this2.root.style.left = '0px';
                  _this2.root.style.width = '';
                  _this2.root.style.width = _this2.root.offsetWidth + 'px';

                  var lines = _this2.quill.getLines(range.index, range.length);

                  if (lines.length === 1) {
                    _this2.position(_this2.quill.getBounds(range));
                  } else {
                    var lastLine = lines[lines.length - 1];

                    var index = _this2.quill.getIndex(lastLine);

                    var length = Math.min(lastLine.length() - 1, range.index + range.length - index);

                    var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));

                    _this2.position(_bounds);
                  }
                } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
                  _this2.hide();
                }
              });

              return _this2;
            }

            _createClass(BubbleTooltip, [{
              key: 'listen',
              value: function listen() {
                var _this3 = this;

                _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'listen', this).call(this);

                this.root.querySelector('.ql-close').addEventListener('click', function () {
                  _this3.root.classList.remove('ql-editing');
                });
                this.quill.on(_emitter2["default"].events.SCROLL_OPTIMIZE, function () {
                  // Let selection be restored by toolbar handlers before repositioning
                  setTimeout(function () {
                    if (_this3.root.classList.contains('ql-hidden')) return;

                    var range = _this3.quill.getSelection();

                    if (range != null) {
                      _this3.position(_this3.quill.getBounds(range));
                    }
                  }, 1);
                });
              }
            }, {
              key: 'cancel',
              value: function cancel() {
                this.show();
              }
            }, {
              key: 'position',
              value: function position(reference) {
                var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'position', this).call(this, reference);

                var arrow = this.root.querySelector('.ql-tooltip-arrow');
                arrow.style.marginLeft = '';
                if (shift === 0) return shift;
                arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + 'px';
              }
            }]);

            return BubbleTooltip;
          }(_base.BaseTooltip);

          BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', '</div>'].join('');
          exports.BubbleTooltip = BubbleTooltip;
          exports["default"] = BubbleTheme;
          /***/
        },
        /* 109 */

        /***/
        function (module, exports, __webpack_require__) {
          module.exports = __webpack_require__(63);
          /***/
        }
        /******/
        ])["default"]
      );
    });
    /***/

  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-layout/print-layout.component.html":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-layout/print-layout.component.html ***!
    \******************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppPrintPrintLayoutPrintLayoutComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<router-outlet></router-outlet>\n \n";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-production-order/print-production-order.component.html":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-production-order/print-production-order.component.html ***!
    \**************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppPrintPrintProductionOrderPrintProductionOrderComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<table style=\"width: 100%;\" class=\"p-0 m-0\">\n    <thead>\n        <tr>\n            <td>\n                <div class=\"header\">\n                </div>\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>\n                <div class=\"content\">\n                    <table style=\"width: 100%;\">\n                        <thead class=\"border\" style=\"width: 100%;\">\n                            <tr>\n                                <th style=\"width: 20px;\" class=\"p-0 pl-1 m-0\">Nr.</th>\n                                <th class=\"col120\">Rodzaj / Numer kształ.</th>\n                                <!-- <th class=\"col120\">Rodzaj kształ.</th> -->\n                                <th class=\"text-center\" style=\"width: auto;\">Strony</th>\n                                <th class=\"col70\" *ngIf=\"checkShow('numberFv')\">Numer faktury</th>\n                                <th class=\"col50\" *ngIf=\"checkShow('accepted')\">Zaakceptowano</th>\n                                <th class=\"col70\" *ngIf=\"checkShow('statusOrderPosition')\">Status</th>\n                                <th class=\"col50\" *ngIf=\"checkShow('completed')\">Wykonano</th>\n                                <th class=\"col70\" *ngIf=\"checkShow('dateCompletedPosition')\">Data wykonania</th>\n                                <th class=\"col50\" *ngIf=\"checkShow('warranty')\">Gwarancja</th>\n                                <th class=\"col120\" *ngIf=\"checkShow('comment')\">Uwagi</th>\n                            </tr>\n                        </thead>\n                        <tbody class=\"pSideRow border\">\n                            <tr class=\"pOrder\" *ngFor=\"let rowData of orderPosition\">\n\n                                <td>{{rowData.positionNumber}}</td>\n                                <td>{{rowData.profilType}}<br />{{rowData.profilNumber}}</td>\n                                <!-- <td>{{rowData.profilType}}</td> -->\n                                <td class=\"p-0\" style=\"width: auto;\">\n                                    <table style=\"width: 100%;\">\n                                        <thead style=\"width: 100%;\">\n                                            <tr class=\"pSide\">\n                                                <th class=\"col70\">Strona</th>\n                                                <th class=\"col70\">Nr. Okl.</th>\n                                                <th class=\"col70\">Szer. Okl</th>\n                                                <th class=\"text-center col150\">Wymiary</th>\n                                                <th class=\"col70\">Suma wym.</th>\n                                                <th *ngIf=\"checkShowSide('usedFilm')\" class=\"text-center col150\">Zużycie\n                                                </th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('plnMb')\">pln/mb</th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('costSet6Mb')\">kpl. 6Mb</th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('costSetup')\">Ust.</th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('colorChange')\">Zm. kol.</th>\n                                                <th class=\"col120\" *ngIf=\"checkShowSide('employees')\">Pracownicy</th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('glue')\">Klej</th>\n                                                <th class=\"col70\" *ngIf=\"checkShowSide('statusOrderPosition')\">Status\n                                                </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr class=\"positionSides\" *ngFor=\"let rowSide of rowData.postionSide\">\n                                                <td class=\"col70\">{{rowSide.side}}</td>\n                                                <td class=\"col70\">{{rowSide.filmNumber}}</td>\n                                                <td class=\"col70\">{{rowSide.filmWidth}}</td>\n                                                <td class=\"p-0 col150\">\n                                                    <table *ngIf=\"rowSide.profilDimensions.length != 0\" style=\"width: 100%;\">\n                                                        <thead style=\"width: 100%;\">\n                                                            <tr class=\"pSideDim col150\">\n                                                                <th class=\"p-0 col50\">Sztuki</th>\n                                                                <th class=\"p-0 col50\">Dług.</th>\n                                                                <th class=\"p-0 col50\">Suma mb</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <tr class=\"positionDim col150\"\n                                                                *ngFor=\"let rowDim of rowSide.profilDimensions\">\n                                                                <td class=\"p-0 col50\">{{rowDim.quantity}}</td>\n                                                                <td class=\"p-0 col50\">{{rowDim.length}}</td>\n                                                                <td class=\"p-0 col50\">{{rowDim.sumMb}}</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </td>\n                                                <td class=\"col70\">{{rowSide.sumAllDimensions}}</td>\n                                                <td *ngIf=\"checkShowSide('usedFilm')\" class=\"p-0 col150\">\n                                                    <table *ngIf=\"rowSide.usedFilm.length != 0\" style=\"width: 100%;\">\n                                                        <thead style=\"width: 100%;\">\n                                                            <tr>\n                                                                <th class=\"p-0 col50\">Szerokość</th>\n                                                                <th class=\"p-0 col50\">Długość</th>\n                                                                <th class=\"p-0 col50\">Suma m2</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            <tr class=\"positionUse\"\n                                                                *ngFor=\"let rowUse of rowSide.usedFilm\">\n                                                                <td class=\"p-0 col50\">{{rowUse.width}}</td>\n                                                                <td class=\"p-0 col50\">{{rowUse.length}}</td>\n                                                                <td class=\"p-0 col50\">{{rowUse.sumM2}}</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                </td>\n                                                <td *ngIf=\"checkShowSide('plnMb')\" class=\"col70\">{{rowSide.plnMb}}</td>\n                                                <td *ngIf=\"checkShowSide('costSet6Mb')\" class=\"col70\">\n                                                    {{rowSide.costSet6Mb}}</td>\n                                                <td *ngIf=\"checkShowSide('costSetup')\" class=\"col70\">\n                                                    {{rowSide.costSetup}}</td>\n                                                <td *ngIf=\"checkShowSide('colorChange')\" class=\"col70\">\n                                                    {{yesNo(rowSide.colorChange)}}\n                                                </td>\n                                                <td *ngIf=\"checkShowSide('employees')\" class=\"col120\">\n                                                    {{rowSide.employees}}</td>\n                                                <td *ngIf=\"checkShowSide('glue')\" class=\"col70\">{{rowSide.glue}}</td>\n                                                <td *ngIf=\"checkShowSide('statusOrderPosition')\" class=\"col70\">\n                                                    {{rowSide.statusOrderPosition}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </td>\n\n                                <td *ngIf=\"checkShow('numberFv')\">\n                                    {{rowData.numberFv}}</td>\n                                <td *ngIf=\"checkShow('accepted')\">\n                                    {{yesNo(rowData.accepted)}}</td>\n                                <td *ngIf=\"checkShow('statusOrderPosition')\">\n                                    {{rowData.statusOrderPosition}}</td>\n                                <td *ngIf=\"checkShow('completed')\">\n                                    {{yesNo(rowData.completed)}}</td>\n                                <td *ngIf=\"checkShow('dateCompletedPosition')\">\n                                    {{rowData.dateCompletedPosition}}</td>\n                                <td *ngIf=\"checkShow('warranty')\">\n                                    {{yesNo(rowData.warranty)}}</td>\n                                <td *ngIf=\"checkShow('comment')\">\n                                    <div [innerHTML]=\"rowData.comment\"></div>\n                                </td>\n                            </tr>\n                        </tbody>\n\n\n                    </table>\n\n                </div>\n            </td>\n        </tr>\n    </tbody>\n    <tfoot>\n        <tr>\n            <td>\n                <div class=\"footer\">\n\n                </div>\n            </td>\n        </tr>\n    </tfoot>\n</table>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form-update/order-position-form-update.component.html":
  /*!********************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form-update/order-position-form-update.component.html ***!
    \********************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionFormOrderPositionFormUpdateOrderPositionFormUpdateComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Aktualizacja pozycjy dla zlecenia: {{positionData.productionOrder.orderNumber}}</span>\n</div>\n<div class=\"sb-dialog-content pl-4 pr-4\" style=\"max-height: 750px; overflow-y:scroll\">\n\n    <div class=\"row ml-2 pb-2\">\n        <div class=\"col\">\n            <p-dropdown [options]=\"productionService.allSystems\" (onChange)=\"filterBySystem()\"\n                [(ngModel)]=\"selectedSystem\" placeholder=\"Wybierz system\" optionLabel=\"name\" [showClear]=\"true\"\n                filter=\"true\"></p-dropdown>\n        </div>\n        <div *ngIf=\"selectedCatalog != null\" class=\"col\" style=\"border:1px solid #D5D5D5;font-size:12px;\">\n            <div [class]=\"'row p-1 measure-badge status-' + selectedCatalog.actualMeasurement\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div matTooltip=\"Numer kształtownika\">{{selectedCatalog.number}}</div>\n                            <div matTooltip=\"Nazwa kształtownika\">{{selectedCatalog.profileType}}</div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Zewnętrzny\">ZEW: <b>{{selectedCatalog.dimOuter ? selectedCatalog.dimOuter : \"--\"}}</b></div>\n                            <div matTooltip=\"Wewnętrzny\">WEW: <b>{{selectedCatalog.dimInner ? selectedCatalog.dimInner : \"--\"}}</b></div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Jednostronny\">JEDN: <b>{{selectedCatalog.dimOneSide ? selectedCatalog.dimOneSide : \"--\"}}</b></div>\n                            <div matTooltip=\"Obustronny\">OBU: <b>{{selectedCatalog.dimTwoSide ? selectedCatalog.dimTwoSide : \"--\"}}</b></div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Obustronny Zewnętrzny\">OBU ZEW:\n                                <b>{{selectedCatalog.dimTwoSideOuter ? selectedCatalog.dimTwoSideOuter : \"--\"}}</b>\n                            </div>\n                            <div matTooltip=\"Obustronny Wewnętrzny\">OBU WEW:\n                                <b>{{selectedCatalog.dimTwoSideInner ? selectedCatalog.dimTwoSideInner : \"--\"}}</b>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\" style=\"border-top: 1px solid #D5D5D5\">\n                        <div class=\"col\" matTooltip=\"Uwagi\">\n                            <div  [innerHtml]=\"selectedCatalog.comments\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <form class=\"m-4\" [formGroup]=\"formOrderPosition\">\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"profilNumber\">Numer kształtownika *</label>\n                <p-autoComplete [style]=\"{'width':'100%'}\" [inputStyle]=\"{'width':'90%'}\"\n                    [formControl]=\"formOrderPosition.get('profilNumber')\" placeholder=\"Numer\"\n                    [suggestions]=\"catalogSugFiltered\" (completeMethod)=\"searchCatalog($event)\" [dropdown]=\"true\"\n                    (onSelect)=\"onSelectCatalog($event)\">\n                    <ng-template let-catalog pTemplate=\"item\">\n                        <div [class]=\"'ui-helper-clearfix measure-badge status-' + catalog.actualMeasurement\">\n                            <div class=\"row p-0 m-0\">\n                                <div class=\"col p-0 m-0\">\n                                    <div style=\"font-size:16px;\">{{catalog.number}}</div>\n                                    <div style=\"font-size:12px;\">{{catalog.profileType}}</div>\n                                    <div style=\"font-size:12px;\">{{catalog.systemProfil.name}}</div>\n                                </div>\n                                <div class=\"col p-0 pl-3 m-0\">\n                                    <div style=\"font-size:12px;\">ZEW: <b>{{catalog.dimOuter}}</b></div>\n                                    <div style=\"font-size:12px;\">WEW: <b>{{catalog.dimInner}}</b></div>\n                                    <div style=\"font-size:12px;\">JEDN: <b>{{catalog.dimOneSide}}</b></div>\n                                </div>\n                                <div class=\"col p-0 pl-3 m-0\">\n                                    <div style=\"font-size:12px;\">OBU: <b>{{catalog.dimTwoSide}}</b></div>\n                                    <div style=\"font-size:12px;\">OBU ZEW: <b>{{catalog.dimTwoSideOuter}}</b></div>\n                                    <div style=\"font-size:12px;\">OBU WEW: <b>{{catalog.dimTwoSideInner}}</b></div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                </p-autoComplete>\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"profilType\">Rodzaj kształtownika *</label>\n                <input size=\"30\" pInputText [formControl]=\"formOrderPosition.get('profilType')\" placeholder=\"Rodzaj\"\n                    type=\"text\" id=\"profilType\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\">\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row mb-4\">\n            <div class=\"col text-center\">\n                <span><b>STRONY</b></span>\n            </div>\n        </div>\n        <div class=\"form-group\" formArrayName=\"postionSide\">\n            <div class=\"row mb-1 rowsides\" *ngFor=\"let item of sides.controls; index as i\">\n                <div class=\"col\">\n                    <div class=\"row\" [formGroupName]=\"i\">\n                        <div style=\"width: 40px;\" class=\"p-0 pl-1 close\">\n                            <div class=\"row\">\n                                <div class=\"col p-0 m-0\">\n                                    <button matTooltip=\"Usuń stronę\" matTooltipClass=\"tooltip-red\"\n                                        class=\"ui-button-danger\" pButton icon=\"pi pi-times\" type=\"button\"\n                                        (click)=\"removeSide(i)\"></button>\n                                </div>\n                                <div class=\"col\">\n                                    <span class=\"text-center pt-1\">{{i + 1}}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"side\">Strona kształtownika</label>\n                            <p-autoComplete formControlName=\"side\" placeholder=\"strona\" [suggestions]=\"sideSugFiltered\"\n                                (completeMethod)=\"searchSide($event)\" [dropdown]=\"true\" (onSelect)=\"onSelectSide($event,i)\">\n                                <ng-template let-side pTemplate=\"item\">\n                                    <div class=\"ui-helper-clearfix\">\n                                        <div style=\"font-size:16px;\">{{side}}</div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"filmNumber\">Numer Okleiny</label>\n                            <p-autoComplete formControlName=\"filmNumber\" placeholder=\"numer\"\n                                [minLength]=\"1\" [suggestions]=\"filmSugFiltered\" (completeMethod)=\"searchFilm($event)\"\n                                [dropdown]=\"true\" (onSelect)=\"sides.controls[i].get('filmNumber').setValue($event.number)\">\n                                <ng-template let-film pTemplate=\"item\">\n                                    <div class=\"ui-helper-clearfix\" style=\"border-bottom:1px solid #D5D5D5\">\n                                        <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                                        <div style=\"font-size:16px;\">{{film.number}}</div>\n                                        <div style=\"font-size:12px;\">{{film.name}}</div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"filmWidth\">Szerokość Okleiny</label>\n                            <input pInputText formControlName=\"filmWidth\" placeholder=\"mm\" type=\"text\"\n                                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                                autocomplete=\"off\">\n                        </div>\n                        <div class=\"col-3 p-0 pl-1\">\n                            <div class=\"form-group\" formArrayName=\"profilDimensions\">\n                                <div class=\"row ml-1 mb-1 rowsidesdim\"\n                                    *ngFor=\"let dim of this.sides.controls[i]['controls'].profilDimensions.controls; index as j\">\n                                    <div class=\"col\">\n                                        <div class=\"row\" [formGroupName]=\"j\">\n                                            <div class=\"col p-0\">\n                                                <label class=\"sb-small-label labelDim\" for=\"quantity\">Ilość</label>\n                                                <input pInputText formControlName=\"quantity\" placeholder=\"ilość\"\n                                                    type=\"number\"\n                                                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                                                    autocomplete=\"off\">\n                                            </div>\n                                            <div class=\"col p-0 pl-1\">\n                                                <label class=\"sb-small-label labelDim\" for=\"length\">Długość</label>\n                                                <p-autoComplete [inputStyle]=\"{'width':'100%'}\"\n                                                    [suggestions]=\"dimSugFiltered\" formControlName=\"length\"\n                                                    placeholder=\"długość\" type=\"number\"\n                                                    (focus)=\"searchDim($event)\" (completeMethod)=\"searchDim($event)\" (onSelect)=\"selectDim(i,j,$event.value)\">\n                                                    <ng-template let-dim pTemplate=\"item\">\n                                                        <div class=\"ui-helper-clearfix\">\n                                                            <div style=\"font-size:16px;\">{{dim.label}}</div>\n                                                        </div>\n                                                    </ng-template>\n                                                </p-autoComplete>\n                                            </div>\n                                            <div class=\"p-0 pl-1 dimClose\">\n                                                <button matTooltip=\"Usuń wymiar\" matTooltipClass=\"tooltip-red\"\n                                                    class=\"ui-button-danger\" type=\"button\" pButton icon=\"pi pi-times\"\n                                                    (click)=\"removeDimension(i,j)\"></button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col p-0 new\">\n                                        <button matTooltip=\"Dodaj wymiar\" matTooltipClass=\"tooltip-green\"\n                                            class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-plus\"\n                                            (click)=\"addDimensions(i)\"></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mb-4 mt-3\">\n                <div class=\"col text-center\">\n                    <button matTooltip=\"Dodaj stronę\" matTooltipClass=\"tooltip-green\" class=\"ui-button-success\"\n                        type=\"button\" pButton icon=\"pi pi-plus\" (click)=\"addSide()\" label=\"Dodaj stronę\"></button>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row mb-4 pt-1\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"comment\">Uwagi</label>\n                <p-editor id=\"comment\" [formControl]=\"formOrderPosition.get('comment')\" [style]=\"{'height':'100px'}\">\n                </p-editor>\n\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie aktualizowania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formOrderPosition.invalid\" matTooltip=\"Zaktualizuj Pozycję\" matTooltipClass=\"tooltip-green\"\n        class=\"ml-1 ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onUpdateOrderPosition()\"\n        label=\"Aktualizuj\"></button>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form/order-position-form.component.html":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form/order-position-form.component.html ***!
    \******************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionFormOrderPositionFormOrderPositionFormComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowa pozycja dla zlecenia: {{orderNumber}}</span>\n</div>\n<div class=\"sb-dialog-content pl-4 pr-4\" style=\"max-height: 750px; overflow-y:scroll\">\n\n    <div class=\"row ml-2 pb-2\">\n        <div class=\"col\">\n            <p-dropdown [options]=\"productionService.allSystems\" (onChange)=\"filterBySystem()\"\n                [(ngModel)]=\"selectedSystem\" placeholder=\"Wybierz system\" optionLabel=\"name\" [showClear]=\"true\"\n                filter=\"true\"></p-dropdown>\n        </div>\n        <div *ngIf=\"selectedCatalog != null\" class=\"col\" style=\"border:1px solid #666;font-size:12px;\">\n            <div [class]=\"'row p-1 measure-info status-' + selectedCatalog.actualMeasurement\">\n                <div class=\"col\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <div matTooltip=\"Numer kształtownika\"><i style=\"color:red;font-size: 1em;padding-right: 2px;\" *ngIf=\"selectedCatalog.hard\" class=\"pi pi-exclamation-triangle\"></i>{{selectedCatalog.number}}</div>\n                            <div matTooltip=\"Nazwa kształtownika\">{{selectedCatalog.profileType}}</div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Zewnętrzny\">ZEW: <b>{{selectedCatalog.dimOuter ? selectedCatalog.dimOuter : \"--\"}}</b></div>\n                            <div matTooltip=\"Wewnętrzny\">WEW: <b>{{selectedCatalog.dimInner ? selectedCatalog.dimInner : \"--\"}}</b></div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Jednostronny\">JEDN: <b>{{selectedCatalog.dimOneSide ? selectedCatalog.dimOneSide : \"--\"}}</b></div>\n                            <div matTooltip=\"Obustronny\">OBU: <b>{{selectedCatalog.dimTwoSide ? selectedCatalog.dimTwoSide : \"--\"}}</b></div>\n                        </div>\n                        <div class=\"col\">\n                            <div matTooltip=\"Obustronny Zewnętrzny\">OBU ZEW:\n                                <b>{{selectedCatalog.dimTwoSideOuter ? selectedCatalog.dimTwoSideOuter : \"--\"}}</b>\n                            </div>\n                            <div matTooltip=\"Obustronny Wewnętrzny\">OBU WEW:\n                                <b>{{selectedCatalog.dimTwoSideInner ? selectedCatalog.dimTwoSideInner : \"--\"}}</b>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"selectedCatalog.comments\" class=\"row\" style=\"border-top: 1px solid #666\">\n                        <div class=\"col\" matTooltip=\"Uwagi\">\n                            <div [innerHtml]=\"selectedCatalog.comments\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <form class=\"m-4\" [formGroup]=\"formOrderPosition\">\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"profilNumber\">Numer kształtownika *</label>\n                <p-autoComplete [style]=\"{'width':'100%'}\" [inputStyle]=\"{'width':'90%'}\"\n                    [formControl]=\"formOrderPosition.get('profilNumber')\" placeholder=\"Numer\"\n                    [suggestions]=\"catalogSugFiltered\" (completeMethod)=\"searchCatalog($event)\" [dropdown]=\"true\"\n                    (onSelect)=\"onSelectCatalog($event)\">\n                    <ng-template let-catalog pTemplate=\"item\">\n                        <div [class]=\"'ui-helper-clearfix measure-badge status-' + catalog.actualMeasurement\">\n                            <div class=\"row p-0 m-0\">\n                                <div class=\"col p-0 m-0\">\n                                    <div style=\"font-size:16px;\"><i style=\"color:red;font-size: 1em;padding-right: 2px;\" *ngIf=\"catalog.hard\" class=\"pi pi-exclamation-triangle\"></i>{{catalog.number}}</div>\n                                    <div style=\"font-size:12px;\">{{catalog.profileType}}</div>\n                                    <div style=\"font-size:12px;\">{{catalog.systemProfil.name}}</div>\n                                </div>\n                                <div class=\"col p-0 pl-3 m-0\">\n                                    <div style=\"font-size:12px;\">ZEW: <b>{{catalog.dimOuter}}</b></div>\n                                    <div style=\"font-size:12px;\">WEW: <b>{{catalog.dimInner}}</b></div>\n                                    <div style=\"font-size:12px;\">JEDN: <b>{{catalog.dimOneSide}}</b></div>\n                                </div>\n                                <div class=\"col p-0 pl-3 m-0\">\n                                    <div style=\"font-size:12px;\">OBU: <b>{{catalog.dimTwoSide}}</b></div>\n                                    <div style=\"font-size:12px;\">OBU ZEW: <b>{{catalog.dimTwoSideOuter}}</b></div>\n                                    <div style=\"font-size:12px;\">OBU WEW: <b>{{catalog.dimTwoSideInner}}</b></div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                </p-autoComplete>\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"profilType\">Rodzaj kształtownika *</label>\n                <input size=\"30\" pInputText [formControl]=\"formOrderPosition.get('profilType')\" placeholder=\"Rodzaj\"\n                    type=\"text\" id=\"profilType\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\">\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row mb-4\">\n            <div class=\"col text-center\">\n                <span><b>STRONY</b></span>\n            </div>\n        </div>\n        <div class=\"form-group\" formArrayName=\"postionSide\">\n            <div class=\"row mb-1 rowsides\" *ngFor=\"let item of sides.controls; index as i\">\n                <div class=\"col\">\n                    <div class=\"row\" [formGroupName]=\"i\">\n                        <div style=\"width: 40px;\" class=\"p-0 pl-1 close\">\n                            <div class=\"row\">\n                                <div class=\"col p-0 m-0\">\n                                    <button matTooltip=\"Usuń stronę\" matTooltipClass=\"tooltip-red\"\n                                        class=\"ui-button-danger\" pButton icon=\"pi pi-times\" type=\"button\"\n                                        (click)=\"removeSide(i)\"></button>\n                                </div>\n                                <div class=\"col\">\n                                    <span class=\"text-center pt-1\">{{i + 1}}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"side\">Strona kształtownika</label>\n                            <p-autoComplete formControlName=\"side\" placeholder=\"strona\" [suggestions]=\"sideSugFiltered\"\n                                (completeMethod)=\"searchSide($event)\" [dropdown]=\"true\"\n                                (onSelect)=\"onSelectSide($event,i)\">\n                                <ng-template let-side pTemplate=\"item\">\n                                    <div class=\"ui-helper-clearfix padding-item-list\">\n                                        <div style=\"font-size:16px;\">{{side}}</div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"filmNumber\">Numer Okleiny</label>\n                            <p-autoComplete formControlName=\"filmNumber\" placeholder=\"numer\" [minLength]=\"1\"\n                                [suggestions]=\"filmSugFiltered\" (completeMethod)=\"searchFilm($event)\" [dropdown]=\"true\"\n                                (onSelect)=\"sides.controls[i].get('filmNumber').setValue($event.number)\">\n                                <ng-template let-film pTemplate=\"item\">\n                                    <div class=\"ui-helper-clearfix padding-item-list\" style=\"border-bottom:1px solid #D5D5D5\">\n                                        <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                                        <div style=\"font-size:16px;\">{{film.number}}</div>\n                                        <div style=\"font-size:12px;\">{{film.name}}</div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n\n                        </div>\n                        <div class=\"col p-0 pl-1\">\n                            <label class=\"sb-small-label labelRow\" for=\"filmWidth\">Szerokość Okleiny</label>\n                            <input pInputText formControlName=\"filmWidth\" placeholder=\"mm\" type=\"text\"\n                                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                                autocomplete=\"off\">\n                        </div>\n                        <div class=\"col-3 p-0 pl-1\">\n                            <div class=\"form-group\" formArrayName=\"profilDimensions\">\n                                <div class=\"row ml-1 mb-1 rowsidesdim\"\n                                    *ngFor=\"let dim of this.sides.controls[i]['controls'].profilDimensions.controls; index as j\">\n                                    <div class=\"col\">\n                                        <div class=\"row\" [formGroupName]=\"j\">\n                                            <div class=\"col p-0\">\n                                                <label class=\"sb-small-label labelDim\" for=\"quantity\">Ilość</label>\n                                                <input pInputText formControlName=\"quantity\" placeholder=\"ilość\"\n                                                    type=\"number\"\n                                                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                                                    autocomplete=\"off\">\n                                            </div>\n                                            <div class=\"col p-0 pl-1\">\n                                                <label class=\"sb-small-label labelDim\" for=\"length\">Długość</label>\n                                                <p-autoComplete [inputStyle]=\"{'width':'100%'}\"\n                                                    [suggestions]=\"dimSugFiltered\" formControlName=\"length\"\n                                                    placeholder=\"długość\" type=\"number\" (focus)=\"searchDim($event)\"\n                                                    (completeMethod)=\"searchDim($event)\"\n                                                    (onSelect)=\"selectDim(i,j,$event.value)\">\n                                                    <ng-template let-dim pTemplate=\"item\">\n                                                        <div class=\"ui-helper-clearfix\">\n                                                            <div style=\"font-size:16px;\">{{dim.label}}</div>\n                                                        </div>\n                                                    </ng-template>\n                                                </p-autoComplete>\n                                            </div>\n                                            <div class=\"p-0 pl-1 dimClose\">\n                                                <button matTooltip=\"Usuń wymiar\" matTooltipClass=\"tooltip-red\"\n                                                    class=\"ui-button-danger\" type=\"button\" pButton icon=\"pi pi-times\"\n                                                    (click)=\"removeDimension(i,j)\"></button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col p-0 new\">\n                                        <button matTooltip=\"Dodaj wymiar\" matTooltipClass=\"tooltip-green\"\n                                            class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-plus\"\n                                            (click)=\"addDimensions(i)\"></button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row mb-4 mt-3\">\n                <div class=\"col text-center\">\n                    <button matTooltip=\"Dodaj stronę\" matTooltipClass=\"tooltip-green\" class=\"ui-button-success\"\n                        type=\"button\" pButton icon=\"pi pi-plus\" (click)=\"addSide()\" label=\"Dodaj stronę\"></button>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row mb-4 pt-1\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"comment\">Uwagi</label>\n                <p-editor id=\"comment\" [formControl]=\"formOrderPosition.get('comment')\" [style]=\"{'height':'100px'}\">\n                </p-editor>\n\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formOrderPosition.invalid\" matTooltip=\"Dodaj Pozycję\" matTooltipClass=\"tooltip-green\"\n        class=\"ml-1 ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onAddOrderPosition()\"\n        label=\"Zapisz\"></button>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form-update/production-order-form-update.component.html":
  /*!************************************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form-update/production-order-form-update.component.html ***!
    \************************************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionFormProductionOrderFormUpdateProductionOrderFormUpdateComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Aktualizacja zlecenia</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form class=\"m-4\" [formGroup]=\"formProductionOrderUpdate\">\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col-6\">\n                <label class=\"sb-small-label\" for=\"myCompany\">Zlecenie do firmy *</label>\n                <p-dropdown [style]=\"{'width':'100%'}\" placeholder=\"Wybierz firmę\" id=\"myCompany\"\n                    [options]=\"myCompanyData\" [filter]=\"true\" filterBy=\"name,value.name\"\n                    [formControl]=\"formProductionOrderUpdate.get('myCompany')\" required>\n                </p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProductionOrderUpdate.get('myCompany').hasError('required') && formProductionOrderUpdate.get('myCompany').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"client\">Klient *</label>\n                <p-dropdown [style]=\"{'width':'100%'}\" placeholder=\"Wybierz klienta\" id=\"client\"\n                    [options]=\"clientData\" [filter]=\"true\" filterBy=\"name,value.name\"\n                    [formControl]=\"formProductionOrderUpdate.get('client')\" required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProductionOrderUpdate.get('client').hasError('required') && formProductionOrderUpdate.get('client').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"numberClientOrder\">Numer zlecenia klienta</label>\n                <input size=\"30\" pInputText [formControl]=\"formProductionOrderUpdate.get('numberClientOrder')\"\n                    placeholder=\"numer zlecenia klienta\" type=\"text\" id=\"numberClientOrder\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col-6\">\n                <label class=\"sb-small-label\" for=\"statusOrder\">Status Zlecenia</label>\n                <p-dropdown [style]=\"{'width':'100%'}\" placeholder=\"Wybierz status\" id=\"statusOrder\"\n                    [options]=\"_statusOrder\" [filter]=\"true\" filterBy=\"name,value.name\"\n                    [formControl]=\"formProductionOrderUpdate.get('statusOrder')\"></p-dropdown>\n            </div>\n            <div class=\"col\">\n                <mat-slide-toggle (change)=\"changeCompleted()\" [formControl]=\"formProductionOrderUpdate.get('completed')\" [color]=\"warn\"\n                    [checked]=\"true\">\n                    Ukończono\n                </mat-slide-toggle>\n            </div>\n        </div>\n\n        <hr>\n        <div class=\"form-group row mb-4\">\n            <div class=\"col text-center\">\n                <span><b>DATY</b></span>\n            </div>\n        </div>\n        <div class=\"form-group row mb-4\" style=\"height: 40px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"dateAcceptanceOrder\">Przyjęcia</label>\n                <p-calendar dateFormat=\"yy-mm-dd\" [style]=\"{'position':'fixed', 'z-index': '999'}\" [locale]=\"pl\"\n                    [formControl]=\"formProductionOrderUpdate.get('dateAcceptanceOrder')\" [showIcon]=\"true\">\n                </p-calendar>\n            </div>\n            <div class=\"col ml-1\">\n                <label class=\"sb-small-label\" for=\"dateCompletedOrder\">Wykonania</label>\n                <p-calendar dateFormat=\"yy-mm-dd\"  [style]=\"{'position':'fixed', 'z-index': '999'}\" [locale]=\"pl\"\n                    [formControl]=\"formProductionOrderUpdate.get('dateCompletedOrder')\" [showIcon]=\"true\">\n                </p-calendar>\n            </div>\n            <div class=\"col ml-1\">\n                <label class=\"sb-small-label\" for=\"dateReceiptOrder\">Odbioru</label>\n                <p-calendar dateFormat=\"yy-mm-dd\" [style]=\"{'position':'fixed', 'z-index': '999'}\" [locale]=\"pl\"\n                    [formControl]=\"formProductionOrderUpdate.get('dateReceiptOrder')\" [showIcon]=\"true\">\n                </p-calendar>\n            </div>\n        </div>\n\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie aktualizacji\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formProductionOrderUpdate.invalid\" matTooltip=\"Aktualizuj Zlecenie\"\n        matTooltipClass=\"tooltip-green\" class=\"ml-1 ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\"\n        (click)=\"onUpdateProductionOrder()\" label=\"Zapisz\"></button>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form/production-order-form.component.html":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form/production-order-form.component.html ***!
    \**********************************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionFormProductionOrderFormProductionOrderFormComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowe Zlecenie</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form class=\"m-4\" [formGroup]=\"formProductionOrder\">\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"myCompany\">Zlecenie do firmy *</label>\n                <p-dropdown [style]=\"{'width':'100%'}\" placeholder=\"Wybierz firmę\" id=\"myCompany\" [options]=\"productionService.myCompanyData\"\n                    [filter]=\"true\" filterBy=\"name,value.name\" [formControl]=\"formProductionOrder.get('myCompany')\"\n                    required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProductionOrder.get('myCompany').hasError('required') && formProductionOrder.get('myCompany').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"client\">Klient *</label>\n                <p-dropdown [style]=\"{'width':'100%'}\" placeholder=\"Wybierz klienta\" id=\"client\" [options]=\"productionService.clientData\"\n                    [filter]=\"true\" filterBy=\"name,value.name\" [formControl]=\"formProductionOrder.get('client')\"\n                    required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProductionOrder.get('client').hasError('required') && formProductionOrder.get('client').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"numberClientOrder\">Numer zlecenia klienta</label>\n                <input size=\"30\" pInputText [formControl]=\"formProductionOrder.get('numberClientOrder')\"\n                    placeholder=\"numer zlecenia klienta\" type=\"text\" id=\"numberClientOrder\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" autocomplete=\"off\">\n            </div>\n        </div>\n\n        <div class=\"form-group row mb-4\" style=\"height: 40px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"dateAcceptanceOrder\">Data Przyjęcia</label>\n                <p-calendar dateFormat=\"yy-mm-dd\"  [style]=\"{'position':'fixed', 'z-index': '999'}\" [locale]=\"pl\" [formControl]=\"formProductionOrder.get('dateAcceptanceOrder')\"\n                    [showIcon]=\"true\">\n                </p-calendar>\n            </div>\n        </div>\n\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formProductionOrder.invalid\" matTooltip=\"Dodaj Zlecenie\" matTooltipClass=\"tooltip-green\" class=\"ml-1 ui-button-success\" type=\"button\"\n        pButton icon=\"pi pi-check\" (click)=\"onAddProductionOrder()\" label=\"Zapisz\"></button>\n</div>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/order-details/order-details.component.html":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/order-details/order-details.component.html ***!
    \*************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionOrderDetailsOrderDetailsComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<p-contextMenu #po [model]=\"positionMenuItems\"></p-contextMenu>\n<div [class.isPrinting]=\"printService.isPrinting\" class=\"container-order-details\">\n\n    <div class=\"row mb-2\">\n        <div class=\"col-6 m-0 p-0\"><button (click)=\"backClicked()\" mat-raised-button><i\n                    class=\"pi pi-chevron-left\"></i></button></div>\n        <div class=\"col-6 m-0 p-0\">\n            <p class=\"float-right\">{{productionOrder.myCompany.name}}</p>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"row\">\n                <div class=\"col h-small-box\">\n                    <div class=\"card h-100 card-shadow\">\n                        <div class=\"card-body p-1\">\n                            <div class=\"row flex-nowrap\">\n                                <div class=\"col-3\">\n                                    <mat-icon class=\"icon-order-detail\">article</mat-icon>\n                                </div>\n                                <div class=\"col-9\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <p class=\"text-top-smallbox\">Zlecenie nr.:</p>\n                                        </div>\n                                    </div>\n                                    <div class=\"row pt-2\">\n                                        <div class=\"col\">\n                                            <h2 class=\"text-bottom-smallbox\">{{productionOrder.orderNumber}}</h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col h-small-box\">\n                    <div class=\"card h-100 card-shadow\">\n                        <div class=\"card-body p-1\">\n                            <div class=\"row flex-nowrap\">\n                                <div class=\"col-3\">\n                                    <mat-icon class=\"icon-order-detail\">library_books</mat-icon>\n                                </div>\n                                <div class=\"col-9\">\n                                    <div class=\"row pt-1\">\n                                        <div class=\"col\">\n                                            <p class=\"text-top-smallbox\">Nr. zlec. kontrahenta:</p>\n                                        </div>\n                                    </div>\n                                    <div class=\"row pt-2\">\n                                        <div class=\"col\">\n                                            <h2 class=\"text-bottom-smallbox\">\n                                                {{productionOrder.numberClientOrder ? productionOrder.numberClientOrder : \"--\"}}\n                                            </h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col h-small-box\">\n                    <div class=\"card h-100 card-shadow\">\n                        <div class=\"card-body p-1\">\n                            <div class=\"row flex-nowrap\">\n                                <div class=\"col-3\">\n                                    <mat-icon class=\"icon-order-detail\">face</mat-icon>\n                                </div>\n                                <div class=\"col-9\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <p class=\"text-top-smallbox\">Kontrahent:</p>\n                                        </div>\n                                    </div>\n                                    <div class=\"row pt-2\">\n                                        <div class=\"col\">\n                                            <h2 class=\"text-bottom-smallbox\">{{productionOrder.client.name}}</h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"row flex-nowrap\">\n                <div class=\"col-4\" style=\"min-width: 230px;\">\n                    <div class=\"row\">\n                        <div class=\"col h-small-box\">\n                            <div class=\"card h-100 card-shadow\">\n                                <div class=\"card-body p-1\">\n                                    <div class=\"row align-items-center h-100\">\n                                        <div class=\"col d-flex\">\n                                            <h2 class=\"text-status-smallbox\">{{productionOrder.statusOrder}}</h2>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-8 pl-3\">\n                    <div class=\"row h-100\">\n                        <div class=\"col h-big-box\">\n                            <div class=\"card h-100 card-shadow\">\n                                <div class=\"card-body p-1\">\n                                    <div class=\"row h-100 align-items-center\">\n                                        <div class=\"col\">\n                                            <div class=\"row\">\n                                                <div class=\"col d-flex\">\n                                                    <mat-icon class=\"icon-order-detail dates-icon\">flight_land\n                                                    </mat-icon>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <p class=\"text-middle-dates\">Data przyjęcia</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <h4 class=\"text-bottom-dates\">\n                                                        {{productionOrder.dateAcceptanceOrder ? productionOrder.dateAcceptanceOrder: \"--\"}}\n                                                    </h4>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div class=\"row\">\n                                                <div class=\"col d-flex\">\n                                                    <mat-icon class=\"icon-order-detail dates-icon\">done</mat-icon>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <p class=\"text-middle-dates\">Data wykonania</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <h4 class=\"text-bottom-dates\">\n                                                        {{productionOrder.dateCompletedOrder ? productionOrder.dateCompletedOrder: \"--\"}}\n                                                    </h4>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div class=\"row\">\n                                                <div class=\"col d-flex\">\n                                                    <mat-icon class=\"icon-order-detail dates-icon\">flight_takeoff\n                                                    </mat-icon>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <p class=\"text-middle-dates\">Data odbioru</p>\n                                                </div>\n                                            </div>\n                                            <div class=\"row\">\n                                                <div class=\"col\">\n                                                    <h4 class=\"text-bottom-dates\">\n                                                        {{productionOrder.dateReceiptOrder ? productionOrder.dateReceiptOrder : \"--\"}}\n                                                    </h4>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div [ngClass]=\"{'hide-progress-bar': productionService.loadingDataValue == 100}\" class=\"row pt-1\">\n        <div class=\"col-6 p-0\">\n            <p-progressBar [value]=\"productionService.loadingDataValue\"></p-progressBar>\n        </div>\n    </div>\n    <div class=\"row pt-1\">\n        <div class=\"col p-0\">\n            <div class=\"card h-100 card-shadow\">\n                <div class=\"card-body card-body-menu\">\n                    <div class=\"row flex-nowrap\">\n                        <div class=\"col\">\n                            <button [disabled]=\"!deleteOrderIf.getValue() || productionService.loadingDataValue != 100\" type=\"button\"\n                                (click)=\"showDialogToAddOrderPosition()\" matTooltip=\"Dodanie pojedyńczej pozycji\"\n                                class=\"btn btn-primary\">Dodanie\n                                pozycji</button>\n                            <button [disabled]=\"!deleteOrderIf.getValue() || productionService.loadingDataValue != 100\" type=\"button\" matTooltip=\"Kreator pozycji\"\n                                class=\"btn btn-success ml-1\">Dodanie z\n                                excela</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col p-0 pl-1\">\n            <div class=\"card h-100 card-shadow\">\n                <div class=\"card-body card-body-menu\">\n                    <div class=\"row flex-nowrap\">\n                        <div class=\"col\">\n                            <button pButton type=\"button\" icon=\"pi pi-cog\" label=\"Aktualizuj\"\n                                (click)=\"showDialogToUpdateOrder(productionOrder)\"\n                                matTooltip=\"Aktualizacja danych zlecenia\" style=\"padding: 2px;\"\n                                class=\"ui-button-raised\"></button>\n                            <button pButton type=\"button\" icon=\"pi pi-print\" label=\"Drukowanie\"\n                                (click)=\"printDialgOptions()\" style=\"padding: 2px;\"\n                                class=\"ml-2 ui-button-raised\"></button>\n                            <button [disabled]=\"!deleteOrderIf.getValue()\" pButton type=\"button\" icon=\"pi pi-times\"\n                                label=\"Usuń\" (click)=\"confirmDeleteOrder(orderNumber)\" matTooltip=\"Usunięcie zlecenia\"\n                                style=\"padding: 2px;float: right\"\n                                class=\"ml-2 ui-button-raised ui-button-danger\"></button>\n                            <!-- <button type=\"button\" matTooltip=\"Zmiana statusu\" class=\"btn btn-primary ml-1\">Zmiana\n                                statusu</button> -->\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <!-- ============================ POSITIONS TABLE ================================-->\n    <div class=\"row pt-2\" *ngIf=\"!loading.getValue()\">\n        <div class=\"col p-0\">\n\n            <div class=\"row\">\n                <div class=\"col\">\n\n                    <p-table #zl1 [value]=\"orderPosition\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\"\n                        [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                        currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [autoLayout]=\"true\"\n                        [rowHover]=\"true\" [reorderableColumns]=\"true\" (onRowReorder)=\"reOrder($event)\"\n                        sortField=\"positionNumber\" sortOrder=\"1\" [(contextMenuSelection)]=\"selectedPosition\"\n                        [contextMenu]=\"po\">\n                        <ng-template pTemplate=\"caption\">\n                            <div style=\"text-align:left\">\n                                <p-multiSelect [options]=\"columns\" [(ngModel)]=\"selectedColumns\" optionLabel=\"label\"\n                                    selectedItemsLabel=\"{0} wybranych\" [style]=\"{minWidth: '200px'}\"\n                                    defaultLabel=\"Kolumny pozycji\"></p-multiSelect>\n                                <p-multiSelect class=\"ml-1\" [options]=\"sideColumns\" [(ngModel)]=\"sideSelectedColumns\"\n                                    optionLabel=\"label\" selectedItemsLabel=\"{0} wybranych\" [style]=\"{minWidth: '200px'}\"\n                                    defaultLabel=\"Kolumny strony\"></p-multiSelect>\n                            </div>\n                        </ng-template>\n                        <ng-template pTemplate=\"header\">\n                            <tr>\n                                <th style=\"width:2.5em\"></th>\n                                <!-- <th style=\"width: 40px;\">\n                                    <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n                                </th> -->\n                                <th style=\"width: 40px;\" pSortableColumn=\"positionNumber\">Nr.<p-sortIcon\n                                        field=\"positionNumber\">\n                                    </p-sortIcon>\n                                </th>\n                                <th pResizableColumn pSortableColumn=\"profilNumber\">Numer kształ.<p-sortIcon\n                                        field=\"profilNumber\"></p-sortIcon>\n                                </th>\n                                <th pResizableColumn pSortableColumn=\"profilType\">Rodzaj kształ.<p-sortIcon\n                                        field=\"profilType\">\n                                    </p-sortIcon>\n                                </th>\n\n                                <th class=\"text-center\" pResizableColumn>Strony\n                                </th>\n\n                                <th *ngIf=\"checkShow('numberFv')\" pResizableColumn pSortableColumn=\"numberFv\">Numer\n                                    faktury\n                                    <p-sortIcon field=\"numberFv\">\n                                    </p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('accepted')\" pResizableColumn pSortableColumn=\"accepted\">\n                                    Zaakceptowano\n                                    <p-sortIcon field=\"accepted\">\n                                    </p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('statusOrderPosition')\" pResizableColumn\n                                    pSortableColumn=\"statusOrderPosition\">Status<p-sortIcon field=\"statusOrderPosition\">\n                                    </p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('completed')\" pResizableColumn pSortableColumn=\"completed\">\n                                    Wykonano\n                                    <p-sortIcon field=\"completed\">\n                                    </p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('dateCompletedPosition')\" pResizableColumn\n                                    pSortableColumn=\"dateCompletedPosition\">Data wykonania<p-sortIcon\n                                        field=\"dateCompletedPosition\"></p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('warranty')\" pResizableColumn pSortableColumn=\"warranty\">\n                                    Gwarancja\n                                    <p-sortIcon field=\"warranty\">\n                                    </p-sortIcon>\n                                </th>\n                                <th *ngIf=\"checkShow('comment')\" pResizableColumn>Uwagi\n                                </th>\n                            </tr>\n                        </ng-template>\n                        <ng-template class=\"pSideRow\" pTemplate=\"body\" let-expanded=\"expanded\" let-rowData\n                            let-ri=\"rowIndex\" let-index=\"rowIndex\">\n                            <tr class=\"pOrder ui-selectable-row\" [pReorderableRow]=\"index\" [pContextMenuRow]=\"rowData\">\n                                <td>\n                                    <i class=\"pi pi-bars\" style=\"display: flex;justify-content: center;\"\n                                        pReorderableRowHandle></i>\n                                </td>\n                                <!-- <td>\n                                    <p-tableCheckbox [value]=\"rowData\"></p-tableCheckbox>\n                                </td> -->\n                                <td>{{rowData.positionNumber}}</td>\n                                <td>{{rowData.profilNumber}}</td>\n                                <td>{{rowData.profilType}}</td>\n\n                                <td class=\"p-0\">\n                                    <p-table #zlSide [value]=\"rowData.postionSide\" [resizableColumns]=\"true\"\n                                        [autoLayout]=\"true\" [rowHover]=\"true\">\n                                        <ng-template pTemplate=\"header\">\n                            <tr class=\"pSide\">\n                                <th class=\"col70\">Strona</th>\n                                <th class=\"col70\">Nr. Okl.</th>\n                                <th class=\"col70\">Szer. Okl</th>\n                                <th class=\"text-center col150\">Wymiary</th>\n                                <th class=\"col70\">Suma wym.</th>\n                                <th *ngIf=\"checkShowSide('usedFilm')\" class=\"text-center col150\">Zużycie</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('plnMb')\">pln/mb</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('costSet6Mb')\">kpl. 6Mb</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('costSetup')\">Ust.</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('colorChange')\">Zm. kol.</th>\n                                <th class=\"col120\" *ngIf=\"checkShowSide('employees')\">Pracownicy</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('glue')\">Klej</th>\n                                <th class=\"col70\" *ngIf=\"checkShowSide('statusOrderPosition')\">Status</th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-rowSide let-ri=\"rowIndex\">\n                            <tr class=\"positionSides ui-selectable-row\">\n                                <td class=\"col70\">{{rowSide.side}}</td>\n                                <td class=\"col70\">{{rowSide.filmNumber}}</td>\n                                <td class=\"col70\">{{rowSide.filmWidth}}</td>\n                                <td class=\"p-0 col150\">\n                                    <div class=\"text-center\" *ngIf=\"rowSide.profilDimensions.length == 0\">Brak danych\n                                    </div>\n                                    <p-table *ngIf=\"rowSide.profilDimensions.length != 0\" #zlDim\n                                        [value]=\"rowSide.profilDimensions\" [resizableColumns]=\"true\" [autoLayout]=\"true\"\n                                        [rowHover]=\"true\">\n                                        <ng-template pTemplate=\"header\">\n                            <tr class=\"pSideDim\">\n                                <th class=\"p-0 col50\">Sztuki</th>\n                                <th class=\"p-0 col50\">Długość</th>\n                                <th class=\"p-0 col50\">Suma mb</th>\n                            </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-rowDim let-ri=\"rowIndex\">\n                            <tr class=\"positionDim col150 ui-selectable-row\">\n                                <td class=\"p-0 col50\">{{rowDim.quantity}}</td>\n                                <td class=\"p-0 col50\">{{rowDim.length}}</td>\n                                <td class=\"p-0 col50\">{{rowDim.sumMb}}</td>\n                            </tr>\n                        </ng-template>\n                    </p-table>\n                    </td>\n                    <td class=\"col70\">{{rowSide.sumAllDimensions}}</td>\n                    <td *ngIf=\"checkShowSide('usedFilm')\" class=\"p-0 col150\">\n                        <div class=\"text-center\" *ngIf=\"rowSide.usedFilm.length == 0\">\n                            Brak danych\n                        </div>\n                        <p-table *ngIf=\"rowSide.usedFilm.length != 0\" #zlUse [value]=\"rowSide.usedFilm\"\n                            [resizableColumns]=\"true\" [autoLayout]=\"true\" [rowHover]=\"true\">\n                            <ng-template pTemplate=\"header\">\n                                <tr>\n                                    <th class=\"p-0 col50\">Szerokość</th>\n                                    <th class=\"p-0 col50\">Długość</th>\n                                    <th class=\"p-0 col50\">Suma m2</th>\n                                </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"body\" let-rowUse let-ri=\"rowIndex\">\n                                <tr class=\"positionUse ui-selectable-row\">\n                                    <td class=\"p-0 col50\">{{rowUse.width}}</td>\n                                    <td class=\"p-0 col50\">{{rowUse.length}}</td>\n                                    <td class=\"p-0 col50\">{{rowUse.sumM2}}</td>\n                                </tr>\n                            </ng-template>\n                        </p-table>\n                    </td>\n                    <td *ngIf=\"checkShowSide('plnMb')\" class=\"col70\">{{rowSide.plnMb}}</td>\n                    <td *ngIf=\"checkShowSide('costSet6Mb')\" class=\"col70\">{{rowSide.costSet6Mb}}</td>\n                    <td *ngIf=\"checkShowSide('costSetup')\" class=\"col70\">{{rowSide.costSetup}}</td>\n                    <td *ngIf=\"checkShowSide('colorChange')\" class=\"col70\">{{yesNo(rowSide.colorChange)}}</td>\n                    <td *ngIf=\"checkShowSide('employees')\" class=\"col120\">{{rowSide.employees}}</td>\n                    <td *ngIf=\"checkShowSide('glue')\" class=\"col70\">{{rowSide.glue}}</td>\n                    <td *ngIf=\"checkShowSide('statusOrderPosition')\" class=\"col70\">{{rowSide.statusOrderPosition}}</td>\n                    </tr>\n                    </ng-template>\n                    </p-table>\n                    </td>\n\n                    <td *ngIf=\"checkShow('numberFv')\">\n                        {{rowData.numberFv}}</td>\n                    <td *ngIf=\"checkShow('accepted')\">\n                        {{yesNo(rowData.accepted)}}</td>\n                    <td *ngIf=\"checkShow('statusOrderPosition')\">\n                        {{rowData.statusOrderPosition}}</td>\n                    <td *ngIf=\"checkShow('completed')\">\n                        {{yesNo(rowData.completed)}}</td>\n                    <td *ngIf=\"checkShow('dateCompletedPosition')\">\n                        {{rowData.dateCompletedPosition}}</td>\n                    <td *ngIf=\"checkShow('warranty')\">\n                        {{yesNo(rowData.warranty)}}</td>\n                    <td *ngIf=\"checkShow('comment')\">\n                        <a href=\"#\" [pRowToggler]=\"rowData\">\n                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n                        </a>\n                    </td>\n                    </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td [attr.colspan]=\"length\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"rowexpansion\" let-rowData>\n                        <tr>\n                            <td [attr.colspan]=\"length\">\n                                <div class=\"p-grid ui-fluid\" style=\"font-size:16px;padding:20px\"\n                                    [@rowExpansionTrigger]=\"'active'\">\n                                    <div class=\"p-col-12 p-md-9\" [innerHTML]=\"rowData.comment\">\n\n                                    </div>\n                                </div>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    </p-table>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<router-outlet name=\"print\"></router-outlet>\n\n<p-dialog header=\"Drukowanie\" [(visible)]=\"printDialog\" [modal]=\"true\" [style]=\"{width: '500px'}\" [maximizable]=\"true\"\n    [baseZIndex]=\"10000\" [draggable]=\"false\" [resizable]=\"false\">\n\n    <div class=\"row mb-2 m-0 p-0\">\n        <div class=\"col\">\n            <div class=\"grid\">\n                <p><b>Kolumny pozycji</b></p>\n                <div class=\"col-12 pt-2\" *ngFor=\"let item of printColumnPosition\">\n                    <p-checkbox name=\"groupPosition\" [value]=\"item\" [label]=\"item.label\" [(ngModel)]=\"item.show\"\n                        [inputId]=\"item.field\" [binary]=\"true\"></p-checkbox>\n                </div>\n            </div>\n        </div>\n        <div class=\"col\">\n            <div class=\"grid\">\n                <p><b>Kolumny strony</b></p>\n                <div class=\"col-12 pt-2\" *ngFor=\"let item of printColumnSide\">\n                    <p-checkbox name=\"groupSide\" [value]=\"item\" [label]=\"item.label\" [(ngModel)]=\"item.show\"\n                        [inputId]=\"item.field\" [binary]=\"true\"></p-checkbox>\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <p-footer>\n        <button type=\"button\" pButton icon=\"pi pi-check\" (click)=\"printOrder()\" label=\"Drukuj\"></button>\n        <button type=\"button\" pButton icon=\"pi pi-times\" (click)=\"printDialogExit()\" label=\"Anuluj\"\n            class=\"ui-button-secondary\"></button>\n    </p-footer>\n</p-dialog>";
    /***/
  },

  /***/
  "./node_modules/raw-loader/dist/cjs.js!./src/app/production/production-main/production-main.component.html":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/production/production-main/production-main.component.html ***!
    \*****************************************************************************************************************/

  /*! exports provided: default */

  /***/
  function node_modulesRawLoaderDistCjsJsSrcAppProductionProductionMainProductionMainComponentHtml(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "<div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"ml-1\">\n                            <mat-icon class=\"icon-big\">list</mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Zlecenia</p>\n                            <p class=\"card-title\">{{ordersCount}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <hr>\n                <div class=\"stats-bar\">\n                    <div class=\"stats\">\n                        <mat-icon class=\"fo-small-icon\">calculate</mat-icon><span class=\"fo-text\">Ilość</span>\n                    </div>\n                    <div class=\"stats-bar-button\">\n                        <button (click)=\"showDialogToAddOrder()\" matTooltip=\"Dodanie nowego zlecenia\"\n                            matTooltipClass=\"tooltip-red\"\n                            class=\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\"\n                            icon=\"pi pi-pencil\" pbutton=\"\" type=\"button\" ng-reflect-icon=\"pi pi-pencil\"><span\n                                aria-hidden=\"true\" class=\"ui-button-icon-left ui-clickable pi pi-plus\"></span>\n                            <span aria-hidden=\"true\" class=\"ui-button-text ui-clickable\">ui-btn</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n\n    </div>\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Nowe\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #zl1 [value]=\"productionService.allOrdersNew\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"orderNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pResizableColumn pSortableColumn=\"orderNumber\">Numer Zlecenia<p-sortIcon\n                                    field=\"orderNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberFv\">Numer Faktury<p-sortIcon field=\"numberFv\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberClientOrder\">Numer Zlecenia Klienta<p-sortIcon\n                                    field=\"numberClientOrder\"></p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"myCompany.name\">Firma<p-sortIcon\n                                    field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"statusOrder\">Status<p-sortIcon field=\"statusOrder\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'orderNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberFv', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze fv\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberClientOrder', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th><input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"ui-selectable-row\">\n                            <td><a routerLink=\"zlecenie/{{rowData.orderNumber}}\">{{rowData.orderNumber}}</a></td>\n                            <td>{{rowData.numberFv}}</td>\n                            <td>{{rowData.numberClientOrder}}</td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Realizacja\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #zl2 [value]=\"productionService.allOrdersInProgress\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"orderNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pResizableColumn pSortableColumn=\"orderNumber\">Numer Zlecenia<p-sortIcon\n                                    field=\"orderNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberFv\">Numer Faktury<p-sortIcon field=\"numberFv\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberClientOrder\">Numer Zlecenia Klienta<p-sortIcon\n                                    field=\"numberClientOrder\"></p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"myCompany.name\">Firma<p-sortIcon\n                                    field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"statusOrder\">Status<p-sortIcon field=\"statusOrder\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'orderNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberFv', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze fv\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberClientOrder', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th><input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"ui-selectable-row\">\n                            <td><a routerLink=\"zlecenie/{{rowData.orderNumber}}\">{{rowData.orderNumber}}</a></td>\n                            <td>{{rowData.numberFv}}</td>\n                            <td>{{rowData.numberClientOrder}}</td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Zakończone\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #zl3 [value]=\"productionService.allOrdersDone\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"orderNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pResizableColumn pSortableColumn=\"orderNumber\">Numer Zlecenia<p-sortIcon\n                                    field=\"orderNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberFv\">Numer Faktury<p-sortIcon field=\"numberFv\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberClientOrder\">Numer Zlecenia Klienta<p-sortIcon\n                                    field=\"numberClientOrder\"></p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"myCompany.name\">Firma<p-sortIcon\n                                    field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"statusOrder\">Status<p-sortIcon field=\"statusOrder\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'orderNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberFv', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze fv\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberClientOrder', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th><input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"ui-selectable-row\">\n                            <td><a routerLink=\"zlecenie/{{rowData.orderNumber}}\">{{rowData.orderNumber}}</a></td>\n                            <td>{{rowData.numberFv}}</td>\n                            <td>{{rowData.numberClientOrder}}</td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Wydane\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #zl4 [value]=\"productionService.allOrdersOut\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"orderNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pResizableColumn pSortableColumn=\"orderNumber\">Numer Zlecenia<p-sortIcon\n                                    field=\"orderNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberFv\">Numer Faktury<p-sortIcon field=\"numberFv\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberClientOrder\">Numer Zlecenia Klienta<p-sortIcon\n                                    field=\"numberClientOrder\"></p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"myCompany.name\">Firma<p-sortIcon\n                                    field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"statusOrder\">Status<p-sortIcon field=\"statusOrder\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'orderNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberFv', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze fv\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberClientOrder', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th><input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"ui-selectable-row\">\n                            <td><a routerLink=\"zlecenie/{{rowData.orderNumber}}\">{{rowData.orderNumber}}</a></td>\n                            <td>{{rowData.numberFv}}</td>\n                            <td>{{rowData.numberClientOrder}}</td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Wszystkie\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #zl [value]=\"allOrders\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"orderNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        Zlecenia\n                        <div class=\"ui-table-globalfilter-container\">\n                            <p-dropdown #zl placeholder=\"Wybierz Status\"\n                                (onChange)=\"loadByStatus(zl.selectedOption.value)\" [options]=\"optionsSort\"\n                                [filter]=\"true\" filterBy=\"name,value\" class=\"\">\n                            </p-dropdown>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pResizableColumn pSortableColumn=\"orderNumber\">Numer Zlecenia<p-sortIcon\n                                    field=\"orderNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberFv\">Numer Faktury<p-sortIcon field=\"numberFv\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"numberClientOrder\">Numer Zlecenia Klienta<p-sortIcon\n                                    field=\"numberClientOrder\"></p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"myCompany.name\">Firma<p-sortIcon\n                                    field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pResizableColumn pSortableColumn=\"statusOrder\">Status<p-sortIcon field=\"statusOrder\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'orderNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberFv', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze fv\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th> <input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'numberClientOrder', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze zlecenia klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th><input pInputText type=\"text\"\n                                    (input)=\"zl.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"ui-column-filter w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"ui-selectable-row\">\n                            <td><a routerLink=\"zlecenie/{{rowData.orderNumber}}\">{{rowData.orderNumber}}</a></td>\n                            <td>{{rowData.numberFv}}</td>\n                            <td>{{rowData.numberClientOrder}}</td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n</p-tabView>";
    /***/
  },

  /***/
  "./src/app/print/print-layout/print-layout.component.scss":
  /*!****************************************************************!*\
    !*** ./src/app/print/print-layout/print-layout.component.scss ***!
    \****************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppPrintPrintLayoutPrintLayoutComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "@media screen {\n  :host {\n    display: none;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJpbnQvcHJpbnQtbGF5b3V0L0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxccHJpbnRcXHByaW50LWxheW91dFxccHJpbnQtbGF5b3V0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wcmludC9wcmludC1sYXlvdXQvcHJpbnQtbGF5b3V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0U7SUFDRSxhQUFBO0VDREY7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3ByaW50L3ByaW50LWxheW91dC9wcmludC1sYXlvdXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbkBtZWRpYSBzY3JlZW4ge1xyXG4gIDpob3N0IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcblxyXG4iLCJAbWVkaWEgc2NyZWVuIHtcbiAgOmhvc3Qge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/print/print-layout/print-layout.component.ts":
  /*!**************************************************************!*\
    !*** ./src/app/print/print-layout/print-layout.component.ts ***!
    \**************************************************************/

  /*! exports provided: PrintLayoutComponent */

  /***/
  function srcAppPrintPrintLayoutPrintLayoutComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PrintLayoutComponent", function () {
      return PrintLayoutComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");

    var PrintLayoutComponent = /*#__PURE__*/function () {
      function PrintLayoutComponent() {
        _classCallCheck2(this, PrintLayoutComponent);
      }

      _createClass2(PrintLayoutComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          console.log("loading layout");
        }
      }]);

      return PrintLayoutComponent;
    }();

    PrintLayoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-print-layout',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./print-layout.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-layout/print-layout.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./print-layout.component.scss */
      "./src/app/print/print-layout/print-layout.component.scss"))["default"]]
    })], PrintLayoutComponent);
    /***/
  },

  /***/
  "./src/app/print/print-production-order/print-production-order.component.scss":
  /*!************************************************************************************!*\
    !*** ./src/app/print/print-production-order/print-production-order.component.scss ***!
    \************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppPrintPrintProductionOrderPrintProductionOrderComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".header,\n.header-space,\n.footer,\n.footer-space {\n  height: 100px;\n}\n\n.header {\n  position: fixed;\n  top: 0;\n}\n\nth, td {\n  text-align: center;\n}\n\n.footer {\n  position: fixed;\n  bottom: 0;\n}\n\n.positionSides td {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n.positionDim td, .positionUse td {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n  width: 50px;\n  max-width: 50px;\n}\n\n.col70 {\n  max-width: 70px;\n  width: 70px;\n}\n\n.col50 {\n  max-width: 50px;\n  width: 50px;\n}\n\n.col200 {\n  max-width: 200px;\n  width: 200px;\n}\n\n.col150 {\n  max-width: 150px;\n  width: 150px;\n}\n\n.col120 {\n  max-width: 120px;\n  width: 120px;\n}\n\n.border th, .border td {\n  border: 1px solid #c8c8c8;\n}\n\n.pSide {\n  display: none;\n}\n\n.pSide th,\n.pSideDim th {\n  border: 0;\n  border-left: 1px solid #c8c8c8;\n  border-bottom: 1px solid #c8c8c8;\n}\n\n.pSide th:first-child,\n.pSideDim th:first-child {\n  border-left: 0;\n}\n\n.positionSides td:first-child,\n.positionDim td:first-child {\n  border-left: 0;\n}\n\n.positionSides td,\n.positionDim td {\n  border: 0;\n  border-left: 1px solid #c8c8c8;\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionDim td {\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionSides:first-child td {\n  border-top: 0;\n}\n\n.positionSides:first-child .positionDim {\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionSides:first-child .positionDim:first-child {\n  border-top: 0;\n}\n\n.pSideDim {\n  display: none;\n}\n\n.pOrder {\n  border-top: 2px solid #afafaf;\n}\n\n.pOrder:first-child {\n  border-top: 1px solid #c8c8c8;\n}\n\n.pOrder:nth-child(1) .pSide {\n  display: table-row;\n}\n\n.pOrder:nth-child(1) .positionSides:nth-child(1) .pSideDim:nth-child(1) {\n  display: table-row;\n}\n\n.positionSides {\n  border-top: 2px solid #c8c8c8;\n}\n\n.positionSides:first-child {\n  border-top: 0px;\n}\n\n.positionDim:first-child td {\n  border-top: 0;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJpbnQvcHJpbnQtcHJvZHVjdGlvbi1vcmRlci9DOlxcVXNlcnNcXFN5bHdla1xcRGVza3RvcFxcYm0vc3JjXFxhcHBcXHByaW50XFxwcmludC1wcm9kdWN0aW9uLW9yZGVyXFxwcmludC1wcm9kdWN0aW9uLW9yZGVyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wcmludC9wcmludC1wcm9kdWN0aW9uLW9yZGVyL3ByaW50LXByb2R1Y3Rpb24tb3JkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7RUFJSSxhQUFBO0FDQ0o7O0FEQ0E7RUFDSSxlQUFBO0VBQ0EsTUFBQTtBQ0VKOztBRENBO0VBQ0ksa0JBQUE7QUNFSjs7QURDQTtFQUNJLGVBQUE7RUFDQSxTQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0FDRUo7O0FEQ0E7RUFDSSxVQUFBO0VBQ0EsU0FBQTtFQUNBLGtCQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7QUNFSjs7QURDQTtFQUNJLGVBQUE7RUFDQSxXQUFBO0FDRUo7O0FERUE7RUFDSSxlQUFBO0VBQ0EsV0FBQTtBQ0NKOztBREVBO0VBQ0ksZ0JBQUE7RUFDQSxZQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLGdCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBREVBO0VBQ0kseUJBQUE7QUNDSjs7QURDQTtFQUNJLGFBQUE7QUNFSjs7QURDQTs7RUFFSSxTQUFBO0VBQ0EsOEJBQUE7RUFDQSxnQ0FBQTtBQ0VKOztBRENBOztFQUVJLGNBQUE7QUNFSjs7QURDQTs7RUFFSSxjQUFBO0FDRUo7O0FEQ0E7O0VBRUksU0FBQTtFQUNBLDhCQUFBO0VBQ0EsNkJBQUE7QUNFSjs7QURDQTtFQUNJLDZCQUFBO0FDRUo7O0FEQ0E7RUFDSSxhQUFBO0FDRUo7O0FEQ0E7RUFDSSw2QkFBQTtBQ0VKOztBREFBO0VBQ0ksYUFBQTtBQ0dKOztBREFBO0VBQ0ksYUFBQTtBQ0dKOztBRERDO0VBQ0csNkJBQUE7QUNJSjs7QURGQztFQUNHLDZCQUFBO0FDS0o7O0FESEM7RUFDRyxrQkFBQTtBQ01KOztBREhDO0VBQ0csa0JBQUE7QUNNSjs7QURIQztFQUNHLDZCQUFBO0FDTUo7O0FESEM7RUFDRyxlQUFBO0FDTUo7O0FESEM7RUFDRyxhQUFBO0FDTUoiLCJmaWxlIjoic3JjL2FwcC9wcmludC9wcmludC1wcm9kdWN0aW9uLW9yZGVyL3ByaW50LXByb2R1Y3Rpb24tb3JkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyLFxyXG4uaGVhZGVyLXNwYWNlLFxyXG4uZm9vdGVyLFxyXG4uZm9vdGVyLXNwYWNlIHtcclxuICAgIGhlaWdodDogMTAwcHg7XHJcbn1cclxuLmhlYWRlciB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbn1cclxuXHJcbnRoLHRke1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4uZm9vdGVyIHtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIGJvdHRvbTogMDtcclxufVxyXG5cclxuLnBvc2l0aW9uU2lkZXMgdGR7XHJcbiAgICBwYWRkaW5nOjA7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5wb3NpdGlvbkRpbSB0ZCwgLnBvc2l0aW9uVXNlIHRke1xyXG4gICAgcGFkZGluZzowO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwcHg7XHJcbn1cclxuXHJcbi5jb2w3MHtcclxuICAgIG1heC13aWR0aDogNzBweDtcclxuICAgIHdpZHRoOiA3MHB4O1xyXG59XHJcblxyXG5cclxuLmNvbDUwe1xyXG4gICAgbWF4LXdpZHRoOiA1MHB4O1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbn1cclxuXHJcbi5jb2wyMDB7XHJcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG59XHJcblxyXG4uY29sMTUwe1xyXG4gICAgbWF4LXdpZHRoOiAxNTBweDtcclxuICAgIHdpZHRoOiAxNTBweDtcclxufVxyXG5cclxuLmNvbDEyMHtcclxuICAgIG1heC13aWR0aDogMTIwcHg7XHJcbiAgICB3aWR0aDogMTIwcHg7XHJcbn1cclxuXHJcbi5ib3JkZXIgdGgsLmJvcmRlciB0ZHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbn1cclxuLnBTaWRle1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnBTaWRlIHRoLFxyXG4ucFNpZGVEaW0gdGgge1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbn1cclxuXHJcbi5wU2lkZSB0aDpmaXJzdC1jaGlsZCxcclxuLnBTaWRlRGltIHRoOmZpcnN0LWNoaWxkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAwO1xyXG59XHJcblxyXG4ucG9zaXRpb25TaWRlcyB0ZDpmaXJzdC1jaGlsZCxcclxuLnBvc2l0aW9uRGltIHRkOmZpcnN0LWNoaWxkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAwO1xyXG59XHJcblxyXG4ucG9zaXRpb25TaWRlcyB0ZCxcclxuLnBvc2l0aW9uRGltIHRkIHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2M4YzhjODtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG59XHJcblxyXG4ucG9zaXRpb25EaW0gdGQge1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjOGM4Yzg7XHJcbn1cclxuXHJcbi5wb3NpdGlvblNpZGVzOmZpcnN0LWNoaWxkIHRkIHtcclxuICAgIGJvcmRlci10b3A6IDA7XHJcbn1cclxuXHJcbi5wb3NpdGlvblNpZGVzOmZpcnN0LWNoaWxkIC5wb3NpdGlvbkRpbSB7XHJcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2M4YzhjODtcclxufVxyXG4ucG9zaXRpb25TaWRlczpmaXJzdC1jaGlsZCAucG9zaXRpb25EaW06Zmlyc3QtY2hpbGQge1xyXG4gICAgYm9yZGVyLXRvcDogMDtcclxufVxyXG5cclxuLnBTaWRlRGlte1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuIH1cclxuIC5wT3JkZXJ7XHJcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgcmdiKDE3NSwgMTc1LCAxNzUpO1xyXG4gfVxyXG4gLnBPcmRlcjpmaXJzdC1jaGlsZHtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzhjOGM4O1xyXG4gfVxyXG4gLnBPcmRlcjpudGgtY2hpbGQoMSkgLnBTaWRle1xyXG4gICAgZGlzcGxheTogdGFibGUtcm93O1xyXG4gfVxyXG5cclxuIC5wT3JkZXI6bnRoLWNoaWxkKDEpIC5wb3NpdGlvblNpZGVzOm50aC1jaGlsZCgxKSAucFNpZGVEaW06bnRoLWNoaWxkKDEpe1xyXG4gICAgZGlzcGxheTogdGFibGUtcm93O1xyXG4gfVxyXG5cclxuIC5wb3NpdGlvblNpZGVze1xyXG4gICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNjOGM4Yzg7XHJcbiB9XHJcblxyXG4gLnBvc2l0aW9uU2lkZXM6Zmlyc3QtY2hpbGR7XHJcbiAgICBib3JkZXItdG9wOiAwcHg7XHJcbiB9XHJcblxyXG4gLnBvc2l0aW9uRGltOmZpcnN0LWNoaWxkIHRke1xyXG4gICAgYm9yZGVyLXRvcDowO1xyXG4gfSIsIi5oZWFkZXIsXG4uaGVhZGVyLXNwYWNlLFxuLmZvb3Rlcixcbi5mb290ZXItc3BhY2Uge1xuICBoZWlnaHQ6IDEwMHB4O1xufVxuXG4uaGVhZGVyIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG59XG5cbnRoLCB0ZCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmZvb3RlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xufVxuXG4ucG9zaXRpb25TaWRlcyB0ZCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4ucG9zaXRpb25EaW0gdGQsIC5wb3NpdGlvblVzZSB0ZCB7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB3aWR0aDogNTBweDtcbiAgbWF4LXdpZHRoOiA1MHB4O1xufVxuXG4uY29sNzAge1xuICBtYXgtd2lkdGg6IDcwcHg7XG4gIHdpZHRoOiA3MHB4O1xufVxuXG4uY29sNTAge1xuICBtYXgtd2lkdGg6IDUwcHg7XG4gIHdpZHRoOiA1MHB4O1xufVxuXG4uY29sMjAwIHtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgd2lkdGg6IDIwMHB4O1xufVxuXG4uY29sMTUwIHtcbiAgbWF4LXdpZHRoOiAxNTBweDtcbiAgd2lkdGg6IDE1MHB4O1xufVxuXG4uY29sMTIwIHtcbiAgbWF4LXdpZHRoOiAxMjBweDtcbiAgd2lkdGg6IDEyMHB4O1xufVxuXG4uYm9yZGVyIHRoLCAuYm9yZGVyIHRkIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2M4YzhjODtcbn1cblxuLnBTaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnBTaWRlIHRoLFxuLnBTaWRlRGltIHRoIHtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNjOGM4Yzg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYzhjOGM4O1xufVxuXG4ucFNpZGUgdGg6Zmlyc3QtY2hpbGQsXG4ucFNpZGVEaW0gdGg6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItbGVmdDogMDtcbn1cblxuLnBvc2l0aW9uU2lkZXMgdGQ6Zmlyc3QtY2hpbGQsXG4ucG9zaXRpb25EaW0gdGQ6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItbGVmdDogMDtcbn1cblxuLnBvc2l0aW9uU2lkZXMgdGQsXG4ucG9zaXRpb25EaW0gdGQge1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2M4YzhjODtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjOGM4Yzg7XG59XG5cbi5wb3NpdGlvbkRpbSB0ZCB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzhjOGM4O1xufVxuXG4ucG9zaXRpb25TaWRlczpmaXJzdC1jaGlsZCB0ZCB7XG4gIGJvcmRlci10b3A6IDA7XG59XG5cbi5wb3NpdGlvblNpZGVzOmZpcnN0LWNoaWxkIC5wb3NpdGlvbkRpbSB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjYzhjOGM4O1xufVxuXG4ucG9zaXRpb25TaWRlczpmaXJzdC1jaGlsZCAucG9zaXRpb25EaW06Zmlyc3QtY2hpbGQge1xuICBib3JkZXItdG9wOiAwO1xufVxuXG4ucFNpZGVEaW0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucE9yZGVyIHtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICNhZmFmYWY7XG59XG5cbi5wT3JkZXI6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2M4YzhjODtcbn1cblxuLnBPcmRlcjpudGgtY2hpbGQoMSkgLnBTaWRlIHtcbiAgZGlzcGxheTogdGFibGUtcm93O1xufVxuXG4ucE9yZGVyOm50aC1jaGlsZCgxKSAucG9zaXRpb25TaWRlczpudGgtY2hpbGQoMSkgLnBTaWRlRGltOm50aC1jaGlsZCgxKSB7XG4gIGRpc3BsYXk6IHRhYmxlLXJvdztcbn1cblxuLnBvc2l0aW9uU2lkZXMge1xuICBib3JkZXItdG9wOiAycHggc29saWQgI2M4YzhjODtcbn1cblxuLnBvc2l0aW9uU2lkZXM6Zmlyc3QtY2hpbGQge1xuICBib3JkZXItdG9wOiAwcHg7XG59XG5cbi5wb3NpdGlvbkRpbTpmaXJzdC1jaGlsZCB0ZCB7XG4gIGJvcmRlci10b3A6IDA7XG59Il19 */";
    /***/
  },

  /***/
  "./src/app/print/print-production-order/print-production-order.component.ts":
  /*!**********************************************************************************!*\
    !*** ./src/app/print/print-production-order/print-production-order.component.ts ***!
    \**********************************************************************************/

  /*! exports provided: PrintProductionOrderComponent */

  /***/
  function srcAppPrintPrintProductionOrderPrintProductionOrderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PrintProductionOrderComponent", function () {
      return PrintProductionOrderComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _print_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../print.service */
    "./src/app/print/print.service.ts");
    /* harmony import */


    var src_app_production_production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/production/production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var PrintProductionOrderComponent = /*#__PURE__*/function () {
      function PrintProductionOrderComponent(route, printService, productionService, confirmationService, cookieService) {
        _classCallCheck2(this, PrintProductionOrderComponent);

        this.printService = printService;
        this.productionService = productionService;
        this.confirmationService = confirmationService;
        this.cookieService = cookieService;
        this.idOrder = route.snapshot.params['idOrder'];
        this.printPosition = JSON.parse(this.cookieService.get('printPositionColumns'));
        this.printSide = JSON.parse(this.cookieService.get('printSideColumns'));
      }

      _createClass2(PrintProductionOrderComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this56 = this;

          console.log("layout for id: " + this.idOrder);
          this.productionService.getProductionOrder(this.idOrder).subscribe({
            next: function next(res) {
              _this56.productionOrder = res;
            },
            error: function error(err) {
              console.log("error download data to print");
            },
            complete: function complete() {
              console.log(_this56.productionOrder);
            }
          });
          this.productionService.getOrderPositions(this.idOrder).subscribe({
            next: function next(res) {
              _this56.orderPosition = [];
              _this56.orderPosition = res;
            },
            error: function error(err) {
              console.log(err);
            },
            complete: function complete() {
              _this56.printService.onDataReady();

              console.log(_this56.orderPosition);
            }
          });
        }
      }, {
        key: "checkShow",
        value: function checkShow(sw) {
          return this.printPosition.find(function (e) {
            return e.field === sw;
          }).show;
        }
      }, {
        key: "checkShowSide",
        value: function checkShowSide(sw) {
          return this.printSide.find(function (e) {
            return e.field === sw;
          }).show;
        }
      }, {
        key: "yesNo",
        value: function yesNo(or) {
          return or ? "TAK" : "NIE";
        }
      }]);

      return PrintProductionOrderComponent;
    }();

    PrintProductionOrderComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: _print_service__WEBPACK_IMPORTED_MODULE_3__["PrintService"]
      }, {
        type: src_app_production_production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }, {
        type: primeng_api__WEBPACK_IMPORTED_MODULE_5__["ConfirmationService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_6__["CookieService"]
      }];
    };

    PrintProductionOrderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-print-production-order',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./print-production-order.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/print/print-production-order/print-production-order.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./print-production-order.component.scss */
      "./src/app/print/print-production-order/print-production-order.component.scss"))["default"]]
    })], PrintProductionOrderComponent);
    /***/
  },

  /***/
  "./src/app/production/form/order-position-form-update/order-position-form-update.component.scss":
  /*!******************************************************************************************************!*\
    !*** ./src/app/production/form/order-position-form-update/order-position-form-update.component.scss ***!
    \******************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionFormOrderPositionFormUpdateOrderPositionFormUpdateComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".rowsides:nth-child(1) div div div label {\n  display: block;\n}\n\n.rowsides-dim div div div label {\n  display: none;\n}\n\n.rowsides:nth-child(1) div div .close button {\n  display: none;\n}\n\n.rowsides div div div label {\n  display: none;\n}\n\n.close, .new {\n  text-align: center;\n  margin-top: 5px;\n}\n\n.close button, .new button {\n  height: 25px;\n  width: 25px;\n}\n\n.dimClose {\n  text-align: center;\n  margin-top: 5px;\n}\n\n.dimClose button {\n  height: 25px;\n  width: 25px;\n}\n\n.rowsidesdim div div div label {\n  display: none;\n}\n\n.rowsidesdim:not(:first-child) div div div label {\n  display: none;\n}\n\n.rowsidesdim:first-child div div div button {\n  visibility: hidden;\n}\n\n.measure-badge {\n  padding: 0.429em 0.857em;\n}\n\n.measure-badge.status-true {\n  background-color: #c8e6c9;\n}\n\n.measure-badge.status-true:hover {\n  background-color: #256029 !important;\n}\n\n:host ::ng-deep .ui-autocomplete-list-item {\n  padding: 0 !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdGlvbi9mb3JtL29yZGVyLXBvc2l0aW9uLWZvcm0tdXBkYXRlL0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxccHJvZHVjdGlvblxcZm9ybVxcb3JkZXItcG9zaXRpb24tZm9ybS11cGRhdGVcXG9yZGVyLXBvc2l0aW9uLWZvcm0tdXBkYXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wcm9kdWN0aW9uL2Zvcm0vb3JkZXItcG9zaXRpb24tZm9ybS11cGRhdGUvb3JkZXItcG9zaXRpb24tZm9ybS11cGRhdGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FEQ0U7RUFDRSxhQUFBO0FDRUo7O0FERUU7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUNDSjs7QURBSTtFQUNFLFlBQUE7RUFDQSxXQUFBO0FDRU47O0FERUU7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUNDSjs7QURBSTtFQUNFLFlBQUE7RUFDQSxXQUFBO0FDRU47O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0FDQ0o7O0FERUU7RUFDRSxrQkFBQTtBQ0NKOztBREVFO0VBQ0Usd0JBQUE7QUNDSjs7QURBSTtFQUNFLHlCQUFBO0FDRU47O0FEQ0k7RUFDRSxvQ0FBQTtBQ0NOOztBREdFO0VBQ0UscUJBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vZm9ybS9vcmRlci1wb3NpdGlvbi1mb3JtLXVwZGF0ZS9vcmRlci1wb3NpdGlvbi1mb3JtLXVwZGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yb3dzaWRlczpudGgtY2hpbGQoMSkgZGl2IGRpdiBkaXYgbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb3dzaWRlcy1kaW0gZGl2IGRpdiBkaXYgbGFiZWwge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgXHJcbiAgLnJvd3NpZGVzOm50aC1jaGlsZCgxKSBkaXYgZGl2IC5jbG9zZSBidXR0b24ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbiAgLnJvd3NpZGVzIGRpdiBkaXYgZGl2IGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIC5jbG9zZSwgLm5ldyB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBidXR0b24ge1xyXG4gICAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICAuZGltQ2xvc2Uge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgYnV0dG9uIHtcclxuICAgICAgaGVpZ2h0OiAyNXB4O1xyXG4gICAgICB3aWR0aDogMjVweDtcclxuICAgIH1cclxuICB9XHJcbiAgXHJcbiAgLnJvd3NpZGVzZGltIGRpdiBkaXYgZGl2IGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG4gIFxyXG4gIC5yb3dzaWRlc2RpbTpub3QoOmZpcnN0LWNoaWxkKSBkaXYgZGl2IGRpdiBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuICBcclxuICAucm93c2lkZXNkaW06Zmlyc3QtY2hpbGQgZGl2IGRpdiBkaXYgYnV0dG9uIHtcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICB9XHJcbiAgXHJcbiAgLm1lYXN1cmUtYmFkZ2Uge1xyXG4gICAgcGFkZGluZzogMC40MjllbSAwLjg1N2VtO1xyXG4gICAgJi5zdGF0dXMtdHJ1ZSB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjOGU2Yzk7XHJcbiAgICAgIC8vY29sb3I6ICMyNTYwMjk7XHJcbiAgICB9XHJcbiAgICAmLnN0YXR1cy10cnVlOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI1NjAyOSAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxuICBcclxuICA6aG9zdCA6Om5nLWRlZXAgLnVpLWF1dG9jb21wbGV0ZS1saXN0LWl0ZW0ge1xyXG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICBcclxuICAiLCIucm93c2lkZXM6bnRoLWNoaWxkKDEpIGRpdiBkaXYgZGl2IGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5yb3dzaWRlcy1kaW0gZGl2IGRpdiBkaXYgbGFiZWwge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucm93c2lkZXM6bnRoLWNoaWxkKDEpIGRpdiBkaXYgLmNsb3NlIGJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5yb3dzaWRlcyBkaXYgZGl2IGRpdiBsYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5jbG9zZSwgLm5ldyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLmNsb3NlIGJ1dHRvbiwgLm5ldyBidXR0b24ge1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xufVxuXG4uZGltQ2xvc2Uge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDVweDtcbn1cbi5kaW1DbG9zZSBidXR0b24ge1xuICBoZWlnaHQ6IDI1cHg7XG4gIHdpZHRoOiAyNXB4O1xufVxuXG4ucm93c2lkZXNkaW0gZGl2IGRpdiBkaXYgbGFiZWwge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucm93c2lkZXNkaW06bm90KDpmaXJzdC1jaGlsZCkgZGl2IGRpdiBkaXYgbGFiZWwge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4ucm93c2lkZXNkaW06Zmlyc3QtY2hpbGQgZGl2IGRpdiBkaXYgYnV0dG9uIHtcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xufVxuXG4ubWVhc3VyZS1iYWRnZSB7XG4gIHBhZGRpbmc6IDAuNDI5ZW0gMC44NTdlbTtcbn1cbi5tZWFzdXJlLWJhZGdlLnN0YXR1cy10cnVlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M4ZTZjOTtcbn1cbi5tZWFzdXJlLWJhZGdlLnN0YXR1cy10cnVlOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1NjAyOSAhaW1wb3J0YW50O1xufVxuXG46aG9zdCA6Om5nLWRlZXAgLnVpLWF1dG9jb21wbGV0ZS1saXN0LWl0ZW0ge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7XG59Il19 */";
    /***/
  },

  /***/
  "./src/app/production/form/order-position-form-update/order-position-form-update.component.ts":
  /*!****************************************************************************************************!*\
    !*** ./src/app/production/form/order-position-form-update/order-position-form-update.component.ts ***!
    \****************************************************************************************************/

  /*! exports provided: OrderPositionFormUpdateComponent */

  /***/
  function srcAppProductionFormOrderPositionFormUpdateOrderPositionFormUpdateComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OrderPositionFormUpdateComponent", function () {
      return OrderPositionFormUpdateComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var OrderPositionFormUpdateComponent = /*#__PURE__*/function () {
      function OrderPositionFormUpdateComponent(positionData, dialogRef, productionService, infoPopup, route, cookieService) {
        _classCallCheck2(this, OrderPositionFormUpdateComponent);

        this.positionData = positionData;
        this.dialogRef = dialogRef;
        this.productionService = productionService;
        this.infoPopup = infoPopup;
        this.route = route;
        this.cookieService = cookieService;
        this.dimSug = [{
          label: "6 mb",
          value: "6"
        }];
        this.sideSug = ["jedno", "obu", "obu-zew", "obu-wew", "zew", "wew"];
        this.selectedSystem = null;
        this.selectedCatalog = null;
      }

      _createClass2(OrderPositionFormUpdateComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.tmpDataPosition = this.positionData;
          console.log(this.tmpDataPosition); // Check cookie

          if (!this.cookieService.check('creatorSelectedSystem')) {
            this.cookieService.set('creatorSelectedSystem', JSON.stringify(this.selectedSystem));
          } else {
            this.selectedSystem = JSON.parse(this.cookieService.get('creatorSelectedSystem'));
          } //===


          this.formOrderPosition = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            profilType: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            profilNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            comment: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            postionSide: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
              id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              side: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              filmNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              filmWidth: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              profilDimensions: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
                id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
                quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
                length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
              })])
            })])
          });
          this.loadDataToForm();
        }
      }, {
        key: "loadDataToForm",
        value: function loadDataToForm() {
          var _this57 = this;

          this.tmpDataPosition.postionSide.forEach(function (el, index) {
            if (index != 0) {
              _this57.addSide();
            }

            el.profilDimensions.forEach(function (d, dindex) {
              if (dindex != 0) {
                _this57.addDimensions(index);
              }
            });
          });
          this.formOrderPosition.patchValue(this.tmpDataPosition);
          this.filterBySystem();
        }
      }, {
        key: "addDimensions",
        value: function addDimensions(row) {
          this.iDimTmp = row;
          this.profilDimensions.push(new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
          }));
        }
      }, {
        key: "addSide",
        value: function addSide() {
          var group = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            side: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            filmNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            filmWidth: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            profilDimensions: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
              id: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
            })])
          });
          this.sides.push(group);
        }
      }, {
        key: "removeSide",
        value: function removeSide(i) {
          this.sides.removeAt(i);
        }
      }, {
        key: "removeDimension",
        value: function removeDimension(row, index) {
          this.iDimTmp = row;
          this.profilDimensions.removeAt(index);
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "onUpdateOrderPosition",
        value: function onUpdateOrderPosition() {
          var _this58 = this;

          console.log(this.formOrderPosition.value);
          this.productionService.updateOrderPositions(this.tmpDataPosition.productionOrder.orderNumber, this.tmpDataPosition.id, this.formOrderPosition.value).subscribe({
            next: function next(res) {
              _this58.infoPopup.showSuccessUpdate("pozycja zlecenia");

              _this58.dialogRef.close();
            },
            error: function error(err) {
              _this58.infoPopup.showErrorUpdate("pozycja zlecenia");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "selectDim",
        value: function selectDim(i, j, e) {
          this.sides.controls[i]['controls'].profilDimensions.controls[j].get('length').setValue(e);
        }
      }, {
        key: "onSelectSide",
        value: function onSelectSide(e, index) {
          if (this.selectedCatalog != null) {
            var res = "";

            switch (e) {
              case "jedno":
                res = this.selectedCatalog.dimOneSide;
                break;

              case "obu":
                res = this.selectedCatalog.dimTwoSide;
                break;

              case "zew":
                res = this.selectedCatalog.dimOuter;
                break;

              case "wew":
                res = this.selectedCatalog.dimInner;
                break;
            }

            this.sides.controls[index].get('filmWidth').setValue(res);
          }
        }
      }, {
        key: "onSelectCatalog",
        value: function onSelectCatalog(event) {
          var _this59 = this;

          this.selectedCatalog = event;
          this.formOrderPosition.get("profilNumber").setValue(event.number);
          this.formOrderPosition.get("profilType").setValue(event.profileType);
          this.sides.controls.forEach(function (x, index) {
            var e = x.get('side').value;
            var res = "";

            switch (e) {
              case "jedno":
                res = _this59.selectedCatalog.dimOneSide;
                break;

              case "obu":
                res = _this59.selectedCatalog.dimTwoSide;
                break;

              case "zew":
                res = _this59.selectedCatalog.dimOuter;
                break;

              case "wew":
                res = _this59.selectedCatalog.dimInner;
                break;
            }

            _this59.sides.controls[index].get('filmWidth').setValue(res);
          });
        }
      }, {
        key: "searchFilm",
        value: function searchFilm(event) {
          this.filmSugFiltered = [];

          for (var i = 0; i < this.productionService.filmSuggestions.length; i++) {
            var film = this.productionService.filmSuggestions[i];

            if (film.number.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.filmSugFiltered.push(film);
            }
          }
        }
      }, {
        key: "searchSide",
        value: function searchSide(event) {
          this.sideSugFiltered = [];

          for (var i = 0; i < this.sideSug.length; i++) {
            var side = this.sideSug[i];

            if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.sideSugFiltered.push(side);
            }
          }
        }
      }, {
        key: "filterBySystem",
        value: function filterBySystem() {
          this.allCatalog = [];

          if (this.selectedSystem != null) {
            for (var i = 0; i < this.productionService.catalogSuggestions.length; i++) {
              var cat = this.productionService.catalogSuggestions[i];

              if (cat.systemProfil.name != null) {
                if (cat.systemProfil.id === this.selectedSystem.id) {
                  this.allCatalog.push(cat);
                }
              }
            }

            this.cookieService.set('creatorSelectedSystem', JSON.stringify(this.selectedSystem));
          } else {
            this.allCatalog = this.productionService.catalogSuggestions;
          }
        }
      }, {
        key: "searchCatalog",
        value: function searchCatalog(event) {
          var _this60 = this;

          this.catalogSugFiltered = [];

          if (event.query != "") {
            console.log("loading");

            for (var i = 0; i < this.allCatalog.length; i++) {
              var cat = this.allCatalog[i];

              if (cat.number != null) {
                if (cat.number.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
                  this.catalogSugFiltered.push(cat);
                }
              }
            }
          } else {
            this.allCatalog.forEach(function (x) {
              return _this60.catalogSugFiltered.push(x);
            });
          }
        }
      }, {
        key: "searchDim",
        value: function searchDim(event) {
          this.dimSugFiltered = [];

          for (var i = 0; i < this.dimSug.length; i++) {
            var dim = this.dimSug[i];

            if (dim.label.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.dimSugFiltered.push(dim);
            }
          }
        }
      }, {
        key: "sides",
        get: function get() {
          return this.formOrderPosition.get("postionSide");
        }
      }, {
        key: "profilDimensions",
        get: function get() {
          return this.sides.controls[this.iDimTmp].get('profilDimensions');
        }
      }]);

      return OrderPositionFormUpdateComponent;
    }();

    OrderPositionFormUpdateComponent.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
      }, {
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__["InfoPopupComponent"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__["CookieService"]
      }];
    };

    OrderPositionFormUpdateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-order-position-form-update',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./order-position-form-update.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form-update/order-position-form-update.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./order-position-form-update.component.scss */
      "./src/app/production/form/order-position-form-update/order-position-form-update.component.scss"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))], OrderPositionFormUpdateComponent);
    /***/
  },

  /***/
  "./src/app/production/form/order-position-form/order-position-form.component.scss":
  /*!****************************************************************************************!*\
    !*** ./src/app/production/form/order-position-form/order-position-form.component.scss ***!
    \****************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionFormOrderPositionFormOrderPositionFormComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".rowsides:nth-child(1) div div div label {\n  display: block;\n}\n\n.rowsides-dim div div div label {\n  display: none;\n}\n\n.rowsides:nth-child(1) div div .close button {\n  display: none;\n}\n\n.rowsides div div div label {\n  display: none;\n}\n\n.close,\n.new {\n  text-align: center;\n  margin-top: 5px;\n}\n\n.close button,\n.new button {\n  height: 25px;\n  width: 25px;\n}\n\n.dimClose {\n  text-align: center;\n  margin-top: 5px;\n}\n\n.dimClose button {\n  height: 25px;\n  width: 25px;\n}\n\n.rowsidesdim div div div label {\n  display: none;\n}\n\n.rowsidesdim:not(:first-child) div div div label {\n  display: none;\n}\n\n.rowsidesdim:first-child div div div button {\n  visibility: hidden;\n}\n\n.measure-badge {\n  padding: 0.429em 0.857em;\n}\n\n.measure-badge.status-true {\n  background-color: #c8e6c9;\n}\n\n.measure-badge.status-true:hover {\n  background-color: #256029 !important;\n}\n\n.padding-item-list {\n  padding: 0.429em 0.857em;\n}\n\n.measure-info {\n  padding: 0.429em 0.857em;\n}\n\n.measure-info.status-true {\n  background-color: #c8e6c9;\n}\n\n:host ::ng-deep .ui-autocomplete-list-item {\n  padding: 0 !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZHVjdGlvbi9mb3JtL29yZGVyLXBvc2l0aW9uLWZvcm0vQzpcXFVzZXJzXFxTeWx3ZWtcXERlc2t0b3BcXGJtL3NyY1xcYXBwXFxwcm9kdWN0aW9uXFxmb3JtXFxvcmRlci1wb3NpdGlvbi1mb3JtXFxvcmRlci1wb3NpdGlvbi1mb3JtLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9wcm9kdWN0aW9uL2Zvcm0vb3JkZXItcG9zaXRpb24tZm9ybS9vcmRlci1wb3NpdGlvbi1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtBQ0NGOztBRENBO0VBQ0UsYUFBQTtBQ0VGOztBRENBOztFQUVFLGtCQUFBO0VBQ0EsZUFBQTtBQ0VGOztBRERFOztFQUNFLFlBQUE7RUFDQSxXQUFBO0FDSUo7O0FEQUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUNHRjs7QURGRTtFQUNFLFlBQUE7RUFDQSxXQUFBO0FDSUo7O0FEQUE7RUFDRSxhQUFBO0FDR0Y7O0FEQUE7RUFDRSxhQUFBO0FDR0Y7O0FEQUE7RUFDRSxrQkFBQTtBQ0dGOztBREFBO0VBQ0Usd0JBQUE7QUNHRjs7QURGRTtFQUNFLHlCQUFBO0FDSUo7O0FEREU7RUFDRSxvQ0FBQTtBQ0dKOztBRENBO0VBQ0Usd0JBQUE7QUNFRjs7QURDQTtFQUNFLHdCQUFBO0FDRUY7O0FEREU7RUFDRSx5QkFBQTtBQ0dKOztBREVBO0VBQ0UscUJBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vZm9ybS9vcmRlci1wb3NpdGlvbi1mb3JtL29yZGVyLXBvc2l0aW9uLWZvcm0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93c2lkZXM6bnRoLWNoaWxkKDEpIGRpdiBkaXYgZGl2IGxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLnJvd3NpZGVzLWRpbSBkaXYgZGl2IGRpdiBsYWJlbCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnJvd3NpZGVzOm50aC1jaGlsZCgxKSBkaXYgZGl2IC5jbG9zZSBidXR0b24ge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLnJvd3NpZGVzIGRpdiBkaXYgZGl2IGxhYmVsIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uY2xvc2UsXHJcbi5uZXcge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgYnV0dG9uIHtcclxuICAgIGhlaWdodDogMjVweDtcclxuICAgIHdpZHRoOiAyNXB4O1xyXG4gIH1cclxufVxyXG5cclxuLmRpbUNsb3NlIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGJ1dHRvbiB7XHJcbiAgICBoZWlnaHQ6IDI1cHg7XHJcbiAgICB3aWR0aDogMjVweDtcclxuICB9XHJcbn1cclxuXHJcbi5yb3dzaWRlc2RpbSBkaXYgZGl2IGRpdiBsYWJlbCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnJvd3NpZGVzZGltOm5vdCg6Zmlyc3QtY2hpbGQpIGRpdiBkaXYgZGl2IGxhYmVsIHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4ucm93c2lkZXNkaW06Zmlyc3QtY2hpbGQgZGl2IGRpdiBkaXYgYnV0dG9uIHtcclxuICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbi5tZWFzdXJlLWJhZGdlIHtcclxuICBwYWRkaW5nOiAwLjQyOWVtIDAuODU3ZW07XHJcbiAgJi5zdGF0dXMtdHJ1ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzhlNmM5O1xyXG4gICAgLy9jb2xvcjogIzI1NjAyOTtcclxuICB9XHJcbiAgJi5zdGF0dXMtdHJ1ZTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjU2MDI5ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4ucGFkZGluZy1pdGVtLWxpc3R7XHJcbiAgcGFkZGluZzogMC40MjllbSAwLjg1N2VtO1xyXG59XHJcblxyXG4ubWVhc3VyZS1pbmZvIHtcclxuICBwYWRkaW5nOiAwLjQyOWVtIDAuODU3ZW07XHJcbiAgJi5zdGF0dXMtdHJ1ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzhlNmM5O1xyXG4gICAgLy9jb2xvcjogIzI1NjAyOTtcclxuICB9XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSB7XHJcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xyXG59XHJcbiIsIi5yb3dzaWRlczpudGgtY2hpbGQoMSkgZGl2IGRpdiBkaXYgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLnJvd3NpZGVzLWRpbSBkaXYgZGl2IGRpdiBsYWJlbCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5yb3dzaWRlczpudGgtY2hpbGQoMSkgZGl2IGRpdiAuY2xvc2UgYnV0dG9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnJvd3NpZGVzIGRpdiBkaXYgZGl2IGxhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmNsb3NlLFxuLm5ldyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogNXB4O1xufVxuLmNsb3NlIGJ1dHRvbixcbi5uZXcgYnV0dG9uIHtcbiAgaGVpZ2h0OiAyNXB4O1xuICB3aWR0aDogMjVweDtcbn1cblxuLmRpbUNsb3NlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uZGltQ2xvc2UgYnV0dG9uIHtcbiAgaGVpZ2h0OiAyNXB4O1xuICB3aWR0aDogMjVweDtcbn1cblxuLnJvd3NpZGVzZGltIGRpdiBkaXYgZGl2IGxhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnJvd3NpZGVzZGltOm5vdCg6Zmlyc3QtY2hpbGQpIGRpdiBkaXYgZGl2IGxhYmVsIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLnJvd3NpZGVzZGltOmZpcnN0LWNoaWxkIGRpdiBkaXYgZGl2IGJ1dHRvbiB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cblxuLm1lYXN1cmUtYmFkZ2Uge1xuICBwYWRkaW5nOiAwLjQyOWVtIDAuODU3ZW07XG59XG4ubWVhc3VyZS1iYWRnZS5zdGF0dXMtdHJ1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjOGU2Yzk7XG59XG4ubWVhc3VyZS1iYWRnZS5zdGF0dXMtdHJ1ZTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNTYwMjkgIWltcG9ydGFudDtcbn1cblxuLnBhZGRpbmctaXRlbS1saXN0IHtcbiAgcGFkZGluZzogMC40MjllbSAwLjg1N2VtO1xufVxuXG4ubWVhc3VyZS1pbmZvIHtcbiAgcGFkZGluZzogMC40MjllbSAwLjg1N2VtO1xufVxuLm1lYXN1cmUtaW5mby5zdGF0dXMtdHJ1ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjOGU2Yzk7XG59XG5cbjpob3N0IDo6bmctZGVlcCAudWktYXV0b2NvbXBsZXRlLWxpc3QtaXRlbSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDtcbn0iXX0= */";
    /***/
  },

  /***/
  "./src/app/production/form/order-position-form/order-position-form.component.ts":
  /*!**************************************************************************************!*\
    !*** ./src/app/production/form/order-position-form/order-position-form.component.ts ***!
    \**************************************************************************************/

  /*! exports provided: OrderPositionFormComponent */

  /***/
  function srcAppProductionFormOrderPositionFormOrderPositionFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OrderPositionFormComponent", function () {
      return OrderPositionFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");

    var OrderPositionFormComponent = /*#__PURE__*/function () {
      function OrderPositionFormComponent(orderNumber, dialogRef, productionService, infoPopup, route, cookieService) {
        _classCallCheck2(this, OrderPositionFormComponent);

        this.orderNumber = orderNumber;
        this.dialogRef = dialogRef;
        this.productionService = productionService;
        this.infoPopup = infoPopup;
        this.route = route;
        this.cookieService = cookieService;
        this.dimSug = [{
          label: "6 mb",
          value: "6"
        }];
        this.sideSug = ["jedno", "obu", "obu-zew", "obu-wew", "zew", "wew"];
        this.selectedSystem = null;
        this.selectedCatalog = null;
      }

      _createClass2(OrderPositionFormComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          // Check cookie
          if (!this.cookieService.check('creatorSelectedSystem')) {
            this.cookieService.set('creatorSelectedSystem', JSON.stringify(this.selectedSystem));
          } else {
            this.selectedSystem = JSON.parse(this.cookieService.get('creatorSelectedSystem'));
          }

          this.filterBySystem(); //=============
          // this.allCatalog = this.productionService.catalogSuggestions;
          // this.catalogSugFiltered = this.productionService.catalogSuggestions;

          this.formOrderPosition = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            profilType: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            profilNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            comment: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            postionSide: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
              side: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              filmNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              filmWidth: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              profilDimensions: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
                quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
                length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
              })])
            })])
          });
        }
      }, {
        key: "addDimensions",
        value: function addDimensions(row) {
          this.iDimTmp = row;
          this.profilDimensions.push(new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
          }));
        }
      }, {
        key: "addSide",
        value: function addSide() {
          var group = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            side: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            filmNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            filmWidth: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            profilDimensions: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormArray"]([new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
              quantity: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
              length: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('')
            })])
          });
          this.sides.push(group);
        }
      }, {
        key: "removeSide",
        value: function removeSide(i) {
          this.sides.removeAt(i);
        }
      }, {
        key: "removeDimension",
        value: function removeDimension(row, index) {
          this.iDimTmp = row;
          this.profilDimensions.removeAt(index);
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "onAddOrderPosition",
        value: function onAddOrderPosition() {
          var _this61 = this;

          //console.log(this.formOrderPosition.value);
          this.productionService.addOrderPositions(this.orderNumber, this.formOrderPosition.value).subscribe({
            next: function next(res) {
              _this61.infoPopup.showSuccessAdd("pozycja zlecenia");

              _this61.dialogRef.close();
            },
            error: function error(err) {
              _this61.infoPopup.showErrorAdd("pozycja zlecenia");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "selectDim",
        value: function selectDim(i, j, e) {
          this.sides.controls[i]['controls'].profilDimensions.controls[j].get('length').setValue(e);
        }
      }, {
        key: "onSelectSide",
        value: function onSelectSide(e, index) {
          if (this.selectedCatalog != null) {
            var res = "";

            switch (e) {
              case "jedno":
                res = this.selectedCatalog.dimOneSide;
                break;

              case "obu":
                res = this.selectedCatalog.dimTwoSide;
                break;

              case "zew":
                res = this.selectedCatalog.dimOuter;
                break;

              case "wew":
                res = this.selectedCatalog.dimInner;
                break;
            }

            this.sides.controls[index].get('filmWidth').setValue(res);
          }
        }
      }, {
        key: "onSelectCatalog",
        value: function onSelectCatalog(event) {
          var _this62 = this;

          this.selectedCatalog = event;
          this.formOrderPosition.get("profilNumber").setValue(event.number);
          this.formOrderPosition.get("profilType").setValue(event.profileType);
          this.sides.controls.forEach(function (x, index) {
            var e = x.get('side').value;
            var res = "";

            switch (e) {
              case "jedno":
                res = _this62.selectedCatalog.dimOneSide;
                break;

              case "obu":
                res = _this62.selectedCatalog.dimTwoSide;
                break;

              case "zew":
                res = _this62.selectedCatalog.dimOuter;
                break;

              case "wew":
                res = _this62.selectedCatalog.dimInner;
                break;
            }

            _this62.sides.controls[index].get('filmWidth').setValue(res);
          });
        }
      }, {
        key: "searchFilm",
        value: function searchFilm(event) {
          this.filmSugFiltered = [];

          for (var i = 0; i < this.productionService.filmSuggestions.length; i++) {
            var film = this.productionService.filmSuggestions[i];

            if (film.number.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.filmSugFiltered.push(film);
            }
          }
        }
      }, {
        key: "searchSide",
        value: function searchSide(event) {
          this.sideSugFiltered = [];

          for (var i = 0; i < this.sideSug.length; i++) {
            var side = this.sideSug[i];

            if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.sideSugFiltered.push(side);
            }
          }
        }
      }, {
        key: "filterBySystem",
        value: function filterBySystem() {
          this.allCatalog = [];

          if (this.selectedSystem != null) {
            for (var i = 0; i < this.productionService.catalogSuggestions.length; i++) {
              var cat = this.productionService.catalogSuggestions[i];

              if (cat.systemProfil.name != null) {
                if (cat.systemProfil.id === this.selectedSystem.id) {
                  this.allCatalog.push(cat);
                }
              }
            }

            this.cookieService.set('creatorSelectedSystem', JSON.stringify(this.selectedSystem));
          } else {
            this.allCatalog = this.productionService.catalogSuggestions;
          }
        }
      }, {
        key: "searchCatalog",
        value: function searchCatalog(event) {
          var _this63 = this;

          this.catalogSugFiltered = [];

          if (event.query != "") {
            console.log("loading");

            for (var i = 0; i < this.allCatalog.length; i++) {
              var cat = this.allCatalog[i];

              if (cat.number != null) {
                if (cat.number.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
                  this.catalogSugFiltered.push(cat);
                }
              }
            }
          } else {
            this.allCatalog.forEach(function (x) {
              return _this63.catalogSugFiltered.push(x);
            });
          }
        }
      }, {
        key: "searchDim",
        value: function searchDim(event) {
          this.dimSugFiltered = [];

          for (var i = 0; i < this.dimSug.length; i++) {
            var dim = this.dimSug[i];

            if (dim.label.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {
              this.dimSugFiltered.push(dim);
            }
          }
        }
      }, {
        key: "sides",
        get: function get() {
          return this.formOrderPosition.get("postionSide");
        }
      }, {
        key: "profilDimensions",
        get: function get() {
          return this.sides.controls[this.iDimTmp].get('profilDimensions');
        }
      }]);

      return OrderPositionFormComponent;
    }();

    OrderPositionFormComponent.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
      }, {
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__["InfoPopupComponent"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_7__["CookieService"]
      }];
    };

    OrderPositionFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-order-position-form',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./order-position-form.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/order-position-form/order-position-form.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./order-position-form.component.scss */
      "./src/app/production/form/order-position-form/order-position-form.component.scss"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))], OrderPositionFormComponent);
    /***/
  },

  /***/
  "./src/app/production/form/production-order-form-update/production-order-form-update.component.scss":
  /*!**********************************************************************************************************!*\
    !*** ./src/app/production/form/production-order-form-update/production-order-form-update.component.scss ***!
    \**********************************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionFormProductionOrderFormUpdateProductionOrderFormUpdateComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vZm9ybS9wcm9kdWN0aW9uLW9yZGVyLWZvcm0tdXBkYXRlL3Byb2R1Y3Rpb24tb3JkZXItZm9ybS11cGRhdGUuY29tcG9uZW50LnNjc3MifQ== */";
    /***/
  },

  /***/
  "./src/app/production/form/production-order-form-update/production-order-form-update.component.ts":
  /*!********************************************************************************************************!*\
    !*** ./src/app/production/form/production-order-form-update/production-order-form-update.component.ts ***!
    \********************************************************************************************************/

  /*! exports provided: ProductionOrderFormUpdateComponent */

  /***/
  function srcAppProductionFormProductionOrderFormUpdateProductionOrderFormUpdateComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionOrderFormUpdateComponent", function () {
      return ProductionOrderFormUpdateComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");

    var ProductionOrderFormUpdateComponent = /*#__PURE__*/function () {
      function ProductionOrderFormUpdateComponent(orderData, dialogRef, productionService, infoPopup) {
        _classCallCheck2(this, ProductionOrderFormUpdateComponent);

        this.orderData = orderData;
        this.dialogRef = dialogRef;
        this.productionService = productionService;
        this.infoPopup = infoPopup;
        this._statusOrder = [];
        this.myCompanyData = [];
        this.clientData = [];
        this.pl = {
          firstDayOfWeek: 1,
          dayNames: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"],
          dayNamesShort: ["Niedz", "Pon", "Wt", "Śr", "Czw", "Pt", "Sob"],
          dayNamesMin: ["Ni", "Po", "Wt", "Śr", "Cz", "Pt", "So"],
          monthNames: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
          monthNamesShort: ["Sty", "Lut", "Mar", "Kwi", "Maj", "Cze", "Lip", "Sie", "Wrz", "Paź", "Lis", "Gru"],
          today: 'Dziś',
          clear: 'Wyczyść',
          dateFormat: 'dd-mm-yy',
          weekHeader: 'Wk'
        };
        this.color = 'warn';
        this._statusOrder = [{
          label: "Nowe",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].NOWE
        }, {
          label: "Realizacja",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].REALIZACJA
        }, {
          label: "Zakończone",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].ZAKONCZONE
        }, {
          label: "Wydane",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].WYDANE
        }, {
          label: "Archiwum",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].ARCHIWUM
        }, {
          label: "Anulowano",
          value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].ANULOWANO
        }];
        this.formProductionOrderUpdate = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
          numberClientOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
          myCompany: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', {
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          }),
          client: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', {
            validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
          }),
          orderNumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
          completed: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](false),
          statusOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
          dateAcceptanceOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
          dateCompletedOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({
            value: '',
            disabled: !this.orderData.completed
          }),
          dateReceiptOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({
            value: '',
            disabled: !this.orderData.completed
          })
        });
      }

      _createClass2(ProductionOrderFormUpdateComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this64 = this;

          this.productionService.getMyCompaniesSub().subscribe({
            next: function next(res) {
              res.forEach(function (element) {
                var el = {
                  label: element.name,
                  value: element
                };

                _this64.myCompanyData.push(el);
              });
            },
            error: function error(err) {
              console.error("Can`t download myCompanies");
            },
            complete: function complete() {
              _this64.formProductionOrderUpdate.patchValue(_this64.orderData);
            }
          });
          this.productionService.getClientsSub().subscribe({
            next: function next(res) {
              res.forEach(function (element) {
                var el = {
                  label: element.name,
                  value: element
                };

                _this64.clientData.push(el);
              });
            },
            error: function error(err) {
              console.error("Can`t download clients");
            },
            complete: function complete() {
              _this64.formProductionOrderUpdate.patchValue(_this64.orderData);
            }
          });
        }
      }, {
        key: "changeCompleted",
        value: function changeCompleted() {
          if (this.formProductionOrderUpdate.value.completed == true) {
            this.formProductionOrderUpdate.controls.dateCompletedOrder.enable();
            this.formProductionOrderUpdate.controls.dateReceiptOrder.enable();
          } else {
            this.formProductionOrderUpdate.controls.dateCompletedOrder.disable();
            this.formProductionOrderUpdate.controls.dateReceiptOrder.disable();
          }
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "onUpdateProductionOrder",
        value: function onUpdateProductionOrder() {
          var _this65 = this;

          console.log(this.formProductionOrderUpdate.value);
          this.productionService.updateProductionOrder(this.orderData.orderNumber, this.formProductionOrderUpdate.value).subscribe({
            next: function next(res) {
              _this65.infoPopup.showSuccessUpdate("zlecenie");

              _this65.dialogRef.close();
            },
            error: function error(err) {
              _this65.infoPopup.showErrorUpdate("zlecenie");
            },
            complete: function complete() {}
          });
        }
      }]);

      return ProductionOrderFormUpdateComponent;
    }();

    ProductionOrderFormUpdateComponent.ctorParameters = function () {
      return [{
        type: undefined,
        decorators: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
          args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]]
        }]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
      }, {
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__["InfoPopupComponent"]
      }];
    };

    ProductionOrderFormUpdateComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-production-order-form-update',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./production-order-form-update.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form-update/production-order-form-update.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./production-order-form-update.component.scss */
      "./src/app/production/form/production-order-form-update/production-order-form-update.component.scss"))["default"]]
    }), tslib__WEBPACK_IMPORTED_MODULE_0__["__param"](0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MAT_DIALOG_DATA"]))], ProductionOrderFormUpdateComponent);
    /***/
  },

  /***/
  "./src/app/production/form/production-order-form/production-order-form.component.scss":
  /*!********************************************************************************************!*\
    !*** ./src/app/production/form/production-order-form/production-order-form.component.scss ***!
    \********************************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionFormProductionOrderFormProductionOrderFormComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vZm9ybS9wcm9kdWN0aW9uLW9yZGVyLWZvcm0vcHJvZHVjdGlvbi1vcmRlci1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */";
    /***/
  },

  /***/
  "./src/app/production/form/production-order-form/production-order-form.component.ts":
  /*!******************************************************************************************!*\
    !*** ./src/app/production/form/production-order-form/production-order-form.component.ts ***!
    \******************************************************************************************/

  /*! exports provided: ProductionOrderFormComponent */

  /***/
  function srcAppProductionFormProductionOrderFormProductionOrderFormComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionOrderFormComponent", function () {
      return ProductionOrderFormComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var ProductionOrderFormComponent = /*#__PURE__*/function () {
      function ProductionOrderFormComponent(dialogRef, productionService, infoPopup, route, router) {
        _classCallCheck2(this, ProductionOrderFormComponent);

        this.dialogRef = dialogRef;
        this.productionService = productionService;
        this.infoPopup = infoPopup;
        this.route = route;
        this.router = router;
        this.pl = {
          firstDayOfWeek: 1,
          dayNames: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"],
          dayNamesShort: ["Niedz", "Pon", "Wt", "Śr", "Czw", "Pt", "Sob"],
          dayNamesMin: ["Ni", "Po", "Wt", "Śr", "Cz", "Pt", "So"],
          monthNames: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
          monthNamesShort: ["Sty", "Lut", "Mar", "Kwi", "Maj", "Cze", "Lip", "Sie", "Wrz", "Paź", "Lis", "Gru"],
          today: 'Dziś',
          clear: 'Wyczyść',
          dateFormat: 'dd-mm-yy',
          weekHeader: 'Wk'
        };
        this.color = 'warn';
      }

      _createClass2(ProductionOrderFormComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.formProductionOrder = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            numberClientOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](''),
            dateAcceptanceOrder: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](new Date()),
            myCompany: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', {
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            }),
            client: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]('', {
              validators: [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
            })
          });
          this.productionService.loadDataToService();
        }
      }, {
        key: "onNoClick",
        value: function onNoClick() {
          this.dialogRef.close();
        }
      }, {
        key: "onAddProductionOrder",
        value: function onAddProductionOrder() {
          var _this66 = this;

          this.productionService.addProductionOrder(this.formProductionOrder.value).subscribe({
            next: function next(res) {
              _this66.router.navigate(['../produkcja/zlecenie/', res.orderNumber], {
                relativeTo: _this66.route
              });

              _this66.infoPopup.showSuccessAdd("zlecenie");

              _this66.dialogRef.close();
            },
            error: function error(err) {
              _this66.infoPopup.showErrorAdd("zlecenie");
            },
            complete: function complete() {}
          });
        }
      }]);

      return ProductionOrderFormComponent;
    }();

    ProductionOrderFormComponent.ctorParameters = function () {
      return [{
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__["MatDialogRef"]
      }, {
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_5__["ProductionServiceService"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_4__["InfoPopupComponent"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }];
    };

    ProductionOrderFormComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-production-order-form',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./production-order-form.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/form/production-order-form/production-order-form.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./production-order-form.component.scss */
      "./src/app/production/form/production-order-form/production-order-form.component.scss"))["default"]]
    })], ProductionOrderFormComponent);
    /***/
  },

  /***/
  "./src/app/production/order-details/order-details.component.scss":
  /*!***********************************************************************!*\
    !*** ./src/app/production/order-details/order-details.component.scss ***!
    \***********************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionOrderDetailsOrderDetailsComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = ".icon-order-detail {\n  font-size: 4.5rem;\n  padding-top: 0.25rem !important;\n  height: unset;\n  width: unset;\n}\n\n.card {\n  margin-bottom: 0;\n}\n\n.dates-icon {\n  margin: 0 auto;\n}\n\n.h-small-box {\n  min-height: 90px;\n  margin: 5px;\n  padding: 0;\n  min-width: 230px;\n}\n\n.card-shadow {\n  box-shadow: 0 2px 3px 0 rgba(0, 0, 0, 0.15);\n}\n\n.h-big-box {\n  height: 180px;\n  margin: 5px;\n  padding: 0;\n  min-width: 380px;\n}\n\n.text-top-smallbox {\n  text-align: right;\n  font-size: 14px;\n  padding: 0;\n  padding-right: 0.8rem;\n  margin: 0;\n}\n\n.text-middle-dates {\n  text-align: center;\n  font-size: 14px;\n  padding: 0;\n  padding-right: 0.8rem;\n  margin: 0;\n  padding: 0.4em 0;\n}\n\n.text-bottom-dates {\n  text-align: center;\n  padding-right: 0.8rem;\n  margin: 0;\n}\n\n.text-bottom-smallbox {\n  text-align: right;\n  padding-right: 0.8rem;\n  margin: 0;\n  font-size: 1.7rem;\n}\n\n.text-status-smallbox {\n  margin: 0 auto;\n  padding: 0;\n}\n\n.card-body-menu {\n  padding: 0.5rem;\n}\n\n.positionSides td {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n}\n\n.positionDim td,\n.positionUse td {\n  padding: 0;\n  margin: 0;\n  text-align: center;\n  width: 50px;\n  max-width: 50px;\n}\n\n.col70 {\n  max-width: 70px;\n  width: 70px;\n}\n\n.col50 {\n  max-width: 50px;\n  width: 50px;\n}\n\n.col200 {\n  max-width: 200px;\n  width: 200px;\n}\n\n.col150 {\n  max-width: 150px;\n  width: 150px;\n}\n\n.col120 {\n  max-width: 120px;\n  width: 120px;\n}\n\n.pSide {\n  display: none;\n}\n\n.pSide th,\n.pSideDim th {\n  border: 0;\n  border-left: 1px solid #c8c8c8;\n  border-bottom: 1px solid #c8c8c8;\n}\n\n.pSide th:first-child,\n.pSideDim th:first-child {\n  border-left: 0;\n}\n\n.positionSides td:first-child,\n.positionDim td:first-child {\n  border-left: 0;\n}\n\n.positionSides td,\n.positionDim td {\n  border: 0;\n  border-left: 1px solid #c8c8c8;\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionDim td {\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionSides:first-child td {\n  border-top: 0;\n}\n\n.positionSides:first-child .positionDim {\n  border-top: 1px solid #c8c8c8;\n}\n\n.positionSides:first-child .positionDim:first-child {\n  border-top: 0;\n}\n\n.pSideDim {\n  display: none;\n}\n\n.pOrder {\n  border-top: 2px solid #afafaf;\n}\n\n.pOrder:first-child {\n  border-top: 1px solid #c8c8c8;\n}\n\n.pOrder:nth-child(1) .pSide {\n  display: table-row;\n}\n\n.pOrder:nth-child(1) .positionSides:nth-child(1) .pSideDim:nth-child(1) {\n  display: table-row;\n}\n\n.positionSides {\n  border-top: 2px solid #c8c8c8;\n}\n\n.positionSides:first-child {\n  border-top: 0px;\n}\n\n.positionDim:first-child td {\n  border-top: 0;\n}\n\n.isPrinting {\n  display: none;\n}\n\n.hide-progress-bar {\n  -webkit-animation: fadeOut 4s;\n          animation: fadeOut 4s;\n  visibility: hidden;\n}\n\n@-webkit-keyframes fadeOut {\n  0% {\n    visibility: visible;\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n\n@keyframes fadeOut {\n  0% {\n    visibility: visible;\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n/*# sourceMappingURL=data:application/json;base64, */";
    /***/
  },

  /***/
  "./src/app/production/order-details/order-details.component.ts":
  /*!*********************************************************************!*\
    !*** ./src/app/production/order-details/order-details.component.ts ***!
    \*********************************************************************/

  /*! exports provided: OrderResolver, OrderDetailsComponent */

  /***/
  function srcAppProductionOrderDetailsOrderDetailsComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OrderResolver", function () {
      return OrderResolver;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OrderDetailsComponent", function () {
      return OrderDetailsComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _angular_animations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! @angular/animations */
    "./node_modules/@angular/animations/fesm2015/animations.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _form_production_order_form_update_production_order_form_update_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../form/production-order-form-update/production-order-form-update.component */
    "./src/app/production/form/production-order-form-update/production-order-form-update.component.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../form/order-position-form/order-position-form.component */
    "./src/app/production/form/order-position-form/order-position-form.component.ts");
    /* harmony import */


    var primeng_api__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! primeng/api */
    "./node_modules/primeng/fesm2015/primeng-api.js");
    /* harmony import */


    var _form_order_position_form_update_order_position_form_update_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../form/order-position-form-update/order-position-form-update.component */
    "./src/app/production/form/order-position-form-update/order-position-form-update.component.ts");
    /* harmony import */


    var src_app_print_print_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! src/app/print/print.service */
    "./src/app/print/print.service.ts");

    4;

    var OrderResolver = /*#__PURE__*/function () {
      function OrderResolver(productionService) {
        _classCallCheck2(this, OrderResolver);

        this.productionService = productionService;
      }

      _createClass2(OrderResolver, [{
        key: "resolve",
        value: function resolve(route, state) {
          console.log("Resolve Order with id: " + route.paramMap.get('id'));
          return this.productionService.getProductionOrder(route.paramMap.get('id'));
        }
      }]);

      return OrderResolver;
    }();

    OrderResolver.ctorParameters = function () {
      return [{
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }];
    };

    OrderResolver = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])()], OrderResolver);

    var OrderDetailsComponent = /*#__PURE__*/function () {
      function OrderDetailsComponent(route, location, dialog, infoPopup, productionService, cookieService, confirmationService, printService, router) {
        _classCallCheck2(this, OrderDetailsComponent);

        this.route = route;
        this.location = location;
        this.dialog = dialog;
        this.infoPopup = infoPopup;
        this.productionService = productionService;
        this.cookieService = cookieService;
        this.confirmationService = confirmationService;
        this.printService = printService;
        this.router = router;
        this.loading = new rxjs__WEBPACK_IMPORTED_MODULE_6__["BehaviorSubject"](false);
        this.length = 3;
        this.rowSideLength = 2;
        this.deleteOrderIf = new rxjs__WEBPACK_IMPORTED_MODULE_6__["BehaviorSubject"](false);
        this.printDialog = false;
        this.printColumnPosition = [{
          field: 'numberFv',
          label: 'Numer faktury',
          show: true
        }, {
          field: 'accepted',
          label: 'Zaakceptowana',
          show: true
        }, {
          field: 'statusOrderPosition',
          label: 'Status',
          show: true
        }, {
          field: 'completed',
          label: 'Zakończono',
          show: true
        }, {
          field: 'dateCompletedPosition',
          label: 'Data Zakończenia',
          show: true
        }, {
          field: 'warranty',
          label: 'Gwarancja',
          show: true
        }, {
          field: 'comment',
          label: 'Uwagi',
          show: true
        }];
        this.printColumnSide = [{
          field: 'usedFilm',
          label: 'Zużycie',
          show: true
        }, {
          field: 'plnMb',
          label: 'pln/mb',
          show: true
        }, {
          field: 'costSet6Mb',
          label: 'kpl.6',
          show: true
        }, {
          field: 'costSetup',
          label: 'Ustawienie',
          show: true
        }, {
          field: 'colorChange',
          label: 'Zmiana koloru',
          show: true
        }, {
          field: 'employees',
          label: 'Pracownicy',
          show: true
        }, {
          field: 'glue',
          label: 'Klej',
          show: true
        }, {
          field: 'statusOrderPosition',
          label: 'Status',
          show: true
        }];
        this.columns = [{
          field: 'numberFv',
          label: 'Numer faktury',
          show: true
        }, {
          field: 'accepted',
          label: 'Zaakceptowana',
          show: true
        }, {
          field: 'statusOrderPosition',
          label: 'Status',
          show: true
        }, {
          field: 'completed',
          label: 'Zakończono',
          show: true
        }, {
          field: 'dateCompletedPosition',
          label: 'Data Zakończenia',
          show: true
        }, {
          field: 'warranty',
          label: 'Gwarancja',
          show: true
        }, {
          field: 'comment',
          label: 'Uwagi',
          show: true
        }];
        this.sideColumns = [{
          field: 'usedFilm',
          label: 'Zużycie',
          show: true
        }, {
          field: 'plnMb',
          label: 'pln/mb',
          show: true
        }, {
          field: 'costSet6Mb',
          label: 'kpl.6',
          show: true
        }, {
          field: 'costSetup',
          label: 'Ustawienie',
          show: true
        }, {
          field: 'colorChange',
          label: 'Zmiana koloru',
          show: true
        }, {
          field: 'employees',
          label: 'Pracownicy',
          show: true
        }, {
          field: 'glue',
          label: 'Klej',
          show: true
        }, {
          field: 'statusOrderPosition',
          label: 'Status',
          show: true
        }];
      }

      _createClass2(OrderDetailsComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this67 = this;

          this.productionService.loadCatalogSuggestions();
          this.productionService.loadFilmSuggestions();
          this.productionService.loadAllSystems();
          this.loading.next(true);
          this.orderNumber = this.route.snapshot.params['id'];
          this.route.data.subscribe({
            next: function next(res) {
              _this67.productionOrder = res.order;

              _this67.checkStatus();
            },
            error: function error(err) {
              console.log(err);

              _this67.infoPopup.showErrorDownload("zlecenia");
            },
            complete: function complete() {}
          });
          this.productionService.getOrderPositions(this.orderNumber).subscribe({
            next: function next(res) {
              _this67.orderPosition = [];
              _this67.orderPosition = res;
            },
            error: function error(err) {
              console.log(err);

              _this67.infoPopup.showErrorDownload("pozycji zlecenia");
            },
            complete: function complete() {
              _this67.loading.next(false);
            }
          }); // ============== SETTING COOKIES SELECTED COLUMNS =============

          if (!this.cookieService.check('pOrderColumns')) {
            this.cookieService.set('pOrderColumns', JSON.stringify(this.columns));
            this._selectedColumns = this.columns;
          } else {
            this.columns = JSON.parse(this.cookieService.get('pOrderColumns'));
            this._selectedColumns = this.columns.filter(function (col) {
              return col.show == true;
            });
          } // Side


          if (!this.cookieService.check('pSideColumns')) {
            this.cookieService.set('pSideColumns', JSON.stringify(this.sideColumns));
            this._sideSelectedColumns = this.sideColumns;
          } else {
            this.sideColumns = JSON.parse(this.cookieService.get('pSideColumns'));
            this._sideSelectedColumns = this.sideColumns.filter(function (col) {
              return col.show == true;
            });
          }

          this.length = 5 + this._selectedColumns.length + this._sideSelectedColumns.length; // ============== SETTING COOKIES PRINT COLUMNS =============

          if (!this.cookieService.check('printPositionColumns')) {
            console.log("set cookie position");
            this.cookieService.set('printPositionColumns', JSON.stringify(this.printColumnPosition));
          } else {
            this.printColumnPosition = JSON.parse(this.cookieService.get('printPositionColumns'));
          } // Side


          if (!this.cookieService.check('printSideColumns')) {
            console.log("set cookie side");
            this.cookieService.set('printSideColumns', JSON.stringify(this.printColumnSide));
          } else {
            this.printColumnSide = JSON.parse(this.cookieService.get('printSideColumns'));
          } //=====================


          this.positionMenuItems = [{
            label: 'Aktualizacja',
            icon: 'pi pi-cog',
            disabled: !this.deleteOrderIf.getValue(),
            command: function command(event) {
              return _this67.showDialogToUpdateOrderPosition(_this67.selectedPosition);
            }
          }, {
            label: 'Usuń pozycję',
            icon: 'pi pi-times',
            disabled: !this.deleteOrderIf.getValue(),
            command: function command(event) {
              return _this67.confirmDeletePosition(_this67.selectedPosition);
            }
          }];
        } // Init end

      }, {
        key: "printDialgOptions",
        value: function printDialgOptions() {
          this.printDialog = true;
          console.log("Drukowanie wybór");
        }
      }, {
        key: "printDialogExit",
        value: function printDialogExit() {
          this.printDialog = false;
        }
      }, {
        key: "printOrder",
        value: function printOrder() {
          this.cookieService.set('printPositionColumns', JSON.stringify(this.printColumnPosition));
          this.cookieService.set('printSideColumns', JSON.stringify(this.printColumnSide));
          this.printDialogExit();
          this.printService.printDocument('production-order', this.orderNumber);
          console.log(this.printService.isPrinting);
        }
      }, {
        key: "checkStatus",
        value: function checkStatus() {
          if (this.productionOrder.statusOrder == _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["StatusOrder"].NOWE) {
            this.deleteOrderIf.next(true);
          } else {
            this.deleteOrderIf.next(false);
          }
        }
      }, {
        key: "yesNo",
        value: function yesNo(or) {
          return or ? "TAK" : "NIE";
        }
      }, {
        key: "checkShow",
        value: function checkShow(sw) {
          return this.columns.find(function (e) {
            return e.field === sw;
          }).show;
        }
      }, {
        key: "checkShowSide",
        value: function checkShowSide(sw) {
          return this.sideColumns.find(function (e) {
            return e.field === sw;
          }).show;
        } // ============== COOKIES SELECTED COLUMNS =============

      }, {
        key: "loadData",
        // ======================================================
        value: function loadData() {
          var _this68 = this;

          this.productionService.getProductionOrder(this.orderNumber).subscribe({
            next: function next(res) {
              _this68.productionOrder = res;

              _this68.checkStatus();
            },
            error: function error(err) {
              console.log(err);

              _this68.infoPopup.showErrorDownload("zlecenia");
            },
            complete: function complete() {}
          });
          this.productionService.getOrderPositions(this.orderNumber).subscribe({
            next: function next(res) {
              _this68.orderPosition = [];
              _this68.orderPosition = res;
            },
            error: function error(err) {
              console.log(err);

              _this68.infoPopup.showErrorDownload("pozycji zlecenia");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "confirmDeletePosition",
        value: function confirmDeletePosition(poz) {
          var _this69 = this;

          console.log(poz);
          this.confirmationService.confirm({
            message: 'Na pewno chcesz usunąć pozycję kształtownika: ' + poz.profilNumber + ' ?',
            header: 'Potwierdzenie',
            acceptLabel: 'Tak',
            rejectLabel: 'Nie',
            accept: function accept() {
              _this69.productionService.deleteOrderPositions(poz.productionOrder.orderNumber, poz.id).subscribe({
                next: function next(res) {
                  _this69.infoPopup.showSuccessDelete("pozycję");
                },
                error: function error(err) {
                  _this69.infoPopup.showErrorDelete("pozycję");
                },
                complete: function complete() {
                  _this69.loadData();
                }
              });
            }
          });
        }
      }, {
        key: "confirmDeleteOrder",
        value: function confirmDeleteOrder(orderid) {
          var _this70 = this;

          console.log(orderid);
          this.confirmationService.confirm({
            message: 'Na pewno chcesz usunąć zlecenie: ' + orderid + ' ?',
            header: 'Potwierdzenie',
            acceptLabel: 'Tak',
            rejectLabel: 'Nie',
            accept: function accept() {
              _this70.productionService.deleteProductionOrder(orderid).subscribe({
                next: function next(res) {
                  _this70.infoPopup.showSuccessDelete("zlecenie");

                  _this70.backClicked();
                },
                error: function error(err) {
                  _this70.infoPopup.showErrorDelete("zlecenie");
                },
                complete: function complete() {}
              });
            }
          });
        }
      }, {
        key: "showDialogToUpdateOrder",
        value: function showDialogToUpdateOrder(orderData) {
          var _this71 = this;

          var dialogRef = this.dialog.open(_form_production_order_form_update_production_order_form_update_component__WEBPACK_IMPORTED_MODULE_9__["ProductionOrderFormUpdateComponent"], {
            minWidth: '700px',
            data: orderData,
            panelClass: 'no-padding-dialog'
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this71.loadData();

            console.log('The dialog update production order was closed');
          });
        }
      }, {
        key: "showDialogToAddOrderPosition",
        value: function showDialogToAddOrderPosition() {
          var _this72 = this;

          var dialogRef = this.dialog.open(_form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_11__["OrderPositionFormComponent"], {
            panelClass: 'no-padding-dialog',
            data: this.orderNumber
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this72.loadData();

            console.log('The dialog add production order was closed');
          });
        }
      }, {
        key: "showDialogToUpdateOrderPosition",
        value: function showDialogToUpdateOrderPosition(position) {
          var _this73 = this;

          var dialogRef = this.dialog.open(_form_order_position_form_update_order_position_form_update_component__WEBPACK_IMPORTED_MODULE_13__["OrderPositionFormUpdateComponent"], {
            panelClass: 'no-padding-dialog',
            data: position
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this73.loadData();

            console.log('The dialog add production order was closed');
          });
        }
      }, {
        key: "backClicked",
        value: function backClicked() {
          this.router.navigateByUrl('/produkcja');
        }
      }, {
        key: "reOrder",
        value: function reOrder(e) {
          this.orderPosition.forEach(function (x, index) {
            return x.positionNumber = index + 1;
          });
          var map = new Map();
          this.orderPosition.forEach(function (x) {
            var key = x.id;
            var value = x.positionNumber;
            map.set(key, value);
          });
          var convMap = {};
          map.forEach(function (val, key) {
            convMap[key] = val;
          });
          this.productionService.reOrderPositions(convMap).subscribe({
            next: function next(res) {
              return console.log(res);
            },
            error: function error(err) {
              return console.log(err);
            }
          });
        }
      }, {
        key: "selectedColumns",
        get: function get() {
          return this._selectedColumns;
        },
        set: function set(val) {
          this.columns.filter(function (col) {
            return val.includes(col);
          }).map(function (x) {
            return x.show = true;
          });
          this.columns.filter(function (col) {
            return !val.includes(col);
          }).map(function (x) {
            return x.show = false;
          });
          this.cookieService.set('pOrderColumns', JSON.stringify(this.columns));
          this._selectedColumns = this.columns.filter(function (col) {
            return val.includes(col);
          });
          this.length = 5 + this._selectedColumns.length + this._sideSelectedColumns.length;
        } // SIDE

      }, {
        key: "sideSelectedColumns",
        get: function get() {
          return this._sideSelectedColumns;
        },
        set: function set(val) {
          this.sideColumns.filter(function (col) {
            return val.includes(col);
          }).map(function (x) {
            return x.show = true;
          });
          this.sideColumns.filter(function (col) {
            return !val.includes(col);
          }).map(function (x) {
            return x.show = false;
          });
          this.cookieService.set('pSideColumns', JSON.stringify(this.sideColumns));
          this._sideSelectedColumns = this.sideColumns.filter(function (col) {
            return val.includes(col);
          });
          this.length = 5 + this._selectedColumns.length + this._sideSelectedColumns.length;
        }
      }]);

      return OrderDetailsComponent;
    }();

    OrderDetailsComponent.ctorParameters = function () {
      return [{
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"]
      }, {
        type: _angular_common__WEBPACK_IMPORTED_MODULE_3__["Location"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_5__["InfoPopupComponent"]
      }, {
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_4__["ProductionServiceService"]
      }, {
        type: ngx_cookie_service__WEBPACK_IMPORTED_MODULE_8__["CookieService"]
      }, {
        type: primeng_api__WEBPACK_IMPORTED_MODULE_12__["ConfirmationService"]
      }, {
        type: src_app_print_print_service__WEBPACK_IMPORTED_MODULE_14__["PrintService"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"]
      }];
    };

    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], OrderDetailsComponent.prototype, "selectedColumns", null);
    tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])()], OrderDetailsComponent.prototype, "sideSelectedColumns", null);
    OrderDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-order-details',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./order-details.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/order-details/order-details.component.html"))["default"],
      animations: [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["trigger"])('rowExpansionTrigger', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["style"])({
        transform: 'translateX(-10%)',
        opacity: 0
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["state"])('active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["style"])({
        transform: 'translateX(0)',
        opacity: 1
      })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["transition"])('* <=> *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_7__["animate"])('400ms cubic-bezier(0.86, 0, 0.07, 1)'))])],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./order-details.component.scss */
      "./src/app/production/order-details/order-details.component.scss"))["default"]]
    })], OrderDetailsComponent);
    /***/
  },

  /***/
  "./src/app/production/production-main/production-main.component.scss":
  /*!***************************************************************************!*\
    !*** ./src/app/production/production-main/production-main.component.scss ***!
    \***************************************************************************/

  /*! exports provided: default */

  /***/
  function srcAppProductionProductionMainProductionMainComponentScss(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony default export */


    __webpack_exports__["default"] = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3Rpb24vcHJvZHVjdGlvbi1tYWluL3Byb2R1Y3Rpb24tbWFpbi5jb21wb25lbnQuc2NzcyJ9 */";
    /***/
  },

  /***/
  "./src/app/production/production-main/production-main.component.ts":
  /*!*************************************************************************!*\
    !*** ./src/app/production/production-main/production-main.component.ts ***!
    \*************************************************************************/

  /*! exports provided: ProductionMainComponent */

  /***/
  function srcAppProductionProductionMainProductionMainComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionMainComponent", function () {
      return ProductionMainComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../production-service/production-service.service */
    "./src/app/production/production-service/production-service.service.ts");
    /* harmony import */


    var src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/info-popup/info-popup.component */
    "./src/app/info-popup/info-popup.component.ts");
    /* harmony import */


    var _form_production_order_form_production_order_form_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../form/production-order-form/production-order-form.component */
    "./src/app/production/form/production-order-form/production-order-form.component.ts");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");

    var ProductionMainComponent = /*#__PURE__*/function () {
      function ProductionMainComponent(productionService, infoPopup, dialog, route, router) {
        _classCallCheck2(this, ProductionMainComponent);

        this.productionService = productionService;
        this.infoPopup = infoPopup;
        this.dialog = dialog;
        this.route = route;
        this.router = router;
        this.optionsSort = [];
      }

      _createClass2(ProductionMainComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          this.optionsSort = [{
            label: "WSZYSTKIE",
            value: '-1'
          }, {
            label: "NOWE",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].NOWE
          }, {
            label: "REALIZACJA",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].REALIZACJA
          }, {
            label: "ZAKONCZONE",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].ZAKONCZONE
          }, {
            label: "WYDANE",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].WYDANE
          }, {
            label: "ARCHIWUM",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].ARCHIWUM
          }, {
            label: "ANULOWANO",
            value: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["StatusOrder"].ANULOWANO
          }];
          this.loadData();
        }
      }, {
        key: "loadData",
        value: function loadData() {
          var _this74 = this;

          this.productionService.getCountProductionOrders().subscribe({
            next: function next(res) {
              _this74.ordersCount = res;
            },
            error: function error(err) {
              _this74.ordersCount = 0;

              _this74.infoPopup.showErrorDownload("ilości zleceń");
            },
            complete: function complete() {}
          });
          this.productionService.getProductionOrders().subscribe({
            next: function next(res) {
              _this74.allOrders = [];
              _this74.allOrders = res;
            },
            error: function error(err) {
              _this74.infoPopup.showErrorDownload("zleceń");
            },
            complete: function complete() {}
          });
          this.productionService.loadDataToService();
        }
      }, {
        key: "showDialogToAddOrder",
        value: function showDialogToAddOrder() {
          var _this75 = this;

          var dialogRef = this.dialog.open(_form_production_order_form_production_order_form_component__WEBPACK_IMPORTED_MODULE_4__["ProductionOrderFormComponent"], {
            width: '450px',
            panelClass: 'no-padding-dialog'
          });
          dialogRef.afterClosed().subscribe(function (result) {
            _this75.loadData();

            console.log('The dialog add production order was closed');
          });
        }
      }, {
        key: "loadByStatus",
        value: function loadByStatus(value) {
          var _this76 = this;

          if (value != '-1') {
            this.productionService.getProductionOrdersByStatus(value).subscribe({
              next: function next(res) {
                _this76.allOrders = [];
                _this76.allOrders = res;
              },
              error: function error(err) {
                _this76.infoPopup.showErrorDownload("zleceń");
              },
              complete: function complete() {}
            });
          } else {
            this.loadData();
          }
        } // SORT FUNCTION

      }, {
        key: "customSort",
        value: function customSort(event) {
          event.data.sort(function (data1, data2) {
            var value1 = data1[event.field];
            var value2 = data2[event.field];
            var result = null;
            var result2 = null;
            if (value1 == null && value2 != null) result = -1;else if (value1 != null && value2 == null) result = 1;else if (value1 == null && value2 == null) result = 0;else if (typeof value1 === 'string' && typeof value2 === 'string' && event.field != "orderNumber") result = value1.localeCompare(value2);else if (event.field == "orderNumber") {
              if (Math.abs(value1.substring(value1.length - 4)) < Math.abs(value2.substring(value2.length - 4))) return event.order * -1;
              if (Math.abs(value1.substring(value1.length - 4)) > Math.abs(value2.substring(value2.length - 4))) return event.order * 1;
              if (Math.abs(value1.substring(0, value1.length - 4)) < Math.abs(value2.substring(0, value2.length - 4))) return event.order * -1;
              if (Math.abs(value1.substring(0, value1.length - 4)) > Math.abs(value2.substring(0, value2.length - 4))) return event.order * 1;
            } else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;
            return event.order * result;
          });
        }
      }]);

      return ProductionMainComponent;
    }();

    ProductionMainComponent.ctorParameters = function () {
      return [{
        type: _production_service_production_service_service__WEBPACK_IMPORTED_MODULE_2__["ProductionServiceService"]
      }, {
        type: src_app_info_popup_info_popup_component__WEBPACK_IMPORTED_MODULE_3__["InfoPopupComponent"]
      }, {
        type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__["MatDialog"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["ActivatedRoute"]
      }, {
        type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
      }];
    };

    ProductionMainComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
      selector: 'app-production-main',
      template: tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! raw-loader!./production-main.component.html */
      "./node_modules/raw-loader/dist/cjs.js!./src/app/production/production-main/production-main.component.html"))["default"],
      styles: [tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"](__webpack_require__(
      /*! ./production-main.component.scss */
      "./src/app/production/production-main/production-main.component.scss"))["default"]]
    })], ProductionMainComponent);
    /***/
  },

  /***/
  "./src/app/production/production-routing.module.ts":
  /*!*********************************************************!*\
    !*** ./src/app/production/production-routing.module.ts ***!
    \*********************************************************/

  /*! exports provided: ProductionRoutingModule */

  /***/
  function srcAppProductionProductionRoutingModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionRoutingModule", function () {
      return ProductionRoutingModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/router */
    "./node_modules/@angular/router/fesm2015/router.js");
    /* harmony import */


    var _production_main_production_main_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./production-main/production-main.component */
    "./src/app/production/production-main/production-main.component.ts");
    /* harmony import */


    var _order_details_order_details_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./order-details/order-details.component */
    "./src/app/production/order-details/order-details.component.ts");
    /* harmony import */


    var _print_print_layout_print_layout_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../print/print-layout/print-layout.component */
    "./src/app/print/print-layout/print-layout.component.ts");
    /* harmony import */


    var _print_print_production_order_print_production_order_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../print/print-production-order/print-production-order.component */
    "./src/app/print/print-production-order/print-production-order.component.ts");

    var routes = [{
      path: '',
      component: _production_main_production_main_component__WEBPACK_IMPORTED_MODULE_3__["ProductionMainComponent"]
    }, {
      path: 'zlecenie/:id',
      component: _order_details_order_details_component__WEBPACK_IMPORTED_MODULE_4__["OrderDetailsComponent"],
      resolve: {
        order: _order_details_order_details_component__WEBPACK_IMPORTED_MODULE_4__["OrderResolver"]
      },
      children: [{
        path: 'print',
        outlet: 'print',
        component: _print_print_layout_print_layout_component__WEBPACK_IMPORTED_MODULE_5__["PrintLayoutComponent"],
        children: [{
          path: 'production-order/:idOrder',
          component: _print_print_production_order_print_production_order_component__WEBPACK_IMPORTED_MODULE_6__["PrintProductionOrderComponent"]
        }]
      }]
    }];

    var ProductionRoutingModule = function ProductionRoutingModule() {
      _classCallCheck2(this, ProductionRoutingModule);
    };

    ProductionRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
      exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
      providers: [_order_details_order_details_component__WEBPACK_IMPORTED_MODULE_4__["OrderResolver"]]
    })], ProductionRoutingModule);
    /***/
  },

  /***/
  "./src/app/production/production-service/production-service.service.ts":
  /*!*****************************************************************************!*\
    !*** ./src/app/production/production-service/production-service.service.ts ***!
    \*****************************************************************************/

  /*! exports provided: StatusOrder, ProductionServiceService */

  /***/
  function srcAppProductionProductionServiceProductionServiceServiceTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StatusOrder", function () {
      return StatusOrder;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionServiceService", function () {
      return ProductionServiceService;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common/http */
    "./node_modules/@angular/common/fesm2015/http.js");
    /* harmony import */


    var src_app_films_film_service_films_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! src/app/films/film-service/films.service */
    "./src/app/films/film-service/films.service.ts");
    /* harmony import */


    var src_app_catalog_catalog_service_catalog_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! src/app/catalog/catalog-service/catalog.service */
    "./src/app/catalog/catalog-service/catalog.service.ts");

    var StatusOrder;

    (function (StatusOrder) {
      StatusOrder["NOWE"] = "NOWE";
      StatusOrder["REALIZACJA"] = "REALIZACJA";
      StatusOrder["ZAKONCZONE"] = "ZAKONCZONE";
      StatusOrder["WYDANE"] = "WYDANE";
      StatusOrder["ARCHIWUM"] = "ARCHIWUM";
      StatusOrder["ANULOWANO"] = "ANULOWANO";
    })(StatusOrder || (StatusOrder = {}));

    var ProductionServiceService = /*#__PURE__*/function () {
      function ProductionServiceService(http, filmService, catalogService) {
        _classCallCheck2(this, ProductionServiceService);

        this.http = http;
        this.filmService = filmService;
        this.catalogService = catalogService;
        this.myCompanyData = [];
        this.clientData = [];
        this.loadingDataValue = 0;
      }

      _createClass2(ProductionServiceService, [{
        key: "getProductionOrders",
        value: function getProductionOrders() {
          return this.http.get("api/production/orders");
        }
      }, {
        key: "getProductionOrder",
        value: function getProductionOrder(id) {
          return this.http.get("api/production/order/" + id);
        }
      }, {
        key: "addProductionOrder",
        value: function addProductionOrder(data) {
          return this.http.post("api/production/order", data);
        }
      }, {
        key: "updateProductionOrder",
        value: function updateProductionOrder(id, data) {
          return this.http.put("api/production/order/" + id, data, {
            responseType: 'text'
          });
        }
      }, {
        key: "deleteProductionOrder",
        value: function deleteProductionOrder(id) {
          return this.http["delete"]("api/production/order/" + id, {
            responseType: 'text'
          });
        }
      }, {
        key: "getProductionOrdersByStatus",
        value: function getProductionOrdersByStatus(sort) {
          return this.http.get("api/production/ordersBy?status=" + sort);
        }
      }, {
        key: "getProductionOrdersNew",
        value: function getProductionOrdersNew() {
          return this.http.get("api/production/orders/new");
        }
      }, {
        key: "getProductionOrdersInProgress",
        value: function getProductionOrdersInProgress() {
          return this.http.get("api/production/orders/inprogress");
        }
      }, {
        key: "getProductionOrdersDone",
        value: function getProductionOrdersDone() {
          return this.http.get("api/production/orders/done");
        }
      }, {
        key: "getProductionOrdersOut",
        value: function getProductionOrdersOut() {
          return this.http.get("api/production/orders/out");
        }
      }, {
        key: "getCountProductionOrders",
        value: function getCountProductionOrders() {
          return this.http.get("api/production/order/count");
        } //==========================================

      }, {
        key: "getAllOrdersPositions",
        value: function getAllOrdersPositions() {
          return this.http.get("api//production/orders/positions");
        }
      }, {
        key: "getOrderPositions",
        value: function getOrderPositions(idOrder) {
          return this.http.get("api/production/order/" + idOrder + "/positions");
        }
      }, {
        key: "getOrderPosition",
        value: function getOrderPosition(idOrder, idPosition) {
          return this.http.get("api/production/order/" + idOrder + "/position/" + idPosition);
        }
      }, {
        key: "addOrderPositions",
        value: function addOrderPositions(idOrder, data) {
          return this.http.post("api/production/order/" + idOrder + "/position", data);
        }
      }, {
        key: "updateOrderPositions",
        value: function updateOrderPositions(idOrder, idPosition, data) {
          return this.http.put("api/production/order/" + idOrder + "/position/" + idPosition, data, {
            responseType: 'text'
          });
        }
      }, {
        key: "deleteOrderPositions",
        value: function deleteOrderPositions(idOrder, idPosition) {
          return this.http["delete"]("api/production/order/" + idOrder + "/position/" + idPosition, {
            responseType: 'text'
          });
        }
      }, {
        key: "reOrderPositions",
        value: function reOrderPositions(map) {
          return this.http.patch("api/production/order/position/reorder", map, {
            responseType: 'text'
          });
        } //--------------------

      }, {
        key: "getMyCompaniesSub",
        value: function getMyCompaniesSub() {
          return this.http.get("api/mycompanies");
        }
      }, {
        key: "getClientsSub",
        value: function getClientsSub() {
          return this.http.get("api/clients");
        } //GET SERVICE DATA

      }, {
        key: "loadAllSystems",
        value: function loadAllSystems() {
          var _this77 = this;

          if (this.loadingDataValue == 100) {
            this.loadingDataValue = 0;
          }

          var startFrom = new Date().getTime();
          console.log("LOADING -- SYSTEMS");
          this.catalogService.getSystems().subscribe({
            next: function next(res) {
              _this77.allSystems = res;
            },
            error: function error(err) {
              console.log(err);
            },
            complete: function complete() {
              _this77.loadingDataValue = _this77.loadingDataValue + 33;
              console.log("DONE -- SYSTEMS: ", new Date().getTime() - startFrom);
            }
          });
        }
      }, {
        key: "loadFilmSuggestions",
        value: function loadFilmSuggestions() {
          var _this78 = this;

          if (this.loadingDataValue == 100) {
            this.loadingDataValue = 0;
          }

          var startFrom = new Date().getTime();
          console.log("LOADING -- FILM SUGGESTIONS");
          this.filmService.getOklieny().subscribe({
            next: function next(res) {
              _this78.filmSuggestions = res;
            },
            error: function error(err) {
              console.log(err);
            },
            complete: function complete() {
              _this78.loadingDataValue = _this78.loadingDataValue + 33;
              console.log("DONE -- FILM SUGGESTIONS: ", new Date().getTime() - startFrom);
            }
          });
        }
      }, {
        key: "loadCatalogSuggestions",
        value: function loadCatalogSuggestions() {
          var _this79 = this;

          if (this.loadingDataValue == 100) {
            this.loadingDataValue = 0;
          }

          var startFrom = new Date().getTime();
          console.log("LOADING -- CATALOG SUGGESTIONS");
          this.catalogService.getCatalogs().subscribe({
            next: function next(res) {
              _this79.catalogSuggestions = res;
            },
            error: function error(err) {
              console.log(err);
            },
            complete: function complete() {
              _this79.loadingDataValue = _this79.loadingDataValue + 34;
              console.log("DONE -- CATALOG SUGGESTIONS: ", new Date().getTime() - startFrom);
            }
          });
        }
      }, {
        key: "loadDataToService",
        value: function loadDataToService() {
          console.log("loading data in service ...");
          this.getAllOrdersNew();
          this.getAllOrdersInProgress();
          this.getAllOrdersDone();
          this.getAllOrdersOut();
          this.getMyCompanies();
          this.getClients();
        }
      }, {
        key: "getAllOrdersNew",
        value: function getAllOrdersNew() {
          var _this80 = this;

          this.getProductionOrdersNew().subscribe({
            next: function next(res) {
              _this80.allOrdersNew = [];
              _this80.allOrdersNew = res;
            },
            error: function error(err) {
              console.error("Can`t download new");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "getAllOrdersInProgress",
        value: function getAllOrdersInProgress() {
          var _this81 = this;

          this.getProductionOrdersInProgress().subscribe({
            next: function next(res) {
              _this81.allOrdersInProgress = [];
              _this81.allOrdersInProgress = res;
            },
            error: function error(err) {
              console.error("Can`t download inprogress orders");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "getAllOrdersDone",
        value: function getAllOrdersDone() {
          var _this82 = this;

          this.getProductionOrdersDone().subscribe({
            next: function next(res) {
              _this82.allOrdersDone = [];
              _this82.allOrdersDone = res;
            },
            error: function error(err) {
              console.error("Can`t download done orders");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "getAllOrdersOut",
        value: function getAllOrdersOut() {
          var _this83 = this;

          this.getProductionOrdersOut().subscribe({
            next: function next(res) {
              _this83.allOrdersOut = [];
              _this83.allOrdersOut = res;
            },
            error: function error(err) {
              console.error("Can`t download out orders");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "getMyCompanies",
        value: function getMyCompanies() {
          var _this84 = this;

          this.myCompanyData = [];
          return this.http.get("api/mycompanies").subscribe({
            next: function next(res) {
              res.forEach(function (element) {
                var el = {
                  label: element.name,
                  value: element
                };

                _this84.myCompanyData.push(el);
              });
            },
            error: function error(err) {
              console.error("Can`t download myCompanies");
            },
            complete: function complete() {}
          });
        }
      }, {
        key: "getClients",
        value: function getClients() {
          var _this85 = this;

          this.clientData = [];
          return this.http.get("api/clients").subscribe({
            next: function next(res) {
              res.forEach(function (element) {
                var el = {
                  label: element.name,
                  value: element
                };

                _this85.clientData.push(el);
              });
            },
            error: function error(err) {
              console.error("Can`t download clients");
            },
            complete: function complete() {}
          });
        }
      }]);

      return ProductionServiceService;
    }();

    ProductionServiceService.ctorParameters = function () {
      return [{
        type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]
      }, {
        type: src_app_films_film_service_films_service__WEBPACK_IMPORTED_MODULE_3__["FilmsService"]
      }, {
        type: src_app_catalog_catalog_service_catalog_service__WEBPACK_IMPORTED_MODULE_4__["CatalogService"]
      }];
    };

    ProductionServiceService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
      providedIn: 'root'
    })], ProductionServiceService);
    /***/
  },

  /***/
  "./src/app/production/production.module.ts":
  /*!*************************************************!*\
    !*** ./src/app/production/production.module.ts ***!
    \*************************************************/

  /*! exports provided: ProductionModule */

  /***/
  function srcAppProductionProductionModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ProductionModule", function () {
      return ProductionModule;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/fesm2015/core.js");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/fesm2015/common.js");
    /* harmony import */


    var primeng_multiselect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! primeng/multiselect */
    "./node_modules/primeng/fesm2015/primeng-multiselect.js");
    /* harmony import */


    var _production_routing_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./production-routing.module */
    "./src/app/production/production-routing.module.ts");
    /* harmony import */


    var _production_main_production_main_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./production-main/production-main.component */
    "./src/app/production/production-main/production-main.component.ts");
    /* harmony import */


    var _angular_material_icon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! @angular/material/icon */
    "./node_modules/@angular/material/esm2015/icon.js");
    /* harmony import */


    var primeng_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! primeng/table */
    "./node_modules/primeng/fesm2015/primeng-table.js");
    /* harmony import */


    var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! @angular/forms */
    "./node_modules/@angular/forms/fesm2015/forms.js");
    /* harmony import */


    var primeng_dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! primeng/dropdown */
    "./node_modules/primeng/fesm2015/primeng-dropdown.js");
    /* harmony import */


    var primeng_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! primeng/button */
    "./node_modules/primeng/fesm2015/primeng-button.js");
    /* harmony import */


    var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! @angular/material/tooltip */
    "./node_modules/@angular/material/esm2015/tooltip.js");
    /* harmony import */


    var primeng_dialog__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! primeng/dialog */
    "./node_modules/primeng/fesm2015/primeng-dialog.js");
    /* harmony import */


    var primeng_fieldset__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! primeng/fieldset */
    "./node_modules/primeng/fesm2015/primeng-fieldset.js");
    /* harmony import */


    var primeng_codehighlighter__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! primeng/codehighlighter */
    "./node_modules/primeng/fesm2015/primeng-codehighlighter.js");
    /* harmony import */


    var primeng_tabview__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! primeng/tabview */
    "./node_modules/primeng/fesm2015/primeng-tabview.js");
    /* harmony import */


    var _order_details_order_details_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./order-details/order-details.component */
    "./src/app/production/order-details/order-details.component.ts");
    /* harmony import */


    var _angular_material_button__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! @angular/material/button */
    "./node_modules/@angular/material/esm2015/button.js");
    /* harmony import */


    var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! @angular/material/dialog */
    "./node_modules/@angular/material/esm2015/dialog.js");
    /* harmony import */


    var primeng_password__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! primeng/password */
    "./node_modules/primeng/fesm2015/primeng-password.js");
    /* harmony import */


    var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! @angular/material/slide-toggle */
    "./node_modules/@angular/material/esm2015/slide-toggle.js");
    /* harmony import */


    var _form_production_order_form_production_order_form_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./form/production-order-form/production-order-form.component */
    "./src/app/production/form/production-order-form/production-order-form.component.ts");
    /* harmony import */


    var _form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./form/order-position-form/order-position-form.component */
    "./src/app/production/form/order-position-form/order-position-form.component.ts");
    /* harmony import */


    var primeng_calendar__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! primeng/calendar */
    "./node_modules/primeng/fesm2015/primeng-calendar.js");
    /* harmony import */


    var ngx_cookie_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ngx-cookie-service */
    "./node_modules/ngx-cookie-service/fesm2015/ngx-cookie-service.js");
    /* harmony import */


    var _form_production_order_form_update_production_order_form_update_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./form/production-order-form-update/production-order-form-update.component */
    "./src/app/production/form/production-order-form-update/production-order-form-update.component.ts");
    /* harmony import */


    var primeng_editor__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! primeng/editor */
    "./node_modules/primeng/fesm2015/primeng-editor.js");
    /* harmony import */


    var primeng_treetable__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! primeng/treetable */
    "./node_modules/primeng/fesm2015/primeng-treetable.js");
    /* harmony import */


    var primeng_autocomplete__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! primeng/autocomplete */
    "./node_modules/primeng/fesm2015/primeng-autocomplete.js");
    /* harmony import */


    var _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! @angular/material/autocomplete */
    "./node_modules/@angular/material/esm2015/autocomplete.js");
    /* harmony import */


    var _form_order_position_form_update_order_position_form_update_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./form/order-position-form-update/order-position-form-update.component */
    "./src/app/production/form/order-position-form-update/order-position-form-update.component.ts");
    /* harmony import */


    var primeng_contextmenu__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! primeng/contextmenu */
    "./node_modules/primeng/fesm2015/primeng-contextmenu.js");
    /* harmony import */


    var _print_print_layout_print_layout_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ../print/print-layout/print-layout.component */
    "./src/app/print/print-layout/print-layout.component.ts");
    /* harmony import */


    var _print_print_production_order_print_production_order_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ../print/print-production-order/print-production-order.component */
    "./src/app/print/print-production-order/print-production-order.component.ts");
    /* harmony import */


    var _print_print_service__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ../print/print.service */
    "./src/app/print/print.service.ts");
    /* harmony import */


    var primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! primeng/confirmdialog */
    "./node_modules/primeng/fesm2015/primeng-confirmdialog.js");
    /* harmony import */


    var primeng_checkbox__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! primeng/checkbox */
    "./node_modules/primeng/fesm2015/primeng-checkbox.js");
    /* harmony import */


    var primeng_progressbar__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! primeng/progressbar */
    "./node_modules/primeng/fesm2015/primeng-progressbar.js");

    var ProductionModule = function ProductionModule() {
      _classCallCheck2(this, ProductionModule);
    };

    ProductionModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
      declarations: [_print_print_production_order_print_production_order_component__WEBPACK_IMPORTED_MODULE_33__["PrintProductionOrderComponent"], _print_print_layout_print_layout_component__WEBPACK_IMPORTED_MODULE_32__["PrintLayoutComponent"], _production_main_production_main_component__WEBPACK_IMPORTED_MODULE_5__["ProductionMainComponent"], _order_details_order_details_component__WEBPACK_IMPORTED_MODULE_16__["OrderDetailsComponent"], _form_production_order_form_production_order_form_component__WEBPACK_IMPORTED_MODULE_21__["ProductionOrderFormComponent"], _form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_22__["OrderPositionFormComponent"], _form_production_order_form_update_production_order_form_update_component__WEBPACK_IMPORTED_MODULE_25__["ProductionOrderFormUpdateComponent"], _form_order_position_form_update_order_position_form_update_component__WEBPACK_IMPORTED_MODULE_30__["OrderPositionFormUpdateComponent"]],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _production_routing_module__WEBPACK_IMPORTED_MODULE_4__["ProductionRoutingModule"], _angular_material_icon__WEBPACK_IMPORTED_MODULE_6__["MatIconModule"], primeng_table__WEBPACK_IMPORTED_MODULE_7__["TableModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormsModule"], primeng_dropdown__WEBPACK_IMPORTED_MODULE_9__["DropdownModule"], primeng_button__WEBPACK_IMPORTED_MODULE_10__["ButtonModule"], _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_11__["MatTooltipModule"], primeng_dialog__WEBPACK_IMPORTED_MODULE_12__["DialogModule"], primeng_fieldset__WEBPACK_IMPORTED_MODULE_13__["FieldsetModule"], primeng_codehighlighter__WEBPACK_IMPORTED_MODULE_14__["CodeHighlighterModule"], _angular_forms__WEBPACK_IMPORTED_MODULE_8__["ReactiveFormsModule"], primeng_tabview__WEBPACK_IMPORTED_MODULE_15__["TabViewModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_17__["MatButtonModule"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_18__["MatDialogModule"], primeng_password__WEBPACK_IMPORTED_MODULE_19__["PasswordModule"], _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_20__["MatSlideToggleModule"], primeng_calendar__WEBPACK_IMPORTED_MODULE_23__["CalendarModule"], primeng_multiselect__WEBPACK_IMPORTED_MODULE_3__["MultiSelectModule"], primeng_editor__WEBPACK_IMPORTED_MODULE_26__["EditorModule"], primeng_treetable__WEBPACK_IMPORTED_MODULE_27__["TreeTableModule"], primeng_autocomplete__WEBPACK_IMPORTED_MODULE_28__["AutoCompleteModule"], _angular_material_autocomplete__WEBPACK_IMPORTED_MODULE_29__["MatAutocompleteModule"], primeng_contextmenu__WEBPACK_IMPORTED_MODULE_31__["ContextMenuModule"], primeng_confirmdialog__WEBPACK_IMPORTED_MODULE_35__["ConfirmDialogModule"], primeng_checkbox__WEBPACK_IMPORTED_MODULE_36__["CheckboxModule"], primeng_progressbar__WEBPACK_IMPORTED_MODULE_37__["ProgressBarModule"]],
      entryComponents: [_form_production_order_form_production_order_form_component__WEBPACK_IMPORTED_MODULE_21__["ProductionOrderFormComponent"], _form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_22__["OrderPositionFormComponent"], _form_production_order_form_update_production_order_form_update_component__WEBPACK_IMPORTED_MODULE_25__["ProductionOrderFormUpdateComponent"], _form_order_position_form_order_position_form_component__WEBPACK_IMPORTED_MODULE_22__["OrderPositionFormComponent"], _form_order_position_form_update_order_position_form_update_component__WEBPACK_IMPORTED_MODULE_30__["OrderPositionFormUpdateComponent"]],
      providers: [ngx_cookie_service__WEBPACK_IMPORTED_MODULE_24__["CookieService"], _print_print_service__WEBPACK_IMPORTED_MODULE_34__["PrintService"]]
    })], ProductionModule);
    /***/
  }
}]);
//# sourceMappingURL=production-production-module-es5.js.map