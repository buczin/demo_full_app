{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./src/app/offers/print-offer-settings/print-offer-settings.component.ts","./src/app/offers/print-offer-settings/print-offer-settings.component.html","./src/app/offers/form/add-offer-position/add-offer-position.component.ts","./src/app/offers/form/add-offer-position/add-offer-position.component.html","./src/app/offers/form/update-film-buy-cost/update-film-buy-cost.component.ts","./src/app/offers/form/update-film-buy-cost/update-film-buy-cost.component.html","./src/app/offers/timeline-widget/timeline-widget.component.ts","./src/app/offers/timeline-widget/timeline-widget.component.html","./src/app/offers/form/update-client-helpers/update-client-helpers.component.ts","./src/app/offers/form/update-client-helpers/update-client-helpers.component.html","./src/app/offers/view-offer/view-offer.component.ts","./src/app/offers/view-offer/view-offer.component.html","./src/app/offers/main-offers/main-offers.component.ts","./src/app/offers/main-offers/main-offers.component.html","./src/app/offers/form/update-offer-position/update-offer-position.component.ts","./src/app/offers/form/update-offer-position/update-offer-position.component.html","./src/app/offers/form/new-offer/form-new-offer.component.ts","./src/app/offers/form/new-offer/form-new-offer.component.html","./src/app/offers/details-offer/details-offer.component.ts","./src/app/offers/details-offer/details-offer.component.html","./src/app/offers/offers-routing.module.ts","./src/app/offers/offers.module.ts","./src/app/offers/form/update-client-helper-range/update-client-helper-range.component.ts","./src/app/offers/form/update-client-helper-range/update-client-helper-range.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkR;AACvO;AACmD;AACN;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,GAAG,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAM,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AACtJ,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,oDAAM,EAAE,GAAG;AACjD,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,oDAAM,GAAG,sDAAe,CAAC,oEAAa,GAAG,sDAAe,oBAAoB;AACjM,iBAAiB,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACrO;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAM,EAAE,GAAG,OAAO,oEAAa,EAAE,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;;AAErG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,6CAA6C,gEAAyB,GAAG,8DAA8D,KAAK;AAChU;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,6BAA6B,8DAA8D;AAC3F,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mFAAqB;AACvD,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,uFAAuF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,YAAY,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,CAAC,gEAAc,MAAM,+DAAwB,2BAA2B,+DAAwB,CAAC,uEAAgB,GAAG,+DAAwB,sBAAsB;AACpY,mBAAm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,KAAK,gBAAgB,UAAU,OAAO,yDAAW,EAAE,EAAE,EAAE,GAAG;AAC1D,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,4BAA4B,0DAAY;AACxC;AACA,yBAAyB,0DAAY;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,qBAAqB,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,oDAAM,GAAG,+DAAwB,CAAC,8DAAgB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC,gEAAc,MAAM,+DAAwB,YAAY,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,uBAAuB;AACve,eAAe,+DAAwB,EAAE,sHAAsH;AAC/J,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,iGAAiG;AACxG,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,4eAA4e,YAAY,sLAAsL,oCAAoC,gEAAyB,GAAG,iDAAiD,IAAI,kEAA2B,GAAG;AACn1B;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,gCAAgC,OAAO,oDAAM,0BAA0B,GAAG,OAAO,sDAAQ,EAAE,GAAG,OAAO,sDAAQ,EAAE,GAAG;AACvH,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,8DAAgB,EAAE;AAC9B,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,4BAA4B,GAAG;AACrG,KAAK,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,KAAK,iBAAiB;AACtB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,oCAAoC,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG,OAAO,oDAAM,4BAA4B;AACtH;AACA;AACA,gBAAgB,OAAO,6DAAe,2BAA2B,oBAAoB,IAAI;AACzF,wBAAwB,OAAO,0DAAY,6BAA6B;AACxE,4BAA4B,OAAO,0DAAY,iCAAiC;AAChF,YAAY,OAAO,mDAAK,0BAA0B;AAClD,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,2BAA2B,OAAO,mDAAK,iCAAiC;AACxE,uBAAuB,OAAO,mDAAK,8BAA8B;AACjE,sBAAsB,OAAO,mDAAK,gCAAgC;AAClE,wBAAwB,OAAO,mDAAK,sCAAsC;AAC1E,gBAAgB,OAAO,mDAAK,8BAA8B;AAC1D,yBAAyB,OAAO,mDAAK,uCAAuC;AAC5E,oBAAoB,OAAO,mDAAK,kCAAkC;AAClE,eAAe,OAAO,oDAAM,6BAA6B;AACzD,gBAAgB,OAAO,oDAAM,8BAA8B;AAC3D,aAAa,OAAO,oDAAM,2BAA2B;AACrD,eAAe,OAAO,oDAAM,6BAA6B;AACzD,cAAc,OAAO,oDAAM,4BAA4B;AACvD,eAAe,OAAO,oDAAM,6BAA6B;AACzD,aAAa,OAAO,oDAAM,2BAA2B;AACrD;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,iDAAiD;AAC9E,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAU,EAAE,GAAG;AACrD,sBAAsB,oDAAM;AAC5B;AACA,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG;AACnB,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAM,EAAE,GAAG,OAAO,8DAAgB,EAAE,GAAG;AACjE,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG,OAAO,gEAAc;AACxC,sBAAsB,sDAAQ;AAC9B,aAAa,GAAG,GAAG,iBAAiB,GAAG,OAAO,+DAAiB,EAAE,GAAG;AACpE,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,kDAAI;AAC1B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC,qCAAqC,oBAAoB;AACzD,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8DAAuB,EAAE,uBAAuB;AACtE,sBAAsB,8DAAuB,EAAE,8CAA8C,oCAAoC,EAAE;AACnI;AACA,iBAAiB,0EAAmB,GAAG;AACvC,cAAc,oDAAoD,gEAAyB,kBAAkB,4BAA4B,oGAAoG,EAAE,wBAAwB,SAAS,0EAAmB,6FAA6F,EAAE,EAAE,EAAE,EAAE;AACxY,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0EAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEyV;;AAEzV,qC;;;;;;;;;;;;ACh5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOuB;AAG+C;;;;;;;;;;;;;;;ICHhE,qEAA0E;;;IAApC,2JAA6B;;;;IACnE,0EACE;IAAA,6EAQU;IAJR,uVAAkC;IAInC,4DAAS;IACZ,4DAAM;;;;IAwDA,mFAQoB;;IANlB,+HAA2C;;;;;IAzDnD,0EACE;IAAA,+EACE;IADQ,uWAA6B;IACrC,2EACE;IAAA,2EACE;IAAA,wEAA0D;IAC1D,wEAAwD;IACxD,wEAAgE;IAChE,wEAIU;IACV,wEAIU;IACV,6EACE;IAAA,yEAA0B;IAC1B,yEAAgC;IAChC,yEAA+B;IAC/B,yEAAiC;IACnC,4DAAS;IACT,yEAGU;IACZ,4DAAO;IACT,4DAAW;IACb,4DAAW;IACX,2EACE;IAAA,2EACE;IAAA,8EASU;IALR,wVAAkC;IAKnC,4DAAS;IACZ,4DAAM;IACN,2EACE;IAAA,8EAUU;IALR,2UAA6B;IAK9B,4DAAS;IACV,4JAQA;IACF,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAjEoC,0DAA6B;IAA7B,+HAA6B;IAA3D,2FAA6B;IA4CjC,2DAAoB;IAApB,oFAAoB;IAWpB,0DAAe;IAAf,gFAAe;;;IAoBvB,qEAIO;;;IADL,gKAAkC;;;;IAEpC,0EACE;IAAA,6EAQU;IAJR,kWAA4C;IAI7C,4DAAS;IACZ,4DAAM;;;IA2DA,mFAQoB;;IANlB,+HAA2C;;;;IA5DnD,0EACE;IAAA,+EAIE;IAHA,6WAAkC;IAGlC,2EACE;IAAA,2EACE;IAAA,wEAA0D;IAC1D,wEAAwD;IACxD,wEAAgE;IAChE,wEAIU;IACV,wEAIU;IACV,6EACE;IAAA,yEAA0B;IAC1B,yEAAgC;IAChC,yEAA+B;IAC/B,yEAAiC;IACnC,4DAAS;IACT,yEAGU;IACZ,4DAAO;IACT,4DAAW;IACb,4DAAW;IACX,2EACE;IAAA,2EACE;IAAA,8EASU;IALR,mWAA4C;IAK7C,4DAAS;IACZ,4DAAM;IACN,2EACE;IAAA,8EAUU;IALR,iVAAkC;IAKnC,4DAAS;IACV,6JAQA;IACF,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAlEF,0DAA6B;IAA7B,+HAA6B;IAD7B,gGAAkC;IA8C9B,2DAAoB;IAApB,oFAAoB;IAWpB,0DAAe;IAAf,gFAAe;;;;IAqBrB,yEACE;IAAA,0EACE;IAAA,iFAMc;IAJZ,uVAAmC;IAIpC,4DAAa;IAChB,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACN,qEAAmD;IACnD,0EACE;IAAA,6EAQU;IAHR,4WAA2B;IAG5B,4DAAS;IACV,6EAQU;IALR,iXAAgC;IAKjC,4DAAS;IACZ,4DAAM;IACR,4DAAK;;;;IA5BC,0DAA8B;IAA9B,4FAA8B;IAKhC,0DACF;IADE,2FACF;IACkB,0DAA0B;IAA1B,qJAA0B;;;;IAyD5C,6EASU;IAJR,uUAAsB;IAIvB,4DAAS;;;;IAEV,6EASU;IAJR,0UAAyB;IAI1B,4DAAS;;;;IAEV,6EASU;IAJR,8UAA6B;IAI9B,4DAAS;;;ADlRb,MAAM,2BAA2B;IAkBtC,YACU,YAA2B,EAC3B,SAA6B;QAD7B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,cAAS,GAAT,SAAS,CAAoB;QAlB7B,YAAO,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAE1D,oBAAe,GAAG,EAAE,CAAC;QACrB,yBAAoB,GAAG,EAAE,CAAC;QAC1B,mBAAc,GAAG,EAAE,CAAC;QACpB,oBAAe,GAAG,KAAK,CAAC;QACxB,eAAU,GAAG,KAAK,CAAC;QACnB,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,IAAI,CAAC;QAMjB,qBAAgB,GAAG,EAAE,CAAC;IAKnB,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAClD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YAC3C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,IAAI,CAAC,KAA4B;QAC/B,8EAAe,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAC3E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;YACpC,CAAC,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;YACnE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;YACvC,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,wBAAwB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC;aACtE,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;gBAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;gBACrD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;YACrD,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,6BAA6B,CAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,EACtB,IAAI,CAAC,oBAAoB,CAC1B;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC;gBAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,aAAa,CAAC,CAAC;gBAChD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;YAChD,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,WAAW;IAEX,cAAc;QACZ,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;YAC3C,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;YAC1D,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAC3B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,IAAI;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAED,aAAa;QACX,IAAI,CAAC,YAAY;aACd,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC;aAClD,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,aAAa,CAAC,EAAE;QACd,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;YAC5C,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;gBAC7B,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;oBACb,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACd;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY;aACd,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,CAAC;aACvD,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;;sGAjLU,2BAA2B;2GAA3B,2BAA2B;QClBxC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,6EAAQ;QAAA,4DAAK;QACnB,4DAAM;QACN,oEAAyB;QACzB,yEACE;QAAA,uHAAoE;QACpE,uHACE;QAUF,wHACE;QAkEJ,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACtB,4DAAM;QACN,qEAAyB;QACzB,0EACE;QAAA,yHAIC;QACD,yHACE;QAUF,0HACE;QAqEJ,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QAChB,4DAAM;QACN,qEAAyB;QACzB,2EACE;QAAA,0EACE;QADmC,gLAAsB,gBAAY,IAAC;QACtE,wHACE;QAkCJ,4DAAK;QAEL,2EACE;QAEA,gFACE;QADQ,2MAA4B;QACpC,4EACE;QAAA,4EACE;QAAA,yEAA0D;QAC1D,yEAAwD;QACxD,yEAAgE;QAChE,yEAIU;QACV,yEAIU;QACV,8EACE;QAAA,yEAA0B;QAC1B,yEAAgC;QAChC,yEAA+B;QAC/B,yEAAiC;QACnC,4DAAS;QACT,yEAGU;QACZ,4DAAO;QACT,4DAAW;QACb,4DAAW;QACX,2EACE;QAAA,gIASC;QAED,gIASC;QAED,gIASC;QACH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QAlSkB,0DAAmB;QAAnB,iFAAmB;QACf,0DAAmB;QAAnB,iFAAmB;QAWC,0DAAkB;QAAlB,gFAAkB;QA8E1D,0DAAwB;QAAxB,sFAAwB;QAGJ,0DAAwB;QAAxB,sFAAwB;QAWJ,0DAAuB;QAAvB,qFAAuB;QAgF3D,0DAAgC;QAAhC,oFAAgC;QAwCG,0DAA6B;QAA7B,gIAA6B;QAA1D,uFAA4B;QA+BlC,2DAAkB;QAAlB,gFAAkB;QAWlB,0DAAiB;QAAjB,+EAAiB;QAWjB,0DAAiB;QAAjB,+EAAiB;;6FD1QhB,2BAA2B;cANvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;gBACpD,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;mNAEU,KAAK;kBAAb,mDAAK;YACI,OAAO;kBAAhB,oDAAM;;;;;;;;;;;;;;AEpBT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC6B;;;;;;;;;;;;;;;;;;;;;ICuEvD,mEAIK;;;IAdb,sEAOE;IAAA,yEACE;IAAA,0EACE;IAAA,0EACE;IAAA,iIAIC;IACD,uDACF;IAAA,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACpC,4DAAM;IACN,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACpC,4DAAM;IACN,2EACE;IAAA,mEAAM;IAAA,qEAAG;IAAA,wDAAwB;IAAA,4DAAI;IACvC,4DAAM;IACN,2EACE;IAAA,uEAAK;IAAA,qEAAG;IAAA,wDAA2B;IAAA,4DAAI;IACzC,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAwB;IAAA,4DAAI;IACtC,4DAAM;IACN,2EACE;IAAA,sEACA;IAAA,qEAAG;IAAA,wDAA6B;IAAA,4DAAI;IACtC,4DAAM;IACN,2EACE;IAAA,sEACA;IAAA,qEAAG;IAAA,wDAA6B;IAAA,4DAAI;IACtC,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAnDJ,sIAIC;IAOO,0DAAoB;IAApB,iFAAoB;IAGtB,0DACF;IADE,6FACF;IAEE,0DACF;IADE,kGACF;IAEE,0DACF;IADE,wGACF;IAIU,0DAAsB;IAAtB,oFAAsB;IAGtB,0DAAsB;IAAtB,oFAAsB;IAGrB,0DAAwB;IAAxB,sFAAwB;IAGzB,0DAA2B;IAA3B,yFAA2B;IAK3B,0DAAwB;IAAxB,sFAAwB;IAI7B,0DAA6B;IAA7B,2FAA6B;IAI7B,0DAA6B;IAA7B,2FAA6B;;;IAO5C,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;IAeJ,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;IAsKQ,yEAKE;IAAA,mEAGK;IACL,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAK;;;IACL,yEAKE;IAAA,mEAGK;IACL,uEAAM;IAAA,qFAA0B;IAAA,4DAAO;IACzC,4DAAK;;;IAgFjB,0EAKE;IAAA,0EACE;IAAA,0EAIE;IAAA,mEACF;IAAA,4DAAM;IACN,qEAA+D;IACjE,4DAAM;IACR,4DAAM;;;IAFgB,0DAAsC;IAAtC,qKAAsC;;;IAhJ9D,0EAIE;IAAA,0EACE;IAAA,0EAA6B;IAAA,0EAAe;IAAA,4DAAM;IAClD,yEACE;IAAA,0EACE;IAAA,wEACE;IAAA,4EACE;IAAA,yEAAsB;IAAA,gEAAK;IAAA,4DAAK;IAChC,0EAAsB;IAAA,iEAAK;IAAA,4DAAK;IAClC,4DAAQ;IACR,yEACE;IAAA,sEACE;IAAA,0EACE;IAAA,qEAAG;IAAA,wDAA4B;IAAA,4DAAI;IACrC,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAA+B;IAAA,4DAAI;IACxC,4DAAK;IACP,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,2EACE;IAAA,yEACE;IAAA,yEACE;IAAA,sEACE;IAAA,8HAKE;IAMF,8HAKE;IAMJ,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,yEACE;IAAA,6EACE;IAAA,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,gEAAI;IAAA,4DAAK;IACjC,0EAAwB;IAAA,qEAAI;IAAA,4DAAK;IACjC,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,mEAAO;IAAA,4DAAK;IACpC,0EAAwB;IAAA,mEAAO;IAAA,4DAAK;IACtC,4DAAQ;IACR,yEACE;IAAA,sEACE;IAAA,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IAEL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IAEL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACP,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,gIAKE;IAUJ,4DAAM;;;IAnIa,2DAA4B;IAA5B,8FAA4B;IAG5B,0DAA+B;IAA/B,iGAA+B;IAalC,0DAA4B;IAA5B,6FAA4B;IAW5B,0DAAyC;IAAzC,0GAAyC;IAiCtC,2DAID;IAJC,yIAID;IAGC,0DAID;IAJC,yIAID;IAIC,0DAID;IAJC,6IAID;IAGC,0DAID;IAJC,mJAID;IAIC,0DAID;IAJC,6IAID;IAGC,0DAID;IAJC,uJAID;IAGC,0DAID;IAJC,uJAID;IAUd,0DAAgC;IAAhC,iGAAgC;;;IA8D5B,0EACE;IAAA,yEACE;IAAA,0EAAiB;IAAA,uDAAU;IAAA,4DAAM;IACnC,4DAAM;IACR,4DAAM;;;IAFe,0DAAU;IAAV,yEAAU;;;IAoCzB,2EACE;IAAA,kEACF;IAAA,4DAAM;;;IACN,2EAIE;IAAA,qEACF;IAAA,4DAAM;;;IACN,2EAIE;IAAA,mEACF;IAAA,4DAAM;;;IA3BZ,0EACE;IACA,yEACE;IAAA,0EACE;IAAA,0EAA6B;IAAA,uDAAiB;IAAA,4DAAM;IACpD,0EAA6B;IAAA,uDAAe;IAAA,4DAAM;IACpD,4DAAM;IAEN,2EAKE;IAAA,8IACE;IAEF,8IAIE;IAEF,gJAIE;IAEJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IA1B6B,0DAAiB;IAAjB,gFAAiB;IACjB,0DAAe;IAAf,8EAAe;IAK5C,0DAAwB;IAAxB,qFAAwB;IAGnB,0DAA0B;IAA1B,oFAA0B;IAI7B,0DAA6B;IAA7B,uFAA6B;IAM7B,0DAAuC;IAAvC,iGAAuC;;;;IApF3D,0EAKE;IAAA,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,6EASU;IALR,iWAAuB;IAKxB,4DAAS;IAEV,2EAA8B;IAAA,uDAAW;IAAA,4DAAO;IAClD,4DAAM;IAEN,0EACE;IAAA,4EAAyC;IAAA,4EAAY;IAAA,4DAAQ;IAC7D,sFAWE;IAPA,0WAAqC;IAOrC,gJACE;IAMJ,4DAAiB;IACnB,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,yEAAa;IAAA,4DACf;IACD,sFAWE;IAPA,0WAAqC;IAOrC,iJACE;IAgCJ,4DAAiB;IACnB,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,4EAAgB;IAAA,4DAClB;IACD,wEAUF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAA+C;IAAA,gFAAU;IAAA,4DAAQ;IACjE,6EAWF;IAJI,oXAAkC;IAPpC,4DAWF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,2EACE;IAAA,6EAAyC;IAAA,mEAAO;IAAA,4DAAQ;IACxD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,uEAAW;IAAA,4DACb;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAIG;IAAA,2EAAU;IAAA,4DACZ;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAIG;IAAA,yEAAa;IAAA,4DACf;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,sEAAU;IAAA,4DACZ;IACD,6EAUF;IAFI,qYAA6C;IAR/C,4DAUF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAAiD;IAAA,kEAAM;IAAA,4DAAQ;IAC/D,wEASF;IAAA,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,kFAMa;IAJX,4WAA0B;IAI5B,4DAAa;IACf,4DAAM;IAEN,2EACE;IAAA,6EAKa;IACf,4DAAM;IAEN,2EACE;IAAA,kFAMa;IAJX,oYAA4C;IAI9C,4DAAa;IACf,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,iEAAK;IAAA,4DACP;IACD,wEAUF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IA7QJ,gFAAmB;IAgBiB,0DAAW;IAAX,0EAAW;IAQvC,0DAA+B;IAA/B,+FAA+B;IAwB/B,0DAAe;IAAf,wEAAe;IAmLf,2DAAe;IAAf,wEAAe;IASf,0DAAe;IAAf,wEAAe;IAUf,0DAAe;IAAf,wEAAe;;;;IAkF3B,oFAOqB;;IALnB,+HAA2C;;;;ADnvB1C,MAAM,yBAAyB;IA2BpC,YACS,iBAA2C,EAC3C,cAA+B,EAC/B,YAA2B,EAC1B,aAA4B,EAC5B,SAA6B,EAC9B,GAAqB,EACrB,MAA2B;QAN3B,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC3C,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAe;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAoB;QAC9B,QAAG,GAAH,GAAG,CAAkB;QACrB,WAAM,GAAN,MAAM,CAAqB;QA/BpC,mBAAc,GAAkB,IAAI,CAAC;QACrC,oBAAe,GAAmB,IAAI,CAAC;QAKvC,aAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,YAAO,GAAG;YACR,KAAK;YACL,KAAK;YACL,OAAO;YACP,QAAQ;YACR,KAAK;YACL,SAAS;YACT,SAAS;YACT,UAAU;YACV,WAAW;YACX,YAAY;SACb,CAAC;QAGF,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QAWtB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,4BAA4B,CAAC,EAAE;YAC3D,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,4BAA4B,EAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAC9B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,4BAA4B,CAAC,CACrD,CAAC;SACH;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACxB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,GAAG,IAAI,wDAAS,CAAC;YACrC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtE,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACxE,GAAG,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC3B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC/B,kBAAkB,EAAE,IAAI,wDAAS,CAAC;gBAChC,IAAI,wDAAS,CAAC;oBACZ,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACzB,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;oBACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;wBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBACrC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE;wBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBACnC,OAAO,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;oBAC3B,eAAe,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;oBACnC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;oBACvC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;wBAClC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,UAAU,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAE;wBAC7B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;wBACvD,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;wBACzB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;iBACH,CAAC;aACH,CAAC;SACH,CAAC,CAAC;QACH,oDAAoD;QACpD,qBAAqB;QACrB,8BAA8B;QAC9B,uIAAuI;QACvI,MAAM;QACN,MAAM;QACN,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;YAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC9D,GAAG,CAAC,YAAY,CAAC;iBACjB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBAC9D,GAAG,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,KACE,IAAI,CAAC,GAAG,CAAC,EACT,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,EACpD,CAAC,EAAE,EACH;gBACA,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,EAAE;oBACjC,IAAI,GAAG,CAAC,YAAY,CAAC,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;wBAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,4BAA4B,EAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;SAC7D;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC1D,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;wBAChE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACnC;iBACF;gBACD,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7D,IACE,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EACjE;wBACA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACnC;iBACF;aACF;SACF;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACH,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtE,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrD,IACE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAC3D;gBACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,oBAAoB,CAAc,CAAC;IACvE,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACrC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE;gBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACnC,OAAO,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YAC3B,mBAAmB,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACvC,eAAe,EAAE,IAAI,0DAAW,CAAC,CAAC,CAAC;YACnC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAClC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,UAAU,EAAE,IAAI,0DAAW,CAAC,CAAC,EAAE;gBAC7B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;gBACvD,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACzB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;YAC5C,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAC5D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CACtB;iBACE,GAAG,CAAC,YAAY,CAAC;iBACjB,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAC5D,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CACtB;iBACE,GAAG,CAAC,SAAS,CAAC;iBACd,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;IAC1D,CAAC;IAED,iBAAiB;QACf,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC;IAED,UAAU,CAAC,CAAS;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC1E,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,YAAY,CAAC,CAAC,EAAE,KAAK;QACnB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;YAChC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,EAAE;gBACT,KAAK,OAAO;oBACV,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,QAAQ;oBACX,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACzC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACvB,GAAG,CAAC,MAAM,CAAC;iBACX,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,eAAe,CAAC,KAAqB;QACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,YAAY,CAAC;YACzC,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;YACvC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC5B,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,EAAE;gBACT,KAAK,OAAO;oBACV,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,QAAQ;oBACX,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACzC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACvB,GAAG,CAAC,MAAM,CAAC;iBACX,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IACD,cAAc;QACZ,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;IACH,CAAC;IAED,UAAU,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,KAAK;QACb,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvC,CAAC,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvC,CAAC,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,gBAAgB,CAAC,CAAC,EAAE,KAAK;QACvB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnE;IACH,CAAC;IAED,oBAAoB,CAAC,CAAC,EAAE,KAAK;QAC3B,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC5D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAC7C,CAAC;SACH;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACpE;IACH,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,CAAC;QACZ,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;QAErD,IAAI,MAAM,EAAE;YACV,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;gBACrC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;gBACtC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,EAAE;gBACtB,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;aACF;SACF;aAAM;YACL,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;gBACrC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;gBACtC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,EAAE;gBACtB,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,mBAAmB,CAClB,IAAI,CAAC,SAAS,CAAC,WAAW,EAC1B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAC7B;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;;kGAxeU,yBAAyB;yGAAzB,yBAAyB;QCrBtC,yEACE;QACA,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA6C;QAAA,6EAAa;QAAA,4DAAQ;QAClE,gFAYa;QAVX,2JAAY,oBAAgB,IAAC;QAU/B,4DAAa;QACf,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,oFAOiB;QAFf,wMAAsB;QAEvB,4DAAgB;QACjB,oFAQgB;QAHd,wMAAsB;QAGxB,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,4EACG;QAAA,sFAAqB;QAAA,4DACvB;QACD,sFAYE;QALA,kLAAkB,yBAAqB,IAAC,8GAG5B,2BAAuB,IAHK;QAKxC,0IACE;QAsDJ,4DAAiB;QACjB,oHAOE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EACG;QAAA,uFAAsB;QAAA,4DACxB;QACD,wEAOA;QAAA,oHAOE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,kFAMa;QAJX,kKAAY,qBAAiB,IAAC;QAIhC,4DAAa;QACf,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,6EAKa;QACf,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,2EAA6B;QAAA,8EAAkB;QAAA,4DAAM;QAErD,2EACE;QAAA,2EACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAAsB;QAAA,iEAAK;QAAA,4DAAK;QAChC,0EAAwB;QAAA,4EAAW;QAAA,4DAAK;QACxC,0EAAwB;QAAA,wEAAY;QAAA,4DAAK;QACzC,0EAAwB;QAAA,4EAAW;QAAA,4DAAK;QACxC,0EAAwB;QAAA,wEAAY;QAAA,4DAAK;QAC3C,4DAAQ;QACR,yEACE;QAAA,sEACE;QAAA,0EAAsB;QAAA,gEAAI;QAAA,4DAAK;QAC/B,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,kEAAM;QAAA,4DAAK;QACjC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,mEAAO;QAAA,4DAAK;QAClC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,oEAAQ;QAAA,4DAAK;QACnC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEACE;QAAA,0EACE;QAAA,kEAAS;QACT,2EAAwB;QAAA,iEAAI;QAAA,4DAAK;QACnC,4DAAQ;QACR,0EACE;QAAA,uEACE;QAAA,uEAAI;QAAA,gEAAG;QAAA,4DAAK;QACZ,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACL,uEACE;QAAA,uEAAI;QAAA,gEAAG;QAAA,4DAAK;QACZ,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,4HAIE;QAgJJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,kEACA;QAAA,4EACE;QAAA,4EACE;QAAA,yEAAM;QAAA,sEAAG;QAAA,mEAAM;QAAA,4DAAI;QAAA,4DAAO;QAC5B,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,4HAKE;QA6QF,2EACE;QAAA,4EAGE;QAAA,+EASU;QALR,mJAAS,aAAS,IAAC;QAKpB,4DAAS;QAEV,+EAUU;QALR,mJAAS,uBAAmB,IAAC;QAK9B,4DAAS;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,4EACE;QAAA,4EACE;QAAA,+EASU;QALR,mJAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,4EACE;QAAA,+EAUU;QALR,mJAAS,sBAAkB,IAAC;QAK7B,4DAAS;QACV,sJAOC;QACH,4DAAM;QACR,4DAAM;;QA7wBE,0DAA+B;QAA/B,4FAA+B;QAOzB,0DAAwC;QAAxC,qGAAwC;QAqBxC,0DAAsB;QAAtB,iFAAsB;QAQtB,0DAAsB;QAAtB,iFAAsB;QAYtB,0DAAwC;QAAxC,8IAAwC;QAqExC,0DAGC;QAHD,qLAGC;QAgBD,0DAAmD;QAAnD,gHAAmD;QAInD,0DAGC;QAHD,iLAGC;QASD,0DAA4C;QAA5C,yGAA4C;QAW5C,0DAAiD;QAAjD,8GAAiD;QA6BrC,2DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAKE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAKE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAKE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAiBE,2DACF;QADE,kIACF;QAKE,0DACF;QADE,kIACF;QAWZ,0DAA+B;QAA/B,6FAA+B;QAiKnC,0DAA+C;QAA/C,uFAA+C;QAgS3C,0DAA8B;QAA9B,2FAA8B;QA+BpC,0DAAsE;QAAtE,2IAAsE;QAWtE,0DAAe;QAAf,6EAAe;;6FDlvBR,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,qCAAqC,CAAC;aACnD;;;;;;;;;;;;;;AEpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACM;;;;;;;;;;;;;;;;ICkFpD,mFAOqB;;IALnB,+HAA2C;;;AD1E1C,MAAM,0BAA0B;IAKrC,YACU,SAA6B,EAC9B,GAAqB,EACpB,YAA2B,EAC5B,MAA2B;QAH1B,cAAS,GAAT,SAAS,CAAoB;QAC9B,QAAG,GAAH,GAAG,CAAkB;QACpB,iBAAY,GAAZ,YAAY,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAqB;QANpC,YAAO,GAAG,KAAK,CAAC;QAQd,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,cAAc,EAAE,IAAI,0DAAW,CAAC,oCAAoC,CAAC;SACtE,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ;aACV,GAAG,CAAC,kBAAkB,CAAC;aACvB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC7C,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;YACjC,IAAI,CAAC,QAAQ;iBACV,GAAG,CAAC,gBAAgB,CAAC;iBACrB,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;aAClE,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,CAAC;gBACzD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;gBACvD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;;oGAlDU,0BAA0B;0GAA1B,0BAA0B;QCXvC,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EACG;QAAA,qFAA0B;QAAA,4DAC5B;QACD,sEASF;QAAA,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,2EAAmD;QAAA,gEAAI;QAAA,4DAAQ;QAC/D,+EAIE;QAAA,4EACE;QAAA,2EACE;QAAA,wEAA0D;QAC1D,yEAAwD;QACxD,yEAAgE;QAChE,yEAIU;QACV,yEAIU;QACV,8EACE;QAAA,yEAA0B;QAC1B,yEAAgC;QAChC,yEAA+B;QAC/B,yEAAiC;QACnC,4DAAS;QACT,yEAGU;QACZ,4DAAO;QACT,4DAAW;QACb,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,8EASU;QALR,mJAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,2EACE;QAAA,8EAUU;QALR,mJAAS,cAAU,IAAC;QAKrB,4DAAS;QACV,qJAOC;QACH,4DAAM;QACR,4DAAM;;QA3FE,0DAAsB;QAAtB,mFAAsB;QAapB,0DAAgD;QAAhD,6GAAgD;QAShD,0DAA6B;QAA7B,+HAA6B;QAD7B,2GAA8C;QAmDlD,2DAAoB;QAApB,iFAAoB;QAWpB,0DAAe;QAAf,6EAAe;;6FDzER,0BAA0B;cALtC,uDAAS;eAAC;gBACT,QAAQ,EAAE,0BAA0B;gBACpC,WAAW,EAAE,uCAAuC;gBACpD,SAAS,EAAE,CAAC,uCAAuC,CAAC;aACrD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;;;;;ICErD,qEACE;IAAA,yEACE;IAAA,uEAAM;IAAA,uDAAkD;;IAAA,4DAAO;IAC/D,kEAAqD;IACvD,4DAAM;IACN,yEACE;IAAA,qEAAsD;IACtD,6EAQU;IAJR,wXAA0C;IAI3C,4DAAS;IACZ,4DAAM;IACN,qEAAyB;IACzB,2EAAoB;IAAA,wDAAoB;IAAA,4DAAM;IAChD,4DAAK;;;IAjBK,0DAAkD;IAAlD,0KAAkD;IAInC,0DAA0B;IAA1B,oJAA0B;IAY7B,0DAAoB;IAApB,kFAAoB;;;ADXvC,MAAM,uBAAuB;IAMlC,YACU,YAA2B,EAC3B,SAA6B;QAD7B,iBAAY,GAAZ,YAAY,CAAe;QAC3B,cAAS,GAAT,SAAS,CAAoB;QANvC,YAAO,GAAG,EAAE,CAAC;QAEN,QAAG,GAAS,IAAI,IAAI,EAAE,CAAC;QAM5B,WAAW,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,CAAC,EAAE,CAAC,CAAC,CAAC;IACR,CAAC;IAED,QAAQ,KAAU,CAAC;IAEnB,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;YAC1D,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;gBACtB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5B,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC;qBACV;oBACD,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC,CAAC;qBACX;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,WAAW,EAAE,OAAO;QAC7B,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC;YAChE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,WAAW,EAAE,EAAE;QACxB,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC;YAC3D,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;gBAC5C,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;;8FA/DU,uBAAuB;uGAAvB,uBAAuB;QCTpC,yEACE;QAAA,wEACE;QAAA,kHACE;QAmBF,qEACE;QAAA,yEACE;QAAA,uEAAM;QAAA,uDAAqC;;QAAA,4DAAO;QAClD,kEAAqD;QACvD,4DAAM;QACN,yEACE;QAAA,+EACE;QADQ,gMAAqB;QAC7B,4EACE;QAAA,2EACE;QAAA,wEAA0D;QAC1D,wEAAwD;QACxD,yEAAgE;QAChE,yEAIU;QACV,yEAIU;QACV,8EACE;QAAA,yEAA0B;QAC1B,yEAAgC;QAChC,yEAA+B;QAC/B,yEAAiC;QACnC,4DAAS;QACT,yEAGU;QACZ,4DAAO;QACT,4DAAW;QACb,4DAAW;QAEX,8EAQU;QAJR,gJAAS,4CAAgC,IAAC;QAI3C,4DAAS;QACZ,4DAAM;QACN,sEAAyB;QACzB,sEAA0B;QAC5B,4DAAK;QACP,4DAAK;QACP,4DAAM;;QAtEE,0DAA+B;QAA/B,mFAA+B;QAsBzB,0DAAqC;QAArC,8JAAqC;QAIX,0DAA6B;QAA7B,+HAA6B;QAAnD,gFAAqB;;6FDnB1B,uBAAuB;cALnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD;mNAEU,WAAW;kBAAnB,mDAAK;YAEG,UAAU;kBAAlB,mDAAK;;;;;;;;;;;;;;AEZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACM;;;;;;;;;;;;;;IC0EpD,mFAOqB;;IALnB,+HAA2C;;ADlE1C,MAAM,4BAA4B;IAKvC,YACU,SAA6B,EAC9B,GAAqB,EACpB,YAA2B,EAC5B,MAA2B;QAH1B,cAAS,GAAT,SAAS,CAAoB;QAC9B,QAAG,GAAH,GAAG,CAAkB;QACpB,iBAAY,GAAZ,YAAY,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAqB;QANpC,YAAO,GAAG,KAAK,CAAC;QAQd,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,gBAAgB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACrC,sBAAsB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC5C,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,mBAAmB,CAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EACxB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAC5B;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBAC9C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;;wGA/CU,4BAA4B;4GAA5B,4BAA4B;QCXzC,yEACE;QAAA,0EAEE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAAyC;QAAA,gEAAK;QAAA,4DAAQ;QACtD,sEASF;QAAA,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,2EAAwC;QAAA,sEAAU;QAAA,4DAAQ;QAC1D,uEASF;QAAA,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,4EAAoD;QAAA,sEAAU;QAAA,4DAAQ;QACtE,uEASF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,8EASU;QALR,qJAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,2EACE;QAAA,8EAUU;QALR,qJAAS,mBAAe,IAAC;QAK1B,4DAAS;QACV,uJAOC;QACH,4DAAM;QACR,4DAAM;;QAnFE,0DAA8B;QAA9B,2FAA8B;QAY5B,0DAAmD;QAAnD,gHAAmD;QAenD,0DAAwD;QAAxD,qHAAwD;QAexD,0DAA8D;QAA9D,2HAA8D;QAsBlE,0DAAoB;QAApB,iFAAoB;QAWpB,0DAAe;QAAf,6EAAe;;6FDjER,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMuB;;;;;;;ICMjB,0EACE;IAAA,qEACF;IAAA,4DAAM;;;IADe,0DAAgC;IAAhC,6JAAgC;;;IAErD,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,uGACF;;;;IAkDM,0EAIE;IAAA,0EAAqB;IAAA,uDAAkB;IAAA,4DAAM;IAC7C,0EAAqB;IAAA,uDAAwB;IAAA,4DAAM;IACnD,0EAAqB;IAAA,uDAAuB;IAAA,4DAAM;IAClD,0EAAqB;IAAA,uDAAqC;;IAAA,4DAAM;IAChE,2EAAqB;IAAA,wDAAwB;IAAA,4DAAM;IACnD,2EACE;IAAA,wDACF;;IAAA,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,wDACF;;IAAA,4DAAM;IACN,2EACE;IAAA,wDACF;;IAAA,4DAAM;IACN,2EACE;IAAA,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IAnBiB,0DAAkB;IAAlB,iFAAkB;IAClB,0DAAwB;IAAxB,uFAAwB;IACxB,0DAAuB;IAAvB,sFAAuB;IACvB,0DAAqC;IAArC,6JAAqC;IACrC,0DAAwB;IAAxB,uFAAwB;IAE3C,0DACF;IADE,+KACF;IACK,0DAA+B;IAA/B,0JAA+B;IAEhC,0DACF;IADE,6KACF;IAEE,0DACF;IADE,2KACF;IAEE,0DACF;IADE,mLACF;;;;IAjCR,0EAKE;IAAA,0EACE;IAAA,uDAAyB;IAAA,gEAAM;IAAA,uDACjC;IAAA,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACN,sEACE;IAAA,wHAIE;IAoBJ,4DAAM;IACR,4DAAM;;;;IApCJ,+JAA2C;IAKzC,0DAAyB;IAAzB,iGAAyB;IAAM,0DACjC;IADiC,mGACjC;IAEE,0DACF;IADE,6GACF;IAII,0DAAmD;IAAnD,mGAAmD;;;IAqGzD,0EAKE;IAAA,iEAAW;IACX,qEAAgC;IAChC,sEACE;IAAA,0EACE;IAAA,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,2EAA2B;IAAA,qFAAyB;IAAA,4DAAM;IAC5D,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAhBJ,+JAA2C;;;IAiB7C,0EAKE;IAAA,iEAAW;IACX,qEAAgC;IAChC,sEACE;IAAA,0EACE;IAAA,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,iEAAW;IACX,2EACE;IAAA,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAlBJ,+JAA2C;IAcrC,2DACF;IADE,oLACF;;;IAYZ,yEACE;IAAA,qEAA2E;IAC7E,4DAAM;;;IAD8B,0DAAkC;IAAlC,gKAAkC;;;IAIpE,yEACE;IAAA,oEAAG;IAAA,oEAAG;IAAA,iEAAM;IAAA,4DAAI;IAAA,4DAAI;IACtB,4DAAM;;;IAGF,qEACE;IAAA,sEAAwC;IAC1C,4DAAK;;;IADG,0DAA0B;IAA1B,qJAA0B;;ADlNnC,MAAM,kBAAkB;IAW7B,YACU,YAA2B,EAC3B,iBAAoC,EACpC,WAAwB;QAFxB,iBAAY,GAAZ,YAAY,CAAe;QAC3B,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QAVlC,eAAU,GAAG,EAAE,CAAC;QAChB,eAAU,GAAG,EAAE,CAAC;QAEhB,iBAAY,GAAG,IAAI,CAAC;QACpB,WAAM,GAAG,IAAI,CAAC;IAOX,CAAC;IAEJ,WAAW,CAAC,OAAsB;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;QAChD,KAAK,IAAI,QAAQ,IAAI,OAAO,EAAE;YAC5B,IAAI,QAAQ,KAAK,OAAO,EAAE;gBACxB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;gBAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;gBAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC1D,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;wBACvB,OAAO,CAAC,CAAC;qBACV;yBAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;wBAC9B,OAAO,CAAC,CAAC,CAAC;qBACX;yBAAM;wBACL,OAAO,CAAC,CAAC;qBACV;gBACH,CAAC,CAAC,CAAC;aACJ;SACF;QAED,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;SAC1B;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;SAC3B;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;YACvC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;SACpB;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;QAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;gBACvB,OAAO,CAAC,CAAC;aACV;iBAAM,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;gBAC9B,OAAO,CAAC,CAAC,CAAC;aACX;iBAAM;gBACL,OAAO,CAAC,CAAC;aACV;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,SAA0B;QACxC,IAAI,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC;QACrD,IAAI,GAAG,EAAE;YACP,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,SAAS,CAAC,SAA0B;QAClC,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;YAC9B,IAAI,GAAG,GAAG,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC;YAClE,IAAI,GAAG,EAAE;gBACP,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IACD,aAAa;QACX,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;YACtE,OAAO,KAAK,CAAC;SACd;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;;oFA/FU,kBAAkB;kGAAlB,kBAAkB;QCjB/B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,uDAA0B;QAAA,gEAC1B;QAAA,uDAGiE;QAAA,gEACjE;QAAA,uDAEF;QAAA,4DAAM;QACN,yEACE;QAAA,8GACE;QAEF,4GACE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,wDAAwB;QAAA,iEACxB;QAAA,wDACoE;QAAA,iEACpE;QAAA,wDACF;QAAA,4DAAM;QACN,0EACE;QAAA,qEAAG;QAAA,wDAAyD;;QAAA,4DAAI;QAClE,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,qEAAqD;QACvD,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,2EAAqB;QAAA,2FAA0B;QAAA,4DAAM;QACrD,2EAAkC;QAAA,qEAAS;QAAA,4DAAM;QACjD,2EACE;QAAA,2EAAqB;QAAA,+EAAmB;QAAA,4DAAM;QAC9C,2EAAqB;QAAA,yEAAa;QAAA,4DAAM;QACxC,2EAAqB;QAAA,0GAAoC;QAAA,4DAAM;QAC/D,2EAAqB;QAAA,uEAAW;QAAA,4DAAM;QACtC,2EAAqB;QAAA,8EAAQ;QAAA,4DAAM;QACnC,2EAAqB;QAAA,uEAAW;QAAA,4DAAM;QACtC,2EACE;QAAA,2EAAqB;QAAA,4EAAW;QAAA,4DAAM;QACtC,2EAAqB;QAAA,8DAAE;QAAA,4DAAM;QAC7B,2EAAqB;QAAA,8DAAE;QAAA,4DAAM;QAC7B,2EAA4B;QAAA,+DAAG;QAAA,4DAAM;QACvC,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,iHAKE;QAiCF,2EACE;QAAA,kEAAW;QACX,sEAAgC;QAChC,uEACE;QAAA,2EACE;QAAA,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,2EAA2B;QAAA,sEAAU;QAAA,4DAAM;QAC3C,2EACE;QAAA,2EAA2B;QAAA,kFAAiB;QAAA,4DAAM;QACpD,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,kEAAW;QACX,sEAAgC;QAChC,uEACE;QAAA,2EACE;QAAA,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,kEAAW;QACX,2EACE;QAAA,wDACF;;QAAA,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,wDACF;;QAAA,4DAAM;QACN,2EACE;QAAA,wDACF;;QAAA,4DAAM;QACN,2EACE;QAAA,wDACF;;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,kEAAW;QACX,sEAAgC;QAChC,uEACE;QAAA,2EACE;QAAA,kEAAW;QACX,kEAAW;QACX,mEAAW;QACX,mEAAW;QACX,mEAAW;QACX,4EAA2B;QAAA,8EAAiB;QAAA,4DAAM;QACpD,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,mEAAW;QACX,uEAAgC;QAChC,wEACE;QAAA,4EACE;QAAA,mEAAW;QACX,mEAAW;QACX,mEAAW;QACX,mEAAW;QACX,mEAAW;QACX,4EACE;QAAA,yDACF;;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,oHAKE;QAaF,oHAKE;QAeJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,uEAA4D;QAC9D,4DAAM;QAEN,mHACE;QAGF,4EACE;QAAA,mHACE;QAEF,4EACE;QAAA,uEACE;QAAA,iHACE;QAEJ,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,4EACE;QAAA,sEAAG;QAAA,+EAAa;QAAA,4DAAI;QACpB,sEAAG;QAAA,yDAAc;QAAA,4DAAI;QACvB,4DAAM;QACR,4DAAM;QACR,4DAAM;;QA5OA,0DAA0B;QAA1B,mGAA0B;QAC1B,0DAGiE;QAHjE,6SAGiE;QACjE,0DAEF;QAFE,yMAEF;QAE2B,0DAAgC;QAAhC,8FAAgC;QAGtD,0DAAiC;QAAjC,+FAAiC;QAOpC,0DAAwB;QAAxB,iGAAwB;QACxB,0DACoE;QADpE,0NACoE;QACpE,0DACF;QADE,qIACF;QAEK,0DAAyD;QAAzD,kMAAyD;QAIxC,0DAAwB;QAAxB,mJAAwB;QAKrC,0DAA2C;QAA3C,6JAA2C;QAUvC,2DAA+B;QAA/B,uJAA+B;QAWtC,0DAAuC;QAAvC,uFAAuC;QAmCpC,0DAA2C;QAA3C,6JAA2C;QAiB3C,2DAA2C;QAA3C,6JAA2C;QAWxC,2DACF;QADE,oLACF;QACK,0DAA+B;QAA/B,uJAA+B;QAEhC,0DACF;QADE,8KACF;QAEE,0DACF;QADE,4KACF;QAEE,0DACF;QADE,oLACF;QAMH,0DAA2C;QAA3C,6JAA2C;QAc3C,2DAA2C;QAA3C,6JAA2C;QAWxC,2DACF;QADE,8KACF;QASJ,0DAA8B;QAA9B,4FAA8B;QAkB9B,0DAA8B;QAA9B,4FAA8B;QAsBP,0DAAwB;QAAxB,mJAAwB;QAGtC,0DAA8B;QAA9B,4FAA8B;QAKxC,0DAAuB;QAAvB,qFAAuB;QAKpB,0DAAkC;QAAlC,sFAAkC;QAUrC,0DAAc;QAAd,6EAAc;;6FD3NV,kBAAkB;cAN9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;gBAC1C,aAAa,EAAE,+DAAiB,CAAC,IAAI;aACtC;iSAEU,KAAK;kBAAb,mDAAK;;;;;;;;;;;;;;AElBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAKiC;AACb;;;;;;;;;;;;;;;;IC4D1D,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACR,4DAAM;;;;IAGN,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IAEL,yEACE;IAAA,iEAAK;IAAA,4EAAgD;IACvD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IACL,0EACE;IAAA,mEAAM;IAAA,6EAA6C;IACrD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA2C;IAC5D,4DAAK;IACP,4DAAK;IACL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAGG;IADD,6UAAuC,IAAI,IAAC;IAC3C,uDAAyB;IAAA,4DAC3B;IACH,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IAVC,0DAA6C;IAA7C,0HAA6C;IAE5C,0DAAyB;IAAzB,wFAAyB;IAG1B,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,kHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;IA8BL,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACR,4DAAM;;;;IAGN,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IACL,yEACE;IAAA,iEAAK;IAAA,4EAAiD;IACxD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IAEL,0EACE;IAAA,mEAAM;IAAA,6EAA8C;IACtD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA4C;IAC7D,4DAAK;IACP,4DAAK;IAEL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAGG;IADD,6UAAuC,IAAI,IAAC;IAC3C,uDAAyB;IAAA,4DAC3B;IACH,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IAVC,0DAA6C;IAA7C,0HAA6C;IAE5C,0DAAyB;IAAzB,wFAAyB;IAG1B,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,kHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;IA8BL,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACR,4DAAM;;;;IAGN,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IACL,yEACE;IAAA,iEAAK;IAAA,4EAAiD;IACxD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IAEL,0EACE;IAAA,mEAAM;IAAA,6EAA8C;IACtD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA4C;IAC7D,4DAAK;IACP,4DAAK;IAEL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAGG;IADD,6UAAuC,IAAI,IAAC;IAC3C,uDAAyB;IAAA,4DAC3B;IACH,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IAVC,0DAA6C;IAA7C,0HAA6C;IAE5C,0DAAyB;IAAzB,wFAAyB;IAG1B,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,mHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;IA8BL,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACR,4DAAM;;;;IAGN,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IACL,yEACE;IAAA,iEAAK;IAAA,4EAAiD;IACxD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IAEL,0EACE;IAAA,mEAAM;IAAA,6EAA8C;IACtD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA4C;IAC7D,4DAAK;IACP,4DAAK;IAEL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAGG;IADD,6UAAuC,IAAI,IAAC;IAC3C,uDAAyB;IAAA,4DAC3B;IACH,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IAVC,0DAA6C;IAA7C,0HAA6C;IAE5C,0DAAyB;IAAzB,wFAAyB;IAG1B,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,mHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;IA8BL,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACR,4DAAM;;;;IAGN,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IACL,yEACE;IAAA,iEAAK;IAAA,4EAAiD;IACxD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IAEL,0EACE;IAAA,mEAAM;IAAA,6EAA8C;IACtD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA4C;IAC7D,4DAAK;IACP,4DAAK;IAEL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAGG;IADD,6UAAuC,IAAI,IAAC;IAC3C,uDAAyB;IAAA,4DAC3B;IACH,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IAVC,0DAA6C;IAA7C,0HAA6C;IAE5C,0DAAyB;IAAzB,wFAAyB;IAG1B,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,mHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;;IA6BL,yEACE;IAAA,0EACE;IAAA,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAM;IACN,0EACE;IAAA,qFASa;IANX,obAAkD;IAMpD,4DAAa;IACf,4DAAM;IACR,4DAAM;;;IAPA,0DAAuB;IAAvB,wFAAuB;;;;IAU7B,yEACE;IAAA,yEACE;IAAA,wEAAY;IAAA,4EAA8C;IAC5D,4DAAK;IACL,yEACE;IAAA,kEAAM;IAAA,4EAA8C;IACtD,4DAAK;IACL,yEACE;IAAA,iEAAK;IAAA,4EAAiD;IACxD,4DAAK;IACL,0EACE;IAAA,wEAAW;IAAA,6EAA4C;IACzD,4DAAK;IAEL,0EACE;IAAA,mEAAM;IAAA,6EAA8C;IACtD,4DAAK;IACL,0EACE;IAAA,4EAAe;IAAA,6EAA4C;IAC7D,4DAAK;IACP,4DAAK;IACL,sEACE;IAAA,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,sEACE;IAAA,6EASF;IANI,8WACuB,iCAA+B,aACnE,EAAE,YAAY,CACnB,IADmB;IALH,4DASF;IAAA,4DAAK;IACL,iEAAS;IACT,iEAAS;IACT,iEAAS;IACT,iEAAS;IACX,4DAAK;;;IAGL,yEACE;IAAA,qEACE;IAAA,wEAAiD;IAAA,uDAE/C;IAAA,4DAAI;IACR,4DAAK;IACL,qEAAI;IAAA,uDAAyB;IAAA,4DAAK;IAClC,qEAAI;IAAA,uDAA4B;IAAA,4DAAK;IACrC,qEAAI;IAAA,uDAAuB;IAAA,4DAAK;IAChC,sEAAI;IAAA,wDAA4C;IAAA,4DAAK;IACrD,sEAAI;IAAA,wDAAuB;IAAA,4DAAK;IAClC,4DAAK;;;;IATE,0DAA6C;IAA7C,0HAA6C;IAAC,0DAE/C;IAF+C,wFAE/C;IAEA,0DAAyB;IAAzB,wFAAyB;IACzB,0DAA4B;IAA5B,2FAA4B;IAC5B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAA4C;IAA5C,mHAA4C;IAC5C,0DAAuB;IAAvB,sFAAuB;;;IAI7B,qEACE;IAAA,yEAAyC;IAAA,uEAAY;IAAA,4DAAK;IAC5D,4DAAK;;;ADhqBV,MAAM,mBAAmB;IAY9B,YACS,aAA4B,EAC5B,YAA2B,EAC1B,SAA6B,EAC9B,aAA4B;QAH5B,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAe;QAC1B,cAAS,GAAT,SAAS,CAAoB;QAC9B,kBAAa,GAAb,aAAa,CAAe;QAfrC,gBAAW,GAAG,CAAC,CAAC;QAChB,iBAAY,GAAG,KAAK,CAAC;QACrB,gBAAW,GAAiB,EAAE,CAAC;IAc5B,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG;YACjB,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAE;YACnC,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,2DAAW,CAAC,GAAG,EAAE;YACzC,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,2DAAW,CAAC,aAAa,EAAE;YAC9D,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,2DAAW,CAAC,IAAI,EAAE;YAC7C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,2DAAW,CAAC,QAAQ,EAAE;YACvD,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,2DAAW,CAAC,QAAQ,EAAE;SACpD,CAAC;QACF,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,oBAAoB;QAClB,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,8FAAqB,EAAE;YACzD,MAAM,EAAE,aAAa;YACrB,UAAU,EAAE,mBAAmB;YAC/B,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,EAAE;YAC/B,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC;YAC3C,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;YACzB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;YACpD,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC5B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CACpC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,2DAAW,CAAC,GAAG,CACxC,CAAC;gBACF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAC9C,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,2DAAW,CAAC,aAAa,CAClD,CAAC;gBACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CACrC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,2DAAW,CAAC,IAAI,CACzC,CAAC;gBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CACzC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,2DAAW,CAAC,QAAQ,CAC7C,CAAC;gBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CACzC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,IAAI,2DAAW,CAAC,QAAQ,CAC7C,CAAC;gBAEF,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;YAC5C,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3C,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,KAAK,IAAI,IAAI,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;gBACtD,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;oBACZ,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;gBACvB,CAAC;gBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;oBACb,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;gBAC5C,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;aACnB,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;IACH,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,QAAQ,IAAI,EAAE;YACZ,KAAK,2DAAW,CAAC,GAAG;gBAClB,OAAO,MAAM,CAAC;YAChB,KAAK,2DAAW,CAAC,aAAa;gBAC5B,OAAO,iBAAiB,CAAC;YAC3B,KAAK,2DAAW,CAAC,IAAI;gBACnB,OAAO,SAAS,CAAC;YACnB,KAAK,2DAAW,CAAC,QAAQ;gBACvB,OAAO,eAAe,CAAC;YACzB,KAAK,2DAAW,CAAC,QAAQ;gBACvB,OAAO,WAAW,CAAC;SACtB;IACH,CAAC;IAED,gBAAgB;IAChB,UAAU,CAAC,KAAgB;QACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YAC/B,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,MAAM,GAAG,IAAI,CAAC;YAClB,IAAI,OAAO,GAAG,IAAI,CAAC;YACnB,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI;gBAAE,MAAM,GAAG,CAAC,CAAC,CAAC;iBAC7C,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI;gBAAE,MAAM,GAAG,CAAC,CAAC;iBACjD,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI;gBAAE,MAAM,GAAG,CAAC,CAAC;iBACjD,IACH,OAAO,MAAM,KAAK,QAAQ;gBAC1B,OAAO,MAAM,KAAK,QAAQ;gBAC1B,KAAK,CAAC,KAAK,IAAI,aAAa;gBAE5B,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;iBACnC,IAAI,KAAK,CAAC,KAAK,IAAI,aAAa,EAAE;gBACrC,IACE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAE7C,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1B,IACE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC7C,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAE7C,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;gBACzB,IACE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAEhD,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBAC1B,IACE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAChD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAEhD,OAAO,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC;aAC1B;;gBAAM,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,OAAO,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;;sFAjKU,mBAAmB;mGAAnB,mBAAmB;QCbhC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,kEAA4B;QAC9B,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,yEAAyB;QAAA,kEAAM;QAAA,4DAAI;QACnC,yEAAsB;QAAA,wDAAiB;QAAA,4DAAI;QAC7C,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,oEAA+B;QACjC,4DAAM;QACN,2EACE;QAAA,8EAQU;QAJR,4IAAS,0BAAsB,IAAC;QAIjC,4DAAS;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,6EACE;QAAA,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAkBE;QANA,iKAAgB,sBAAkB,IAAC;QAMnC,kIACE;QAMF,mIACE;QAkDF,mIACE;QAeF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QAEb,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAmBE;QANA,iKAAgB,sBAAkB,IAAC;QAMnC,kIACE;QAMF,mIACE;QAmDF,mIACE;QAeF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QAEb,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAmBE;QANA,iKAAgB,sBAAkB,IAAC;QAMnC,kIACE;QAMF,mIACE;QAmDF,mIACE;QAeF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QAEb,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAmBE;QANA,iKAAgB,sBAAkB,IAAC;QAMnC,kIACE;QAMF,mIACE;QAmDF,mIACE;QAeF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QAEb,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAmBE;QANA,iKAAgB,sBAAkB,IAAC;QAMnC,kIACE;QAMF,mIACE;QAmDF,mIACE;QAeF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QAEb,kFACE;QAAA,0EACE;QAAA,2EACE;QAAA,mFAkBE;QAJA,iKAAgB,sBAAkB,IAAC;QAInC,kIACE;QAkBF,mIACE;QAkDF,mIACE;QAaF,kIACE;QAIJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QACf,4DAAY;;QArqB0B,2DAAiB;QAAjB,gFAAiB;QAmC7C,2DAAmB;QAAnB,gFAAmB;QA0GnB,0DAA6B;QAA7B,0FAA6B;QA2G7B,0DAAoB;QAApB,iFAAoB;QA2GpB,0DAAwB;QAAxB,qFAAwB;QA2GxB,0DAAwB;QAAxB,qFAAwB;QA2GxB,0DAAmB;QAAnB,gFAAmB;;6FD1jBhB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAC6B;;;;;;;;;;;;;;;;;;;;;;ICsEvD,mEAIK;;;IAdb,sEAOE;IAAA,yEACE;IAAA,0EACE;IAAA,0EACE;IAAA,oIAIC;IACD,uDACF;IAAA,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACN,0EACE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACpC,4DAAM;IACN,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAsB;IAAA,4DAAI;IACpC,4DAAM;IACN,2EACE;IAAA,mEAAM;IAAA,qEAAG;IAAA,wDAAwB;IAAA,4DAAI;IACvC,4DAAM;IACN,2EACE;IAAA,uEAAK;IAAA,qEAAG;IAAA,wDAA2B;IAAA,4DAAI;IACzC,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,2EACE;IAAA,kEAAK;IAAA,qEAAG;IAAA,wDAAwB;IAAA,4DAAI;IACtC,4DAAM;IACN,2EACE;IAAA,sEACA;IAAA,qEAAG;IAAA,wDAA6B;IAAA,4DAAI;IACtC,4DAAM;IACN,2EACE;IAAA,sEACA;IAAA,qEAAG;IAAA,wDAA6B;IAAA,4DAAI;IACtC,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAnDJ,sIAIC;IAOO,0DAAoB;IAApB,iFAAoB;IAGtB,0DACF;IADE,6FACF;IAEE,0DACF;IADE,kGACF;IAEE,0DACF;IADE,wGACF;IAIU,0DAAsB;IAAtB,oFAAsB;IAGtB,0DAAsB;IAAtB,oFAAsB;IAGrB,0DAAwB;IAAxB,sFAAwB;IAGzB,0DAA2B;IAA3B,yFAA2B;IAK3B,0DAAwB;IAAxB,sFAAwB;IAI7B,0DAA6B;IAA7B,2FAA6B;IAI7B,0DAA6B;IAA7B,2FAA6B;;;IAO5C,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;IAeJ,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;IAqKQ,yEAKE;IAAA,mEAGK;IACL,uEAAM;IAAA,iEAAM;IAAA,4DAAO;IACrB,4DAAK;;;IACL,yEAKE;IAAA,mEAGK;IACL,uEAAM;IAAA,qFAA0B;IAAA,4DAAO;IACzC,4DAAK;;;IAgFjB,0EAKE;IAAA,0EACE;IAAA,0EAIE;IAAA,mEACF;IAAA,4DAAM;IACN,qEAA+D;IACjE,4DAAM;IACR,4DAAM;;;IAFgB,0DAAsC;IAAtC,qKAAsC;;;IAhJ9D,0EAIE;IAAA,0EACE;IAAA,0EAA6B;IAAA,0EAAe;IAAA,4DAAM;IAClD,yEACE;IAAA,0EACE;IAAA,wEACE;IAAA,4EACE;IAAA,yEAAsB;IAAA,gEAAK;IAAA,4DAAK;IAChC,0EAAsB;IAAA,iEAAK;IAAA,4DAAK;IAClC,4DAAQ;IACR,yEACE;IAAA,sEACE;IAAA,0EACE;IAAA,qEAAG;IAAA,wDAA4B;IAAA,4DAAI;IACrC,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAA+B;IAAA,4DAAI;IACxC,4DAAK;IACP,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,2EACE;IAAA,yEACE;IAAA,yEACE;IAAA,sEACE;IAAA,iIAKE;IAMF,iIAKE;IAMJ,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,0EACE;IAAA,2EACE;IAAA,yEACE;IAAA,6EACE;IAAA,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,gEAAI;IAAA,4DAAK;IACjC,0EAAwB;IAAA,qEAAI;IAAA,4DAAK;IACjC,0EAAwB;IAAA,+DAAG;IAAA,4DAAK;IAChC,0EAAwB;IAAA,mEAAO;IAAA,4DAAK;IACpC,0EAAwB;IAAA,mEAAO;IAAA,4DAAK;IACtC,4DAAQ;IACR,yEACE;IAAA,sEACE;IAAA,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IAEL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IAEL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACL,0EACE;IAAA,qEAAG;IAAA,wDAID;IAAA,4DAAI;IACR,4DAAK;IACP,4DAAK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,mIAKE;IAUJ,4DAAM;;;IAnIa,2DAA4B;IAA5B,8FAA4B;IAG5B,0DAA+B;IAA/B,iGAA+B;IAalC,0DAA4B;IAA5B,6FAA4B;IAW5B,0DAAyC;IAAzC,0GAAyC;IAiCtC,2DAID;IAJC,yIAID;IAGC,0DAID;IAJC,yIAID;IAIC,0DAID;IAJC,6IAID;IAGC,0DAID;IAJC,mJAID;IAIC,0DAID;IAJC,6IAID;IAGC,0DAID;IAJC,uJAID;IAGC,0DAID;IAJC,uJAID;IAUd,0DAAgC;IAAhC,iGAAgC;;;IA8D5B,0EACE;IAAA,yEACE;IAAA,0EAAiB;IAAA,uDAAU;IAAA,4DAAM;IACnC,4DAAM;IACR,4DAAM;;;IAFe,0DAAU;IAAV,yEAAU;;;IAoCzB,2EACE;IAAA,kEACF;IAAA,4DAAM;;;IACN,2EAIE;IAAA,qEACF;IAAA,4DAAM;;;IACN,2EAIE;IAAA,mEACF;IAAA,4DAAM;;;IA3BZ,0EACE;IACA,yEACE;IAAA,0EACE;IAAA,0EAA6B;IAAA,uDAAiB;IAAA,4DAAM;IACpD,0EAA6B;IAAA,uDAAe;IAAA,4DAAM;IACpD,4DAAM;IAEN,0EAKE;IAAA,gJACE;IAEF,iJAIE;IAEF,mJAIE;IAEJ,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IA1B6B,0DAAiB;IAAjB,gFAAiB;IACjB,0DAAe;IAAf,8EAAe;IAK5C,0DAAwB;IAAxB,qFAAwB;IAGnB,0DAA0B;IAA1B,oFAA0B;IAI7B,0DAA6B;IAA7B,uFAA6B;IAM7B,0DAAuC;IAAvC,iGAAuC;;;;IApF3D,0EAKE;IAAA,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,6EASU;IALR,oWAAuB;IAKxB,4DAAS;IAEV,2EAA8B;IAAA,uDAAW;IAAA,4DAAO;IAClD,4DAAM;IAEN,0EACE;IAAA,4EAAyC;IAAA,4EAAY;IAAA,4DAAQ;IAC7D,sFAWE;IAPA,6WAAqC;IAOrC,mJACE;IAMJ,4DAAiB;IACnB,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,yEAAa;IAAA,4DACf;IACD,sFAWE;IAPA,6WAAqC;IAOrC,oJACE;IAgCJ,4DAAiB;IACnB,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,4EAAgB;IAAA,4DAClB;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAA+C;IAAA,gFAAU;IAAA,4DAAQ;IACjE,6EAUF;IAHI,uXAAkC;IAPpC,4DAUF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,2EACE;IAAA,6EAAyC;IAAA,mEAAO;IAAA,4DAAQ;IACxD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,uEAAW;IAAA,4DACb;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAIG;IAAA,2EAAU;IAAA,4DACZ;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAIG;IAAA,yEAAa;IAAA,4DACf;IACD,wEASF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EACG;IAAA,sEAAU;IAAA,4DACZ;IACD,6EAUF;IAFI,wYAA6C;IAR/C,4DAUF;IAAA,4DAAM;IAEN,2EACE;IAAA,6EAAiD;IAAA,kEAAM;IAAA,4DAAQ;IAC/D,wEASF;IAAA,4DAAM;IACR,4DAAM;IAEN,2EACE;IAAA,2EACE;IAAA,kFAMa;IAJX,+WAA0B;IAI5B,4DAAa;IACf,4DAAM;IAEN,2EACE;IAAA,6EAKa;IACf,4DAAM;IAEN,2EACE;IAAA,kFAMa;IAJX,uYAA4C;IAI9C,4DAAa;IACf,4DAAM;IACN,2EACE;IAAA,6EACG;IAAA,iEAAK;IAAA,4DACP;IACD,wEAUF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;IA1QJ,gFAAmB;IAgBiB,0DAAW;IAAX,0EAAW;IAQvC,0DAA+B;IAA/B,+FAA+B;IAwB/B,0DAAe;IAAf,wEAAe;IAiLf,2DAAe;IAAf,wEAAe;IASf,0DAAe;IAAf,wEAAe;IAUf,0DAAe;IAAf,wEAAe;;;;IAiF3B,oFAOqB;;IALnB,+HAA2C;;;;AD7uB1C,MAAM,4BAA4B;IAsDvC,YACS,iBAA2C,EAC3C,cAA+B,EAC/B,YAA2B,EAC1B,aAA4B,EAC5B,SAA6B,EAC9B,GAAqB,EACrB,MAA2B,EAC1B,aAA4B;QAP7B,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC3C,mBAAc,GAAd,cAAc,CAAiB;QAC/B,iBAAY,GAAZ,YAAY,CAAe;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,cAAS,GAAT,SAAS,CAAoB;QAC9B,QAAG,GAAH,GAAG,CAAkB;QACrB,WAAM,GAAN,MAAM,CAAqB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QA3DtC,mBAAc,GAAkB,IAAI,CAAC;QACrC,oBAAe,GAAmB,IAAI,CAAC;QAIvC,aAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,YAAO,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAIzE,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QAExB,sBAAiB,GAAc,IAAI,wDAAS,CAAC;YAC3C,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACtE,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACxE,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC1B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACpC,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC/B,kBAAkB,EAAE,IAAI,wDAAS,CAAC;gBAChC,IAAI,wDAAS,CAAC;oBACZ,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACvB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACzB,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC/B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;wBAC7B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAClC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;wBAC9B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACzB,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;oBACnC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACxC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACjC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBAC5B,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;oBACpC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;wBAC9B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;wBACxB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;oBACF,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;wBACvB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;qBAC5D,CAAC;iBACH,CAAC;aACH,CAAC;SACH,CAAC,CAAC;QAYD,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;QACpD,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;oBAC9B,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBACtD,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,KACE,IAAI,KAAK,GAAG,CAAC,EACb,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAM,EACpD,KAAK,EAAE,EACP;gBACA,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;YACD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,EAAE;QACX,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,EAAE;YAC1B,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CACtD,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAClB,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,YAAY,CAAC;YACvC,IAAI,CAAC,eAAe,GAAG,GAAG,CAAC;SAC5B;IACH,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,EAAE;YAC/B,KACE,IAAI,CAAC,GAAG,CAAC,EACT,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,MAAM,EACpD,CAAC,EAAE,EACH;gBACA,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;gBACvD,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,IAAI,IAAI,EAAE;oBACjC,IAAI,GAAG,CAAC,YAAY,CAAC,EAAE,KAAK,IAAI,CAAC,cAAc,CAAC,EAAE,EAAE;wBAClD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC3B;iBACF;aACF;YACD,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,4BAA4B,EAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CACpC,CAAC;SACH;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;SAC7D;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;YACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,IAAI,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC7B,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAC1D,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAAE;wBAChE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACnC;iBACF;gBACD,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAC7D,IACE,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EACjE;wBACA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBACnC;iBACF;aACF;SACF;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;SACjE;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK;aACP,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aACzB,GAAG,CAAC,IAAI,CAAC;aACT,UAAU,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtE,IAAI,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YACrD,IACE,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,EAC3D;gBACA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC9D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjC;SACF;IACH,CAAC;IAED,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,oBAAoB,CAAc,CAAC;IACvE,CAAC;IAED,OAAO;QACL,MAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC7B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACrC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE;gBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACnC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACtC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAClC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE;gBACnE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;gBACvD,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACzB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE;YAC3C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CACpD,cAAc,CACf,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CACpD,cAAc,CACf,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;SACzC;IACH,CAAC;IAED,gBAAgB;QACd,MAAM,KAAK,GAAG,IAAI,wDAAS,CAAC;YAC1B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACjC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE;gBAC7B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,aAAa,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACrC,UAAU,EAAE,IAAI,0DAAW,CAAC,GAAG,EAAE;gBAC/B,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YAC5B,WAAW,EAAE,IAAI,0DAAW,CAAC,KAAK,CAAC;YACnC,mBAAmB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,eAAe,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACtC,YAAY,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBAClC,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,iBAAiB,EAAE;gBACnE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,EAAE;gBACvD,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;YACF,GAAG,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE;gBACzB,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,aAAa,CAAC;aAC5D,CAAC;SACH,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,UAAU,CAAC,CAAS;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAED,YAAY,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAC5E,CAAC;IAED,YAAY,CAAC,CAAC,EAAE,KAAK;QACnB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE;YAChC,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,EAAE;gBACT,KAAK,OAAO;oBACV,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,QAAQ;oBACX,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACzC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACvB,GAAG,CAAC,MAAM,CAAC;iBACX,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;SAC3D;IACH,CAAC;IAED,eAAe,CAAC,KAAqB;QACnC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACnE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;YACvC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC5B,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,EAAE;gBACT,KAAK,OAAO;oBACV,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,QAAQ;oBACX,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;oBACzC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,SAAS;oBACZ,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC;oBAC3C,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;gBACR,KAAK,KAAK;oBACR,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;oBACpC,MAAM;aACT;YACD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;iBACvB,GAAG,CAAC,MAAM,CAAC;iBACX,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACtD,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;SACxB;IACH,CAAC;IAED,gBAAgB,CAAC,CAAC,EAAE,KAAK;QACvB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;QAClC,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACnE;IACH,CAAC;IAED,oBAAoB,CAAC,CAAC,EAAE,KAAK;QAC3B,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAChC,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAC5D,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,sBAAsB,CAC7C,CAAC;SACH;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;SACpE;IACH,CAAC;IAED,UAAU,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC;IAED,SAAS,CAAC,KAAK;QACb,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACnB,CAAC,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE;gBACvC,CAAC,CAAC,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;gBACpE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC/C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,KAAK,CAAC,KAAK,EAAE,CAAC;QACZ,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;QAC/D,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;QAErD,IAAI,MAAM,EAAE;YACV,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;gBACrC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;gBACtC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,EAAE;gBACtB,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;aACF;SACF;aAAM;YACL,IAAI,KAAK,IAAI,EAAE,EAAE;gBACf,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,oBAAoB,CAC3C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,IAAI,GAAG,EAAE;gBACrC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,EAAE;gBACtC,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,qBAAqB,CAC5C,CAAC;iBACH;aACF;iBAAM,IAAI,KAAK,GAAG,GAAG,EAAE;gBACtB,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAChD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB,CAC/C,CAAC;iBACH;aACF;SACF;IACH,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,mBAAmB,CAClB,IAAI,CAAC,SAAS,CAAC,WAAW,EAC1B,IAAI,CAAC,aAAa,CAAC,EAAE,EACrB,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAC7B;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACf,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;gBACvC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;;wGAtgBU,4BAA4B;4GAA5B,4BAA4B;QCtBzC,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA6C;QAAA,6EAAa;QAAA,4DAAQ;QAClE,gFAYa;QAVX,8JAAY,oBAAgB,IAAC;QAU/B,4DAAa;QACf,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,0EACE;QAAA,oFAOiB;QAFf,2MAAsB;QAEvB,4DAAgB;QACjB,oFAQgB;QAHd,2MAAsB;QAGxB,4DAAgB;QAClB,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,4EACG;QAAA,sFAAqB;QAAA,4DACvB;QACD,sFAYE;QALA,qLAAkB,yBAAqB,IAAC,iHAG5B,2BAAuB,IAHK;QAKxC,6IACE;QAsDJ,4DAAiB;QACjB,uHAOE;QAEJ,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,6EACG;QAAA,uFAAsB;QAAA,4DACxB;QACD,wEAOA;QAAA,uHAOE;QAEJ,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,kFAMa;QAJX,qKAAY,qBAAiB,IAAC;QAIhC,4DAAa;QACf,4DAAM;QACR,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,6EAKa;QACf,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,2EACE;QAAA,2EACE;QAAA,0EACE;QAAA,2EAA6B;QAAA,8EAAkB;QAAA,4DAAM;QACrD,0EACE;QAAA,2EACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAAsB;QAAA,iEAAK;QAAA,4DAAK;QAChC,0EAAwB;QAAA,4EAAW;QAAA,4DAAK;QACxC,0EAAwB;QAAA,wEAAY;QAAA,4DAAK;QACzC,0EAAwB;QAAA,4EAAW;QAAA,4DAAK;QACxC,0EAAwB;QAAA,wEAAY;QAAA,4DAAK;QAC3C,4DAAQ;QACR,yEACE;QAAA,sEACE;QAAA,0EAAsB;QAAA,gEAAI;QAAA,4DAAK;QAC/B,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,kEAAM;QAAA,4DAAK;QACjC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,mEAAO;QAAA,4DAAK;QAClC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,oEAAQ;QAAA,4DAAK;QACnC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACL,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,2EACE;QAAA,yEACE;QAAA,0EACE;QAAA,kEAAS;QACT,2EAAwB;QAAA,iEAAI;QAAA,4DAAK;QACnC,4DAAQ;QACR,0EACE;QAAA,uEACE;QAAA,uEAAI;QAAA,gEAAG;QAAA,4DAAK;QACZ,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACL,uEACE;QAAA,uEAAI;QAAA,gEAAG;QAAA,4DAAK;QACZ,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,+HAIE;QAgJJ,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,kEACA;QAAA,4EACE;QAAA,4EACE;QAAA,yEAAM;QAAA,sEAAG;QAAA,mEAAM;QAAA,4DAAI;QAAA,4DAAO;QAC5B,4DAAM;QACR,4DAAM;QAEN,4EACE;QAAA,+HAKE;QA0QF,2EACE;QAAA,4EAGE;QAAA,+EASU;QALR,sJAAS,aAAS,IAAC;QAKpB,4DAAS;QAEV,+EAUU;QALR,sJAAS,uBAAmB,IAAC;QAK9B,4DAAS;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,4EACE;QAAA,4EACE;QAAA,+EASU;QALR,sJAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,4EACE;QAAA,+EAUU;QALR,sJAAS,yBAAqB,IAAC;QAKhC,4DAAS;QACV,yJAOC;QACH,4DAAM;QACR,4DAAM;;QAzwBE,0DAA+B;QAA/B,4FAA+B;QAOzB,0DAAwC;QAAxC,qGAAwC;QAqBxC,0DAAsB;QAAtB,iFAAsB;QAQtB,0DAAsB;QAAtB,iFAAsB;QAYtB,0DAAwC;QAAxC,8IAAwC;QAqExC,0DAGC;QAHD,qLAGC;QAgBD,0DAAmD;QAAnD,gHAAmD;QAInD,0DAGC;QAHD,iLAGC;QASD,0DAA4C;QAA5C,yGAA4C;QAW5C,0DAAiD;QAAjD,8GAAiD;QA4BrC,2DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAEE,0DACF;QADE,oJACF;QAKE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAKE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,qJACF;QAKE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAEE,0DACF;QADE,wJACF;QAiBE,2DACF;QADE,kIACF;QAKE,0DACF;QADE,kIACF;QAWZ,0DAA+B;QAA/B,6FAA+B;QAiKnC,0DAA+C;QAA/C,uFAA+C;QA6R3C,0DAA8B;QAA9B,2FAA8B;QA+BpC,0DAAsE;QAAtE,2IAAsE;QAWtE,0DAAe;QAAf,6EAAe;;6FD5uBR,4BAA4B;cALxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,2BAA2B;gBACrC,WAAW,EAAE,wCAAwC;gBACrD,SAAS,EAAE,CAAC,wCAAwC,CAAC;aACtD;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACkB;;;;;;;;;;;;;;;;;ICiB5D,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;IAqBJ,wEAOE;IAAA,0FACF;IAAA,4DAAI;;;;IAgER,mFAOqB;;IALnB,+HAA2C;;;AD1G1C,MAAM,qBAAqB;IAmDhC,YACS,YAA2B,EAC1B,SAA6B,EAC7B,KAAqB,EACrB,MAAc,EACf,GAAqB;QAJrB,iBAAY,GAAZ,YAAY,CAAe;QAC1B,cAAS,GAAT,SAAS,CAAoB;QAC7B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACf,QAAG,GAAH,GAAG,CAAkB;QAvD9B,UAAK,GAAiB,MAAM,CAAC;QAE7B,YAAO,GAAG,KAAK,CAAC;QAChB,OAAE,GAAG;YACH,cAAc,EAAE,CAAC;YACjB,QAAQ,EAAE;gBACR,WAAW;gBACX,cAAc;gBACd,QAAQ;gBACR,OAAO;gBACP,UAAU;gBACV,QAAQ;gBACR,QAAQ;aACT;YACD,aAAa,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC;YAC/D,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YACvD,UAAU,EAAE;gBACV,SAAS;gBACT,MAAM;gBACN,QAAQ;gBACR,UAAU;gBACV,KAAK;gBACL,UAAU;gBACV,QAAQ;gBACR,UAAU;gBACV,UAAU;gBACV,aAAa;gBACb,UAAU;gBACV,UAAU;aACX;YACD,eAAe,EAAE;gBACf,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;aACN;YACD,KAAK,EAAE,MAAM;YACb,KAAK,EAAE,SAAS;YAChB,UAAU,EAAE,UAAU;YACtB,UAAU,EAAE,IAAI;SACjB,CAAC;IAQC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,IAAI,EAAE,CAAC;YACtC,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;YACrE,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;SACnE,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,CAAC;QACnC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC5D,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,sBAAsB,EAAE,GAAG,CAAC,WAAW,CAAC,EAAE;oBAC9D,UAAU,EAAE,IAAI,CAAC,KAAK;iBACvB,CAAC,CAAC;gBACH,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBACxC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IACD,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;;0FA3FU,qBAAqB;qGAArB,qBAAqB;QCflC,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,2EAA8C;QAAA,4EAAiB;QAAA,4DAAQ;QAEvE,2EAUc;QAEd,6GAOE;QAEJ,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,4EAA2C;QAAA,oEAAQ;QAAA,4DAAQ;QAE3D,4EAWa;QAEb,+GAOE;QAEJ,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,6EAA8C;QAAA,uEAAW;QAAA,4DAAQ;QAEjE,6EASa;QACf,4DAAM;QAEN,0EACE;QAAA,6EAAgD;QAAA,0EAAc;QAAA,4DAAQ;QAEtE,wEAWF;QAAA,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,8EASU;QALR,8IAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,2EACE;QAAA,8EAUU;QALR,8IAAS,cAAU,IAAC;QAKrB,4DAAS;QACV,gJAOC;QACH,4DAAM;QACR,4DAAM;;QA/HE,0DAAuB;QAAvB,oFAAuB;QAMrB,0DAA2B;QAA3B,gIAA2B;QAI3B,mGAAsC;QAStC,0DAGC;QAHD,+JAGC;QAaD,0DAA2B;QAA3B,gIAA2B;QAG3B,gGAAmC;QAUnC,0DAGC;QAHD,yJAGC;QAcD,0DAAuB;QAAvB,gFAAuB;QAgBvB,0DAA4C;QAA5C,yGAA4C;QA2BhD,0DAAyC;QAAzC,0GAAyC;QAWzC,0DAAe;QAAf,6EAAe;;6FDzGR,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;AAkBsC;AACS;AACc;AACd;AAMlF;AAG8E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICfnG,0EACE;IAAA,qEACF;IAAA,4DAAM;;;IADe,0DAAgC;IAAhC,6JAAgC;;;IAErD,wEACE;IAAA,uDACF;IAAA,4DAAI;;;IADF,0DACF;IADE,qIACF;;;IAoUY,yEACE;IAAA,yEAAe;IAAA,8DAAG;IAAA,4DAAK;IACvB,yEAAmB;IAAA,6EAAa;IAAA,4DAAK;IACrC,yEAAqB;IAAA,6EAAa;IAAA,4DAAK;IACvC,yEAAqB;IAAA,oEAAS;IAAA,4DAAK;IACnC,yEAAoB;IAAA,kEAAM;IAAA,4DAAK;IAC/B,qEAAkD;IACpD,4DAAK;;;IAuBG,yEACE;IAAA,yEAAiB;IAAA,iEAAM;IAAA,4DAAK;IAC5B,yEAAwB;IAAA,qEAAU;IAAA,4DAAK;IACvC,yEAAuB;IAAA,qEAAU;IAAA,4DAAK;IACtC,yEAAgB;IAAA,iEAAM;IAAA,4DAAK;IAC3B,yEAAqB;IAAA,8EAAQ;IAAA,4DAAK;IAClC,0EAAgB;IAAA,qEAAS;IAAA,4DAAK;IAC9B,0EAA4C;IAAA,8DAAE;IAAA,4DAAK;IACnD,0EAA2C;IAAA,8DAAE;IAAA,4DAAK;IAClD,0EAAwC;IAAA,+DAAG;IAAA,4DAAK;IAClD,4DAAK;;;IAGL,yEACE;IAAA,yEAAiB;IAAA,uDAAkB;IAAA,4DAAK;IACxC,yEACE;IAAA,uDACF;IAAA,4DAAK;IACL,yEAAuB;IAAA,uDAAuB;IAAA,4DAAK;IACnD,yEAAgB;IAAA,uDAAmB;IAAA,4DAAK;IACxC,yEAAqB;IAAA,wDAAwB;IAAA,4DAAK;IAClD,0EAAgB;IAAA,wDAAyB;IAAA,4DAAK;IAC9C,0EAAc;IAAA,wDAAuB;IAAA,4DAAK;IAC1C,0EAAc;IAAA,wDAAqB;IAAA,4DAAK;IACxC,0EACE;IAAA,wDAKF;IAAA,4DAAK;IACP,4DAAK;;;IAjBc,0DAAkB;IAAlB,iFAAkB;IAEjC,0DACF;IADE,kGACF;IACuB,0DAAuB;IAAvB,sFAAuB;IAC9B,0DAAmB;IAAnB,kFAAmB;IACd,0DAAwB;IAAxB,uFAAwB;IAC7B,0DAAyB;IAAzB,wFAAyB;IAC3B,0DAAuB;IAAvB,sFAAuB;IACvB,0DAAqB;IAArB,oFAAqB;IAEjC,0DAKF;IALE,0IAKF;;;;IA4BN,8EAQU;IAHR,wbAA8B;IAG/B,4DAAS;;;;IAtFd,yEACE;IAAA,yEAAe;IAAA,uDAA4B;IAAA,4DAAK;IAChD,yEAAmB;IAAA,uDAAwB;IAAA,4DAAK;IAChD,yEAAqB;IAAA,uDAA0B;IAAA,4DAAK;IAEpD,yEACE;IAAA,uEAGE;IAAA,uDACF;IAAA,4DAAO;IACT,4DAAK;IAEL,0EACE;IAAA,+EAKE;IAAA,qJACE;IAYF,qJACE;IAoBJ,4DAAU;IACZ,4DAAK;IACL,0EACE;IAAA,8EAUU;IAHR,yYAAkD;IAGnD,4DAAS;IACV,8EASU;IAHR,wXAAiC;IAGlC,4DAAS;IAEV,0IAQC;IACH,4DAAK;IACP,4DAAK;;;;IAvFY,0DAA4B;IAA5B,0FAA4B;IACxB,0DAAwB;IAAxB,sFAAwB;IACtB,0DAA0B;IAA1B,wFAA0B;IAI3C,0DAAqD;IAArD,wGAAqD;IAErD,0DACF;IADE,+GACF;IAKE,0DAAoC;IAApC,gGAAoC;IA+CpC,0DAAsD;IAAtD,sHAAsD;IAiBtD,0DAAoB;IAApB,qFAAoB;;;IAuGpB,2EAIE;IAAA,2EACE;IAAA,0EACE;IAAA,2EAOE;IAAA,sFACF;IAAA,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,2EAIE;IAAA,uDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAJE,0DACF;IADE,0GACF;;;IAjHZ,qEACE;IAAA,qEAA0C;IAC1C,0EACE;IAAA,2EACE;IAAA,2EACE;IAAA,2EACE;IAAA,0EACE;IAAA,2EAQE;IAAA,uEACF;IAAA,4DAAM;IACR,4DAAM;IACN,0EACE;IAAA,4EAIE;IAAA,wDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,4EACE;IAAA,2EACE;IAAA,4EAQE;IAAA,oFACF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,4EAIE;IAAA,wDACF;IAAA,4DAAM;IACN,4EAOE;IAAA,wDACF;IAAA,4DAAM;IACN,4EAOE;IAAA,wDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,4EACE;IAAA,4EACE;IAAA,2EACE;IAAA,4EAOE;IAAA,+EACF;IAAA,4DAAM;IACR,4DAAM;IACN,2EACE;IAAA,4EAIE;IAAA,wDACF;IAAA,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACN,qIAIE;IAsBJ,4DAAM;IACR,4DAAK;IACP,4DAAK;;;IAhGS,2DACF;IADE,2GACF;IAqBE,0DACF;IADE,qGACF;IAQE,0DACF;IADE,mGACF;IAQE,0DACF;IADE,2GACF;IAsBE,0DACF;IADE,oGACF;IAMJ,0DAA8B;IAA9B,+FAA8B;;;IA6BtC,qEACE;IAAA,0EACE;IAAA,yEACF;IAAA,4DAAK;IACP,4DAAK;;IAHC,0DAAkB;IAAlB,uEAAkB;;;;IA0EpC,oFAOqB;;IALnB,+HAA2C;;;IAsD7C,oFAOqB;;IALnB,+HAA2C;;;;AD1pB5C,MAAM,aAAa;IACxB,YAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAAG,CAAC;IAEnD,OAAO,CACL,KAA6B,EAC7B,KAA0B;QAE1B,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAClE,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,CAAC;;0EATU,aAAa;gGAAb,aAAa,WAAb,aAAa;6FAAb,aAAa;cADzB,wDAAU;;AAkBJ,MAAM,qBAAqB;IA0BhC,YACU,KAAqB,EACrB,SAA6B,EAC9B,IAAiB,EAChB,aAA4B,EAC5B,mBAAwC,EACxC,MAAc,EACd,YAA2B,EAC3B,cAA+B,EAChC,aAA4B,EAC5B,iBAA2C,EAC3C,iBAAoC,EACpC,aAA4B;QAX3B,UAAK,GAAL,KAAK,CAAgB;QACrB,cAAS,GAAT,SAAS,CAAoB;QAC9B,SAAI,GAAJ,IAAI,CAAa;QAChB,kBAAa,GAAb,aAAa,CAAe;QAC5B,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAe;QAC3B,mBAAc,GAAd,cAAc,CAAiB;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,sBAAiB,GAAjB,iBAAiB,CAA0B;QAC3C,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,kBAAa,GAAb,aAAa,CAAe;QAlCrC,iBAAY,GAAG,KAAK,CAAC;QACrB,sBAAiB,GAAG,KAAK,CAAC;QAC1B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,sBAAiB,GAAG,KAAK,CAAC;QAC1B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,sBAAiB,GAAG,IAAI,CAAC;QAEzB,aAAQ,GAAW,CAAC,CAAC;QACrB,qBAAgB,GAAW,CAAC,CAAC;QAC7B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,gBAAW,GAAW,CAAC,CAAC;QAExB,cAAS,GAAG;YACV,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,2DAAW,CAAC,GAAG,EAAE;YACzC,EAAE,KAAK,EAAE,iBAAiB,EAAE,KAAK,EAAE,2DAAW,CAAC,aAAa,EAAE;YAC9D,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,2DAAW,CAAC,IAAI,EAAE;YAC7C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,2DAAW,CAAC,QAAQ,EAAE;YACvD,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,2DAAW,CAAC,QAAQ,EAAE;SACpD,CAAC;IAeC,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;YACxB,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC;gBACzC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;gBACvC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5B,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC;qBACV;oBACD,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC,CAAC;qBACX;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CACjD,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAC9C,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAChC,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBACrC,IACE,CAAC,CAAC,IAAI,IAAI,KAAK;4BACf,CAAC,CAAC,IAAI,IAAI,KAAK;4BACf,CAAC,CAAC,IAAI,IAAI,SAAS;4BACnB,CAAC,CAAC,IAAI,IAAI,SAAS;4BACnB,CAAC,CAAC,IAAI,IAAI,KAAK,EACf;4BACA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC,CAAC;6BACX;4BACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC;6BACV;yBACF;6BAAM;4BACL,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC,CAAC;6BACX;4BACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC;6BACV;yBACF;wBACD,OAAO,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3C,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YAC7C,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;QAChD,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,cAAc,EAAE,CAAC;QAExC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAClD,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;YACzD,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;gBACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5B,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC;qBACV;oBACD,IAAI,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE;wBACjC,OAAO,CAAC,CAAC,CAAC;qBACX;oBACD,OAAO,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CACjD,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,CAC9C,CAAC;gBACF,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;oBAChC,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;wBACrC,IACE,CAAC,CAAC,IAAI,IAAI,KAAK;4BACf,CAAC,CAAC,IAAI,IAAI,KAAK;4BACf,CAAC,CAAC,IAAI,IAAI,SAAS;4BACnB,CAAC,CAAC,IAAI,IAAI,SAAS;4BACnB,CAAC,CAAC,IAAI,IAAI,KAAK,EACf;4BACA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC,CAAC;6BACX;4BACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC;6BACV;yBACF;6BAAM;4BACL,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC,CAAC;6BACX;4BACD,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE;gCACnB,OAAO,CAAC,CAAC;6BACV;yBACF;wBACD,OAAO,CAAC,CAAC;oBACX,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC5B,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC;YACzC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;IAClD,CAAC;IAED,iBAAiB,CAAC,IAAI;QACpB,QAAQ,IAAI,EAAE;YACZ,KAAK,2DAAW,CAAC,GAAG;gBAClB,OAAO,MAAM,CAAC;YAChB,KAAK,2DAAW,CAAC,aAAa;gBAC5B,OAAO,iBAAiB,CAAC;YAC3B,KAAK,2DAAW,CAAC,IAAI;gBACnB,OAAO,SAAS,CAAC;YACnB,KAAK,2DAAW,CAAC,QAAQ;gBACvB,OAAO,eAAe,CAAC;YACzB,KAAK,2DAAW,CAAC,QAAQ;gBACvB,OAAO,WAAW,CAAC;SACtB;IACH,CAAC;IAED,sBAAsB;QACpB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACpC,IAAI,CAAC,YAAY;aACd,iBAAiB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC;aAC3D,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;gBAClD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;gBACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;gBAChD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;YACnC,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,IAAmB;QAC7B,IAAI,GAAG,GAAG,IAAI,CAAC;QACf,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC;QACd,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;YACzC,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC;YACrE,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAClB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAC1C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EACL,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI;YACnE,MAAM,EAAE,eAAe;YACvB,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,aAAa;YACzB,sBAAsB,EAAE,2BAA2B;YACnD,sBAAsB,EAAE,8BAA8B;YACtD,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;oBAC9D,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;wBAC3C,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;wBACzC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACrB,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;oBAC3C,CAAC;iBACF,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,OAAsB;QACnC,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC;YAC/B,OAAO,EAAE,kCAAkC,GAAG,OAAO,CAAC,YAAY,GAAG,IAAI;YACzE,MAAM,EAAE,eAAe;YACvB,WAAW,EAAE,KAAK;YAClB,WAAW,EAAE,KAAK;YAClB,UAAU,EAAE,aAAa;YACzB,sBAAsB,EAAE,2BAA2B;YACnD,sBAAsB,EAAE,8BAA8B;YACtD,MAAM,EAAE,GAAG,EAAE;gBACX,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC;gBACxC,IAAI,CAAC,YAAY;qBACd,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC;qBACvD,SAAS,CAAC;oBACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;wBACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAChB,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,CAAC;wBACzC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;oBAC9C,CAAC;oBACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;wBACb,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;oBAC5C,CAAC;iBACF,CAAC,CAAC;YACP,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,0BAA0B;QACxB,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oHAA0B,EAAE;YAC9D,MAAM,EAAE,oCAAoC;YAC5C,IAAI,EAAE,IAAI,CAAC,KAAK;SACjB,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,+GAAyB,EAAE;YAC7D,MAAM,EAAE,cAAc;YACtB,IAAI,EAAE,IAAI,CAAC,KAAK;SACjB,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAA+B,CAAC,OAAO;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,wHAA4B,EAAE;YAChE,MAAM,EAAE,sBAAsB;YAC9B,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC;SAC5B,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,OAAO,CAAC,GAAG,CAAC,6CAA6C,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,wHAA4B,EAAE;YAChE,MAAM,EAAE,mCAAmC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;YACpE,IAAI,EAAE,IAAI,CAAC,KAAK;YAChB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAkC;QAChC,MAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,sIAAgC,EAAE;YACpE,MAAM,EAAE,mCAAmC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;YACpE,IAAI,EAAE,IAAI,CAAC,KAAK;SACjB,CAAC,CAAC;QAEH,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5B,IAAI,GAAG,EAAE;gBACP,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YACD,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAA4C;IAE5C,uBAAuB;QACrB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACjC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAClE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,eAAe;QACb,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACtE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;;0FApYU,qBAAqB;qGAArB,qBAAqB;QCnDlC,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,4EAQU;QAJR,6IAAS,iBAAa,IAAC;QAIxB,4DAAS;QACZ,4DAAM;QAEN,yEACE;QAAA,iHACE;QAEF,6GACE;QAEJ,4DAAM;QACR,4DAAM;QAEN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EACE;QAAA,mEAA4B;QAC9B,4DAAM;QACN,2EAA2B;QAAA,wDAAwB;QAAA,4DAAM;QACzD,2EAA4B;QAAA,wEAAY;QAAA,4DAAM;QAChD,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAA0B;QAC5B,4DAAM;QACN,2EAA2B;QAAA,wDAAwB;QAAA,4DAAM;QACzD,2EAA4B;QAAA,sEAAU;QAAA,4DAAM;QAC9C,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAAkC;QACpC,4DAAM;QACN,2EACE;QAAA,wDACF;QAAA,4DAAM;QACN,2EAA4B;QAAA,kEAAM;QAAA,4DAAM;QAC1C,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAA8B;QAChC,4DAAM;QACN,2EACE;QAAA,wDACF;;QAAA,4DAAM;QACN,2EAA4B;QAAA,uEAAW;QAAA,4DAAM;QAC/C,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAAiC;QACnC,4DAAM;QACN,2EAA2B;QAAA,wDAAsB;QAAA,4DAAM;QACvD,2EAA4B;QAAA,kFAAsB;QAAA,4DAAM;QAC1D,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAAgC;QAClC,4DAAM;QACN,2EACE;QAAA,2EACE;QAAA,yEACE;QAAA,yEACE;QAAA,sEACE;QAAA,0EAAsB;QAAA,wEAAO;QAAA,4DAAK;QAClC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,iEAAK;QAAA,4DAAK;QAChC,0EAAwB;QAAA,wDAA+B;QAAA,4DAAK;QAC9D,4DAAK;QACL,sEACE;QAAA,0EAAsB;QAAA,sEAAU;QAAA,4DAAK;QACrC,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,0EAA6B;QAAA,sEAAU;QAAA,4DAAK;QAC5C,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,2EACE;QAAA,yEACE;QAAA,yEACE;QAAA,iEAAS;QACT,0EAAwB;QAAA,gEAAI;QAAA,4DAAK;QACnC,4DAAQ;QACR,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,+DAAG;QAAA,4DAAK;QACZ,0EACE;QAAA,wDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,oEAA2B;QAC7B,4DAAM;QACN,2EACE;QAAA,0EACE;QAAA,0EACE;QAAA,2EAAsB;QAAA,kEAAK;QAAA,4DAAK;QAChC,2EAAwB;QAAA,6EAAW;QAAA,4DAAK;QACxC,2EAAwB;QAAA,yEAAY;QAAA,4DAAK;QACzC,2EAAwB;QAAA,6EAAW;QAAA,4DAAK;QACxC,2EAAwB;QAAA,yEAAY;QAAA,4DAAK;QAC3C,4DAAQ;QACR,0EACE;QAAA,uEACE;QAAA,2EAAsB;QAAA,iEAAI;QAAA,4DAAK;QAC/B,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACL,uEACE;QAAA,2EAAsB;QAAA,mEAAM;QAAA,4DAAK;QACjC,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACL,uEACE;QAAA,2EAAsB;QAAA,oEAAO;QAAA,4DAAK;QAClC,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACL,uEACE;QAAA,2EAAsB;QAAA,qEAAQ;QAAA,4DAAK;QACnC,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACL,2EACE;QAAA,yDACF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACN,4EAAgC;QAAA,4EAAe;QAAA,4DAAM;QACvD,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,qEAAyB;QAC3B,4DAAM;QACN,4EACE;QAAA,+EAOU;QAJR,+IAAS,mCAA+B,IAAC;QAI1C,4DAAS;QACV,+EAOU;QAJR,+IAAS,wCAAoC,IAAC;QAI/C,4DAAS;QACZ,4DAAM;QACN,4EAAgC;QAAA,uEAAU;QAAA,4DAAM;QAClD,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,4EAIE;QAAA,4EACE;QAAA,iFAEiB;QACnB,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,4EACE;QAAA,kFACE;QAAA,4EACE;QAAA,+EAUU;QALR,+IAAS,kCAA8B,IAAC;QAKzC,4DAAS;QAEV,+EASU;QALR,+IAAS,gCAA4B,IAAC;QAKvC,4DAAS;QAEV,+EASU;QALR,+IAAS,4BAAwB,IAAC;QAKnC,4DAAS;QAEV,+EAQU;QALR,+IAAS,6BAAyB,IAAC;QAKpC,4DAAS;QACZ,4DAAM;QAEN,4EACE;QAAA,+EAQU;QALR,+IAAS,iBAAa,IAAC;QAKxB,4DAAS;QACZ,4DAAM;QACR,4DAAY;QACd,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,4EACE;QAAA,8EACE;QAAA,mFACE;QAAA,4EACE;QAAA,4EACE;QAAA,gFAWE;QAAA,uIACE;QASF,wIACE;QA0FF,uIACE;QAyHF,sIACE;QAMJ,4DAAU;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAa;QACb,mFACE;QAAA,uFAGuB;QACzB,4DAAa;QACb,mFACE;QAAA,iGAG4B;QAD1B,qKAAW,cAAU,IAAC;QACvB,4DAA2B;QAC9B,4DAAa;QACb,mFACE;QAAA,kFAAiD;QACnD,4DAAa;QACf,4DAAY;QACd,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,iFAKE;QAHA,yMAA+B;QAG/B,4EACE;QAAA,4EACE;QAAA,4EACE;QAAA,+EAOU;QAFR,+IAAS,gBAAY,IAAC;QAEvB,4DAAS;QACZ,4DAAM;QAEN,4EACE;QAAA,+EAOU;QAFR,+IAAS,qBAAiB,IAAC;QAE5B,4DAAS;QACZ,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,4EACE;QAAA,+EASU;QALR,+IAAS,qBAAiB,IAAC;QAK5B,4DAAS;QACZ,4DAAM;QACN,4EACE;QAAA,kJAOC;QACH,4DAAM;QACR,4DAAM;QACR,4DAAW;QAGX,iFACE;QADgC,2MAAiC;QACjE,4EACE;QAAA,2EACE;QAAA,4EACE;QAAA,uFAUa;QAPX,2MAA+B;QAOjC,4DAAa;QACf,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EACE;QAAA,4EACE;QAAA,+EASU;QALR,yKAA+B,KAAK,IAAC;QAKtC,4DAAS;QACZ,4DAAM;QACN,4EACE;QAAA,+EAUU;QALR,+IAAS,uBAAmB,IAAC;QAK9B,4DAAS;QACV,kJAOC;QACH,4DAAM;QACR,4DAAM;QACR,4DAAW;;QArrBoB,0DAAgC;QAAhC,8FAAgC;QAGtD,0DAAiC;QAAjC,+FAAiC;QAYP,0DAAwB;QAAxB,iHAAwB;QAUxB,0DAAwB;QAAxB,iHAAwB;QAWjD,0DACF;QADE,wHACF;QAWE,0DACF;QADE,2MACF;QAY2B,2DAAsB;QAAtB,+GAAsB;QAiBrC,2DACF;QADE,yIACF;QAIwB,0DAA+B;QAA/B,wHAA+B;QAKrD,0DACF;QADE,wIACF;QAKE,0DACF;QADE,8IACF;QAeE,2DACF;QADE,yHACF;QAKE,0DACF;QADE,yHACF;QA2BA,2DACF;QADE,iHACF;QAEE,0DACF;QADE,iHACF;QAEE,0DACF;QADE,iHACF;QAEE,0DACF;QADE,iHACF;QAKE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAKE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAEE,0DACF;QADE,kHACF;QAKE,0DACF;QADE,qHACF;QAEE,0DACF;QADE,qHACF;QAEE,0DACF;QADE,qHACF;QAEE,0DACF;QADE,qHACF;QAuCZ,2DAA+D;QAA/D,0LAA+D;QAI3D,0DAA4C;QAA5C,yGAA4C;QAUxC,0DAAsD;QAAtD,mHAAsD;QAkElD,2DAAwB;QAAxB,qFAAwB;QAsP5B,0DAA2B;QAA3B,wFAA2B;QAM3B,0DAAe;QAAf,4EAAe;QAKD,0DAAe;QAAf,4EAAe;QAUvC,0DAA+B;QAA/B,0FAA+B;QA2CzB,2DAAyB;QAAzB,uFAAyB;QAYC,0DAAiC;QAAjC,4FAAiC;QAOzD,0DAA+B;QAA/B,0FAA+B;QA0BjC,0DAAgC;QAAhC,6FAAgC;QAWhC,0DAA2B;QAA3B,yFAA2B;;6FDxoBtB,qBAAqB;cALjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;AElDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACwC;AACrB;;;AAG1E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAmB,EAAE;IAC5C;QACE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,4FAAqB;QACpD,OAAO,EAAE;YACP,KAAK,EAAE,oFAAa;SACrB;KACF;CACF,CAAC;AAMK,MAAM,mBAAmB;;kGAAnB,mBAAmB;gKAAnB,mBAAmB,kBAHrB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,mBAAmB,uFAFpB,4DAAY;6FAEX,mBAAmB;cAJ/B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACe;AACY;AACR;AACK;AACZ;AACA;AACJ;AACe;AACT;AACH;AACZ;AACI;AACR;AACQ;AACc;AACJ;AACJ;AACV;AACI;AACyB;AAC7B;AACI;AACI;AACE;AACJ;AACA;AACI;AACN;AACM;AACA;AACV;AACF;AACA;AACI;AACA;AACI;AAC8B;AAClB;AAIf;AACkD;AACS;AACA;AAC5D;AAC0E;AACnD;AACe;AACc;AACI;AAChD;;AA6DjD,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,mBAFZ,CAAC,oEAAa,EAAE,qFAAa,CAAC,YA3ChC;YACP,4DAAY;YACZ,0EAAmB;YACnB,oEAAa;YACb,sEAAc;YACd,0DAAW;YACX,0DAAW;YACX,gEAAc;YACd,4DAAY;YACZ,2EAAgB;YAChB,4DAAY;YACZ,gEAAc;YACd,8EAAqB;YACrB,kEAAmB;YACnB,8DAAa;YACb,wEAAe;YACf,wEAAe;YACf,gEAAc;YACd,mFAAoB;YACpB,gEAAc;YACd,sEAAiB;YACjB,4DAAY;YACZ,kEAAe;YACf,sEAAiB;YACjB,wEAAkB;YAClB,oFAAqB;YACrB,sEAAiB;YACjB,0EAAmB;YACnB,gEAAc;YACd,sEAAiB;YACjB,kEAAe;YACf,4DAAY;YACZ,oEAAgB;YAChB,0DAAW;YACX,sEAAc;YACd,wDAAU;YACV,sEAAiB;YACjB,0EAAmB;YACnB,8DAAa;YACb,kEAAe;YACf,8EAAqB;YACrB,8DAAa;SACd;mIAGU,YAAY,mBAzDrB,sFAAmB;QACnB,+FAAqB;QACrB,6FAAqB;QACrB,gHAAyB;QACzB,yHAA4B;QAC5B,yHAA4B;QAC5B,uIAAgC;QAChC,oFAAkB;QAClB,mGAAuB;QACvB,iHAA2B;QAC3B,qHAA0B,aAG1B,4DAAY;QACZ,0EAAmB;QACnB,oEAAa;QACb,sEAAc;QACd,0DAAW;QACX,0DAAW;QACX,gEAAc;QACd,4DAAY;QACZ,2EAAgB;QAChB,4DAAY;QACZ,gEAAc;QACd,8EAAqB;QACrB,kEAAmB;QACnB,8DAAa;QACb,wEAAe;QACf,wEAAe;QACf,gEAAc;QACd,mFAAoB;QACpB,gEAAc;QACd,sEAAiB;QACjB,4DAAY;QACZ,kEAAe;QACf,sEAAiB;QACjB,wEAAkB;QAClB,oFAAqB;QACrB,sEAAiB;QACjB,0EAAmB;QACnB,gEAAc;QACd,sEAAiB;QACjB,kEAAe;QACf,4DAAY;QACZ,oEAAgB;QAChB,0DAAW;QACX,sEAAc;QACd,wDAAU;QACV,sEAAiB;QACjB,0EAAmB;QACnB,8DAAa;QACb,kEAAe;QACf,8EAAqB;QACrB,8DAAa;6FAIJ,YAAY;cA3DxB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,sFAAmB;oBACnB,+FAAqB;oBACrB,6FAAqB;oBACrB,gHAAyB;oBACzB,yHAA4B;oBAC5B,yHAA4B;oBAC5B,uIAAgC;oBAChC,oFAAkB;oBAClB,mGAAuB;oBACvB,iHAA2B;oBAC3B,qHAA0B;iBAC3B;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,0EAAmB;oBACnB,oEAAa;oBACb,sEAAc;oBACd,0DAAW;oBACX,0DAAW;oBACX,gEAAc;oBACd,4DAAY;oBACZ,2EAAgB;oBAChB,4DAAY;oBACZ,gEAAc;oBACd,8EAAqB;oBACrB,kEAAmB;oBACnB,8DAAa;oBACb,wEAAe;oBACf,wEAAe;oBACf,gEAAc;oBACd,mFAAoB;oBACpB,gEAAc;oBACd,sEAAiB;oBACjB,4DAAY;oBACZ,kEAAe;oBACf,sEAAiB;oBACjB,wEAAkB;oBAClB,oFAAqB;oBACrB,sEAAiB;oBACjB,0EAAmB;oBACnB,gEAAc;oBACd,sEAAiB;oBACjB,kEAAe;oBACf,4DAAY;oBACZ,oEAAgB;oBAChB,0DAAW;oBACX,sEAAc;oBACd,wDAAU;oBACV,sEAAiB;oBACjB,0EAAmB;oBACnB,8DAAa;oBACb,kEAAe;oBACf,8EAAqB;oBACrB,8DAAa;iBACd;gBACD,SAAS,EAAE,CAAC,oEAAa,EAAE,qFAAa,CAAC;aAC1C;;;;;;;;;;;;;;ACjHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACM;;;;;;;;;;;;;;IC6PpD,mFAOqB;;IALnB,+HAA2C;;ADpP1C,MAAM,gCAAgC;IAK3C,YACU,SAA6B,EAC9B,GAAqB,EACpB,YAA2B,EAC5B,MAA2B;QAH1B,cAAS,GAAT,SAAS,CAAoB;QAC9B,QAAG,GAAH,GAAG,CAAkB;QACpB,iBAAY,GAAZ,YAAY,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAqB;QANpC,YAAO,GAAG,KAAK,CAAC;QAQd,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,GAAG,IAAI,wDAAS,CAAC;YACpC,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7C,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAE7C,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7C,oBAAoB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzC,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,qBAAqB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC1C,wBAAwB,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC9C,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,aAAa;QACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY;aACd,wBAAwB,CACvB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,EACxB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAC5B;aACA,SAAS,CAAC;YACT,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBACZ,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;gBAC9C,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;YACD,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;YACD,QAAQ,EAAE,GAAG,EAAE;gBACb,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;IACP,CAAC;IAED,IAAI,CAAC,EAAE;QACL,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrB,CAAC;;gHA7DU,gCAAgC;gHAAhC,gCAAgC;QCZ7C,yEACE;QAAA,0EACE;QAAA,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,0EAA2D;QAAA,8DAAG;QAAA,4DAAO;QACvE,4DAAM;QACN,2EACE;QAAA,wEACE;QAAA,wEAAsB;QAAA,iEAAK;QAAA,4DAAK;QAChC,yEAAwB;QAAA,sEAAK;QAAA,4DAAK;QAClC,yEAAwB;QAAA,kEAAM;QAAA,4DAAK;QACrC,4DAAQ;QACR,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEACE;QAAA,uEAUF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAUF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,2EACE;QAAA,2EAA2D;QAAA,+DAAG;QAAA,4DAAO;QACvE,4DAAM;QACN,4EACE;QAAA,yEACE;QAAA,yEAAsB;QAAA,iEAAK;QAAA,4DAAK;QAChC,yEAAwB;QAAA,sEAAK;QAAA,4DAAK;QAClC,yEAAwB;QAAA,kEAAM;QAAA,4DAAK;QACrC,4DAAQ;QACR,yEACE;QAAA,sEACE;QAAA,sEAAI;QAAA,gEAAI;QAAA,4DAAK;QACb,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,kEAAM;QAAA,4DAAK;QACf,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAChB,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAQF;QAAA,4DAAK;QACP,4DAAK;QACL,sEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACjB,sEACE;QAAA,uEAUF;QAAA,4DAAK;QACL,sEACE;QAAA,uEAUF;QAAA,4DAAK;QACP,4DAAK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,8EASU;QALR,yJAAS,SAAK,CAAC,CAAC,IAAC;QAKlB,4DAAS;QACZ,4DAAM;QACN,2EACE;QAAA,8EAUU;QALR,yJAAS,mBAAe,IAAC;QAK1B,4DAAS;QACV,2JAOC;QACH,4DAAM;QACR,4DAAM;;QAtQE,0DAA8B;QAA9B,2FAA8B;QAsBpB,2DAA4D;QAA5D,yHAA4D;QAU5D,0DAA4D;QAA5D,yHAA4D;QAa5D,0DAA6D;QAA7D,0HAA6D;QAU7D,0DAA6D;QAA7D,0HAA6D;QAa7D,0DAA6D;QAA7D,0HAA6D;QAU7D,0DAA6D;QAA7D,0HAA6D;QAa7D,0DAEC;QAFD,6HAEC;QAUD,0DAEC;QAFD,6HAEC;QA6BD,2DAA4D;QAA5D,yHAA4D;QAU5D,0DAA4D;QAA5D,yHAA4D;QAa5D,0DAA6D;QAA7D,0HAA6D;QAU7D,0DAA6D;QAA7D,0HAA6D;QAa7D,0DAA6D;QAA7D,0HAA6D;QAU7D,0DAA6D;QAA7D,0HAA6D;QAa7D,0DAEC;QAFD,6HAEC;QAUD,0DAEC;QAFD,6HAEC;QA0Bb,0DAAoB;QAApB,iFAAoB;QAWpB,0DAAe;QAAf,6EAAe;;6FDnPR,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,gCAAgC;gBAC1C,WAAW,EAAE,6CAA6C;gBAC1D,SAAS,EAAE,CAAC,6CAA6C,CAAC;aAC3D","file":"offers-offers-module-es2015.js","sourcesContent":["import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    clone.value = source.value;\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (e) => this.pointerMove.next(e),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ElementRef }, { type: DragDrop }, { type: ChangeDetectorRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n\n//# sourceMappingURL=drag-drop.js.map","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { Offer, OffersService } from \"../offers.service\";\nimport { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\n\n@Component({\n  selector: \"app-print-offer-settings\",\n  templateUrl: \"./print-offer-settings.component.html\",\n  styleUrls: [\"./print-offer-settings.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PrintOfferSettingsComponent implements OnInit {\n  @Input() offer: Offer;\n  @Output() refresh: EventEmitter<any> = new EventEmitter();\n\n  printTextHeader = \"\";\n  printTextTableFotter = \"\";\n  newCommentForm = \"\";\n  editTableFooter = false;\n  editHeader = false;\n  loading = false;\n  commentId = null;\n\n  allComments: any[];\n  selectedProducts: any[];\n  draggedProduct: any;\n\n  selectedComments = [];\n\n  constructor(\n    private offerService: OffersService,\n    private infoPopup: InfoPopupComponent\n  ) {}\n\n  ngOnInit(): void {\n    this.printTextHeader = this.offer.printTextHeader;\n    this.printTextTableFotter = this.offer.printTextTableFotter;\n    this.offer.offerComments.forEach((element) => {\n      this.selectedComments.push(element.id);\n    });\n    this.getAllComments();\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.allComments, event.previousIndex, event.currentIndex);\n    this.allComments.forEach((x, index) => {\n      x.number = index + 1;\n    });\n    this.offerService.updatePositionComments(this.allComments).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate(\"\");\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  updatePrintHeader() {\n    this.loading = true;\n    this.offerService\n      .updatePrintHeaderInOffer(this.offer.offerNumber, this.printTextHeader)\n      .subscribe({\n        next: (res) => {\n          this.printTextHeader = res;\n          this.editHeader = false;\n          this.infoPopup.showSuccessUpdate(\"nagłownek oferty\");\n          this.loading = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loading = false;\n          this.infoPopup.showErrorUpdate(\"nagłownek oferty\");\n        },\n        complete: () => {\n          this.refresh.emit(true);\n        },\n      });\n  }\n\n  updatePrintTableFooter() {\n    this.loading = true;\n    this.offerService\n      .updatePrintTableFooterInOffer(\n        this.offer.offerNumber,\n        this.printTextTableFotter\n      )\n      .subscribe({\n        next: (res) => {\n          this.printTextTableFotter = res;\n          this.editTableFooter = false;\n          this.infoPopup.showSuccessUpdate(\"opis tabeli\");\n          this.loading = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loading = false;\n          this.infoPopup.showErrorUpdate(\"opis tabeli\");\n        },\n        complete: () => {\n          this.refresh.emit(true);\n        },\n      });\n  }\n\n  // COMMENTS\n\n  getAllComments() {\n    this.offerService.getAllComments().subscribe({\n      next: (res) => {\n        this.allComments = res;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  newComment() {\n    this.offerService.newComment(this.newCommentForm).subscribe({\n      next: (res) => {\n        this.getAllComments();\n        this.newCommentForm = \"\";\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  editComment(data) {\n    this.newCommentForm = data.comment;\n    this.commentId = data.id;\n  }\n\n  exitUpdateComment() {\n    this.newCommentForm = \"\";\n    this.commentId = null;\n  }\n\n  updateComment() {\n    this.offerService\n      .updateComment(this.commentId, this.newCommentForm)\n      .subscribe({\n        next: (res) => {\n          this.getAllComments();\n          this.newCommentForm = \"\";\n          this.commentId = null;\n          this.refresh.emit(true);\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n\n  deleteComment(id) {\n    console.log(id);\n    this.offerService.deleteComment(id).subscribe({\n      next: (res) => {\n        this.getAllComments();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  updateCommentInOffer() {\n    console.log(\"test\");\n    let send = [];\n    this.selectedComments.forEach((x) => {\n      this.allComments.forEach((e) => {\n        if (e.id == x) {\n          send.push(e);\n        }\n      });\n    });\n    this.offerService\n      .updateCommentsListInOffer(this.offer.offerNumber, send)\n      .subscribe({\n        next: (res) => {\n          this.refresh.emit(true);\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n}\n","<div class=\"print-offer-settings\">\n  <div class=\"set-header row\">\n    <div class=\"header-name\">\n      <h5>Nagłówek</h5>\n    </div>\n    <div class=\"break\"></div>\n    <div class=\"area\">\n      <div class=\"text\" *ngIf=\"!editHeader\" [innerHTML]=\"printTextHeader\"></div>\n      <div class=\"btn-edit\" *ngIf=\"!editHeader\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"editHeader = !editHeader\"\n          icon=\"pi pi-pencil\"\n          class=\"p-button-sm sb-button gray m-1\"\n          style=\"height: 28px\"\n        ></button>\n      </div>\n      <div class=\"col-g-12 col-md-12 col-lg-12\" *ngIf=\"editHeader\">\n        <p-editor [(ngModel)]=\"printTextHeader\" [style]=\"{ height: '320px' }\">\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n        <div class=\"sb-dialog-footer\">\n          <div class=\"sb-btn-close\">\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              (click)=\"editHeader = !editHeader\"\n              pTooltip=\"Anulowanie dodawania\"\n              label=\"Anuluj\"\n              icon=\"pi pi-times\"\n              class=\"p-button-sm sb-button o-gray\"\n            ></button>\n          </div>\n          <div class=\"sb-btn-save\">\n            <button\n              [disabled]=\"loading\"\n              pButton\n              pRipple\n              type=\"button\"\n              (click)=\"updatePrintHeader()\"\n              pTooltip=\"Zapisz nagłownek\"\n              label=\"Zapisz\"\n              icon=\"pi pi-check\"\n              class=\"p-button-sm sb-button green\"\n            ></button>\n            <p-progressSpinner\n              *ngIf=\"loading\"\n              [style]=\"{ width: '25px', height: '25px' }\"\n              styleClass=\"custom-spinner\"\n              strokeWidth=\"8\"\n              fill=\"#EEEEEE\"\n              animationDuration=\".5s\"\n            >\n            </p-progressSpinner>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"set-tableFooter row\">\n    <div class=\"header-name\">\n      <h5>Opis tabeli</h5>\n    </div>\n    <div class=\"break\"></div>\n    <div class=\"area\">\n      <div\n        class=\"text\"\n        *ngIf=\"!editTableFooter\"\n        [innerHTML]=\"printTextTableFotter\"\n      ></div>\n      <div class=\"btn-edit\" *ngIf=\"!editTableFooter\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"editTableFooter = !editTableFooter\"\n          icon=\"pi pi-pencil\"\n          class=\"p-button-sm sb-button gray m-1\"\n          style=\"height: 28px\"\n        ></button>\n      </div>\n      <div class=\"col-g-12 col-md-12 col-lg-12\" *ngIf=\"editTableFooter\">\n        <p-editor\n          [(ngModel)]=\"printTextTableFotter\"\n          [style]=\"{ height: '320px' }\"\n        >\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n        <div class=\"sb-dialog-footer\">\n          <div class=\"sb-btn-close\">\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              (click)=\"editTableFooter = !editTableFooter\"\n              pTooltip=\"Anulowanie dodawania\"\n              label=\"Anuluj\"\n              icon=\"pi pi-times\"\n              class=\"p-button-sm sb-button o-gray\"\n            ></button>\n          </div>\n          <div class=\"sb-btn-save\">\n            <button\n              [disabled]=\"loading\"\n              pButton\n              pRipple\n              type=\"button\"\n              (click)=\"updatePrintTableFooter()\"\n              pTooltip=\"Zapisz opis\"\n              label=\"Zapisz\"\n              icon=\"pi pi-check\"\n              class=\"p-button-sm sb-button green\"\n            ></button>\n            <p-progressSpinner\n              *ngIf=\"loading\"\n              [style]=\"{ width: '25px', height: '25px' }\"\n              styleClass=\"custom-spinner\"\n              strokeWidth=\"8\"\n              fill=\"#EEEEEE\"\n              animationDuration=\".5s\"\n            >\n            </p-progressSpinner>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"set-comments row\">\n    <div class=\"header-name\">\n      <h5>Uwagi</h5>\n    </div>\n    <div class=\"break\"></div>\n    <div class=\"area-comment\">\n      <ul cdkDropList class=\"comment-list\" (cdkDropListDropped)=\"drop($event)\">\n        <li *ngFor=\"let item of allComments\" class=\"list-box\" cdkDrag>\n          <div class=\"check\">\n            <p-checkbox\n              name=\"groupname\"\n              (onChange)=\"updateCommentInOffer()\"\n              value=\"item\"\n              [(ngModel)]=\"selectedComments\"\n              [value]=\"item.id\"\n            ></p-checkbox>\n          </div>\n          <div class=\"number\">\n            {{ item.number }}\n          </div>\n          <div class=\"text\" [innerHTML]=\"item.comment\"></div>\n          <div class=\"btn-edit\">\n            <button\n              pButton\n              pRipple\n              type=\"button\"\n              icon=\"pi pi-pencil\"\n              (click)=\"editComment(item)\"\n              class=\"p-button-sm sb-button gray m-1\"\n              style=\"height: 28px\"\n            ></button>\n            <button\n              pButton\n              pRipple\n              (click)=\"deleteComment(item.id)\"\n              type=\"button\"\n              icon=\"pi pi-trash\"\n              class=\"p-button-sm sb-button red m-1\"\n              style=\"height: 28px\"\n            ></button>\n          </div>\n        </li>\n      </ul>\n\n      <div class=\"new-comment\">\n        <!-- <textarea rows=\"5\" cols=\"30\" pInputTextarea [(ngModel)]=\"newCommentForm\"></textarea> -->\n\n        <p-editor [(ngModel)]=\"newCommentForm\" [style]=\"{ height: '150px' }\">\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n        <div class=\"buttons-save\">\n          <button\n            *ngIf=\"!commentId\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"newComment()\"\n            pTooltip=\"Dodaj nową uwagę\"\n            icon=\"pi pi-plus\"\n            class=\"p-button-sm sb-button blue\"\n          ></button>\n\n          <button\n            *ngIf=\"commentId\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"updateComment()\"\n            pTooltip=\"Aktualizacja uwagi\"\n            icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button blue\"\n          ></button>\n\n          <button\n            *ngIf=\"commentId\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"exitUpdateComment()\"\n            pTooltip=\"Anuluj\"\n            icon=\"pi pi-times\"\n            class=\"p-button-sm sb-button o-gray\"\n          ></button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormArray, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport {\n  KatalogProfili,\n  KatalogSystem,\n} from \"src/app/catalog/catalog-service/catalog.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { ProductionServiceService } from \"src/app/production/production-service/production-service.service\";\nimport {\n  OfferHelpers,\n  SettingsService,\n} from \"src/app/settings/settings.service\";\nimport { Offer, OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-add-offer-position\",\n  templateUrl: \"./add-offer-position.component.html\",\n  styleUrls: [\"./add-offer-position.component.scss\"],\n})\nexport class AddOfferPositionComponent implements OnInit {\n  catalogSugFiltered: any;\n  helper: OfferHelpers;\n  selectedSystem: KatalogSystem = null;\n  selectedCatalog: KatalogProfili = null;\n  allCatalog: KatalogProfili[];\n  filmSugFiltered: any;\n  sideSugFiltered: any;\n  formOfferPosition: FormGroup;\n  searchBy = [\"number\"];\n  sideSug = [\n    \"zew\",\n    \"wew\",\n    \"jedno\",\n    \"środek\",\n    \"obu\",\n    \"obu-zew\",\n    \"obu-wew\",\n    \"I strona\",\n    \"II strona\",\n    \"III strona\",\n  ];\n  offerData: Offer;\n  exchange: any;\n  loading = false;\n  changeSetUpCost = false;\n\n  constructor(\n    public productionService: ProductionServiceService,\n    public settingService: SettingsService,\n    public offerService: OffersService,\n    private cookieService: CookieService,\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    if (!this.cookieService.check(\"creatorSelectedSystemOffer\")) {\n      this.cookieService.set(\n        \"creatorSelectedSystemOffer\",\n        JSON.stringify(this.selectedSystem)\n      );\n    } else {\n      this.selectedSystem = JSON.parse(\n        this.cookieService.get(\"creatorSelectedSystemOffer\")\n      );\n    }\n    this.filterBySystem();\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n        this.changeAlu(false);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n\n    this.formOfferPosition = new FormGroup({\n      profilType: new FormControl(\"\", { validators: [Validators.required] }),\n      profilNumber: new FormControl(\"\", { validators: [Validators.required] }),\n      alu: new FormControl(false),\n      catalogIdHelper: new FormControl(\"\"),\n      warranty: new FormControl(true),\n      offerPositionSides: new FormArray([\n        new FormGroup({\n          side: new FormControl(\"\"),\n          filmNumber: new FormControl(null),\n          filmWidth: new FormControl(null, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n          filmEntrusted: new FormControl(false),\n          quantityMb: new FormControl(6.5, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n          hard: new FormControl(false),\n          changeColor: new FormControl(false),\n          bicolor: new FormControl(0),\n          costChangeColor: new FormControl(0),\n          costSetupAdditional: new FormControl(0),\n          exchangeRate: new FormControl(null, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n          additional: new FormControl(0, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n          cost: new FormControl(this.offerData.client.helper_cost, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n          mIs: new FormControl(null, {\n            validators: [Validators.required, Validators.nullValidator],\n          }),\n        }),\n      ]),\n    });\n    // this.offerService.getExchangeHelper().subscribe({\n    //   next: (res) => {\n    //     this.exchange = res[0];\n    //     this.formOfferPosition.controls.offerPositionSides['controls'][0]['controls'].exchangeRate.setValue(this.exchange.exchangeRate);\n    //   }\n    // });\n    if (this.cookieService.check(\"lastUsedFilm\")) {\n      let okl = JSON.parse(this.cookieService.get(\"lastUsedFilm\"));\n      this.formOfferPosition.controls.offerPositionSides[\"controls\"][0]\n        .get(\"filmNumber\")\n        .setValue(okl.number);\n      this.formOfferPosition.controls.offerPositionSides[\"controls\"][0]\n        .get(\"bicolor\")\n        .setValue(okl.surchargePercentage);\n    }\n    this.calculateSides();\n  }\n\n  filterBySystem() {\n    this.allCatalog = [];\n    if (this.selectedSystem != null) {\n      for (\n        let i = 0;\n        i < this.productionService.catalogSuggestions.length;\n        i++\n      ) {\n        let cat = this.productionService.catalogSuggestions[i];\n        if (cat.systemProfil.name != null) {\n          if (cat.systemProfil.id === this.selectedSystem.id) {\n            this.allCatalog.push(cat);\n          }\n        }\n      }\n      this.cookieService.set(\n        \"creatorSelectedSystemOffer\",\n        JSON.stringify(this.selectedSystem)\n      );\n    } else {\n      this.allCatalog = this.productionService.catalogSuggestions;\n    }\n  }\n\n  searchCatalog(event) {\n    this.catalogSugFiltered = [];\n    if (event.query != \"\") {\n      console.log(\"loading\");\n      for (let i = 0; i < this.allCatalog.length; i++) {\n        let cat = this.allCatalog[i];\n        if (cat.number != null && this.searchBy.includes(\"number\")) {\n          if (cat.number.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n        if (cat.profileType != null && this.searchBy.includes(\"name\")) {\n          if (\n            cat.profileType.toLowerCase().includes(event.query.toLowerCase())\n          ) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n      }\n    } else {\n      this.allCatalog.forEach((x) => this.catalogSugFiltered.push(x));\n    }\n  }\n\n  searchFilm(event) {\n    this.filmSugFiltered = [];\n    for (let i = 0; i < this.productionService.filmSuggestions.length; i++) {\n      let film = this.productionService.filmSuggestions[i];\n      if (\n        film.number.toLowerCase().includes(event.query.toLowerCase()) ||\n        film.name.toLowerCase().includes(event.query.toLowerCase())\n      ) {\n        this.filmSugFiltered.push(film);\n      }\n    }\n  }\n\n  searchSide(event) {\n    this.sideSugFiltered = [];\n    for (let i = 0; i < this.sideSug.length; i++) {\n      let side = this.sideSug[i];\n      if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.sideSugFiltered.push(side);\n      }\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  get sides(): FormArray {\n    return this.formOfferPosition.get(\"offerPositionSides\") as FormArray;\n  }\n\n  addSide() {\n    const group = new FormGroup({\n      side: new FormControl(\"\"),\n      filmNumber: new FormControl(null),\n      filmWidth: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      filmEntrusted: new FormControl(false),\n      quantityMb: new FormControl(6.5, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      hard: new FormControl(false),\n      changeColor: new FormControl(false),\n      bicolor: new FormControl(0),\n      costSetupAdditional: new FormControl(0),\n      costChangeColor: new FormControl(0),\n      exchangeRate: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      additional: new FormControl(0, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      cost: new FormControl(this.offerData.client.helper_cost, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      mIs: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n    });\n    this.sides.push(group);\n    if (this.cookieService.check(\"lastUsedFilm\")) {\n      let okl = JSON.parse(this.cookieService.get(\"lastUsedFilm\"));\n      this.formOfferPosition.controls.offerPositionSides[\"controls\"][\n        this.sides.length - 1\n      ]\n        .get(\"filmNumber\")\n        .setValue(okl.number);\n      this.formOfferPosition.controls.offerPositionSides[\"controls\"][\n        this.sides.length - 1\n      ]\n        .get(\"bicolor\")\n        .setValue(okl.surchargePercentage);\n    }\n    this.calculateSides();\n    this.changeAlu(this.formOfferPosition.get(\"alu\").value);\n  }\n\n  duplicateLastSide() {\n    let tmp = this.sides.at(this.sides.length - 1);\n    this.addSide();\n    this.sides.at(this.sides.length - 1).patchValue(tmp.value);\n  }\n\n  removeSide(i: number) {\n    this.sides.removeAt(i);\n  }\n\n  onSelectFilm(event, i) {\n    this.sides.controls[i].get(\"filmNumber\").setValue(event.number);\n    this.sides.controls[i].get(\"bicolor\").setValue(event.surchargePercentage);\n    this.cookieService.set(\"lastUsedFilm\", JSON.stringify(event));\n  }\n\n  onSelectSide(e, index) {\n    if (this.selectedCatalog != null) {\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index]\n        .get(\"hard\")\n        .setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get(\"filmWidth\").setValue(res);\n    }\n  }\n\n  onSelectCatalog(event: KatalogProfili) {\n    this.selectedCatalog = event;\n    this.formOfferPosition.get(\"profilNumber\").setValue(event.number);\n    this.formOfferPosition.get(\"profilType\").setValue(event.offerName);\n    this.formOfferPosition.get(\"alu\").setValue(event.alu);\n    this.formOfferPosition.get(\"catalogIdHelper\").setValue(event.id);\n    if (!this.selectedSystem) {\n      this.selectedSystem = event.systemProfil;\n      this.filterBySystem();\n    }\n    this.sides.controls.forEach((x, index) => {\n      let e = x.get(\"side\").value;\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index]\n        .get(\"hard\")\n        .setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get(\"filmWidth\").setValue(res);\n    });\n  }\n  calculateSides() {\n    for (let index = 0; index < this.sides.length; index++) {\n      this.changeHard(index);\n    }\n  }\n\n  changeHard(i) {\n    let event = this.sides.controls[i][\"controls\"][\"quantityMb\"].value;\n    this.loadM(event, i);\n  }\n\n  changeAlu(event) {\n    if (event.checked) {\n      this.sides.controls.forEach((x, index) => {\n        x[\"controls\"][\"exchangeRate\"].setValue(this.helper.exchangeRateAlu);\n        this.loadM(x.get(\"quantityMb\").value, index);\n      });\n    } else {\n      this.sides.controls.forEach((x, index) => {\n        x[\"controls\"][\"exchangeRate\"].setValue(this.helper.exchangeRatePcv);\n        this.loadM(x.get(\"quantityMb\").value, index);\n      });\n    }\n  }\n\n  colorFieldChange(i, event) {\n    if (event) {\n      this.sides.controls[i][\"controls\"][\"changeColor\"].setValue(true);\n    } else {\n      this.sides.controls[i][\"controls\"][\"changeColor\"].setValue(false);\n    }\n  }\n\n  changeColorChangebox(i, event) {\n    if (event.checked) {\n      this.sides.controls[i][\"controls\"][\"costChangeColor\"].setValue(\n        this.offerData.client.helper_costChangeColor\n      );\n    } else {\n      this.sides.controls[i][\"controls\"][\"costChangeColor\"].setValue(\"\");\n    }\n  }\n\n  loadM(event, i) {\n    let tmpHard = this.sides.controls[i][\"controls\"][\"hard\"].value;\n    let tmpAlu = this.formOfferPosition.get(\"alu\").value;\n\n    if (tmpAlu) {\n      if (event <= 50) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo50\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo50\n          );\n        }\n      } else if (event > 50 && event <= 150) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo150\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo150\n          );\n        }\n      } else if (event > 150 && event <= 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo500\n          );\n        }\n      } else if (event > 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardAbove500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyAbove500\n          );\n        }\n      }\n    } else {\n      if (event <= 50) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo50\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo50\n          );\n        }\n      } else if (event > 50 && event <= 150) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo150\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo150\n          );\n        }\n      } else if (event > 150 && event <= 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo500\n          );\n        }\n      } else if (event > 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardAbove500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyAbove500\n          );\n        }\n      }\n    }\n  }\n\n  addOfferPosition() {\n    this.loading = true;\n    this.offerService\n      .addNewOfferPosition(\n        this.offerData.offerNumber,\n        this.formOfferPosition.value\n      )\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"pozycja\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"pozycja\");\n          this.loading = false;\n          console.log(err);\n        },\n      });\n  }\n}\n","<div class=\"sb-dialog-content offer-position-form\">\n  <!-- style=\"width: 1000px; min-width: 1000px;\" -->\n  <form [formGroup]=\"formOfferPosition\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-sm-12 col-md-6 col-lg-6\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"systemId\">Wybór systemu</label>\n            <p-dropdown\n              [options]=\"productionService.allSystems\"\n              (onChange)=\"filterBySystem()\"\n              styleClass=\"fullwidth\"\n              appendTo=\"body\"\n              [(ngModel)]=\"selectedSystem\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              placeholder=\"Wybierz system\"\n              optionLabel=\"name\"\n              [showClear]=\"true\"\n              filter=\"true\"\n            >\n            </p-dropdown>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <p-radioButton\n              class=\"p-2\"\n              name=\"groupSearch\"\n              value=\"number\"\n              label=\"Numer\"\n              [(ngModel)]=\"searchBy\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            ></p-radioButton>\n            <p-radioButton\n              class=\"p-2\"\n              name=\"groupSearch\"\n              value=\"name\"\n              label=\"Nazwa\"\n              [(ngModel)]=\"searchBy\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n            </p-radioButton>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"profilNumberId\"\n              >Numer kształtownika *</label\n            >\n            <p-autoComplete\n              [inputStyle]=\"{ 'font-weight': 'bold' }\"\n              autocomplete=\"off\"\n              appendTo=\"body\"\n              styleClass=\"fullwidth\"\n              [formControl]=\"formOfferPosition.get('profilNumber')\"\n              [suggestions]=\"catalogSugFiltered\"\n              (completeMethod)=\"searchCatalog($event)\"\n              [dropdown]=\"true\"\n              emptyMessage=\"Nie znaleziono\"\n              (onSelect)=\"onSelectCatalog($event)\"\n            >\n              <ng-template let-catalog pTemplate=\"item\">\n                <div\n                  [class]=\"\n                    'measure-badge status-' +\n                    catalog.actualMeasurement +\n                    ' catalog-dropdown'\n                  \"\n                >\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div style=\"font-size: 16px\">\n                        <i\n                          style=\"color: red; font-size: 1em; padding-right: 2px\"\n                          *ngIf=\"catalog.hard\"\n                          class=\"pi pi-exclamation-triangle\"\n                        ></i>\n                        {{ catalog.number }}\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        {{ catalog.profileType }}\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        {{ catalog.systemProfil.name }}\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div style=\"font-size: 12px\">\n                        ZEW: <b>{{ catalog.dimOuter }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        WEW: <b>{{ catalog.dimInner }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        JEDN: <b>{{ catalog.dimOneSide }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        ŚRO: <b>{{ catalog.dimCenterSide }}</b>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div style=\"font-size: 12px\">\n                        OBU: <b>{{ catalog.dimTwoSide }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        OBU ZEW:\n                        <b>{{ catalog.dimTwoSideOuter }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        OBU WEW:\n                        <b>{{ catalog.dimTwoSideInner }}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-template>\n            </p-autoComplete>\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formOfferPosition.get('profilNumber').hasError('required') &&\n                formOfferPosition.get('profilNumber').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"profilTypeId\"\n              >Rodzaj kształtownika *</label\n            >\n            <input\n              pInputText\n              type=\"text\"\n              autocomplete=\"off\"\n              class=\"fullwidth\"\n              [formControl]=\"formOfferPosition.get('profilType')\"\n            />\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formOfferPosition.get('profilType').hasError('required') &&\n                formOfferPosition.get('profilType').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n        <div class=\"row pt-1\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n            <p-checkbox\n              [formControl]=\"formOfferPosition.get('alu')\"\n              (onChange)=\"changeAlu($event)\"\n              [binary]=\"true\"\n              label=\"Alu\"\n            >\n            </p-checkbox>\n          </div>\n        </div>\n        <div class=\"row pt-1\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n            <p-checkbox\n              [formControl]=\"formOfferPosition.get('warranty')\"\n              [binary]=\"true\"\n              label=\"Gwarancja\"\n            >\n            </p-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-12 col-md-6 col-lg-6\">\n        <div class=\"row w-100 m-0 cost-range-table\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form\">\n            <div class=\"row\">\n              <div class=\"sb-stars-header\">Ustawienia klienta</div>\n\n              <div class=\"col-sm-12 col-md-9 col-lg-9\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead>\n                      <th class=\"text-left\">Metry</th>\n                      <th class=\"text-center\">Łatwe (PCV)</th>\n                      <th class=\"text-center\">Trudne (PCV)</th>\n                      <th class=\"text-center\">Łatwe (ALU)</th>\n                      <th class=\"text-center\">Trudne (ALU)</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-left\">0-50</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo50 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">51-150</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo150 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">151-500</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo500 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">pow. 500</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardAbove500 }}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-sm-12 col-md-3 col-lg-3\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead>\n                      <th></th>\n                      <th class=\"text-center\">Kurs</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>ALU</td>\n                        <td class=\"text-center\">\n                          {{ helper?.exchangeRateAlu }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>PCV</td>\n                        <td class=\"text-center\">\n                          {{ helper?.exchangeRatePcv }}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row w-100 m-0\">\n          <div\n            *ngIf=\"selectedCatalog != null\"\n            class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form mt-2\"\n          >\n            <div class=\"row p-1\">\n              <div class=\"sb-stars-header\">Wybrana pozycja</div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead class=\"sb-header-normal\">\n                      <th class=\"text-left\">Numer</th>\n                      <th class=\"text-left\">Nazwa</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-center\">\n                          <b>{{ selectedCatalog.number }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{ selectedCatalog.offerName }}</b>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td\n                          *ngIf=\"selectedCatalog.hard\"\n                          style=\"color: red; border: 0\"\n                          class=\"text-center\"\n                        >\n                          <i\n                            style=\"padding-right: 5px\"\n                            class=\"pi pi-exclamation-triangle\"\n                          ></i>\n                          <span>TRUDNE</span>\n                        </td>\n                        <td\n                          *ngIf=\"selectedCatalog.actualMeasurement\"\n                          style=\"color: green; border: 0\"\n                          class=\"text-center\"\n                        >\n                          <i\n                            style=\"padding-right: 5px\"\n                            class=\"pi pi-check-circle\"\n                          ></i>\n                          <span>Wymiar zmierzony fizycznie</span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row p-1\">\n              <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead class=\"sb-header-normal\">\n                      <th class=\"text-center\">ZEW</th>\n                      <th class=\"text-center\">WEW</th>\n                      <th class=\"text-center\">JEDN</th>\n                      <th class=\"text-center\">ŚROD</th>\n                      <th class=\"text-center\">OBU</th>\n                      <th class=\"text-center\">OBU ZEW</th>\n                      <th class=\"text-center\">OBU WEW</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimOuter\n                              ? selectedCatalog.dimOuter\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimInner\n                              ? selectedCatalog.dimInner\n                              : \"--\"\n                          }}</b>\n                        </td>\n\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimOneSide\n                              ? selectedCatalog.dimOneSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimCenterSide\n                              ? selectedCatalog.dimCenterSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSide\n                              ? selectedCatalog.dimTwoSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSideOuter\n                              ? selectedCatalog.dimTwoSideOuter\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSideInner\n                              ? selectedCatalog.dimTwoSideInner\n                              : \"--\"\n                          }}</b>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"row mt-2\"\n              *ngIf=\"selectedCatalog.comments\"\n              style=\"border-top: 1px solid #d5d5d5\"\n            >\n              <div class=\"col-sm-12 col-md-12 col-lg-12 p-0\" pTooltip=\"Uwagi\">\n                <div\n                  class=\"sb-stars-header\"\n                  style=\"color: red; font-size: 10px\"\n                >\n                  UWAGI:\n                </div>\n                <div class=\"pl-1\" [innerHtml]=\"selectedCatalog.comments\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n    <div class=\"row mb-2\">\n      <div class=\"col text-center\">\n        <span><b>STRONY</b></span>\n      </div>\n    </div>\n\n    <div formArrayName=\"offerPositionSides\">\n      <div\n        class=\"row sb-position-side\"\n        *ngFor=\"let item of sides.controls; index as i\"\n        [formGroupName]=\"i\"\n      >\n        <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n          <div class=\"row flex-nowrap sb-row-position-side\">\n            <div class=\"col-sm-1 col-md-1 col-lg-1 sb-col-side count\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"removeSide(i)\"\n                style=\"height: 25px\"\n                pTooltip=\"Usuń stronę\"\n                icon=\"pi pi-times\"\n                class=\"p-button-sm sb-button red\"\n              ></button>\n\n              <span class=\"text-center p-2\">{{ i + 1 }}</span>\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"side\">Str. kształ.</label>\n              <p-autoComplete\n                formControlName=\"side\"\n                autocomplete=\"off\"\n                [suggestions]=\"sideSugFiltered\"\n                (completeMethod)=\"searchSide($event)\"\n                [dropdown]=\"true\"\n                autocomplete=\"off\"\n                [completeOnFocus]=\"true\"\n                appendTo=\"body\"\n                (onSelect)=\"onSelectSide($event, i)\"\n              >\n                <ng-template let-side pTemplate=\"item\">\n                  <div class=\"catalog-dropdown-side\">\n                    <div class=\"row\">\n                      <div class=\"col\">{{ side }}</div>\n                    </div>\n                  </div>\n                </ng-template>\n              </p-autoComplete>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"filmNumber\"\n                >Numer Okleiny</label\n              >\n              <p-autoComplete\n                formControlName=\"filmNumber\"\n                [minLength]=\"1\"\n                [suggestions]=\"filmSugFiltered\"\n                (completeMethod)=\"searchFilm($event)\"\n                [dropdown]=\"true\"\n                autocomplete=\"off\"\n                [completeOnFocus]=\"true\"\n                appendTo=\"body\"\n                (onSelect)=\"onSelectFilm($event, i)\"\n              >\n                <ng-template let-film pTemplate=\"item\">\n                  <div class=\"catalog-dropdown-film\">\n                    <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                    <div class=\"row\">\n                      <div class=\"col-6\">\n                        <div style=\"font-size: 16px\">{{ film.number }}</div>\n                        <div style=\"font-size: 12px\">{{ film.name }}</div>\n                      </div>\n\n                      <div\n                        class=\"col-6 pl-2 text-center\"\n                        [ngSwitch]=\"film.status\"\n                        style=\"font-size: 12px\"\n                      >\n                        <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-dost\">\n                          DOST.\n                        </div>\n                        <div\n                          *ngSwitchCase=\"'NIEDOSTEPNA'\"\n                          class=\"status-niedost\"\n                        >\n                          NIEDOST.\n                        </div>\n                        <div\n                          *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\"\n                          class=\"status-ogr\"\n                        >\n                          OGRAN.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </ng-template>\n              </p-autoComplete>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"filmWidthId\"\n                >Szer. Okl. (mm)*</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"filmWidth\"\n                inputId=\"filmWidthId\"\n              />\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"quantityMb\">Ilość Mb *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                (onInput)=\"loadM($event.value, i)\"\n                formControlName=\"quantityMb\"\n                inputId=\"quantityMb\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n          <div class=\"row flex-nowrap sb-row-position-side justify-content-end\">\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"cost\">Koszt *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".01\"\n                formControlName=\"cost\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" pTooltip=\"Przelicznik\" for=\"mIs\"\n                >Przelicz. *</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".5\"\n                formControlName=\"mIs\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label\n                class=\"sb-small-label\"\n                pTooltip=\"Dodaję licznę wpisaną do końcowego wyniku pln/mb\"\n                for=\"additional\"\n                >Dopłata mb</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"additional\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label\n                class=\"sb-small-label\"\n                pToolTip=\"Mnożnik procentowy za folię (wpisać ilość %)\"\n                for=\"bicolor\"\n                >Dop. okl. (%)</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"bicolor\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"costChangeColor\"\n                >Zm. koloru</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"costChangeColor\"\n                (ngModelChange)=\"colorFieldChange(i, $event)\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"exchangeRate\">Kurs *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".1\"\n                formControlName=\"exchangeRate\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row align-items-center w-100 m-0\">\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"hard\"\n                (onChange)=\"changeHard(i)\"\n                [binary]=\"true\"\n                label=\"Trudne\"\n              >\n              </p-checkbox>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"filmEntrusted\"\n                [binary]=\"true\"\n                label=\"Folia powierzona\"\n              >\n              </p-checkbox>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"changeColor\"\n                (onChange)=\"changeColorChangebox(i, $event)\"\n                [binary]=\"true\"\n                label=\"Zm. koloru\"\n              >\n              </p-checkbox>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"costSetupAdditional\"\n                >Ust**</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                pTooltip=\"Podmienia koszt ustawienia, ignoruje zakresy dla ustawienia podstawowego\"\n                formControlName=\"costSetupAdditional\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div\n          class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center\"\n        >\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"addSide()\"\n            pTooltip=\"Dodaj stronę\"\n            icon=\"pi pi-plus\"\n            label=\"Dodaj stronę\"\n            class=\"p-button-sm sb-button blue m-1\"\n          ></button>\n\n          <button\n            [disabled]=\"sides.length == 0\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"duplicateLastSide()\"\n            pTooltip=\"Powielanie ostatniej pozycji\"\n            icon=\"pi pi-angle-double-down\"\n            label=\"Powiel stronę\"\n            class=\"p-button-sm sb-button blue m-1\"\n          ></button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\" style=\"position: sticky; bottom: 0\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie dodawania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"formOfferPosition.invalid || loading || sides.length == 0\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addOfferPosition()\"\n      pTooltip=\"Dodaj pozycję\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { Offer, OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-update-film-buy-cost\",\n  templateUrl: \"./update-film-buy-cost.component.html\",\n  styleUrls: [\"./update-film-buy-cost.component.scss\"],\n})\nexport class UpdateFilmBuyCostComponent implements OnInit {\n  formCost: FormGroup;\n  offerData: Offer;\n  loading = false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formCost = new FormGroup({\n      costNettoBuyFilm: new FormControl(\"\"),\n      buyFilmComment: new FormControl(\"Okleina potrzebna do okleinowania \"),\n    });\n    this.formCost\n      .get(\"costNettoBuyFilm\")\n      .setValue(this.offerData.costNettoBuyFilm);\n    if (this.offerData.buyFilmComment) {\n      this.formCost\n        .get(\"buyFilmComment\")\n        .setValue(this.offerData.buyFilmComment);\n    }\n  }\n\n  saveCost() {\n    this.loading = true;\n    this.offerService\n      .updateFilmBuyCost(this.offerData.offerNumber, this.formCost.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"koszt zakupu okleiny\");\n          this.loading = false;\n          this.ref.close(1);\n        },\n        error: (err) => {\n          this.loading = false;\n          this.infoPopup.showErrorUpdate(\"koszt zakupu okleiny\");\n          console.log(err);\n        },\n        complete: () => {},\n      });\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formCost\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"costNettoBuyFilm\"\n          >Koszt zakupu okleiny netto</label\n        >\n        <input\n          pInputText\n          type=\"number\"\n          inputmode=\"numeric\"\n          min=\"0\"\n          step=\"1\"\n          inputId=\"costNettoBuyFilm\"\n          [formControl]=\"formCost.get('costNettoBuyFilm')\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"buyFilmComment\">Opis</label>\n        <p-editor\n          [formControl]=\"formCost.get('buyFilmComment')\"\n          [style]=\"{ height: '150px' }\"\n        >\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie aktualizowania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"saveCost()\"\n      pTooltip=\"Aktualizuj\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { OffersService } from \"../offers.service\";\n\n@Component({\n  selector: \"app-timeline-widget\",\n  templateUrl: \"./timeline-widget.component.html\",\n  styleUrls: [\"./timeline-widget.component.scss\"],\n})\nexport class TimelineWidgetComponent implements OnInit {\n  @Input() offerNumber: string;\n  newNote = \"\";\n  @Input() offerNotes: any;\n  public now: Date = new Date();\n\n  constructor(\n    private offerService: OffersService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    setInterval(() => {\n      this.now = new Date();\n    }, 1);\n  }\n\n  ngOnInit(): void {}\n\n  getNotes() {\n    this.offerService.getOfferNotes(this.offerNumber).subscribe({\n      next: (res) => {\n        this.offerNotes = res;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n\n  addNewNote(offerNumber, newNote) {\n    this.offerService.addNewOfferNote(offerNumber, newNote).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"notatkę\");\n        this.newNote = \"\";\n        this.getNotes();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n\n  deleteNote(offerNumber, id) {\n    this.offerService.deleteOfferNote(offerNumber, id).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessDelete(\"notatkę\");\n        this.getNotes();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n}\n","<div class=\"sb-timeline-widget\">\n  <ul class=\"sb-timeline\">\n    <li *ngFor=\"let item of offerNotes\">\n      <div class=\"date\">\n        <span>{{ item.createdDate | date: \"dd.MM.yyyy, HH:mm\" }}</span>\n        <i class=\"pi pi-comment\" style=\"font-size: 2rem\"></i>\n      </div>\n      <div class=\"message\">\n        <div class=\"checked\" [innerHTML]=\"item.message\"></div>\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"deleteNote(offerNumber, item.id)\"\n          pTooltip=\"Usuń notatke\"\n          icon=\"pi pi-trash\"\n          class=\"p-button-sm sb-button red\"\n        ></button>\n      </div>\n      <div class=\"break\"></div>\n      <div class=\"author\">{{ item.createdBy }}</div>\n    </li>\n    <li>\n      <div class=\"date\">\n        <span>{{ now | date: \"dd.MM.yyyy, HH:mm\" }}</span>\n        <i class=\"pi pi-comment\" style=\"font-size: 2rem\"></i>\n      </div>\n      <div class=\"message\">\n        <p-editor [(ngModel)]=\"newNote\" [style]=\"{ height: '150px' }\">\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          (click)=\"addNewNote(offerNumber, newNote)\"\n          pTooltip=\"Nowa notatka\"\n          icon=\"pi pi-plus\"\n          class=\"p-button-sm sb-button blue\"\n        ></button>\n      </div>\n      <div class=\"break\"></div>\n      <div class=\"author\"></div>\n    </li>\n  </ul>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { Offer, OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-update-client-helpers\",\n  templateUrl: \"./update-client-helpers.component.html\",\n  styleUrls: [\"./update-client-helpers.component.scss\"],\n})\nexport class UpdateClientHelpersComponent implements OnInit {\n  formClientHelper: FormGroup;\n  offerData: Offer;\n  loading = false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formClientHelper = new FormGroup({\n      helper_cost: new FormControl(\"\"),\n      helper_setUpCost: new FormControl(\"\"),\n      helper_costChangeColor: new FormControl(\"\"),\n    });\n    this.formClientHelper.patchValue(this.offerData.client);\n  }\n\n  updateHelpers() {\n    this.loading = true;\n    this.offerService\n      .updateClientHelpers(\n        this.offerData.client.id,\n        this.formClientHelper.value\n      )\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"parametry\");\n          this.ref.close(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"parametry\");\n          console.log(err);\n        },\n        complete: () => {\n          this.loading = false;\n        },\n      });\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formClientHelper\" class=\"sb-form\">\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"cost\">Koszt</label>\n        <input\n          pInputText\n          type=\"number\"\n          inputmode=\"numeric\"\n          min=\"0\"\n          step=\".1\"\n          inputId=\"cost\"\n          [formControl]=\"formClientHelper.get('helper_cost')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"set\">Ustawienie</label>\n        <input\n          pInputText\n          type=\"number\"\n          inputmode=\"numeric\"\n          min=\"0\"\n          step=\"1\"\n          inputId=\"set\"\n          [formControl]=\"formClientHelper.get('helper_setUpCost')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"costChangeColor\">Zm. koloru</label>\n        <input\n          pInputText\n          type=\"number\"\n          inputmode=\"numeric\"\n          min=\"0\"\n          step=\"1\"\n          inputId=\"costChangeColor\"\n          [formControl]=\"formClientHelper.get('helper_costChangeColor')\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie aktualizowania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateHelpers()\"\n      pTooltip=\"Aktualizuj\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import {\n  Component,\n  Input,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { PrintOfferService } from \"src/app/print/print-offer.service\";\nimport { AuthService } from \"src/app/_services/auth.service\";\nimport { Offer, OfferPosition, OffersService } from \"../offers.service\";\n\n@Component({\n  selector: \"app-view-offer\",\n  templateUrl: \"./view-offer.component.html\",\n  styleUrls: [\"./view-offer.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ViewOfferComponent implements OnInit {\n  @Input() offer: Offer;\n  offerPositions: OfferPosition[];\n  offerId: string;\n  headerText = \"\";\n  footerInfo = \"\";\n  offerComments: any;\n  hideWarranty = true;\n  hideZM = true;\n  username: string;\n\n  constructor(\n    private offerService: OffersService,\n    private printOfferService: PrintOfferService,\n    private authService: AuthService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.username = this.authService.userValue.name;\n    for (let propName in changes) {\n      if (propName === \"offer\") {\n        this.offer = changes[propName].currentValue;\n        this.offerPositions = this.offer.offerPosition;\n        this.offerComments = this.offer.offerComments.sort((a, b) => {\n          if (a.number > b.number) {\n            return 1;\n          } else if (a.number < b.number) {\n            return -1;\n          } else {\n            return 0;\n          }\n        });\n      }\n    }\n\n    if (this.checkIfWarranty(this.offerPositions)) {\n      this.hideWarranty = true;\n    } else {\n      this.hideWarranty = false;\n    }\n\n    if (this.checkIfZM(this.offerPositions)) {\n      this.hideZM = false;\n    } else {\n      this.hideZM = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.offerPositions = this.offer.offerPosition;\n    this.offerId = this.offer.offerNumber;\n    this.headerText = this.offer.printTextHeader;\n    this.footerInfo = this.offer.printTextTableFotter;\n    this.offerComments = this.offer.offerComments.sort((a, b) => {\n      if (a.number > b.number) {\n        return 1;\n      } else if (a.number < b.number) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  checkIfWarranty(positions: OfferPosition[]) {\n    let tmp = positions.find((x) => x.warranty == false);\n    if (tmp) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  checkIfZM(positions: OfferPosition[]) {\n    let test = positions.find((x) => {\n      let tmp = x.offerPositionSides.find((s) => s.changeColor == true);\n      if (tmp) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (test) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  checkComments() {\n    if (this.offerComments === undefined || this.offerComments.length == 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","<div id=\"print_offer_view\">\n  <div class=\"row header_top\">\n    <div class=\"col address\">\n      {{ offer.myCompany.name }}<br />\n      {{ \"ul. \" + offer.myCompany.street + \" \" + offer.myCompany.houseNumber\n      }}{{\n        offer.myCompany.flatNumber ? \"/\" + offer.myCompany.flatNumber : \"\"\n      }}, {{ offer.myCompany.postalCode + \" \" + offer.myCompany.town }}<br />\n      {{ offer.myCompany.email ? offer.myCompany.email + \", \" : \"\"\n      }}{{ offer.myCompany.www ? offer.myCompany.www : \"\" }}\n    </div>\n    <div class=\"col logo\">\n      <div class=\"float-right\" *ngIf=\"offer.myCompany.logoLink\">\n        <img height=\"50px\" [src]=\"offer.myCompany.logoLink\" alt=\"\" />\n      </div>\n      <p *ngIf=\"!offer.myCompany.logoLink\" class=\"float-right\">\n        {{ offer.myCompany.name }}\n      </p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col client_adress\">\n      {{ offer.client.name }} <br />\n      {{ \"ul. \" + offer.client.street + \" \" + offer.client.houseNumber\n      }}{{ offer.client.flatNumber ? \"/\" + offer.client.flatNumber : \"\" }}<br />\n      {{ offer.client.postalCode + \" \" + offer.client.town }}\n    </div>\n    <div class=\"col offer_date\">\n      <p>Kraków, dn. {{ offer.offerDate | date: \"dd.MM.yyyy\" }} r.</p>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col text\" [innerHTML]=\"headerText\"></div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <div class=\"sb_table\">\n        <div [ngClass]=\"{ warranty_hide: hideWarranty }\" class=\"sb_header\">\n          <div class=\"sb_item\">Nazwa i Numer kształownika</div>\n          <div class=\"sb_item warranty_col\">Gwarancja</div>\n          <div class=\"sb_side\">\n            <div class=\"sb_item\">Strona okleinowania</div>\n            <div class=\"sb_item\">Numer okleiny</div>\n            <div class=\"sb_item\">Szerokość oklejanej powierzchni w mm</div>\n            <div class=\"sb_item\">Cena PLN/mb</div>\n            <div class=\"sb_item\">Ilość mb</div>\n            <div class=\"sb_item\">Razem w PLN</div>\n            <div [ngClass]=\"{ zm_hide: hideZM }\" class=\"sb_additional\">\n              <div class=\"sb_item\">Dopłaty PLN</div>\n              <div class=\"sb_item\">U*</div>\n              <div class=\"sb_item\">P*</div>\n              <div class=\"sb_item zm_col\">ZM*</div>\n            </div>\n          </div>\n        </div>\n        <div\n          [ngClass]=\"{ warranty_hide: hideWarranty }\"\n          class=\"sb_body\"\n          *ngFor=\"let position of offerPositions\"\n        >\n          <div class=\"sb_item\">\n            {{ position.profilType }}<br />{{ position.profilNumber }}\n          </div>\n          <div class=\"sb_item warranty_col\">\n            {{ position.warranty ? \"\" : \"NIE\" }}\n          </div>\n          <div>\n            <div\n              class=\"sb_side\"\n              *ngFor=\"let pozSide of position.offerPositionSides\"\n            >\n              <div class=\"sb_item\">{{ pozSide.side }}</div>\n              <div class=\"sb_item\">{{ pozSide.filmNumber }}</div>\n              <div class=\"sb_item\">{{ pozSide.filmWidth }}</div>\n              <div class=\"sb_item\">{{ pozSide.plnMb | number: \"1.0-2\" }}</div>\n              <div class=\"sb_item\">{{ pozSide.quantityMb }}</div>\n              <div class=\"sb_item\">\n                {{ pozSide.togetherPay | number: \"1.0-2\" }}\n              </div>\n              <div [ngClass]=\"{ zm_hide: hideZM }\" class=\"sb_additional\">\n                <div class=\"sb_item\">\n                  {{ pozSide.costSetup | number: \"1.0-2\" }}\n                </div>\n                <div class=\"sb_item\">\n                  {{ pozSide.costSet | number: \"1.0-2\" }}\n                </div>\n                <div class=\"sb_item zm_col\">\n                  {{ pozSide.costChangeColor | number: \"1.0-2\" }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div [ngClass]=\"{ warranty_hide: hideWarranty }\" class=\"sb_body_sum\">\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item title\">Suma w PLN</div>\n              <div class=\"sb_additional_sum1\">\n                <div class=\"sb_item title\">Suma dopłat w PLN</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div [ngClass]=\"{ warranty_hide: hideWarranty }\" class=\"sb_body_sum\">\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side_sum\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item\">\n                {{ offer.sumAllPositionsPln | number: \"1.0-2\" }}\n              </div>\n              <div [ngClass]=\"{ zm_hide: hideZM }\" class=\"sb_additional\">\n                <div class=\"sb_item\">\n                  {{ offer.sumSetUpCost | number: \"1.0-2\" }}\n                </div>\n                <div class=\"sb_item\">\n                  {{ offer.sumSetCost | number: \"1.0-2\" }}\n                </div>\n                <div class=\"sb_item zm_col\">\n                  {{ offer.sumCostChangeColor | number: \"1.0-2\" }}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- Sum all -->\n        <div [ngClass]=\"{ warranty_hide: hideWarranty }\" class=\"sb_body_sum\">\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side_sumAll\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item title\">Razem netto w PLN</div>\n            </div>\n          </div>\n        </div>\n        <div [ngClass]=\"{ warranty_hide: hideWarranty }\" class=\"sb_body_sum\">\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side_sumAll\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item\">\n                {{ offer.sumAllNetto | number: \"1.0-2\" }}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Buy film cost  -->\n        <div\n          [ngClass]=\"{ warranty_hide: hideWarranty }\"\n          class=\"sb_body_sum\"\n          *ngIf=\"offer.costNettoBuyFilm\"\n        >\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side_sumAll\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item title\">Zakup okleiny netto w PLN</div>\n            </div>\n          </div>\n        </div>\n        <div\n          [ngClass]=\"{ warranty_hide: hideWarranty }\"\n          class=\"sb_body_sum\"\n          *ngIf=\"offer.costNettoBuyFilm\"\n        >\n          <div></div>\n          <div class=\"warranty_col\"></div>\n          <div>\n            <div class=\"sb_side_sumAll\">\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div></div>\n              <div class=\"sb_item\">\n                {{ offer.costNettoBuyFilm | number: \"1.0-2\" }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row tablefooter-info\">\n    <div class=\"col tablefooter\" [innerHtml]=\"footerInfo\"></div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"offer.costNettoBuyFilm\">\n    <div class=\"col tablefooter-film\" [innerHtml]=\"offer.buyFilmComment\"></div>\n  </div>\n\n  <div class=\"row p-flex-column\">\n    <div *ngIf=\"checkComments()\" class=\"col\">\n      <p><b>UWAGI:</b></p>\n    </div>\n    <div class=\"col comments\">\n      <ul>\n        <li *ngFor=\"let item of offerComments\">\n          <span [innerHTML]=\"item.comment\"></span>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col bottom-sign\">\n      <p>Z poważaniem,</p>\n      <p>{{ username }}</p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { SelectItem, SortEvent } from \"primeng/api\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { GlobalService } from \"src/app/_services/global.service\";\nimport { FormNewOfferComponent } from \"../form/new-offer/form-new-offer.component\";\nimport { Offer, OffersService, OfferStatus } from \"../offers.service\";\n\n@Component({\n  selector: \"app-main-offers\",\n  templateUrl: \"./main-offers.component.html\",\n  styleUrls: [\"./main-offers.component.scss\"],\n})\nexport class MainOffersComponent implements OnInit {\n  offersCount = 0;\n  loadingTable = false;\n  optionsSort: SelectItem[] = [];\n\n  allOffers: Offer[];\n  offersNew: Offer[];\n  offersInpreparation: Offer[];\n  offersSent: Offer[];\n  offersAccepted: Offer[];\n  offersCanceled: Offer[];\n\n  constructor(\n    public dialogService: DialogService,\n    public offerService: OffersService,\n    private infoPopup: InfoPopupComponent,\n    public globalService: GlobalService\n  ) {}\n\n  ngOnInit(): void {\n    this.optionsSort = [\n      { label: \"Wszystkie\", value: \"-1\" },\n      { label: \"Nowe\", value: OfferStatus.NEW },\n      { label: \"W przygotowaniu\", value: OfferStatus.INPREPARATION },\n      { label: \"Wysłana\", value: OfferStatus.SENT },\n      { label: \"Zaakceptowana\", value: OfferStatus.ACCEPTED },\n      { label: \"Anulowana\", value: OfferStatus.CANCELED },\n    ];\n    this.loadData();\n  }\n\n  showDialogToAddOffer() {\n    const ref = this.dialogService.open(FormNewOfferComponent, {\n      header: \"Nowa Oferta\",\n      styleClass: \"no-padding-dialog\",\n      width: \"500px\",\n    });\n\n    ref.onClose.subscribe((result) => {\n      console.log(\"The dialog add new offer was closed\");\n    });\n  }\n\n  loadData() {\n    this.globalService.loadingGlobal = true;\n    this.loadingTable = true;\n    this.offerService.getCountOffers().subscribe({\n      next: (res) => {\n        this.offersCount = res;\n      },\n      error: (err) => {\n        this.offersCount = 0;\n        this.infoPopup.showErrorDownload(\"ilości zleceń\");\n      },\n      complete: () => {},\n    });\n\n    this.offerService.getAllOffers().subscribe({\n      next: (res) => {\n        this.allOffers = [];\n        this.allOffers = res;\n        console.log(this.allOffers);\n        this.offersNew = this.allOffers.filter(\n          (x) => x.offerStatus == OfferStatus.NEW\n        );\n        this.offersInpreparation = this.allOffers.filter(\n          (x) => x.offerStatus == OfferStatus.INPREPARATION\n        );\n        this.offersSent = this.allOffers.filter(\n          (x) => x.offerStatus == OfferStatus.SENT\n        );\n        this.offersAccepted = this.allOffers.filter(\n          (x) => x.offerStatus == OfferStatus.ACCEPTED\n        );\n        this.offersCanceled = this.allOffers.filter(\n          (x) => x.offerStatus == OfferStatus.CANCELED\n        );\n\n        this.loadingTable = false;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"ofert\");\n      },\n      complete: () => {\n        this.globalService.loadingGlobal = false;\n      },\n    });\n  }\n\n  loadByStatus(value) {\n    if (value != \"-1\") {\n      this.offerService.getAllOffersByStatus(value).subscribe({\n        next: (res) => {\n          this.allOffers = [];\n          this.allOffers = res;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"ofert\");\n        },\n        complete: () => {},\n      });\n    } else {\n      this.loadData();\n    }\n  }\n\n  statusOfferSwitch(stat) {\n    switch (stat) {\n      case OfferStatus.NEW:\n        return \"Nowa\";\n      case OfferStatus.INPREPARATION:\n        return \"W przygotowaniu\";\n      case OfferStatus.SENT:\n        return \"Wysłana\";\n      case OfferStatus.ACCEPTED:\n        return \"Zaakceptowana\";\n      case OfferStatus.CANCELED:\n        return \"Anulowana\";\n    }\n  }\n\n  // SORT FUNCTION\n  customSort(event: SortEvent) {\n    event.data.sort((data1, data2) => {\n      let value1 = data1[event.field];\n      let value2 = data2[event.field];\n      let result = null;\n      let result2 = null;\n      if (value1 == null && value2 != null) result = -1;\n      else if (value1 != null && value2 == null) result = 1;\n      else if (value1 == null && value2 == null) result = 0;\n      else if (\n        typeof value1 === \"string\" &&\n        typeof value2 === \"string\" &&\n        event.field != \"offerNumber\"\n      )\n        result = value1.localeCompare(value2);\n      else if (event.field == \"offerNumber\") {\n        if (\n          Math.abs(value1.substring(value1.length - 4)) <\n          Math.abs(value2.substring(value2.length - 4))\n        )\n          return event.order * -1;\n        if (\n          Math.abs(value1.substring(value1.length - 4)) >\n          Math.abs(value2.substring(value2.length - 4))\n        )\n          return event.order * 1;\n        if (\n          Math.abs(value1.substring(0, value1.length - 4)) <\n          Math.abs(value2.substring(0, value2.length - 4))\n        )\n          return event.order * -1;\n        if (\n          Math.abs(value1.substring(0, value1.length - 4)) >\n          Math.abs(value2.substring(0, value2.length - 4))\n        )\n          return event.order * 1;\n      } else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n      return event.order * result;\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-ticket\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Oferty</p>\n                <p class=\"card-title\">{{ offersCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddOffer()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<p-tabView>\n  <p-tabPanel header=\"Nowe\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #ofn\n          [value]=\"offersNew\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [showCurrentPageReport]=\"true\"\n          [loading]=\"loadingTable\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"></p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"></p-sortIcon>\n              </th>\n            </tr>\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a\n                  routerLink=\"oferta/{{ rowData.offerNumber }}\"\n                  (click)=\"globalService.loadingGlobal = true\"\n                  >{{ rowData.offerNumber }}</a\n                >\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"W przygotowaniu\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #ofn\n          styleClass=\"p-datatable-striped\"\n          [value]=\"offersInpreparation\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [showCurrentPageReport]=\"true\"\n          [loading]=\"loadingTable\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"> </p-sortIcon>\n              </th>\n            </tr>\n\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a\n                  routerLink=\"oferta/{{ rowData.offerNumber }}\"\n                  (click)=\"globalService.loadingGlobal = true\"\n                  >{{ rowData.offerNumber }}</a\n                >\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"Wysłane\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #ofn\n          styleClass=\"p-datatable-striped\"\n          [value]=\"offersSent\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [showCurrentPageReport]=\"true\"\n          [loading]=\"loadingTable\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"> </p-sortIcon>\n              </th>\n            </tr>\n\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a\n                  routerLink=\"oferta/{{ rowData.offerNumber }}\"\n                  (click)=\"globalService.loadingGlobal = true\"\n                  >{{ rowData.offerNumber }}</a\n                >\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"Zaakceptowane\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #ofn\n          styleClass=\"p-datatable-striped\"\n          [value]=\"offersAccepted\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [showCurrentPageReport]=\"true\"\n          [loading]=\"loadingTable\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"> </p-sortIcon>\n              </th>\n            </tr>\n\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a\n                  routerLink=\"oferta/{{ rowData.offerNumber }}\"\n                  (click)=\"globalService.loadingGlobal = true\"\n                  >{{ rowData.offerNumber }}</a\n                >\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"Anulowane\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #ofn\n          styleClass=\"p-datatable-striped\"\n          [value]=\"offersCanceled\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [showCurrentPageReport]=\"true\"\n          [loading]=\"loadingTable\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"> </p-sortIcon>\n              </th>\n            </tr>\n\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a\n                  routerLink=\"oferta/{{ rowData.offerNumber }}\"\n                  (click)=\"globalService.loadingGlobal = true\"\n                  >{{ rowData.offerNumber }}</a\n                >\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"Wszystkie\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <p-table\n          #of\n          styleClass=\"p-datatable-striped\"\n          [value]=\"allOffers\"\n          dataKey=\"id\"\n          [paginator]=\"true\"\n          [rowsPerPageOptions]=\"[10, 20, 50]\"\n          [rows]=\"10\"\n          [resizableColumns]=\"true\"\n          sortField=\"offerNumber\"\n          sortOrder=\"-1\"\n          [showCurrentPageReport]=\"true\"\n          [autoLayout]=\"true\"\n          currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n          (sortFunction)=\"customSort($event)\"\n          [customSort]=\"true\"\n          [rowHover]=\"true\"\n        >\n          <ng-template pTemplate=\"caption\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Oferty</span>\n              </div>\n              <div class=\"col\" style=\"text-align: end\">\n                <p-dropdown\n                  #of\n                  placeholder=\"Wybierz Status\"\n                  (onChange)=\"loadByStatus(of.selectedOption.value)\"\n                  [options]=\"optionsSort\"\n                  [filter]=\"true\"\n                  filterBy=\"name,value\"\n                  class=\"\"\n                >\n                </p-dropdown>\n              </div>\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr class=\"pm-head\">\n              <th pSortableColumn=\"offerNumber\">\n                Numer Oferty<p-sortIcon field=\"offerNumber\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"client.name\">\n                Klient<p-sortIcon field=\"client.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"myCompany.name\">\n                Firma<p-sortIcon field=\"myCompany.name\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"offerDate\">\n                Data Oferty<p-sortIcon field=\"offerDate\"> </p-sortIcon>\n              </th>\n\n              <th pSortableColumn=\"offerStatus\">\n                Status<p-sortIcon field=\"offerStatus\"> </p-sortIcon>\n              </th>\n              <th pSortableColumn=\"createdBy\">\n                Utworzone przez<p-sortIcon field=\"createdBy\"> </p-sortIcon>\n              </th>\n            </tr>\n            <tr>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'offerNumber', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po numerze oferty\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th>\n                <input\n                  pInputText\n                  type=\"text\"\n                  (input)=\"\n                    of.filter($event.target.value, 'client.name', 'startsWith')\n                  \"\n                  placeholder=\"Szukaj po nazwie klienta\"\n                  class=\"p-inputtext-sm w-100\"\n                />\n              </th>\n              <th></th>\n              <th></th>\n              <th></th>\n              <th></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n            <tr class=\"pm-body\">\n              <td>\n                <a routerLink=\"oferta/{{ rowData.offerNumber }}\">{{\n                  rowData.offerNumber\n                }}</a>\n              </td>\n              <td>{{ rowData.client.name }}</td>\n              <td>{{ rowData.myCompany.name }}</td>\n              <td>{{ rowData.offerDate }}</td>\n              <td>{{ statusOfferSwitch(rowData.offerStatus) }}</td>\n              <td>{{ rowData.createdBy }}</td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </p-tabPanel>\n</p-tabView>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators, FormArray } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\nimport {\n  KatalogSystem,\n  KatalogProfili,\n} from \"src/app/catalog/catalog-service/catalog.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { ProductionServiceService } from \"src/app/production/production-service/production-service.service\";\nimport {\n  OfferHelpers,\n  SettingsService,\n} from \"src/app/settings/settings.service\";\nimport { GlobalService } from \"src/app/_services/global.service\";\nimport { Offer, OfferPosition, OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-update-offer-position\",\n  templateUrl: \"./update-offer-position.component.html\",\n  styleUrls: [\"./update-offer-position.component.scss\"],\n})\nexport class UpdateOfferPositionComponent implements OnInit {\n  helper: OfferHelpers;\n  catalogSugFiltered: any;\n  selectedSystem: KatalogSystem = null;\n  selectedCatalog: KatalogProfili = null;\n  allCatalog: KatalogProfili[];\n  filmSugFiltered: any;\n  sideSugFiltered: any;\n  searchBy = [\"number\"];\n  sideSug = [\"zew\", \"wew\", \"jedno\", \"środek\", \"obu\", \"obu-zew\", \"obu-wew\"];\n  offerData: Offer;\n  offerPosition: OfferPosition;\n  exchange: any;\n  loading = false;\n  changeSetUpCost = false;\n\n  formOfferPosition: FormGroup = new FormGroup({\n    id: new FormControl(\"\"),\n    profilType: new FormControl(\"\", { validators: [Validators.required] }),\n    profilNumber: new FormControl(\"\", { validators: [Validators.required] }),\n    alu: new FormControl(null),\n    catalogIdHelper: new FormControl(\"\"),\n    warranty: new FormControl(null),\n    offerPositionSides: new FormArray([\n      new FormGroup({\n        id: new FormControl(\"\"),\n        side: new FormControl(\"\"),\n        filmNumber: new FormControl(\"\"),\n        filmWidth: new FormControl(\"\", {\n          validators: [Validators.required, Validators.nullValidator],\n        }),\n        filmEntrusted: new FormControl(\"\"),\n        quantityMb: new FormControl(\"\", {\n          validators: [Validators.required, Validators.nullValidator],\n        }),\n        hard: new FormControl(\"\"),\n        changeColor: new FormControl(false),\n        costSetupAdditional: new FormControl(\"\"),\n        exchangeRate: new FormControl(\"\"),\n        bicolor: new FormControl(\"\"),\n        costChangeColor: new FormControl(\"\"),\n        additional: new FormControl(\"\", {\n          validators: [Validators.required, Validators.nullValidator],\n        }),\n        cost: new FormControl(\"\", {\n          validators: [Validators.required, Validators.nullValidator],\n        }),\n        mIs: new FormControl(\"\", {\n          validators: [Validators.required, Validators.nullValidator],\n        }),\n      }),\n    ]),\n  });\n\n  constructor(\n    public productionService: ProductionServiceService,\n    public settingService: SettingsService,\n    public offerService: OffersService,\n    private cookieService: CookieService,\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private globalService: GlobalService\n  ) {\n    this.offerData = config.data[0];\n    this.offerPosition = config.data[1];\n  }\n\n  ngOnInit(): void {\n    this.globalService.loadingGlobal = true;\n    this.findSystem(this.offerPosition.catalogIdHelper);\n    this.filterBySystem();\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n        this.loadStructure().then((x) => {\n          this.formOfferPosition.patchValue(this.offerPosition);\n          this.globalService.loadingGlobal = false;\n        });\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n\n  loadStructure() {\n    return new Promise((resolve, reject) => {\n      for (\n        let index = 1;\n        index < this.offerPosition.offerPositionSides.length;\n        index++\n      ) {\n        this.addSideStructure();\n      }\n      resolve();\n    });\n  }\n\n  findSystem(id) {\n    if (id != null && id != \"\") {\n      let cat = this.productionService.catalogSuggestions.find(\n        (x) => x.id == id\n      );\n      this.selectedSystem = cat.systemProfil;\n      this.selectedCatalog = cat;\n    }\n  }\n\n  filterBySystem() {\n    this.allCatalog = [];\n    if (this.selectedSystem != null) {\n      for (\n        let i = 0;\n        i < this.productionService.catalogSuggestions.length;\n        i++\n      ) {\n        let cat = this.productionService.catalogSuggestions[i];\n        if (cat.systemProfil.name != null) {\n          if (cat.systemProfil.id === this.selectedSystem.id) {\n            this.allCatalog.push(cat);\n          }\n        }\n      }\n      this.cookieService.set(\n        \"creatorSelectedSystemOffer\",\n        JSON.stringify(this.selectedSystem)\n      );\n    } else {\n      this.allCatalog = this.productionService.catalogSuggestions;\n    }\n  }\n\n  searchCatalog(event) {\n    this.catalogSugFiltered = [];\n    if (event.query != \"\") {\n      console.log(\"loading\");\n      for (let i = 0; i < this.allCatalog.length; i++) {\n        let cat = this.allCatalog[i];\n        if (cat.number != null && this.searchBy.includes(\"number\")) {\n          if (cat.number.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n        if (cat.profileType != null && this.searchBy.includes(\"name\")) {\n          if (\n            cat.profileType.toLowerCase().includes(event.query.toLowerCase())\n          ) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n      }\n    } else {\n      this.allCatalog.forEach((x) => this.catalogSugFiltered.push(x));\n    }\n  }\n\n  duplicateLastSide() {\n    let tmp = this.sides.at(this.sides.length - 1);\n    this.addSide();\n    this.sides.at(this.sides.length - 1).patchValue(tmp.value);\n    this.sides\n      .at(this.sides.length - 1)\n      .get(\"id\")\n      .patchValue(null);\n  }\n\n  searchFilm(event) {\n    this.filmSugFiltered = [];\n    for (let i = 0; i < this.productionService.filmSuggestions.length; i++) {\n      let film = this.productionService.filmSuggestions[i];\n      if (\n        film.number.toLowerCase().includes(event.query.toLowerCase()) ||\n        film.name.toLowerCase().includes(event.query.toLowerCase())\n      ) {\n        this.filmSugFiltered.push(film);\n      }\n    }\n  }\n\n  searchSide(event) {\n    this.sideSugFiltered = [];\n    for (let i = 0; i < this.sideSug.length; i++) {\n      let side = this.sideSug[i];\n      if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.sideSugFiltered.push(side);\n      }\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  get sides(): FormArray {\n    return this.formOfferPosition.get(\"offerPositionSides\") as FormArray;\n  }\n\n  addSide() {\n    const group = new FormGroup({\n      id: new FormControl(\"\"),\n      side: new FormControl(\"\"),\n      filmNumber: new FormControl(null),\n      filmWidth: new FormControl(\"\", {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      filmEntrusted: new FormControl(false),\n      quantityMb: new FormControl(6.5, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      hard: new FormControl(false),\n      changeColor: new FormControl(false),\n      costSetupAdditional: new FormControl(\"\"),\n      bicolor: new FormControl(null),\n      costChangeColor: new FormControl(null),\n      exchangeRate: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      additional: new FormControl(this.offerData.client.helper_additional, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      cost: new FormControl(this.offerData.client.helper_cost, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      mIs: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n    });\n    this.sides.push(group);\n    this.changeHard(this.sides.length - 1);\n    if (this.formOfferPosition.get(\"alu\").value) {\n      this.sides.controls[this.sides.length - 1][\"controls\"][\n        \"exchangeRate\"\n      ].setValue(this.helper.exchangeRateAlu);\n    } else {\n      this.sides.controls[this.sides.length - 1][\"controls\"][\n        \"exchangeRate\"\n      ].setValue(this.helper.exchangeRatePcv);\n    }\n  }\n\n  addSideStructure() {\n    const group = new FormGroup({\n      id: new FormControl(\"\"),\n      side: new FormControl(\"\"),\n      filmNumber: new FormControl(null),\n      filmWidth: new FormControl(\"\", {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      filmEntrusted: new FormControl(false),\n      quantityMb: new FormControl(6.5, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      hard: new FormControl(false),\n      changeColor: new FormControl(false),\n      costSetupAdditional: new FormControl(\"\"),\n      bicolor: new FormControl(null),\n      costChangeColor: new FormControl(null),\n      exchangeRate: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      additional: new FormControl(this.offerData.client.helper_additional, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      cost: new FormControl(this.offerData.client.helper_cost, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n      mIs: new FormControl(null, {\n        validators: [Validators.required, Validators.nullValidator],\n      }),\n    });\n    this.sides.push(group);\n  }\n\n  removeSide(i: number) {\n    this.sides.removeAt(i);\n  }\n\n  onSelectFilm(event, i) {\n    this.sides.controls[i].get(\"filmNumber\").setValue(event.number);\n    this.sides.controls[i].get(\"bicolor\").setValue(event.surchargePercentage);\n  }\n\n  onSelectSide(e, index) {\n    if (this.selectedCatalog != null) {\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index]\n        .get(\"hard\")\n        .setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get(\"filmWidth\").setValue(res);\n    }\n  }\n\n  onSelectCatalog(event: KatalogProfili) {\n    this.selectedCatalog = event;\n    this.formOfferPosition.get(\"profilNumber\").setValue(event.number);\n    this.formOfferPosition.get(\"profilType\").setValue(event.offerName);\n    this.formOfferPosition.get(\"alu\").setValue(event.alu);\n    this.formOfferPosition.get(\"catalogIdHelper\").setValue(event.id);\n    this.sides.controls.forEach((x, index) => {\n      let e = x.get(\"side\").value;\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index]\n        .get(\"hard\")\n        .setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get(\"filmWidth\").setValue(res);\n    });\n  }\n\n  calculateSides() {\n    console.log(\"calculate side\");\n    for (let index = 0; index < this.sides.length; index++) {\n      this.changeHard(index);\n    }\n  }\n\n  colorFieldChange(i, event) {\n    console.log(\"color field change\");\n    if (event) {\n      this.sides.controls[i][\"controls\"][\"changeColor\"].setValue(true);\n    } else {\n      this.sides.controls[i][\"controls\"][\"changeColor\"].setValue(false);\n    }\n  }\n\n  changeColorChangebox(i, event) {\n    console.log(\"color box change\");\n    if (event.checked) {\n      this.sides.controls[i][\"controls\"][\"costChangeColor\"].setValue(\n        this.offerData.client.helper_costChangeColor\n      );\n    } else {\n      this.sides.controls[i][\"controls\"][\"costChangeColor\"].setValue(\"\");\n    }\n  }\n\n  changeHard(i) {\n    console.log(\"hard change\");\n    let event = this.sides.controls[i][\"controls\"][\"quantityMb\"].value;\n    this.loadM(event, i);\n  }\n\n  changeAlu(event) {\n    console.log(\"alu change\");\n    if (event.checked) {\n      this.sides.controls.forEach((x, index) => {\n        console.log(\"alu\");\n        x[\"controls\"][\"exchangeRate\"].setValue(this.helper.exchangeRateAlu);\n        this.loadM(x.get(\"quantityMb\").value, index);\n      });\n    } else {\n      console.log(\"pcv\");\n      this.sides.controls.forEach((x, index) => {\n        x[\"controls\"][\"exchangeRate\"].setValue(this.helper.exchangeRatePcv);\n        this.loadM(x.get(\"quantityMb\").value, index);\n      });\n    }\n  }\n\n  loadM(event, i) {\n    let tmpHard = this.sides.controls[i][\"controls\"][\"hard\"].value;\n    let tmpAlu = this.formOfferPosition.get(\"alu\").value;\n\n    if (tmpAlu) {\n      if (event <= 50) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo50\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo50\n          );\n        }\n      } else if (event > 50 && event <= 150) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo150\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo150\n          );\n        }\n      } else if (event > 150 && event <= 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardTo500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyTo500\n          );\n        }\n      } else if (event > 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mHardAbove500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_alu_mEasyAbove500\n          );\n        }\n      }\n    } else {\n      if (event <= 50) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo50\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo50\n          );\n        }\n      } else if (event > 50 && event <= 150) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo150\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo150\n          );\n        }\n      } else if (event > 150 && event <= 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardTo500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyTo500\n          );\n        }\n      } else if (event > 500) {\n        if (tmpHard) {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mHardAbove500\n          );\n        } else {\n          this.sides.controls[i][\"controls\"][\"mIs\"].setValue(\n            this.offerData.client.helper_pcv_mEasyAbove500\n          );\n        }\n      }\n    }\n  }\n\n  updateOfferPosition() {\n    this.loading = true;\n    this.offerService\n      .updateOfferPosition(\n        this.offerData.offerNumber,\n        this.offerPosition.id,\n        this.formOfferPosition.value\n      )\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"pozycja\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"pozycja\");\n          this.loading = false;\n          console.log(err);\n        },\n      });\n  }\n}\n","<div class=\"sb-dialog-content offer-position-form\">\n  <form [formGroup]=\"formOfferPosition\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-sm-12 col-md-6 col-lg-6\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"systemId\">Wybór systemu</label>\n            <p-dropdown\n              [options]=\"productionService.allSystems\"\n              (onChange)=\"filterBySystem()\"\n              styleClass=\"fullwidth\"\n              appendTo=\"body\"\n              [(ngModel)]=\"selectedSystem\"\n              [ngModelOptions]=\"{ standalone: true }\"\n              placeholder=\"Wybierz system\"\n              optionLabel=\"name\"\n              [showClear]=\"true\"\n              filter=\"true\"\n            >\n            </p-dropdown>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <p-radioButton\n              class=\"p-2\"\n              name=\"groupSearch\"\n              value=\"number\"\n              label=\"Numer\"\n              [(ngModel)]=\"searchBy\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            ></p-radioButton>\n            <p-radioButton\n              class=\"p-2\"\n              name=\"groupSearch\"\n              value=\"name\"\n              label=\"Nazwa\"\n              [(ngModel)]=\"searchBy\"\n              [ngModelOptions]=\"{ standalone: true }\"\n            >\n            </p-radioButton>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"profilNumberId\"\n              >Numer kształtownika *</label\n            >\n            <p-autoComplete\n              [inputStyle]=\"{ 'font-weight': 'bold' }\"\n              autocomplete=\"off\"\n              appendTo=\"body\"\n              styleClass=\"fullwidth\"\n              [formControl]=\"formOfferPosition.get('profilNumber')\"\n              [suggestions]=\"catalogSugFiltered\"\n              (completeMethod)=\"searchCatalog($event)\"\n              [dropdown]=\"true\"\n              emptyMessage=\"Nie znaleziono\"\n              (onSelect)=\"onSelectCatalog($event)\"\n            >\n              <ng-template let-catalog pTemplate=\"item\">\n                <div\n                  [class]=\"\n                    'measure-badge status-' +\n                    catalog.actualMeasurement +\n                    ' catalog-dropdown'\n                  \"\n                >\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div style=\"font-size: 16px\">\n                        <i\n                          style=\"color: red; font-size: 1em; padding-right: 2px\"\n                          *ngIf=\"catalog.hard\"\n                          class=\"pi pi-exclamation-triangle\"\n                        ></i>\n                        {{ catalog.number }}\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        {{ catalog.profileType }}\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        {{ catalog.systemProfil.name }}\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div style=\"font-size: 12px\">\n                        ZEW: <b>{{ catalog.dimOuter }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        WEW: <b>{{ catalog.dimInner }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        JEDN: <b>{{ catalog.dimOneSide }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        ŚRO: <b>{{ catalog.dimCenterSide }}</b>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div style=\"font-size: 12px\">\n                        OBU: <b>{{ catalog.dimTwoSide }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        OBU ZEW:\n                        <b>{{ catalog.dimTwoSideOuter }}</b>\n                      </div>\n                      <div style=\"font-size: 12px\">\n                        OBU WEW:\n                        <b>{{ catalog.dimTwoSideInner }}</b>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </ng-template>\n            </p-autoComplete>\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formOfferPosition.get('profilNumber').hasError('required') &&\n                formOfferPosition.get('profilNumber').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"profilTypeId\"\n              >Rodzaj kształtownika *</label\n            >\n            <input\n              pInputText\n              type=\"text\"\n              autocomplete=\"off\"\n              class=\"fullwidth\"\n              [formControl]=\"formOfferPosition.get('profilType')\"\n            />\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formOfferPosition.get('profilType').hasError('required') &&\n                formOfferPosition.get('profilType').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n        <div class=\"row pt-1\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n            <p-checkbox\n              [formControl]=\"formOfferPosition.get('alu')\"\n              (onChange)=\"changeAlu($event)\"\n              [binary]=\"true\"\n              label=\"Alu\"\n            >\n            </p-checkbox>\n          </div>\n        </div>\n        <div class=\"row pt-1\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n            <p-checkbox\n              [formControl]=\"formOfferPosition.get('warranty')\"\n              [binary]=\"true\"\n              label=\"Gwarancja\"\n            >\n            </p-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-sm-12 col-md-6 col-lg-6\">\n        <div class=\"row w-100 m-0 cost-range-table\">\n          <div class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form\">\n            <div class=\"row\">\n              <div class=\"sb-stars-header\">Ustawienia klienta</div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead>\n                      <th class=\"text-left\">Metry</th>\n                      <th class=\"text-center\">Łatwe (PCV)</th>\n                      <th class=\"text-center\">Trudne (PCV)</th>\n                      <th class=\"text-center\">Łatwe (ALU)</th>\n                      <th class=\"text-center\">Trudne (ALU)</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-left\">0-50</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo50 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo50 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">51-150</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo150 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo150 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">151-500</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyTo500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardTo500 }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td class=\"text-left\">pow. 500</td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mEasyAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_pcv_mHardAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mEasyAbove500 }}\n                        </td>\n                        <td class=\"text-center\">\n                          {{ offerData?.client.helper_alu_mHardAbove500 }}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead>\n                      <th></th>\n                      <th class=\"text-center\">Kurs</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td>ALU</td>\n                        <td class=\"text-center\">\n                          {{ helper?.exchangeRateAlu }}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>PCV</td>\n                        <td class=\"text-center\">\n                          {{ helper?.exchangeRatePcv }}\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row w-100 m-0\">\n          <div\n            *ngIf=\"selectedCatalog != null\"\n            class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form mt-2\"\n          >\n            <div class=\"row p-1\">\n              <div class=\"sb-stars-header\">Wybrana pozycja</div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead class=\"sb-header-normal\">\n                      <th class=\"text-left\">Numer</th>\n                      <th class=\"text-left\">Nazwa</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-center\">\n                          <b>{{ selectedCatalog.number }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{ selectedCatalog.offerName }}</b>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"stats-table\">\n                  <table>\n                    <tbody>\n                      <tr>\n                        <td\n                          *ngIf=\"selectedCatalog.hard\"\n                          style=\"color: red; border: 0\"\n                          class=\"text-center\"\n                        >\n                          <i\n                            style=\"padding-right: 5px\"\n                            class=\"pi pi-exclamation-triangle\"\n                          ></i>\n                          <span>TRUDNE</span>\n                        </td>\n                        <td\n                          *ngIf=\"selectedCatalog.actualMeasurement\"\n                          style=\"color: green; border: 0\"\n                          class=\"text-center\"\n                        >\n                          <i\n                            style=\"padding-right: 5px\"\n                            class=\"pi pi-check-circle\"\n                          ></i>\n                          <span>Wymiar zmierzony fizycznie</span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"row p-1\">\n              <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                <div class=\"stats-table\">\n                  <table>\n                    <thead class=\"sb-header-normal\">\n                      <th class=\"text-center\">ZEW</th>\n                      <th class=\"text-center\">WEW</th>\n                      <th class=\"text-center\">JEDN</th>\n                      <th class=\"text-center\">ŚROD</th>\n                      <th class=\"text-center\">OBU</th>\n                      <th class=\"text-center\">OBU ZEW</th>\n                      <th class=\"text-center\">OBU WEW</th>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimOuter\n                              ? selectedCatalog.dimOuter\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimInner\n                              ? selectedCatalog.dimInner\n                              : \"--\"\n                          }}</b>\n                        </td>\n\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimOneSide\n                              ? selectedCatalog.dimOneSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimCenterSide\n                              ? selectedCatalog.dimCenterSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSide\n                              ? selectedCatalog.dimTwoSide\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSideOuter\n                              ? selectedCatalog.dimTwoSideOuter\n                              : \"--\"\n                          }}</b>\n                        </td>\n                        <td class=\"text-center\">\n                          <b>{{\n                            selectedCatalog.dimTwoSideInner\n                              ? selectedCatalog.dimTwoSideInner\n                              : \"--\"\n                          }}</b>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"row mt-2\"\n              *ngIf=\"selectedCatalog.comments\"\n              style=\"border-top: 1px solid #d5d5d5\"\n            >\n              <div class=\"col-sm-12 col-md-12 col-lg-12 p-0\" pTooltip=\"Uwagi\">\n                <div\n                  class=\"sb-stars-header\"\n                  style=\"color: red; font-size: 10px\"\n                >\n                  UWAGI:\n                </div>\n                <div class=\"pl-1\" [innerHtml]=\"selectedCatalog.comments\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n    <div class=\"row mb-2\">\n      <div class=\"col text-center\">\n        <span><b>STRONY</b></span>\n      </div>\n    </div>\n\n    <div formArrayName=\"offerPositionSides\">\n      <div\n        class=\"row sb-position-side\"\n        *ngFor=\"let item of sides.controls; index as i\"\n        [formGroupName]=\"i\"\n      >\n        <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n          <div class=\"row flex-nowrap sb-row-position-side\">\n            <div class=\"col-sm-1 col-md-1 col-lg-1 sb-col-side count\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"removeSide(i)\"\n                style=\"height: 25px\"\n                pTooltip=\"Usuń stronę\"\n                icon=\"pi pi-times\"\n                class=\"p-button-sm sb-button red\"\n              ></button>\n\n              <span class=\"text-center p-2\">{{ i + 1 }}</span>\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"side\">Str. kształ.</label>\n              <p-autoComplete\n                formControlName=\"side\"\n                autocomplete=\"off\"\n                [suggestions]=\"sideSugFiltered\"\n                (completeMethod)=\"searchSide($event)\"\n                [dropdown]=\"true\"\n                autocomplete=\"off\"\n                [completeOnFocus]=\"true\"\n                appendTo=\"body\"\n                (onSelect)=\"onSelectSide($event, i)\"\n              >\n                <ng-template let-side pTemplate=\"item\">\n                  <div class=\"catalog-dropdown-side\">\n                    <div class=\"row\">\n                      <div class=\"col\">{{ side }}</div>\n                    </div>\n                  </div>\n                </ng-template>\n              </p-autoComplete>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"filmNumber\"\n                >Numer Okleiny</label\n              >\n              <p-autoComplete\n                formControlName=\"filmNumber\"\n                [minLength]=\"1\"\n                [suggestions]=\"filmSugFiltered\"\n                (completeMethod)=\"searchFilm($event)\"\n                [dropdown]=\"true\"\n                autocomplete=\"off\"\n                [completeOnFocus]=\"true\"\n                appendTo=\"body\"\n                (onSelect)=\"onSelectFilm($event, i)\"\n              >\n                <ng-template let-film pTemplate=\"item\">\n                  <div class=\"catalog-dropdown-film\">\n                    <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                    <div class=\"row\">\n                      <div class=\"col-6\">\n                        <div style=\"font-size: 16px\">{{ film.number }}</div>\n                        <div style=\"font-size: 12px\">{{ film.name }}</div>\n                      </div>\n\n                      <div\n                        class=\"col-6 pl-2 text-center\"\n                        [ngSwitch]=\"film.status\"\n                        style=\"font-size: 12px\"\n                      >\n                        <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-dost\">\n                          DOST.\n                        </div>\n                        <div\n                          *ngSwitchCase=\"'NIEDOSTEPNA'\"\n                          class=\"status-niedost\"\n                        >\n                          NIEDOST.\n                        </div>\n                        <div\n                          *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\"\n                          class=\"status-ogr\"\n                        >\n                          OGRAN.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </ng-template>\n              </p-autoComplete>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"filmWidthId\"\n                >Szer. Okl. (mm)*</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"filmWidth\"\n              />\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"quantityMb\">Ilość Mb *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                (onInput)=\"loadM($event.value, i)\"\n                formControlName=\"quantityMb\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n          <div class=\"row flex-nowrap sb-row-position-side justify-content-end\">\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"cost\">Koszt *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".01\"\n                formControlName=\"cost\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" pTooltip=\"Przelicznik\" for=\"mIs\"\n                >Przelicz. *</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".5\"\n                formControlName=\"mIs\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label\n                class=\"sb-small-label\"\n                pToolTip=\"Dodaję licznę wpisaną do końcowego wyniku pln/mb\"\n                for=\"additional\"\n                >Dopłata mb</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"additional\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label\n                class=\"sb-small-label\"\n                pToolTip=\"Mnożnik procentowy za folię (wpisać ilość %)\"\n                for=\"bicolor\"\n                >Dop. okl. (%)</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"bicolor\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"costChangeColor\"\n                >Zm. koloru</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                formControlName=\"costChangeColor\"\n                (ngModelChange)=\"colorFieldChange(i, $event)\"\n              />\n            </div>\n\n            <div class=\"col-sm-2 col-md-2 col-lg-2 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"exchangeRate\">Kurs *</label>\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\".1\"\n                formControlName=\"exchangeRate\"\n              />\n            </div>\n          </div>\n\n          <div class=\"row align-items-center w-100 m-0\">\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"hard\"\n                (onChange)=\"changeHard(i)\"\n                [binary]=\"true\"\n                label=\"Trudne\"\n              >\n              </p-checkbox>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"filmEntrusted\"\n                [binary]=\"true\"\n                label=\"Folia powierzona\"\n              >\n              </p-checkbox>\n            </div>\n\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <p-checkbox\n                formControlName=\"changeColor\"\n                (onChange)=\"changeColorChangebox(i, $event)\"\n                [binary]=\"true\"\n                label=\"Zm. koloru\"\n              >\n              </p-checkbox>\n            </div>\n            <div class=\"col-sm-3 col-md-3 col-lg-3 sb-col-side\">\n              <label class=\"sb-small-label\" for=\"costSetupAdditional\"\n                >Ust**</label\n              >\n              <input\n                pInputText\n                type=\"number\"\n                inputmode=\"numeric\"\n                class=\"w-100\"\n                min=\"0\"\n                step=\"1\"\n                pTooltip=\"Podmienia koszt ustawienia, ignoruje zakresy dla ustawienia podstawowego\"\n                formControlName=\"costSetupAdditional\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div\n          class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center\"\n        >\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"addSide()\"\n            pTooltip=\"Dodaj stronę\"\n            icon=\"pi pi-plus\"\n            label=\"Dodaj stronę\"\n            class=\"p-button-sm sb-button blue m-1\"\n          ></button>\n\n          <button\n            [disabled]=\"sides.length == 0\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"duplicateLastSide()\"\n            pTooltip=\"Powielanie ostatniej pozycji\"\n            icon=\"pi pi-angle-double-down\"\n            label=\"Powiel stronę\"\n            class=\"p-button-sm sb-button blue m-1\"\n          ></button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\" style=\"position: sticky; bottom: 0\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie dodawania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"formOfferPosition.invalid || loading || sides.length == 0\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateOfferPosition()\"\n      pTooltip=\"Aktualizuj pozycję\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ThemePalette } from \"@angular/material/core\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport { reduce } from \"rxjs/operators\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-form-new-offer\",\n  templateUrl: \"./form-new-offer.component.html\",\n  styleUrls: [\"./form-new-offer.component.scss\"],\n})\nexport class FormNewOfferComponent implements OnInit {\n  color: ThemePalette = \"warn\";\n  formOffer: FormGroup;\n  loading = false;\n  pl = {\n    firstDayOfWeek: 1,\n    dayNames: [\n      \"Niedziela\",\n      \"Poniedziałek\",\n      \"Wtorek\",\n      \"Środa\",\n      \"Czwartek\",\n      \"Piątek\",\n      \"Sobota\",\n    ],\n    dayNamesShort: [\"Niedz\", \"Pon\", \"Wt\", \"Śr\", \"Czw\", \"Pt\", \"Sob\"],\n    dayNamesMin: [\"Ni\", \"Po\", \"Wt\", \"Śr\", \"Cz\", \"Pt\", \"So\"],\n    monthNames: [\n      \"Styczeń\",\n      \"Luty\",\n      \"Marzec\",\n      \"Kwiecień\",\n      \"Maj\",\n      \"Czerwiec\",\n      \"Lipiec\",\n      \"Sierpień\",\n      \"Wrzesień\",\n      \"Październik\",\n      \"Listopad\",\n      \"Grudzień\",\n    ],\n    monthNamesShort: [\n      \"Sty\",\n      \"Lut\",\n      \"Mar\",\n      \"Kwi\",\n      \"Maj\",\n      \"Cze\",\n      \"Lip\",\n      \"Sie\",\n      \"Wrz\",\n      \"Paź\",\n      \"Lis\",\n      \"Gru\",\n    ],\n    today: \"Dziś\",\n    clear: \"Wyczyść\",\n    dateFormat: \"dd-mm-yy\",\n    weekHeader: \"Wk\",\n  };\n\n  constructor(\n    public offerService: OffersService,\n    private infoPopup: InfoPopupComponent,\n    private route: ActivatedRoute,\n    private router: Router,\n    public ref: DynamicDialogRef\n  ) {}\n\n  ngOnInit(): void {\n    this.formOffer = new FormGroup({\n      offerNumber: new FormControl(\"\"),\n      offerDate: new FormControl(new Date()),\n      myCompany: new FormControl(\"\", { validators: [Validators.required] }),\n      client: new FormControl(\"\", { validators: [Validators.required] }),\n    });\n    this.offerService.getMyCompanies();\n    this.offerService.getClients();\n  }\n\n  addOffer() {\n    this.loading = true;\n    this.offerService.addNewOffer(this.formOffer.value).subscribe({\n      next: (res) => {\n        this.router.navigate([\"../marketing/oferta/\", res.offerNumber], {\n          relativeTo: this.route,\n        });\n        this.infoPopup.showSuccessAdd(\"oferta\");\n        this.exit(1);\n        this.loading = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.infoPopup.showErrorAdd(\"oferta\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n  exit(id) {\n    this.ref.close(id);\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formOffer\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"myCompany\">Oferta do firmy *</label>\n\n        <p-dropdown\n          [style]=\"{ width: '100%' }\"\n          appendTo=\"body\"\n          placeholder=\"Wybierz firmę\"\n          id=\"myCompany\"\n          [options]=\"offerService.myCompanyData\"\n          [filter]=\"true\"\n          filterBy=\"name,value.name\"\n          [formControl]=\"formOffer.get('myCompany')\"\n          required\n        ></p-dropdown>\n\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formOffer.get('myCompany').hasError('required') &&\n            formOffer.get('myCompany').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"client\">Klient *</label>\n\n        <p-dropdown\n          placeholder=\"Wybierz klienta\"\n          [style]=\"{ width: '100%' }\"\n          appendTo=\"body\"\n          id=\"client\"\n          [options]=\"offerService.clientData\"\n          [filter]=\"true\"\n          filterBy=\"name,value.name\"\n          [formControl]=\"formOffer.get('client')\"\n          required\n        >\n        </p-dropdown>\n\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formOffer.get('client').hasError('required') &&\n            formOffer.get('client').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-6 col-lg-6\">\n        <label class=\"sb-small-label\" for=\"offerDate\">Data Oferty</label>\n\n        <p-calendar\n          dateFormat=\"yy-mm-dd\"\n          appendTo=\"body\"\n          [monthNavigator]=\"true\"\n          [locale]=\"pl\"\n          [formControl]=\"formOffer.get('offerDate')\"\n          [showIcon]=\"true\"\n          required\n        >\n        </p-calendar>\n      </div>\n\n      <div class=\"col-g-12 col-md-6 col-lg-6\">\n        <label class=\"sb-small-label\" for=\"offerNumber\">Numer oferty**</label>\n\n        <input\n          pInputText\n          id=\"offerNumber\"\n          pKeyFilter=\"alpha\"\n          [formControl]=\"formOffer.get('offerNumber')\"\n          type=\"text\"\n          pTooltip=\"Pole przeznaczone do wpisania numeru oferty jeżeli chcemy ustawić indywidualny. Pozostawienie pustego pola spowoduje automatyczne wygenerowanie numeru oferty.\"\n          class=\"\"\n          placeholder=\"LMMrr-O-FM\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie dodawania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"formOffer.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addOffer()\"\n      pTooltip=\"Dodaj ofertę\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, Injectable, OnInit } from \"@angular/core\";\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  ActivatedRoute,\n  Router,\n} from \"@angular/router\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { ConfirmationService } from \"primeng/api\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { Observable } from \"rxjs\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { ProductionServiceService } from \"src/app/production/production-service/production-service.service\";\nimport {\n  OfferHelpers,\n  SettingsService,\n} from \"src/app/settings/settings.service\";\nimport { AddOfferPositionComponent } from \"../form/add-offer-position/add-offer-position.component\";\nimport { UpdateClientHelpersComponent } from \"../form/update-client-helpers/update-client-helpers.component\";\nimport { UpdateClientHelperRangeComponent } from \"../form/update-client-helper-range/update-client-helper-range.component\";\nimport { UpdateOfferPositionComponent } from \"../form/update-offer-position/update-offer-position.component\";\nimport {\n  Offer,\n  OfferPosition,\n  OffersService,\n  OfferStatus,\n} from \"../offers.service\";\nimport { PrintOfferService } from \"../../print/print-offer.service\";\nimport { GlobalService } from \"src/app/_services/global.service\";\nimport { UpdateFilmBuyCostComponent } from \"../form/update-film-buy-cost/update-film-buy-cost.component\";\nimport { AuthService } from \"src/app/_services/auth.service\";\n\n@Injectable()\nexport class OfferResolver implements Resolve<any> {\n  constructor(private offerService: OffersService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> | Promise<any> | any {\n    console.log(\"Resolve Offer with id: \" + route.paramMap.get(\"id\"));\n    return this.offerService.getOfferById(route.paramMap.get(\"id\"));\n  }\n}\n\n@Component({\n  selector: \"app-details-offer\",\n  templateUrl: \"./details-offer.component.html\",\n  styleUrls: [\"./details-offer.component.scss\"],\n})\nexport class DetailsOfferComponent implements OnInit {\n  offer: Offer;\n  offerNumber: string;\n  helper: OfferHelpers;\n  loadingTable = false;\n  loadingSaveHelper = false;\n  displayFormExchange = false;\n  displayPrintOffer = false;\n  loadingPrintOffer = false;\n  loadingChangeStatus = false;\n  displayChangeStatus = false;\n  modelStatusChange = null;\n  offerPositions: OfferPosition[];\n  totalPLN: number = 0;\n  totalAdditionalU: number = 0;\n  totalAdditionalP: number = 0;\n  allTotalPLN: number = 0;\n  offerNotes: any;\n  allStatus = [\n    { label: \"Nowe\", value: OfferStatus.NEW },\n    { label: \"W przygotowaniu\", value: OfferStatus.INPREPARATION },\n    { label: \"Wysłana\", value: OfferStatus.SENT },\n    { label: \"Zaakceptowana\", value: OfferStatus.ACCEPTED },\n    { label: \"Anulowana\", value: OfferStatus.CANCELED },\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private infoPopup: InfoPopupComponent,\n    public auth: AuthService,\n    private cookieService: CookieService,\n    private confirmationService: ConfirmationService,\n    private router: Router,\n    private offerService: OffersService,\n    private settingService: SettingsService,\n    public dialogService: DialogService,\n    public productionService: ProductionServiceService,\n    public printOfferService: PrintOfferService,\n    public globalService: GlobalService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadingTable = true;\n    this.route.data.subscribe({\n      next: (res) => {\n        this.offer = res.offer;\n        this.offerNumber = res.offer.offerNumber;\n        this.offerNotes = res.offer.offerNotes;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n        this.offerPositions = this.offer.offerPosition.sort(\n          (a, b) => a.positionNumber - b.positionNumber\n        );\n        this.offerPositions.forEach((x) => {\n          x = x.offerPositionSides.sort((a, b) => {\n            if (\n              a.side == \"zew\" ||\n              a.side == \"wew\" ||\n              a.side == \"obu-wew\" ||\n              a.side == \"obu-zew\" ||\n              a.side == \"obu\"\n            ) {\n              if (a.side > b.side) {\n                return -1;\n              }\n              if (a.side < b.side) {\n                return 1;\n              }\n            } else {\n              if (a.side < b.side) {\n                return -1;\n              }\n              if (a.side > b.side) {\n                return 1;\n              }\n            }\n            return 0;\n          });\n        });\n        this.loadingTable = false;\n        this.globalService.loadingGlobal = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.infoPopup.showErrorDownload(\"oferta\");\n      },\n      complete: () => {},\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n\n    this.productionService.loadCatalogSuggestions();\n    this.productionService.loadFilmSuggestions();\n    this.productionService.loadAllSystems();\n\n    console.log(this.offer);\n    this.modelStatusChange = this.offer.offerStatus;\n  }\n\n  loadData() {\n    console.log(\"refresh\");\n    this.loadingTable = true;\n    this.offerService.getOfferById(this.offerNumber).subscribe({\n      next: (res) => {\n        this.offer = res;\n        this.offerNotes = this.offer.offerNotes;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n        this.offerPositions = this.offer.offerPosition.sort(\n          (a, b) => a.positionNumber - b.positionNumber\n        );\n        this.offerPositions.forEach((x) => {\n          x = x.offerPositionSides.sort((a, b) => {\n            if (\n              a.side == \"zew\" ||\n              a.side == \"wew\" ||\n              a.side == \"obu-wew\" ||\n              a.side == \"obu-zew\" ||\n              a.side == \"obu\"\n            ) {\n              if (a.side > b.side) {\n                return -1;\n              }\n              if (a.side < b.side) {\n                return 1;\n              }\n            } else {\n              if (a.side < b.side) {\n                return -1;\n              }\n              if (a.side > b.side) {\n                return 1;\n              }\n            }\n            return 0;\n          });\n        });\n        this.loadingTable = false;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n    this.modelStatusChange = this.offer.offerStatus;\n  }\n\n  statusOfferSwitch(stat) {\n    switch (stat) {\n      case OfferStatus.NEW:\n        return \"Nowa\";\n      case OfferStatus.INPREPARATION:\n        return \"W przygotowaniu\";\n      case OfferStatus.SENT:\n        return \"Wysłana\";\n      case OfferStatus.ACCEPTED:\n        return \"Zaakceptowana\";\n      case OfferStatus.CANCELED:\n        return \"Anulowana\";\n    }\n  }\n\n  showChangeStatusDialog() {\n    this.displayChangeStatus = true;\n  }\n\n  updateOfferStatus() {\n    this.loadingChangeStatus = true;\n    console.log(this.modelStatusChange);\n    this.offerService\n      .updateOfferStatus(this.offerNumber, this.modelStatusChange)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"status oferty\");\n          this.loadingChangeStatus = false;\n          this.displayChangeStatus = false;\n          this.loadData();\n        },\n        error: (err) => {\n          console.log(err);\n          this.infoPopup.showErrorUpdate(\"status oferty\");\n          this.loadingChangeStatus = false;\n        },\n      });\n  }\n\n  dupPosition(test: OfferPosition) {\n    let tmp = test;\n    tmp.id = null;\n    tmp.offerPositionSides.forEach((element) => {\n      element.id = null;\n    });\n    console.log(tmp);\n    this.offerService.addNewOfferPosition(this.offerNumber, tmp).subscribe({\n      next: (res) => {\n        console.log(res);\n        this.loadData();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\n\n  backClicked() {\n    this.router.navigateByUrl(\"/marketing\");\n  }\n\n  deleteOffer() {\n    this.confirmationService.confirm({\n      message:\n        \"Na pewno chcesz usunąć oferte: \" + this.offer.offerNumber + \" ?\",\n      header: \"Potwierdzenie\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.globalService.loadingGlobal = true;\n        this.offerService.deleteOffer(this.offer.offerNumber).subscribe({\n          next: (res) => {\n            console.log(res);\n            this.infoPopup.showSuccessDelete(\"oferta\");\n            this.globalService.loadingGlobal = false;\n            this.backClicked();\n          },\n          error: (err) => {\n            console.log(err);\n            this.infoPopup.showErrorDelete(\"oferta\");\n          },\n        });\n      },\n    });\n  }\n\n  deleteOfferRow(posData: OfferPosition) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć pozycję: \" + posData.profilNumber + \" ?\",\n      header: \"Potwierdzenie\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.globalService.loadingGlobal = true;\n        this.offerService\n          .deleteOfferPosition(this.offer.offerNumber, posData.id)\n          .subscribe({\n            next: (res) => {\n              this.loadData();\n              this.globalService.loadingGlobal = false;\n              this.infoPopup.showSuccessDelete(\"pozycje\");\n            },\n            error: (err) => {\n              console.log(err);\n              this.infoPopup.showErrorDelete(\"pozycje\");\n            },\n          });\n      },\n    });\n  }\n\n  showDialogToAddCostBuyFilm() {\n    const ref = this.dialogService.open(UpdateFilmBuyCostComponent, {\n      header: \"Aktualizacja kosztu zakupu okleiny\",\n      data: this.offer,\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update cost buy film was closed\");\n    });\n  }\n\n  showDialogToAddOfferPosition() {\n    const ref = this.dialogService.open(AddOfferPositionComponent, {\n      header: \"Nowa pozycja\",\n      data: this.offer,\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog add offer position was closed\");\n    });\n  }\n\n  showDialogToUpdateOfferPosition(posData) {\n    const ref = this.dialogService.open(UpdateOfferPositionComponent, {\n      header: \"Aktualizacja pozycji\",\n      data: [this.offer, posData],\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update offer position was closed\");\n    });\n  }\n\n  showDialogToUpdateHelperOffer() {\n    const ref = this.dialogService.open(UpdateClientHelpersComponent, {\n      header: \"Aktualizacja ustawień dla firmy: \" + this.offer.client.name,\n      data: this.offer,\n      width: \"300px\",\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update helpers was closed\");\n    });\n  }\n\n  showDialogToUpdateHelperOfferRange() {\n    const ref = this.dialogService.open(UpdateClientHelperRangeComponent, {\n      header: \"Aktualizacja ustawień dla firmy: \" + this.offer.client.name,\n      data: this.offer,\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update helpers range was closed\");\n    });\n  }\n\n  // ===============  PRINT  =================\n\n  showDialogToSelectPrint() {\n    this.displayPrintOffer = true;\n  }\n\n  closePrintOffer() {\n    this.displayPrintOffer = false;\n    this.loadingPrintOffer = false;\n  }\n\n  printOffer() {\n    this.loadingPrintOffer = true;\n    this.printOfferService.initPrint(\"offer\", this.offer.offerNumber);\n    this.closePrintOffer();\n  }\n\n  printOfferCosts() {\n    this.loadingPrintOffer = true;\n    this.printOfferService.initPrint(\"offerCost\", this.offer.offerNumber);\n    this.closePrintOffer();\n  }\n}\n","<div class=\"container-offer-details\">\n  <div class=\"row mb-2\">\n    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"backClicked()\"\n        icon=\"pi pi-chevron-left\"\n        style=\"width: 50px !important\"\n        class=\"p-button-sm sb-button blue back\"\n      ></button>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-6\">\n      <div class=\"float-right\" *ngIf=\"offer.myCompany.logoLink\">\n        <img height=\"50px\" [src]=\"offer.myCompany.logoLink\" alt=\"\" />\n      </div>\n      <p *ngIf=\"!offer.myCompany.logoLink\" class=\"float-right\">\n        {{ offer?.myCompany.name }}\n      </p>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-ticket\"></i>\n        </div>\n        <div class=\"stats-numbers\">{{ offer?.offerNumber }}</div>\n        <div class=\"stats-subtitle\">Numer oferty</div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-user\"></i>\n        </div>\n        <div class=\"stats-numbers\">{{ offer?.client.name }}</div>\n        <div class=\"stats-subtitle\">Kontrahent</div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-check-circle\"></i>\n        </div>\n        <div class=\"stats-numbers\">\n          {{ statusOfferSwitch(offer.offerStatus) }}\n        </div>\n        <div class=\"stats-subtitle\">Status</div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-calendar\"></i>\n        </div>\n        <div class=\"stats-numbers\">\n          {{ offer?.offerDate | date: \"dd.MM.yyyy\" }}\n        </div>\n        <div class=\"stats-subtitle\">Data oferty</div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-plus-circle\"></i>\n        </div>\n        <div class=\"stats-numbers\">{{ offer?.createdBy }}</div>\n        <div class=\"stats-subtitle\">Oferta utworzona przez</div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-money-bill\"></i>\n        </div>\n        <div class=\"row w-100 m-0\" style=\"top: -12px; position: relative\">\n          <div class=\"col-sm-6 col-md-6 col-lg-6 stats-table-clients\">\n            <table>\n              <tbody>\n                <tr>\n                  <th class=\"text-left\">Dopłata</th>\n                  <td class=\"text-center\">\n                    {{ offer?.client.helper_additional }}\n                  </td>\n                </tr>\n                <tr>\n                  <th class=\"text-left\">Koszt</th>\n                  <td class=\"text-center\">{{ offer?.client.helper_cost }}</td>\n                </tr>\n                <tr>\n                  <th class=\"text-left\">Ustawienie</th>\n                  <td class=\"text-center\">\n                    {{ offer?.client.helper_setUpCost }}\n                  </td>\n                </tr>\n                <tr>\n                  <th class=\"text-left revers\">Zm. koloru</th>\n                  <td class=\"text-center\">\n                    {{ offer?.client.helper_costChangeColor }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"col-sm-6 col-md-6 col-lg-6 stats-table-clients\">\n            <table>\n              <thead>\n                <th></th>\n                <th class=\"text-center\">Kurs</th>\n              </thead>\n              <tbody>\n                <tr>\n                  <th>ALU</th>\n                  <td class=\"text-center\">\n                    {{ helper ? helper.exchangeRateAlu : \"-\" }}\n                  </td>\n                </tr>\n                <tr>\n                  <th>PCV</th>\n                  <td class=\"text-center\">\n                    {{ helper ? helper.exchangeRatePcv : \"-\" }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-table\"></i>\n        </div>\n        <div class=\"stats-table\">\n          <table>\n            <thead>\n              <th class=\"text-left\">Metry</th>\n              <th class=\"text-center\">Łatwe (PCV)</th>\n              <th class=\"text-center\">Trudne (PCV)</th>\n              <th class=\"text-center\">Łatwe (ALU)</th>\n              <th class=\"text-center\">Trudne (ALU)</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td class=\"text-left\">0-50</td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mEasyTo50 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mHardTo50 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mEasyTo50 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mHardTo50 }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"text-left\">51-150</td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mEasyTo150 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mHardTo150 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mEasyTo150 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mHardTo150 }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"text-left\">151-500</td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mEasyTo500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mHardTo500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mEasyTo500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mHardTo500 }}\n                </td>\n              </tr>\n              <tr>\n                <td class=\"text-left\">pow. 500</td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mEasyAbove500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_pcv_mHardAbove500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mEasyAbove500 }}\n                </td>\n                <td class=\"text-center\">\n                  {{ offer.client.helper_alu_mHardAbove500 }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"stats-subtitle fix\">Zakresy klienta</div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-12 col-md-6 col-lg-3\">\n      <div class=\"sb-stats\">\n        <div class=\"stats-icon\">\n          <i class=\"pi pi-cog\"></i>\n        </div>\n        <div class=\"stats-button\">\n          <button\n            pButton\n            type=\"button\"\n            (click)=\"showDialogToUpdateHelperOffer()\"\n            label=\"Zmień parametry\"\n            class=\"p-button-sm sb-button gray\"\n            pTooltip=\"Zmiana ustawień stałych kontrahenta\"\n          ></button>\n          <button\n            pButton\n            type=\"button\"\n            (click)=\"showDialogToUpdateHelperOfferRange()\"\n            label=\"Zmień zakresy\"\n            class=\"p-button-sm sb-button gray\"\n            pTooltip=\"Zmiana ustawień stałych kontrahenta\"\n          ></button>\n        </div>\n        <div class=\"stats-subtitle fix\">Ustawienia</div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"row sb-progress-bar\"\n    [ngClass]=\"{ hide: productionService.loadingDataValue >= 100 }\"\n  >\n    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n      <p-progressBar\n        [value]=\"productionService.loadingDataValue\"\n      ></p-progressBar>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n      <p-toolbar styleClass=\"sb-toolbar\">\n        <div class=\"p-toolbar-group-left\">\n          <button\n            [disabled]=\"productionService.loadingDataValue != 100\"\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"showDialogToAddOfferPosition()\"\n            pTooltip=\"Dodanie pojedyńczej pozycji\"\n            icon=\"pi pi-plus\"\n            label=\"Pojedyńcza pozycja\"\n            class=\"p-button-sm sb-button blue\"\n          ></button>\n\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"showDialogToAddCostBuyFilm()\"\n            pTooltip=\"Kosztu zakupu okleiny\"\n            icon=\"pi pi-money-bill\"\n            label=\"Koszt zakupu okl.\"\n            class=\"p-button-sm sb-button gray\"\n          ></button>\n\n          <button\n            pButton\n            pRipple\n            type=\"button\"\n            (click)=\"showChangeStatusDialog()\"\n            pTooltip=\"Zmiana statusu oferty\"\n            icon=\"pi pi-check-circle\"\n            label=\"Zmiana statusu\"\n            class=\"p-button-sm sb-button gray\"\n          ></button>\n\n          <button\n            pButton\n            type=\"button\"\n            (click)=\"showDialogToSelectPrint()\"\n            pTooltip=\"Drukowanie\"\n            icon=\"pi pi-print\"\n            label=\"Drukowanie\"\n            class=\"p-button-sm sb-button yellow ml-2\"\n          ></button>\n        </div>\n\n        <div class=\"p-toolbar-group-right\">\n          <button\n            pButton\n            type=\"button\"\n            (click)=\"deleteOffer()\"\n            pTooltip=\"Usunięcie oferty\"\n            pTooltipClass=\"tooltip-red\"\n            icon=\"pi pi-trash\"\n            class=\"p-button-sm sb-button red\"\n          ></button>\n        </div>\n      </p-toolbar>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <p-tabView>\n        <p-tabPanel header=\"Edycja\" leftIcon=\"pi pi-pencil\">\n          <div class=\"row w-100 m-0\">\n            <div class=\"col-sm-12 col-md-12 col-lg-12\">\n              <p-table\n                [loading]=\"loadingTable\"\n                [value]=\"offerPositions\"\n                [autoLayout]=\"true\"\n                [rowHover]=\"true\"\n                [paginator]=\"true\"\n                [rows]=\"10\"\n                [rowsPerPageOptions]=\"[10, 20, 50]\"\n                [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n              >\n                <ng-template pTemplate=\"header\">\n                  <tr class=\"p-header\">\n                    <th class=\"nr\">Nr.</th>\n                    <th class=\"name-k\">Nazwa kształ.</th>\n                    <th class=\"number-k\">Numer kształ.</th>\n                    <th class=\"warranty\">Gwarancja</th>\n                    <th class=\"ph-side\">Strony</th>\n                    <th class=\"edit-col\" style=\"min-width: 80px\"></th>\n                  </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-posData>\n                  <tr class=\"p-body\">\n                    <td class=\"nr\">{{ posData.positionNumber }}</td>\n                    <td class=\"name-k\">{{ posData.profilType }}</td>\n                    <td class=\"number-k\">{{ posData.profilNumber }}</td>\n\n                    <td class=\"warranty text-center\">\n                      <span\n                        [class]=\"'warranty-badge status-' + posData.warranty\"\n                      >\n                        {{ posData.warranty ? \"TAK\" : \"NIE\" }}\n                      </span>\n                    </td>\n\n                    <td class=\"pb-side\">\n                      <p-table\n                        [value]=\"posData.offerPositionSides\"\n                        [autoLayout]=\"true\"\n                        [rowHover]=\"true\"\n                      >\n                        <ng-template pTemplate=\"header\">\n                          <tr class=\"pside-header\">\n                            <th class=\"side\">Strona</th>\n                            <th class=\"film-number\">Numer Okl.</th>\n                            <th class=\"film-width\">Szer. Okl.</th>\n                            <th class=\"pln\">PLN/mb</th>\n                            <th class=\"quantity\">Ilość mb</th>\n                            <th class=\"sum\">Razem PLN</th>\n                            <th class=\"u\" pTooltip=\"Ustawienie maszyny\">U*</th>\n                            <th class=\"p\" pTooltip=\"Usługa w pakiecie\">P*</th>\n                            <th class=\"zm\" pTooltip=\"Zmiana koloru\">ZM*</th>\n                          </tr>\n                        </ng-template>\n                        <ng-template pTemplate=\"body\" let-pozSide>\n                          <tr class=\"pside-body\">\n                            <td class=\"side\">{{ pozSide.side }}</td>\n                            <td class=\"film-number\">\n                              {{ pozSide.filmNumber }}\n                            </td>\n                            <td class=\"film-width\">{{ pozSide.filmWidth }}</td>\n                            <td class=\"pln\">{{ pozSide.plnMb }}</td>\n                            <td class=\"quantity\">{{ pozSide.quantityMb }}</td>\n                            <td class=\"sum\">{{ pozSide.togetherPay }}</td>\n                            <td class=\"u\">{{ pozSide.costSetup }}</td>\n                            <td class=\"p\">{{ pozSide.costSet }}</td>\n                            <td class=\"zm\">\n                              {{\n                                pozSide.costChangeColor\n                                  ? pozSide.costChangeColor\n                                  : \"\"\n                              }}\n                            </td>\n                          </tr>\n                        </ng-template>\n                      </p-table>\n                    </td>\n                    <td class=\"edit-col\">\n                      <button\n                        pButton\n                        pRipple\n                        appPermission\n                        permission=\"offerWrite\"\n                        type=\"button\"\n                        [disabled]=\"productionService.loadingDataValue != 100\"\n                        (click)=\"showDialogToUpdateOfferPosition(posData)\"\n                        icon=\"pi pi-pencil\"\n                        class=\"p-button-sm sb-button blue\"\n                      ></button>\n                      <button\n                        pButton\n                        pRipple\n                        appPermission\n                        permission=\"offerDelete\"\n                        type=\"button\"\n                        (click)=\"deleteOfferRow(posData)\"\n                        icon=\"pi pi-trash\"\n                        class=\"p-button-sm ml-1 sb-button red\"\n                      ></button>\n\n                      <button\n                        *ngIf=\"auth.isAdmin\"\n                        pButton\n                        pRipple\n                        type=\"button\"\n                        (click)=\"dupPosition(posData)\"\n                        icon=\"pi pi-copy\"\n                        class=\"p-button-sm ml-1 sb-button gray\"\n                      ></button>\n                    </td>\n                  </tr>\n                </ng-template>\n                <ng-template pTemplate=\"footer\">\n                  <tr>\n                    <td colspan=\"4\" class=\"p-text-right\"></td>\n                    <td colspan=\"2\" class=\"p-0\">\n                      <div class=\"sum-table\" style=\"float: right\">\n                        <div class=\"row m-0 sum-table-row\">\n                          <div class=\"text-center\" style=\"width: 120px\">\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  height: 50px;\n                                  border: 1px solid #c8c8c8;\n                                  border-bottom: 0;\n                                \"\n                              >\n                                Suma w PLN\n                              </div>\n                            </div>\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"border: 1px solid #c8c8c8\"\n                              >\n                                {{ offer.sumAllPositionsPln }}\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"text-center\" style=\"width: 180px\">\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  height: 50px;\n                                  border: 1px solid #c8c8c8;\n                                  border-bottom: 0;\n                                \"\n                              >\n                                Suma dopłat w PLN\n                              </div>\n                            </div>\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"border: 1px solid #c8c8c8\"\n                              >\n                                {{ offer.sumSetUpCost }}\n                              </div>\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  border: 1px solid #c8c8c8;\n                                  border-left: 0;\n                                \"\n                              >\n                                {{ offer.sumSetCost }}\n                              </div>\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  border: 1px solid #c8c8c8;\n                                  border-left: 0;\n                                \"\n                              >\n                                {{ offer.sumCostChangeColor }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"row m-0 sum-table-row\">\n                          <div class=\"text-center\" style=\"width: 300px\">\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  border: 1px solid #c8c8c8;\n                                  border-bottom: 0;\n                                \"\n                              >\n                                Razem netto w PLN\n                              </div>\n                            </div>\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"border: 1px solid #c8c8c8\"\n                              >\n                                {{ offer.sumAllNetto }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          class=\"row m-0 sum-table-row\"\n                          *ngIf=\"offer.costNettoBuyFilm\"\n                        >\n                          <div class=\"text-center\" style=\"width: 300px\">\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"\n                                  border: 1px solid #c8c8c8;\n                                  border-bottom: 0;\n                                \"\n                              >\n                                Zakup okleiny netto w PLN\n                              </div>\n                            </div>\n                            <div class=\"row w-100 m-0\">\n                              <div\n                                class=\"col\"\n                                style=\"border: 1px solid #c8c8c8\"\n                              >\n                                {{ offer.costNettoBuyFilm }}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                  <tr>\n                    <td [attr.colspan]=\"6\" style=\"text-align: left\">\n                      Brak danych.\n                    </td>\n                  </tr>\n                </ng-template>\n              </p-table>\n            </div>\n          </div>\n        </p-tabPanel>\n        <p-tabPanel header=\"Notatki\" leftIcon=\"pi pi-align-justify\">\n          <app-timeline-widget\n            [offerNumber]=\"offerNumber\"\n            [offerNotes]=\"offerNotes\"\n          ></app-timeline-widget>\n        </p-tabPanel>\n        <p-tabPanel header=\"Ustawienia\" leftIcon=\"pi pi-print\">\n          <app-print-offer-settings\n            [offer]=\"offer\"\n            (refresh)=\"loadData()\"\n          ></app-print-offer-settings>\n        </p-tabPanel>\n        <p-tabPanel header=\"Podgląd\" leftIcon=\"pi pi-search\">\n          <app-view-offer [offer]=\"offer\"></app-view-offer>\n        </p-tabPanel>\n      </p-tabView>\n    </div>\n  </div>\n</div>\n\n<!-- ================= PRINT ================= -->\n<p-dialog\n  header=\"Drukowanie\"\n  [(visible)]=\"displayPrintOffer\"\n  styleClass=\"print_dialog\"\n>\n  <div class=\"sb-dialog-content\">\n    <div class=\"row print_choose_buttons\">\n      <div class=\"col\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          label=\"Drukowanie oferty\"\n          (click)=\"printOffer()\"\n          class=\"sb-button gray w-100 h-100\"\n        ></button>\n      </div>\n\n      <div class=\"col\">\n        <button\n          pButton\n          pRipple\n          type=\"button\"\n          label=\"Drukowanie zakresu cen\"\n          (click)=\"printOfferCosts()\"\n          class=\"sb-button gray w-100 h-100\"\n        ></button>\n      </div>\n    </div>\n  </div>\n  <div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"closePrintOffer()\"\n        pTooltip=\"Anulowanie drukowania\"\n        label=\"Anuluj\"\n        icon=\"pi pi-times\"\n        class=\"p-button-sm sb-button o-gray\"\n      ></button>\n    </div>\n    <div class=\"sb-btn-save\">\n      <p-progressSpinner\n        *ngIf=\"loadingPrintOffer\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </div>\n</p-dialog>\n\n<!-- ================= STATUS CHANGE ================= -->\n<p-dialog header=\"Zmiana statusu\" [(visible)]=\"displayChangeStatus\">\n  <div class=\"sb-dialog-content\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <p-dropdown\n          #of\n          placeholder=\"Wybierz Status\"\n          [(ngModel)]=\"modelStatusChange\"\n          [options]=\"allStatus\"\n          [filter]=\"true\"\n          filterBy=\"name,value\"\n          styleClass=\"w-100\"\n          appendTo=\"body\"\n        >\n        </p-dropdown>\n      </div>\n    </div>\n  </div>\n  <div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayChangeStatus = false\"\n        pTooltip=\"Anulowanie\"\n        label=\"Anuluj\"\n        icon=\"pi pi-times\"\n        class=\"p-button-sm sb-button o-gray\"\n      ></button>\n    </div>\n    <div class=\"sb-btn-save\">\n      <button\n        [disabled]=\"loadingChangeStatus\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateOfferStatus()\"\n        pTooltip=\"Aktualizacja statusu\"\n        label=\"Zapisz\"\n        icon=\"pi pi-check\"\n        class=\"p-button-sm sb-button green\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingChangeStatus\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </div>\n</p-dialog>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetailsOfferComponent, OfferResolver } from './details-offer/details-offer.component';\nimport { MainOffersComponent } from './main-offers/main-offers.component';\n\n\nconst routes: Routes = [\n  { path: '', component: MainOffersComponent },\n  {\n    path: 'oferta/:id', component: DetailsOfferComponent,\n    resolve: {\n      offer: OfferResolver\n    },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { OffersRoutingModule } from \"./offers-routing.module\";\nimport { MainOffersComponent } from \"./main-offers/main-offers.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { ButtonModule } from \"primeng/button\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { CardModule } from \"primeng/card\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { CodeHighlighterModule } from \"primeng/codehighlighter\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ContextMenuModule } from \"primeng/contextmenu\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { DialogService, DynamicDialogModule } from \"primeng/dynamicdialog\";\nimport { EditorModule } from \"primeng/editor\";\nimport { FieldsetModule } from \"primeng/fieldset\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { PasswordModule } from \"primeng/password\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { RadioButtonModule } from \"primeng/radiobutton\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { StepsModule } from \"primeng/steps\";\nimport { TableModule } from \"primeng/table\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { TreeTableModule } from \"primeng/treetable\";\nimport { FormNewOfferComponent } from \"./form/new-offer/form-new-offer.component\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport {\n  DetailsOfferComponent,\n  OfferResolver,\n} from \"./details-offer/details-offer.component\";\nimport { AddOfferPositionComponent } from \"./form/add-offer-position/add-offer-position.component\";\nimport { UpdateClientHelpersComponent } from \"./form/update-client-helpers/update-client-helpers.component\";\nimport { UpdateOfferPositionComponent } from \"./form/update-offer-position/update-offer-position.component\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { UpdateClientHelperRangeComponent } from \"./form/update-client-helper-range/update-client-helper-range.component\";\nimport { ViewOfferComponent } from \"./view-offer/view-offer.component\";\nimport { TimelineWidgetComponent } from \"./timeline-widget/timeline-widget.component\";\nimport { PrintOfferSettingsComponent } from \"./print-offer-settings/print-offer-settings.component\";\nimport { UpdateFilmBuyCostComponent } from \"./form/update-film-buy-cost/update-film-buy-cost.component\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\n\n@NgModule({\n  declarations: [\n    MainOffersComponent,\n    FormNewOfferComponent,\n    DetailsOfferComponent,\n    AddOfferPositionComponent,\n    UpdateClientHelpersComponent,\n    UpdateOfferPositionComponent,\n    UpdateClientHelperRangeComponent,\n    ViewOfferComponent,\n    TimelineWidgetComponent,\n    PrintOfferSettingsComponent,\n    UpdateFilmBuyCostComponent,\n  ],\n  imports: [\n    CommonModule,\n    OffersRoutingModule,\n    MatIconModule,\n    DragDropModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatButtonModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    CalendarModule,\n    MultiSelectModule,\n    EditorModule,\n    TreeTableModule,\n    RadioButtonModule,\n    AutoCompleteModule,\n    MatAutocompleteModule,\n    ContextMenuModule,\n    ConfirmDialogModule,\n    CheckboxModule,\n    ProgressBarModule,\n    InputTextModule,\n    RippleModule,\n    FileUploadModule,\n    StepsModule,\n    DragDropModule,\n    CardModule,\n    InputNumberModule,\n    DynamicDialogModule,\n    TooltipModule,\n    KeyFilterModule,\n    ProgressSpinnerModule,\n    ToolbarModule,\n  ],\n  providers: [DialogService, OfferResolver],\n})\nexport class OffersModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nimport { CookieService } from \"ngx-cookie-service\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { Offer, OffersService } from \"../../offers.service\";\n\n@Component({\n  selector: \"app-update-client-helper-range\",\n  templateUrl: \"./update-client-helper-range.component.html\",\n  styleUrls: [\"./update-client-helper-range.component.scss\"],\n})\nexport class UpdateClientHelperRangeComponent implements OnInit {\n  formClientHelper: FormGroup;\n  offerData: Offer;\n  loading = false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formClientHelper = new FormGroup({\n      helper_pcv_mEasyTo50: new FormControl(\"\"),\n      helper_pcv_mEasyTo150: new FormControl(\"\"),\n      helper_pcv_mEasyTo500: new FormControl(\"\"),\n      helper_pcv_mEasyAbove500: new FormControl(\"\"),\n      helper_pcv_mHardTo50: new FormControl(\"\"),\n      helper_pcv_mHardTo150: new FormControl(\"\"),\n      helper_pcv_mHardTo500: new FormControl(\"\"),\n      helper_pcv_mHardAbove500: new FormControl(\"\"),\n\n      helper_alu_mEasyTo50: new FormControl(\"\"),\n      helper_alu_mEasyTo150: new FormControl(\"\"),\n      helper_alu_mEasyTo500: new FormControl(\"\"),\n      helper_alu_mEasyAbove500: new FormControl(\"\"),\n      helper_alu_mHardTo50: new FormControl(\"\"),\n      helper_alu_mHardTo150: new FormControl(\"\"),\n      helper_alu_mHardTo500: new FormControl(\"\"),\n      helper_alu_mHardAbove500: new FormControl(\"\"),\n    });\n    this.formClientHelper.patchValue(this.offerData.client);\n  }\n\n  updateHelpers() {\n    this.loading = true;\n    this.offerService\n      .updateClientHelpersRange(\n        this.offerData.client.id,\n        this.formClientHelper.value\n      )\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"parametry\");\n          this.ref.close(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"parametry\");\n          console.log(err);\n        },\n        complete: () => {\n          this.loading = false;\n        },\n      });\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formClientHelper\">\n    <div class=\"row\">\n      <div class=\"col helper-table\">\n        <div class=\"text-center\" style=\"background-color: aquamarine\">\n          <span style=\"text-transform: uppercase; font-weight: bold\">PCV</span>\n        </div>\n        <table style=\"margin: 0 auto\">\n          <thead>\n            <th class=\"text-left\">Metry</th>\n            <th class=\"text-center\">Łatwe</th>\n            <th class=\"text-center\">Trudne</th>\n          </thead>\n          <tbody>\n            <tr>\n              <td>0-50</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mEasyTo50')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mHardTo50')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>51-150</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mEasyTo150')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mHardTo150')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>151-500</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mEasyTo500')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_pcv_mHardTo500')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>pow. 500</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"\n                    formClientHelper.get('helper_pcv_mEasyAbove500')\n                  \"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"\n                    formClientHelper.get('helper_pcv_mHardAbove500')\n                  \"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col helper-table\">\n        <div class=\"text-center mt-4\" style=\"background-color: aquamarine\">\n          <span style=\"text-transform: uppercase; font-weight: bold\">ALU</span>\n        </div>\n        <table style=\"margin: 0 auto\">\n          <thead>\n            <th class=\"text-left\">Metry</th>\n            <th class=\"text-center\">Łatwe</th>\n            <th class=\"text-center\">Trudne</th>\n          </thead>\n          <tbody>\n            <tr>\n              <td>0-50</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mEasyTo50')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mHardTo50')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>51-150</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mEasyTo150')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mHardTo150')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>151-500</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mEasyTo500')\"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"formClientHelper.get('helper_alu_mHardTo500')\"\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>pow. 500</td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"\n                    formClientHelper.get('helper_alu_mEasyAbove500')\n                  \"\n                />\n              </td>\n              <td>\n                <input\n                  pInputText\n                  type=\"number\"\n                  inputmode=\"numeric\"\n                  min=\"0\"\n                  step=\".1\"\n                  [formControl]=\"\n                    formClientHelper.get('helper_alu_mHardAbove500')\n                  \"\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie aktualizowania\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateHelpers()\"\n      pTooltip=\"Aktualizuj\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}