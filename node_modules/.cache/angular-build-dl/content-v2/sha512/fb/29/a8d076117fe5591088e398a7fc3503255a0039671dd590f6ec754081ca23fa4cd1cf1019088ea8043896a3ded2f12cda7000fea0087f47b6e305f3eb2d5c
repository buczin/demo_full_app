{"version":3,"sources":["./src/app/contractor/client-add-form/client-add-form.component.html","./src/app/contractor/client-main/client-main.component.html","./src/app/contractor/client-add-form/client-add-form.component.scss","./src/app/contractor/client-add-form/client-add-form.component.ts","./src/app/contractor/client-main/client-main.component.scss","./src/app/contractor/client-main/client-main.component.ts","./src/app/contractor/client-service/client.service.ts","./src/app/contractor/contractor-routing.module.ts","./src/app/contractor/contractor.module.ts"],"names":[],"mappings":"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","file":"contractor-contractor-module-es2015.js","sourcesContent":["export default \"<div class=\\\"no-vertical-bar\\\">\\n    <div class=\\\"m-1\\\">\\n\\n        <form [formGroup]=\\\"formClient\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"Nazwa Klienta\\\" required autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('name').hasError('required') && formClient.get('name').touched\\\">\\n                        musi być wypełnione\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"nip\\\" class=\\\"col-sm-3 col-form-label\\\">NIP</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('nip')\\\" type=\\\"text\\\" id=\\\"nip\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"NIP\\\"\\n                        required autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('required') && formClient.get('nip').touched\\\">\\n                        musi być wypełnione\\n                    </p>\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('nipFormat') && formClient.get('nip').touched\\\">\\n                        niepoprawny nip\\n                    </p>\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('nipExists') && formClient.get('nip').touched\\\">\\n                        ten numer znajduje się na liście\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\n                        autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('regon').hasError('regonFormat') && formClient.get('regon').touched\\\">\\n                        niepoprawny regon\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"email\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('email')\\\" type=\\\"text\\\" id=\\\"email\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"Adres email\\\" autocomplete=\\\"off\\\">\\n                </div>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('email').hasError('email') && formClient.get('email').touched\\\">\\n                    niepoprawny email\\n                </p>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"numer tel.\\\" autocomplete=\\\"off\\\">\\n                </div>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('phonenumber').hasError('minLength') && formClient.get('phonenumber').touched\\\">\\n                    niepoprawny numer telefonu\\n                </p>\\n            </div>\\n        </form>\\n    </div>\\n    <hr>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n        <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n            type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"exit()\\\" label=\\\"Anuluj\\\"></button>\\n        <button [disabled]=\\\"formClient.invalid\\\" matTooltip=\\\"Dodaj klienta\\\" matTooltipClass=\\\"tooltip-green\\\"\\n            class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddNewClient()\\\"\\n            label=\\\"Zapisz\\\"></button>\\n    </div>\\n</div>\"","export default \"<p-toast position=\\\"top-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n        <div class=\\\"card card-stats\\\">\\n            <div class=\\\"card-body \\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5 col-md-4\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <span class=\\\"material-icons icon-big\\\">face</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-7 col-md-8\\\">\\n                        <div class=\\\"numbers\\\">\\n                            <p class=\\\"card-category\\\">Kontrahenci</p>\\n                            <p class=\\\"card-title\\\">{{clientCount}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer \\\">\\n                <hr>\\n                <div class=\\\"stats-bar\\\">\\n                    <div class=\\\"stats\\\">\\n                        <mat-icon class=\\\"fo-small-icon\\\">calculate</mat-icon><span class=\\\"fo-text\\\">Ilość</span>\\n                    </div>\\n                    <div class=\\\"stats-bar-button\\\">\\n                        <button (click)=\\\"showDialogToAdd()\\\" matTooltip=\\\"Dodanie nowego kontrahenta\\\"\\n                            matTooltipClass=\\\"tooltip-red\\\"\\n                            class=\\\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\\\"\\n                            icon=\\\"pi pi-pencil\\\" pbutton=\\\"\\\" piniteditablerow=\\\"\\\" type=\\\"button\\\"\\n                            ng-reflect-icon=\\\"pi pi-pencil\\\"><span aria-hidden=\\\"true\\\"\\n                                class=\\\"ui-button-icon-left ui-clickable pi pi-plus\\\"></span>\\n                            <span aria-hidden=\\\"true\\\" class=\\\"ui-button-text ui-clickable\\\">ui-btn</span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <p-table #ct [value]=\\\"client\\\" dataKey=\\\"id\\\" editMode=\\\"row\\\" sortMode=\\\"multiple\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [rowsPerPageOptions]=\\\"[10,20,50]\\\" [showCurrentPageReport]=\\\"true\\\"\\n        currentPageReportTemplate=\\\"{first} do {last} z {totalRecords}\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['name','nip','regon','email','phonenumber']\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                Lista Kontrahentów\\n                <div class=\\\"ui-table-globalfilter-container\\\">\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"ct.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Wyszukiwarka\\\" />\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th pSortableColumn=\\\"name\\\">Nazwa<p-sortIcon field=\\\"name\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"nip\\\">NIP<p-sortIcon field=\\\"nip\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"regon\\\">REGON<p-sortIcon field=\\\"regon\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"email\\\">EMAIL<p-sortIcon field=\\\"email\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"phonenumber\\\">TEL.<p-sortIcon field=\\\"phonenumber\\\"></p-sortIcon></th>\\n                    <th style=\\\"width:8em\\\"></th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\n                <tr [pEditableRow]=\\\"rowData\\\">\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.name\\\" required>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.name}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n                    <td>\\n                        {{rowData.nip}}\\n                    </td>\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.regon\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.regon}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.email\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.email}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.phonenumber\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.phonenumber}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n\\n                    <td style=\\\"text-align:center\\\">\\n                        <button matTooltip=\\\"Edycja Kontrahenta\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"!editing && !err\\\"\\n                            pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                            (click)=\\\"onRowEditInit(rowData)\\\"></button>\\n                            <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\"\\n                            *ngIf=\\\"!editing && !err && auth.isAdmin\\\" pButton type=\\\"button\\\"\\n                            icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                            (click)=\\\"onRowDeleteClient(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Zapisz Kontrahenta\\\" matTooltipClass=\\\"tooltip-green\\\" *ngIf=\\\"editing\\\" pButton\\n                            type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\"\\n                            style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Anuluj\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"editing\\\" pButton type=\\\"button\\\"\\n                            pCancelEditableRow icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\"\\n                            (click)=\\\"onRowEditCancel(rowData, ri)\\\"></button>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\n                <tr>\\n                    <td colspan=\\\"6\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n\\n    </div>\\n\\n</div>\\n\\n<p-dialog header=\\\"Nowy Kontrahent\\\" [(visible)]=\\\"clientService.displayDialogClient\\\" [focusOnShow]=\\\"true\\\" [responsive]=\\\"true\\\"\\n    showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '500px'}\\\">\\n    <app-client-add-form (addedClient)=\\\"loadData()\\\"></app-client-add-form>\\n</p-dialog>\"","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vQzpcXFVzZXJzXFxTeWx3ZWtcXERlc2t0b3BcXGJtL3NyY1xcYXBwXFxjb250cmFjdG9yXFxjbGllbnQtYWRkLWZvcm1cXGNsaWVudC1hZGQtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ClientService } from '../client-service/client.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n\n  @Output() addedClient: EventEmitter<any> = new EventEmitter();\n  formClient: FormGroup;\n\n  constructor(private clientService: ClientService, private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.clientExists], updateOn: 'blur' }),\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      email: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern('[0-9]')]})\n    });\n  }\n\n  exit() {\n    this.formClient.reset();\n    this.clientService.displayDialogClient = false;\n  }\n\n  onAddNewClient() {\n    \n    this.clientService.addClient(this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"klienta\");\n          this.addedClient.emit();\n          this.exit();\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"klienta\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0b3IvY2xpZW50LW1haW4vY2xpZW50LW1haW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { MessageService, SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.scss']\n})\nexport class ClientMainComponent implements OnInit {\n  \n  client: Client[] = [];\n\n  onErr: Client =\n    {\n      id: 0,\n      name: \"---\",\n      nip: \"---\",\n      regon: \"---\",\n      email: \"---\",\n      phonenumber: \"---\"\n    };\n  clientCount:number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client; } = {};\n\n  constructor(private auth:AuthService,private clientService: ClientService, private infoPopup: InfoPopupComponent, private messageService: MessageService, private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData(){\n    \n    this.clientService.getClients().subscribe(\n      {\n        next: (res) => {\n          this.client = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.showErrorDownload()\n          this.err = true;\n          this.client.push(this.onErr);\n        },\n        complete: () => {\n        }\n      }\n    )\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res\n      },\n      error: (err) => {\n        this.showErrorCount(\"klientów\")\n      },\n      complete: () => {\n      }\n    })\n\n\n  }\n\n  showDialogToAdd() {\n    this.clientService.displayDialogClient = true;\n  }\n\n  showSuccess() {\n    this.messageService.add({ severity: 'success', summary: 'Edycja Klienta', detail: 'Poprawnie Zaktualizowano Klienta' });\n  }\n  showError() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się zaktualizować klienta' });\n  }\n\n  showErrorCount(what: String) {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać ilości ' + what });\n  }\n\n  showErrorDownload() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać listy klientów. Proszę odświeżyć stronę' });\n  }\n\n  clear() {\n    this.messageService.clear();\n  }\n\n  onRowEditInit(client: Client) {\n    this.clonedclients[client.id] = { ...client };\n  }\n\n  onRowEditSave(client: Client) {\n    \n    this.clientService.updateClient(client.id, client).subscribe(\n      {\n        next: (res) => {\n          \n          this.showSuccess();\n        },\n        error: (err) => {\n          \n          this.showError()\n        },\n        complete: () => {\n          delete this.clonedclients[client.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteClient(client: Client) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ client.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.clientService.deleteClient(client.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"klienta\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"klient\");\n            },\n            complete: () => {\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancel(client: Client, index: number) {\n    this.client[index] = this.clonedclients[client.id];\n    delete this.clonedclients[client.id];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Client {\n  id?: number;\n  name?: String;\n  nip?: String;\n  regon?: String;\n  email?: String;\n  phonenumber?: String;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n\n  public displayDialogClient: boolean;\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  deleteClient(id) {\n    return this.http.delete<Response>(\"api/client/\" + id);\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\n\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule\n  ],\n  providers: [MessageService]\n})\nexport class ContractorModule { }\n"],"sourceRoot":"webpack:///"}