(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~production-production-module~settings-settings-module"], {
    /***/
    "TjhJ":
    /*!************************************************************************!*\
      !*** ./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dragdrop.js ***!
      \************************************************************************/

    /*! exports provided: DragDropModule, Draggable, Droppable */

    /***/
    function TjhJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DragDropModule", function () {
        return DragDropModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Draggable", function () {
        return Draggable;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Droppable", function () {
        return Droppable;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var primeng_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! primeng/dom */
      "YyRF");

      var Draggable = /*#__PURE__*/function () {
        function Draggable(el, zone) {
          _classCallCheck(this, Draggable);

          this.el = el;
          this.zone = zone;
          this.onDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(Draggable, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            if (!this.pDraggableDisabled) {
              this.el.nativeElement.draggable = true;
              this.bindMouseListeners();
            }
          }
        }, {
          key: "bindDragListener",
          value: function bindDragListener() {
            var _this = this;

            if (!this.dragListener) {
              this.zone.runOutsideAngular(function () {
                _this.dragListener = _this.drag.bind(_this);

                _this.el.nativeElement.addEventListener('drag', _this.dragListener);
              });
            }
          }
        }, {
          key: "unbindDragListener",
          value: function unbindDragListener() {
            var _this2 = this;

            if (this.dragListener) {
              this.zone.runOutsideAngular(function () {
                _this2.el.nativeElement.removeEventListener('drag', _this2.dragListener);

                _this2.dragListener = null;
              });
            }
          }
        }, {
          key: "bindMouseListeners",
          value: function bindMouseListeners() {
            var _this3 = this;

            if (!this.mouseDownListener && !this.mouseUpListener) {
              this.zone.runOutsideAngular(function () {
                _this3.mouseDownListener = _this3.mousedown.bind(_this3);
                _this3.mouseUpListener = _this3.mouseup.bind(_this3);

                _this3.el.nativeElement.addEventListener('mousedown', _this3.mouseDownListener);

                _this3.el.nativeElement.addEventListener('mouseup', _this3.mouseUpListener);
              });
            }
          }
        }, {
          key: "unbindMouseListeners",
          value: function unbindMouseListeners() {
            var _this4 = this;

            if (this.mouseDownListener && this.mouseUpListener) {
              this.zone.runOutsideAngular(function () {
                _this4.el.nativeElement.removeEventListener('mousedown', _this4.mouseDownListener);

                _this4.el.nativeElement.removeEventListener('mouseup', _this4.mouseUpListener);

                _this4.mouseDownListener = null;
                _this4.mouseUpListener = null;
              });
            }
          }
        }, {
          key: "drag",
          value: function drag(event) {
            this.onDrag.emit(event);
          }
        }, {
          key: "dragStart",
          value: function dragStart(event) {
            if (this.allowDrag() && !this.pDraggableDisabled) {
              if (this.dragEffect) {
                event.dataTransfer.effectAllowed = this.dragEffect;
              }

              event.dataTransfer.setData('text', this.scope);
              this.onDragStart.emit(event);
              this.bindDragListener();
            } else {
              event.preventDefault();
            }
          }
        }, {
          key: "dragEnd",
          value: function dragEnd(event) {
            this.onDragEnd.emit(event);
            this.unbindDragListener();
          }
        }, {
          key: "mousedown",
          value: function mousedown(event) {
            this.handle = event.target;
          }
        }, {
          key: "mouseup",
          value: function mouseup(event) {
            this.handle = null;
          }
        }, {
          key: "allowDrag",
          value: function allowDrag() {
            if (this.dragHandle && this.handle) return primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].matches(this.handle, this.dragHandle);else return true;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unbindDragListener();
            this.unbindMouseListeners();
          }
        }, {
          key: "pDraggableDisabled",
          get: function get() {
            return this._pDraggableDisabled;
          },
          set: function set(_pDraggableDisabled) {
            this._pDraggableDisabled = _pDraggableDisabled;

            if (this._pDraggableDisabled) {
              this.unbindMouseListeners();
            } else {
              this.el.nativeElement.draggable = true;
              this.bindMouseListeners();
            }
          }
        }]);

        return Draggable;
      }();

      Draggable.ɵfac = function Draggable_Factory(t) {
        return new (t || Draggable)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]));
      };

      Draggable.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: Draggable,
        selectors: [["", "pDraggable", ""]],
        hostBindings: function Draggable_HostBindings(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("dragstart", function Draggable_dragstart_HostBindingHandler($event) {
              return ctx.dragStart($event);
            })("dragend", function Draggable_dragend_HostBindingHandler($event) {
              return ctx.dragEnd($event);
            });
          }
        },
        inputs: {
          pDraggableDisabled: "pDraggableDisabled",
          scope: ["pDraggable", "scope"],
          dragEffect: "dragEffect",
          dragHandle: "dragHandle"
        },
        outputs: {
          onDragStart: "onDragStart",
          onDragEnd: "onDragEnd",
          onDrag: "onDrag"
        }
      });

      Draggable.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
        }];
      };

      Draggable.propDecorators = {
        scope: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
          args: ['pDraggable']
        }],
        dragEffect: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dragHandle: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onDragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        pDraggableDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragstart', ['$event']]
        }],
        dragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragend', ['$event']]
        }]
      };
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Draggable, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
          args: [{
            selector: '[pDraggable]'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
          }];
        }, {
          onDragStart: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDragEnd: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDrag: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          pDraggableDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dragStart: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragstart', ['$event']]
          }],
          dragEnd: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragend', ['$event']]
          }],
          scope: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ['pDraggable']
          }],
          dragEffect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dragHandle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();

      var Droppable = /*#__PURE__*/function () {
        function Droppable(el, zone) {
          _classCallCheck(this, Droppable);

          this.el = el;
          this.zone = zone;
          this.onDragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDragLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDrop = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(Droppable, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            if (!this.pDroppableDisabled) {
              this.bindDragOverListener();
            }
          }
        }, {
          key: "bindDragOverListener",
          value: function bindDragOverListener() {
            var _this5 = this;

            if (!this.dragOverListener) {
              this.zone.runOutsideAngular(function () {
                _this5.dragOverListener = _this5.dragOver.bind(_this5);

                _this5.el.nativeElement.addEventListener('dragover', _this5.dragOverListener);
              });
            }
          }
        }, {
          key: "unbindDragOverListener",
          value: function unbindDragOverListener() {
            var _this6 = this;

            if (this.dragOverListener) {
              this.zone.runOutsideAngular(function () {
                _this6.el.nativeElement.removeEventListener('dragover', _this6.dragOverListener);

                _this6.dragOverListener = null;
              });
            }
          }
        }, {
          key: "dragOver",
          value: function dragOver(event) {
            event.preventDefault();
          }
        }, {
          key: "drop",
          value: function drop(event) {
            if (this.allowDrop(event)) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].removeClass(this.el.nativeElement, 'p-draggable-enter');
              event.preventDefault();
              this.onDrop.emit(event);
            }
          }
        }, {
          key: "dragEnter",
          value: function dragEnter(event) {
            event.preventDefault();

            if (this.dropEffect) {
              event.dataTransfer.dropEffect = this.dropEffect;
            }

            primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].addClass(this.el.nativeElement, 'p-draggable-enter');
            this.onDragEnter.emit(event);
          }
        }, {
          key: "dragLeave",
          value: function dragLeave(event) {
            event.preventDefault();
            primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].removeClass(this.el.nativeElement, 'p-draggable-enter');
            this.onDragLeave.emit(event);
          }
        }, {
          key: "allowDrop",
          value: function allowDrop(event) {
            var dragScope = event.dataTransfer.getData('text');

            if (typeof this.scope == "string" && dragScope == this.scope) {
              return true;
            } else if (this.scope instanceof Array) {
              for (var j = 0; j < this.scope.length; j++) {
                if (dragScope == this.scope[j]) {
                  return true;
                }
              }
            }

            return false;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unbindDragOverListener();
          }
        }]);

        return Droppable;
      }();

      Droppable.ɵfac = function Droppable_Factory(t) {
        return new (t || Droppable)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]));
      };

      Droppable.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: Droppable,
        selectors: [["", "pDroppable", ""]],
        hostBindings: function Droppable_HostBindings(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("drop", function Droppable_drop_HostBindingHandler($event) {
              return ctx.drop($event);
            })("dragenter", function Droppable_dragenter_HostBindingHandler($event) {
              return ctx.dragEnter($event);
            })("dragleave", function Droppable_dragleave_HostBindingHandler($event) {
              return ctx.dragLeave($event);
            });
          }
        },
        inputs: {
          scope: ["pDroppable", "scope"],
          pDroppableDisabled: "pDroppableDisabled",
          dropEffect: "dropEffect"
        },
        outputs: {
          onDragEnter: "onDragEnter",
          onDragLeave: "onDragLeave",
          onDrop: "onDrop"
        }
      });

      Droppable.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
        }];
      };

      Droppable.propDecorators = {
        scope: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
          args: ['pDroppable']
        }],
        pDroppableDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dropEffect: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onDragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDrop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        drop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['drop', ['$event']]
        }],
        dragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragenter', ['$event']]
        }],
        dragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragleave', ['$event']]
        }]
      };
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Droppable, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
          args: [{
            selector: '[pDroppable]'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
          }];
        }, {
          onDragEnter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDragLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDrop: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          drop: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['drop', ['$event']]
          }],
          dragEnter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragenter', ['$event']]
          }],
          dragLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragleave', ['$event']]
          }],
          scope: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ['pDroppable']
          }],
          pDroppableDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dropEffect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();

      var DragDropModule = function DragDropModule() {
        _classCallCheck(this, DragDropModule);
      };

      DragDropModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: DragDropModule
      });
      DragDropModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function DragDropModule_Factory(t) {
          return new (t || DragDropModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](DragDropModule, {
          declarations: function declarations() {
            return [Draggable, Droppable];
          },
          imports: function imports() {
            return [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]];
          },
          exports: function exports() {
            return [Draggable, Droppable];
          }
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DragDropModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
            exports: [Draggable, Droppable],
            declarations: [Draggable, Droppable]
          }]
        }], null, null);
      })();
      /**
       * Generated bundle index. Do not edit.
       */
      //# sourceMappingURL=primeng-dragdrop.js.map

      /***/

    },

    /***/
    "Y+ZO":
    /*!****************************************************************************!*\
      !*** ./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-togglebutton.js ***!
      \****************************************************************************/

    /*! exports provided: TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule */

    /***/
    function YZO(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "TOGGLEBUTTON_VALUE_ACCESSOR", function () {
        return TOGGLEBUTTON_VALUE_ACCESSOR;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ToggleButton", function () {
        return ToggleButton;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "ToggleButtonModule", function () {
        return ToggleButtonModule;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var primeng_ripple__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! primeng/ripple */
      "Q4Mo");
      /* harmony import */


      var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/forms */
      "3Pt+");

      var _c0 = function _c0(a1, a2) {
        return {
          "p-button-icon": true,
          "p-button-icon-left": a1,
          "p-button-icon-right": a2
        };
      };

      function ToggleButton_span_1_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 3);
        }

        if (rf & 2) {
          var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"](ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon);

          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](3, _c0, ctx_r0.iconPos === "left", ctx_r0.iconPos === "right"));
        }
      }

      var _c1 = function _c1(a1, a2, a3) {
        return {
          "p-button p-togglebutton p-component": true,
          "p-button-icon-only": a1,
          "p-highlight": a2,
          "p-disabled": a3
        };
      };

      var TOGGLEBUTTON_VALUE_ACCESSOR = {
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["NG_VALUE_ACCESSOR"],
        useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["forwardRef"])(function () {
          return ToggleButton;
        }),
        multi: true
      };

      var ToggleButton = /*#__PURE__*/function () {
        function ToggleButton(cd) {
          _classCallCheck(this, ToggleButton);

          this.cd = cd;
          this.iconPos = 'left';
          this.onChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.checked = false;

          this.onModelChange = function () {};

          this.onModelTouched = function () {};
        }

        _createClass(ToggleButton, [{
          key: "toggle",
          value: function toggle(event) {
            if (!this.disabled) {
              this.checked = !this.checked;
              this.onModelChange(this.checked);
              this.onModelTouched();
              this.onChange.emit({
                originalEvent: event,
                checked: this.checked
              });
              this.cd.markForCheck();
            }
          }
        }, {
          key: "onBlur",
          value: function onBlur() {
            this.onModelTouched();
          }
        }, {
          key: "writeValue",
          value: function writeValue(value) {
            this.checked = value;
            this.cd.markForCheck();
          }
        }, {
          key: "registerOnChange",
          value: function registerOnChange(fn) {
            this.onModelChange = fn;
          }
        }, {
          key: "registerOnTouched",
          value: function registerOnTouched(fn) {
            this.onModelTouched = fn;
          }
        }, {
          key: "setDisabledState",
          value: function setDisabledState(val) {
            this.disabled = val;
            this.cd.markForCheck();
          }
        }, {
          key: "hasOnLabel",
          get: function get() {
            return this.onLabel && this.onLabel.length > 0;
          }
        }, {
          key: "hasOffLabel",
          get: function get() {
            return this.onLabel && this.onLabel.length > 0;
          }
        }]);

        return ToggleButton;
      }();

      ToggleButton.ɵfac = function ToggleButton_Factory(t) {
        return new (t || ToggleButton)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]));
      };

      ToggleButton.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
        type: ToggleButton,
        selectors: [["p-toggleButton"]],
        inputs: {
          iconPos: "iconPos",
          disabled: "disabled",
          onLabel: "onLabel",
          offLabel: "offLabel",
          onIcon: "onIcon",
          offIcon: "offIcon",
          ariaLabelledBy: "ariaLabelledBy",
          style: "style",
          styleClass: "styleClass",
          inputId: "inputId",
          tabindex: "tabindex"
        },
        outputs: {
          onChange: "onChange"
        },
        features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([TOGGLEBUTTON_VALUE_ACCESSOR])],
        decls: 4,
        vars: 12,
        consts: [["role", "checkbox", "pRipple", "", 3, "ngClass", "ngStyle", "click", "keydown.enter"], [3, "class", "ngClass", 4, "ngIf"], [1, "p-button-label"], [3, "ngClass"]],
        template: function ToggleButton_Template(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ToggleButton_Template_div_click_0_listener($event) {
              return ctx.toggle($event);
            })("keydown.enter", function ToggleButton_Template_div_keydown_enter_0_listener($event) {
              return ctx.toggle($event);
            });

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, ToggleButton_span_1_Template, 1, 6, "span", 1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
          }

          if (rf & 2) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"](ctx.styleClass);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction3"](8, _c1, ctx.onIcon && ctx.offIcon && !ctx.hasOnLabel && !ctx.hasOffLabel, ctx.checked, ctx.disabled))("ngStyle", ctx.style);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", ctx.disabled ? null : "0")("aria-checked", ctx.checked);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.onIcon || ctx.offIcon);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);

            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.checked ? ctx.hasOnLabel ? ctx.onLabel : "" : ctx.hasOffLabel ? ctx.offLabel : "");
          }
        },
        directives: [primeng_ripple__WEBPACK_IMPORTED_MODULE_2__["Ripple"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgClass"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgStyle"], _angular_common__WEBPACK_IMPORTED_MODULE_1__["NgIf"]],
        styles: [".p-button[_ngcontent-%COMP%]{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;margin:0;overflow:hidden;position:relative;text-align:center;user-select:none;vertical-align:bottom}.p-button-label[_ngcontent-%COMP%]{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right[_ngcontent-%COMP%]{-ms-flex-order:1;order:1}.p-button[_ngcontent-%COMP%]:disabled{cursor:default}.p-button-icon-only[_ngcontent-%COMP%]{-ms-flex-pack:center;justify-content:center}.p-button-icon-only[_ngcontent-%COMP%]   .p-button-label[_ngcontent-%COMP%]{-ms-flex:0 0 auto;flex:0 0 auto;visibility:hidden;width:0}.p-button-vertical[_ngcontent-%COMP%]{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom[_ngcontent-%COMP%]{-ms-flex-order:2;order:2}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]{margin:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:last-child){border-right:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:first-of-type{border-bottom-right-radius:0;border-top-right-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:last-of-type{border-bottom-left-radius:0;border-top-left-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:focus{position:relative;z-index:1}"],
        changeDetection: 0
      });

      ToggleButton.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
        }];
      };

      ToggleButton.propDecorators = {
        onLabel: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        offLabel: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onIcon: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        offIcon: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        ariaLabelledBy: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        disabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        style: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        styleClass: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        inputId: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        tabindex: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        iconPos: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onChange: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }]
      };
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ToggleButton, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
          args: [{
            selector: 'p-toggleButton',
            template: "\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    ",
            providers: [TOGGLEBUTTON_VALUE_ACCESSOR],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [".p-button{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;margin:0;overflow:hidden;position:relative;text-align:center;user-select:none;vertical-align:bottom}.p-button-label{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right{-ms-flex-order:1;order:1}.p-button:disabled{cursor:default}.p-button-icon-only{-ms-flex-pack:center;justify-content:center}.p-button-icon-only .p-button-label{-ms-flex:0 0 auto;flex:0 0 auto;visibility:hidden;width:0}.p-button-vertical{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom{-ms-flex-order:2;order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-bottom-right-radius:0;border-top-right-radius:0}.p-buttonset .p-button:last-of-type{border-bottom-left-radius:0;border-top-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}"]
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]
          }];
        }, {
          iconPos: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          onChange: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          disabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          onLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          offLabel: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          onIcon: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          offIcon: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          ariaLabelledBy: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          style: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          styleClass: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          inputId: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          tabindex: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();

      var ToggleButtonModule = function ToggleButtonModule() {
        _classCallCheck(this, ToggleButtonModule);
      };

      ToggleButtonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: ToggleButtonModule
      });
      ToggleButtonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function ToggleButtonModule_Factory(t) {
          return new (t || ToggleButtonModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_ripple__WEBPACK_IMPORTED_MODULE_2__["RippleModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ToggleButtonModule, {
          declarations: function declarations() {
            return [ToggleButton];
          },
          imports: function imports() {
            return [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_ripple__WEBPACK_IMPORTED_MODULE_2__["RippleModule"]];
          },
          exports: function exports() {
            return [ToggleButton];
          }
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ToggleButtonModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"], primeng_ripple__WEBPACK_IMPORTED_MODULE_2__["RippleModule"]],
            exports: [ToggleButton],
            declarations: [ToggleButton]
          }]
        }], null, null);
      })();
      /**
       * Generated bundle index. Do not edit.
       */
      //# sourceMappingURL=primeng-togglebutton.js.map

      /***/

    }
  }]);
})();
//# sourceMappingURL=default~production-production-module~settings-settings-module-es5.js.map