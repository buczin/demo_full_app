{"version":3,"sources":["webpack:///src/app/films/producer-add-form/producer-add-form.component.ts","webpack:///src/app/films/producer-add-form/producer-add-form.component.html","webpack:///src/app/films/films-routing.module.ts","webpack:///src/app/films/film-main/film-main.component.ts","webpack:///src/app/films/film-main/film-main.component.html","webpack:///src/app/films/film-add-form/film-add-form.component.ts","webpack:///src/app/films/film-add-form/film-add-form.component.html","webpack:///src/app/films/films.module.ts"],"names":["ProducerAddFormComponent","ref","config","filmService","infoPopup","loading","producerData","data","formProducer","producerName","validators","required","asyncValidators","producerExists","updateOn","patchValue","id","close","addProducer","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","updateProducer","showSuccessUpdate","showErrorUpdate","selector","templateUrl","styleUrls","routes","path","component","FilmsRoutingModule","forChild","imports","exports","FilmMainComponent","dialogService","auth","confirmationService","film","producer","positionpersite","onErr","number","name","ecoPlastNumber","ralNumber","imgLink","status","NIEDOSTEPNA","loadData","available","label","DOSTEPNA","DOSTEPNOSCOGRANICZONA","displayDialogOkleina","loadProducersSelect","getOklieny","showErrorDownload","push","getCountOkleina","filmCount","showErrorCount","getCountProducer","producerCount","selectedOkleina","dialogRef","open","header","onClose","console","log","rowData","width","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteOklina","showSuccessDelete","showErrorDelete","deleteProducer","showDialogToAddFilm","showDialogToAddProducer","onDialogHide","FilmAddFormComponent","filmData","formFilm","test","find","x","filmExists","event","selectedFilm","target","addOklina","updateOkleina","FilmsModule","declarations","providers","entryComponents"],"mappings":"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","file":"films-films-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FilmsService } from '../film-service/films.service';\nimport { AppValidators } from '../../_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-producer-add-form',\n  templateUrl: './producer-add-form.component.html',\n  styleUrls: ['./producer-add-form.component.scss']\n})\nexport class ProducerAddFormComponent implements OnInit {\n\n  formProducer: FormGroup;\n  producerData: any;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private filmService: FilmsService,\n    private infoPopup: InfoPopupComponent) {\n    this.producerData = config.data;\n  }\n\n  ngOnInit() {\n    this.formProducer = new FormGroup({\n      producerName: new FormControl('', { validators: [Validators.required], asyncValidators: [AppValidators.producerExists], updateOn: 'blur' }),\n    })\n    if(this.producerData){\n      this.formProducer.patchValue(this.producerData);\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewProducer() {\n    this.loading = true;\n    this.filmService.addProducer(this.formProducer.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"producenta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"producenta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateProducer() {\n    this.loading = true;\n    this.filmService.updateProducer(this.producerData.id, this.formProducer.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"producenta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"producenta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n}\n\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formProducer\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"producerNameid\">Nazwa Producenta</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formProducer.get('producerName')\" type=\"text\" id=\"producerNameid\" required autofocus autocomplete=\"off\">\n\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('required') && formProducer.get('producerName').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('producerExists') && formProducer.get('producerName').touched\">\n                    nazwa producenta została już dodana\n                </p>\n\n            </div>\n        </div>\n    </form>\n</div>\n\n\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!producerData\" [disabled]=\"formProducer.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewProducer()\" pTooltip=\"Dodaj nowego producenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"producerData\" [disabled]=\"formProducer.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateProducer()\" pTooltip=\"Aktualizacja producenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilmMainComponent } from './film-main/film-main.component';\n\n\nconst routes: Routes = [\n\n  { path: '', component: FilmMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilmsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FilmsService, Okleina, OkleinaEnum, Producent } from '../film-service/films.service';\nimport { SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { FilmAddFormComponent } from '../film-add-form/film-add-form.component';\nimport { ProducerAddFormComponent } from '../producer-add-form/producer-add-form.component';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-film-main',\n  templateUrl: './film-main.component.html',\n  styleUrls: ['./film-main.component.scss']\n})\nexport class FilmMainComponent implements OnInit {\n\n  film: Okleina[] = [];\n  producer: Producent[] = [];\n  positionpersite = 10;\n\n  onErr: Okleina =\n    {\n      id: 0,\n      number: \"---\",\n      name: \"---\",\n      producer: \"---\",\n      ecoPlastNumber: \"---\",\n      ralNumber: \"---\",\n      imgLink: \"---\",\n      status: OkleinaEnum.NIEDOSTEPNA\n    };\n  filmCount: number;\n  producerCount: number;\n  err: boolean;\n  newFilm: boolean;\n  available: SelectItem[];\n  displayDialogOkleina: boolean;\n  selectedOkleina: any;\n  loading = false;\n\n  constructor(\n    public dialogService: DialogService,\n    public auth: AuthService,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n    this.available = [\n      { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n      { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n      { label: 'Dost. Ograniczona', value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n    ];\n  }\n\n  loadData() {\n    this.loading = true;\n    this.displayDialogOkleina = false;\n    this.filmService.loadProducersSelect();\n\n    this.filmService.getOklieny().subscribe(\n      {\n        next: (res) => {\n          this.film = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"okleiny\")\n          this.err = true;\n          this.film.push(this.onErr);\n        },\n        complete: () => {\n          this.loading = false;\n        }\n      }\n    )\n\n    this.filmService.getCountOkleina().subscribe({\n      next: (res) => {\n        this.filmCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"oklein\")\n      },\n      complete: () => {\n      }\n    })\n\n    this.filmService.getCountProducer().subscribe({\n      next: (res) => {\n        this.producerCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"producentów\")\n      },\n      complete: () => {\n      }\n    })\n\n  }\n\n  onDialogHide() {\n    this.displayDialogOkleina = false;\n    this.selectedOkleina = null;\n  }\n\n  showDialogFilm(data) {\n    this.displayDialogOkleina = true;\n    this.selectedOkleina = data;\n  }\n\n  showDialogToAddFilm() {\n    const dialogRef = this.dialogService.open(FilmAddFormComponent, {\n      header:\"Nowa okleina\",\n      // width: '550px'\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog add film was closed');\n    });\n  }\n\n  showDialogToUpdateFilm(rowData) {\n    const dialogRef = this.dialogService.open(FilmAddFormComponent, {\n      header:\"Aktualizacja okleiny\",\n      data: rowData,\n      //  width: '550px',\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update film was closed');\n    });\n  }\n\n  showDialogToAddProducer() {\n    const dialogRef = this.dialogService.open(ProducerAddFormComponent, {\n      header:\"Nowy producent\",\n      width: '450px',\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog add producer was closed');\n    });\n  }\n\n  showDialogToUpdateProducer(rowData) {\n    const dialogRef = this.dialogService.open(ProducerAddFormComponent, {\n      header: \"Aktualizacja producenta\",\n      data: rowData,\n      width: '450px',\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update producer was closed');\n    });\n  }\n\n\n  onRowDeleteFilm(film: Okleina) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + film.name + '?',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.filmService.deleteOklina(film.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"okleiny\");\n            },\n            error: (err) => {\n              console.log(err);\n              this.infoPopup.showErrorDelete(\"okleiny\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowDeleteProducer(producer: Producent) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + producer.producerName + '?',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.filmService.deleteProducer(producer.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"producent\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"producent\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-pause\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Folia</p>\n                                <p class=\"card-title\">{{filmCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddFilm()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-tags\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Producenci</p>\n                                <p class=\"card-title\">{{producerCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddProducer()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Okleiny\">\n        <p-table #okl [value]=\"film\" [loading]=\"loading\" dataKey=\"id\" editMode=\"row\" sortMode=\"multiple\"\n            [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\" [autoLayout]=\"true\"\n            [globalFilterFields]=\"['number','name','producer.producerName','ralNumber','ecoPlastNumber']\"\n            [rowHover]=\"true\">\n\n            <ng-template pTemplate=\"caption\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <span>Lista Oklein</span>\n                    </div>\n                    <div class=\"col\" style=\"text-align: end;\">\n                        <input pInputText type=\"text\" (input)=\"okl.filterGlobal($event.target.value, 'contains')\"\n                            placeholder=\"Wyszukiwarka\" />\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr>\n                    <th pSortableColumn=\"number\">Numer<p-sortIcon field=\"number\"></p-sortIcon>\n                    </th>\n                    <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon>\n                    </th>\n                    <th pSortableColumn=\"producer\">Producent<p-sortIcon field=\"producer\"></p-sortIcon>\n                    </th>\n                    <th>Link Obraz\n                    </th>\n                    <th pSortableColumn=\"ralNumber\">Odp. RAL<p-sortIcon field=\"ralNumber\"></p-sortIcon>\n                    </th>\n                    <th pSortableColumn=\"ecoPlastNumber\">Numer odp. EcoPlast<p-sortIcon field=\"ecoPlastNumber\">\n                        </p-sortIcon>\n                    </th>\n                    <th>Dopłata %</th>\n                    <th pSortableColumn=\"status\">Status<p-sortIcon field=\"status\"></p-sortIcon>\n                    </th>\n                    <th style=\"min-width: 90px; width: 90px;\"></th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                <tr [pEditableRow]=\"rowData\" class=\"ui-selectable-row\">\n                    <td>\n                        {{rowData.number}}\n                    </td>\n                    <td>\n                        {{rowData.name}}\n                    </td>\n                    <td>\n                        {{rowData.producer.producerName}}\n                    </td>\n                    <td class=\"text-center\">\n                        <img src=\"{{rowData.imgLink}}\" width=\"40\" height=\"40\" (click)=\"showDialogFilm(rowData.imgLink)\">\n                    </td>\n                    <td>\n                        {{rowData.ralNumber}}\n                    </td>\n                    <td>\n                        {{rowData.ecoPlastNumber}}\n                    </td>\n                    <td>\n                        {{rowData.surchargePercentage}}\n                    </td>\n                    <td>\n                        <div [ngSwitch]=\"rowData.status\" class=\"text-center\">\n                            <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-film status-dost\">DOST.</div>\n                            <div *ngSwitchCase=\"'NIEDOSTEPNA'\" class=\"status-film status-niedost\">\n                                NIEDOST.</div>\n                            <div *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\" class=\"status-film status-ogr\">\n                                OGRAN.</div>\n                        </div>\n                    </td>\n\n                    <td class=\"edit-col\">\n\n                        <button appPermission permission=\"filmWrite\" pButton type=\"button\"\n                            (click)=\"showDialogToUpdateFilm(rowData)\" pTooltip=\"Edycja Okleiny\"\n                            icon=\"pi pi-pencil\" class=\"p-button-sm sb-button blue\"></button>\n\n                        <button appPermission permission=\"filmDelete\" pButton type=\"button\"\n                            (click)=\"onRowDeleteFilm(rowData)\" pTooltip=\"Usuwanie\"\n                            icon=\"pi pi-trash\" class=\"p-button-sm ml-1 sb-button red\"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n\n            <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                    <td colspan=\"8\" style=\"text-align:left\">Brak danych.</td>\n                </tr>\n            </ng-template>\n\n        </p-table>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Producenci\">\n        <ng-template pTemplate=\"content\">\n\n            <p-table #pr [value]=\"filmService.producers\" dataKey=\"id\" [paginator]=\"true\" [rows]=\"10\"\n                [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n                [globalFilterFields]=\"['producerName']\">\n\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Producenci</span>\n                        </div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"pr.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </div>\n                </ng-template>\n\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 40px;\">ID</th>\n                        <th pSortableColumn=\"producerName\">Nazwa Producenta<p-sortIcon field=\"producerName\"></p-sortIcon></th>\n                        <th style=\"min-width: 90px; width: 90px;\"></th>\n                    </tr>\n                </ng-template>\n\n                <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                    <tr>\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.producerName}}\n                        </td>\n                        <td class=\"edit-col\">\n\n                            <button appPermission permission=\"producerWrite\" pButton pRipple type=\"button\"\n                                (click)=\"showDialogToUpdateProducer(rowData)\" icon=\"pi pi-pencil\"\n                                class=\"p-button-sm sb-button blue\"></button>\n\n                            <button appPermission permission=\"producerDelete\" pButton pRipple type=\"button\"\n                                (click)=\"onRowDeleteProducer(rowData)\" icon=\"pi pi-trash\"\n                                class=\"p-button-sm ml-1 sb-button red\"></button>\n\n                        </td>\n                    </tr>\n                </ng-template>\n\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"3\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n\n            </p-table>\n        </ng-template>\n    </p-tabPanel>\n\n</p-tabView>\n\n\n<p-dialog header=\"Okleina\" [(visible)]=\"displayDialogOkleina\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\"\n    [style]=\"{width: '500px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\n    <div *ngIf=\"selectedOkleina\">\n        <img width=\"400px\" src=\"{{selectedOkleina}}\">\n    </div>\n</p-dialog>","import { Component, OnInit } from '@angular/core';\nimport { FilmsService, OkleinaEnum } from '../film-service/films.service';\nimport { SelectItem } from 'primeng/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-film-add-form',\n  templateUrl: './film-add-form.component.html',\n  styleUrls: ['./film-add-form.component.scss']\n})\nexport class FilmAddFormComponent implements OnInit {\n\n  formFilm: FormGroup;\n  filmData: any;\n  loading = false;\n\n  available: SelectItem[] = [\n    { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n    { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n    { label: 'Dost. Ograniczona', value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n  ];\n  selectedFilm: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent) {\n    this.filmData = config.data;\n  }\n\n  ngOnInit() {\n   \n    if(this.filmData){\n      this.formFilm = new FormGroup({\n        number: new FormControl('', { validators: [Validators.required]}),\n        name: new FormControl('', { validators: [Validators.required] }),\n        producer: new FormControl('', { validators: [Validators.required] }),\n        imgLink: new FormControl(''),\n        status: new FormControl('',{ validators: [Validators.required] }),\n        ralNumber: new FormControl(''),\n        ecoPlastNumber: new FormControl('')\n      });\n      let test = this.available.find(x=>x.value == this.filmData.status);\n      this.filmData.status = test;\n      this.formFilm.patchValue(this.filmData);\n    }else{\n      this.formFilm = new FormGroup({\n        number: new FormControl('', { validators: [Validators.required], asyncValidators: [AppValidators.filmExists], updateOn: 'blur' }),\n        name: new FormControl('', { validators: [Validators.required] }),\n        producer: new FormControl('', { validators: [Validators.required] }),\n        imgLink: new FormControl(''),\n        status: new FormControl(this.available[0], { validators: [Validators.required] }),\n        ralNumber: new FormControl(''),\n        ecoPlastNumber: new FormControl('')\n      });\n    }\n  }\n\n  selectFilm(event: Event) {\n    this.selectedFilm = (event.target as HTMLSelectElement).value;\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewFilm() {\n    this.loading = true;\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    this.filmService.addOklina(this.formFilm.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"okleiny\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.loading = false;\n          this.infoPopup.showErrorAdd(\"okleiny\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateFilm() {\n    this.loading = true;\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    this.filmService.updateOkleina(this.filmData.id, this.formFilm.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"okleiny\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"okleiny\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n}\n\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formFilm\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"producer\">Producent *</label>\n                <p-dropdown id=\"producer\" [style]=\"{'width':'100%'}\" [options]=\"filmService.producersSelect\"\n                    [filter]=\"true\" filterBy=\"producerName,value.producerName\" [formControl]=\"formFilm.get('producer')\"\n                    placeholder=\"wybierz producenta\" required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('producer').hasError('required') && formFilm.get('producer').touched\">\n                    musi być wypełnione\n                </p>\n\n            </div>\n        </div>\n\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"number\">Numer *</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('number')\" autofocus type=\"text\" id=\"number\" required\n                    autocomplete=\"off\" autofocus>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('required') && formFilm.get('number').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('filmExists') && formFilm.get('number').touched\">\n                    ten numer znajduje się na liście\n                </p>\n\n            </div>\n\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"name\">Nazwa *</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('name')\" type=\"text\" id=\"name\" required autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('name').hasError('required') && formFilm.get('name').touched\">\n                    musi być wypełnione\n                </p>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"ralNumber\">Odp. RAL</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('ralNumber')\" type=\"text\" id=\"ralNumber\" autocomplete=\"off\">\n            </div>\n\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"ecoPlastNumber\">Nr. EcoPlast</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('ecoPlastNumber')\" type=\"text\" id=\"ecoPlastNumber\"\n                    autocomplete=\"off\">\n            </div>\n        </div>\n\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"surchargePercentage\">Dopłata %</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('surchargePercentage')\" type=\"text\" id=\"surchargePercentage\"\n                    placeholder=\"%\" autocomplete=\"off\">\n            </div>\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"status\">Status *</label>\n                <p-dropdown inputId=\"status\" [style]=\"{'width':'100%'}\" [options]=\"available\"\n                    [formControl]=\"formFilm.get('status')\" placeholder=\"Wybierz\" optionLabel=\"label\" required>\n                </p-dropdown>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col\">\n\n                <label class=\"sb-small-label\" for=\"imgLink\">Obraz</label>\n                <input pInputText class=\"fullwidth\" [formControl]=\"formFilm.get('imgLink')\" type=\"text\" id=\"imgLink\"\n                    autocomplete=\"off\">\n            </div>\n        </div>\n    </form>\n</div>\n\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!filmData\" [disabled]=\"formFilm.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewFilm()\" pTooltip=\"Dodaj nową okleinę\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"filmData\" [disabled]=\"formFilm.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateFilm()\" pTooltip=\"Aktualizacja okleiny\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilmMainComponent } from './film-main/film-main.component';\nimport { FilmsRoutingModule } from './films-routing.module';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FilmAddFormComponent } from './film-add-form/film-add-form.component';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ProducerAddFormComponent } from './producer-add-form/producer-add-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@NgModule({\n  declarations: [FilmMainComponent, FilmAddFormComponent, ProducerAddFormComponent],\n  imports: [\n    CommonModule,\n    FilmsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    ProgressSpinnerModule\n  ],\n  providers: [DialogService],\n  entryComponents:[FilmAddFormComponent,ProducerAddFormComponent]\n})\nexport class FilmsModule { }\n"]}