{"version":3,"sources":["./src/app/settings/mycompany/mycompany.component.ts","./src/app/settings/mycompany/mycompany.component.html","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/_class/user.ts","./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-togglebutton.js","./src/app/settings/users/form-userupdate/form-userupdate.component.ts","./src/app/settings/users/form-userupdate/form-userupdate.component.html","./src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.ts","./src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.html","./src/app/settings/settings.service.ts","./src/app/settings/users/form-users/form-users.component.ts","./src/app/settings/users/form-users/form-users.component.html","./src/app/settings/settings-main/settings-main.component.ts","./src/app/settings/settings-main/settings-main.component.html","./src/app/settings/users/form-password/form-password.component.ts","./src/app/settings/users/form-password/form-password.component.html","./src/app/settings/users/users.component.ts","./src/app/settings/users/users.component.html","./src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","./src/app/settings/mycompany/form-mycompany/form-mycompany.component.html"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormMycompanyComponent } from './form-mycompany/form-mycompany.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUpdateMyCompanyComponent } from './form-update-my-company/form-update-my-company.component';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: any;\n\n  constructor(\n    private location: Location,\n    public dialog: MatDialog, \n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) =>{\n          this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormMycompanyComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  onEditMyCompany(company){\n    const dialogRef = this.dialog.open(FormUpdateMyCompanyComponent, {\n      data: company,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ company.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"moja firma\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"moja firma\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-2 ml-0\">\n        <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n                <button class=\"w-100\" mat-raised-button color=\"primary\"\n                    (click)=\"openDialogAdd()\">Dodaj firmę</button>\n            </div>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"row\">\n                <p-table #mc [value]=\"mycompanies\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['name']\" [resizableColumns]=\"true\" columnResizeMode=\"expand\">\n                    <ng-template pTemplate=\"caption\">\n                        Moje Firmy\n                        <div class=\"ui-table-globalfilter-container\">\n                            <input pInputText type=\"text\" (input)=\"mc.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 40px;\">ID</th>\n                            <th pResizableColumn>Nazwa</th>\n                            <th pResizableColumn>NIP</th>\n                            <th pResizableColumn>REGON</th>\n                            <th pResizableColumn>Email firmy</th>\n                            <th pResizableColumn>Email FV</th>\n                            <th pResizableColumn>Nr. Tel.</th>\n                            <th pResizableColumn>Logo</th>\n                            <th style=\"width:8em\"></th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData>\n                        <tr>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.id}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.name}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.nip}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.regon}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.contactemail}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.fvemail}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.phonenumber}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.logoLink}}\n                            </td>\n                            <td style=\"text-align:center\">\n                                <button matTooltip=\"Edycja firmy\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                    icon=\"pi pi-pencil\" class=\"ui-button-info edit-button\"\n                                    (click)=\"onEditMyCompany(rowData)\"></button>\n                                <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                    icon=\"pi pi-times\" class=\"ml-2 ui-button-info remove-button\"\n                                    (click)=\"onDeleteMyCompant(rowData)\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"8\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { FormMycompanyComponent } from './mycompany/form-mycompany/form-mycompany.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormUsersComponent } from './users/form-users/form-users.component';\nimport {PasswordModule} from 'primeng/password';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { FormPasswordComponent } from './users/form-password/form-password.component';\nimport { FormUserupdateComponent } from './users/form-userupdate/form-userupdate.component';\nimport { FormUpdateMyCompanyComponent } from './mycompany/form-update-my-company/form-update-my-company.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport {ToggleButtonModule} from 'primeng/togglebutton';\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent, FormMycompanyComponent, FormUsersComponent, FormPasswordComponent, FormUserupdateComponent, FormUpdateMyCompanyComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    InputTextModule,\n    RippleModule,\n    ToggleButtonModule\n  ],\n  entryComponents: [FormUpdateMyCompanyComponent,FormUserupdateComponent,FormPasswordComponent,FormUsersComponent,FormMycompanyComponent]\n})\nexport class SettingsModule { }\n","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    name: string;\r\n    authdata: User;\r\n  authorities: any;\r\n\r\n  catalogRead: boolean;\r\n  catalogWrite: boolean;\r\n  catalogDelete: boolean;\r\n  systemRead: boolean;\r\n  systemWrite: boolean;\r\n  systemDelete: boolean;\r\n  filmRead: boolean;\r\n  filmWrite: boolean;\r\n  filmDelete: boolean;\r\n  clientRead: boolean;\r\n  clientWrite: boolean;\r\n  clientDelete: boolean;\r\n  producerRead: boolean;\r\n  producerWrite: boolean;\r\n  producerDelete: boolean;\r\n}","import { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ChangeDetectorRef, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RippleModule } from 'primeng/ripple';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/ripple';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = function (a1, a2) { return { \"p-button-icon\": true, \"p-button-icon-left\": a1, \"p-button-icon-right\": a2 }; };\nfunction ToggleButton_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r0.iconPos === \"left\", ctx_r0.iconPos === \"right\"));\n} }\nconst _c1 = function (a1, a2, a3) { return { \"p-button p-togglebutton p-component\": true, \"p-button-icon-only\": a1, \"p-highlight\": a2, \"p-disabled\": a3 }; };\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleButton),\n    multi: true\n};\nclass ToggleButton {\n    constructor(cd) {\n        this.cd = cd;\n        this.iconPos = 'left';\n        this.onChange = new EventEmitter();\n        this.checked = false;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    toggle(event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            this.cd.markForCheck();\n        }\n    }\n    onBlur() {\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.checked = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    get hasOnLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    get hasOffLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\nToggleButton.ɵfac = function ToggleButton_Factory(t) { return new (t || ToggleButton)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nToggleButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToggleButton, selectors: [[\"p-toggleButton\"]], inputs: { iconPos: \"iconPos\", disabled: \"disabled\", onLabel: \"onLabel\", offLabel: \"offLabel\", onIcon: \"onIcon\", offIcon: \"offIcon\", ariaLabelledBy: \"ariaLabelledBy\", style: \"style\", styleClass: \"styleClass\", inputId: \"inputId\", tabindex: \"tabindex\" }, outputs: { onChange: \"onChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([TOGGLEBUTTON_VALUE_ACCESSOR])], decls: 4, vars: 12, consts: [[\"role\", \"checkbox\", \"pRipple\", \"\", 3, \"ngClass\", \"ngStyle\", \"click\", \"keydown.enter\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [1, \"p-button-label\"], [3, \"ngClass\"]], template: function ToggleButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function ToggleButton_Template_div_click_0_listener($event) { return ctx.toggle($event); })(\"keydown.enter\", function ToggleButton_Template_div_keydown_enter_0_listener($event) { return ctx.toggle($event); });\n        ɵngcc0.ɵɵtemplate(1, ToggleButton_span_1_Template, 1, 6, \"span\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(8, _c1, ctx.onIcon && ctx.offIcon && !ctx.hasOnLabel && !ctx.hasOffLabel, ctx.checked, ctx.disabled))(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : \"0\")(\"aria-checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.onIcon || ctx.offIcon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.checked ? ctx.hasOnLabel ? ctx.onLabel : \"\" : ctx.hasOffLabel ? ctx.offLabel : \"\");\n    } }, directives: [ɵngcc1.Ripple, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc2.NgIf], styles: [\".p-button[_ngcontent-%COMP%]{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;margin:0;overflow:hidden;position:relative;text-align:center;user-select:none;vertical-align:bottom}.p-button-label[_ngcontent-%COMP%]{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right[_ngcontent-%COMP%]{-ms-flex-order:1;order:1}.p-button[_ngcontent-%COMP%]:disabled{cursor:default}.p-button-icon-only[_ngcontent-%COMP%]{-ms-flex-pack:center;justify-content:center}.p-button-icon-only[_ngcontent-%COMP%]   .p-button-label[_ngcontent-%COMP%]{-ms-flex:0 0 auto;flex:0 0 auto;visibility:hidden;width:0}.p-button-vertical[_ngcontent-%COMP%]{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom[_ngcontent-%COMP%]{-ms-flex-order:2;order:2}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]{margin:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:last-child){border-right:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:first-of-type{border-bottom-right-radius:0;border-top-right-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:last-of-type{border-bottom-left-radius:0;border-top-left-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:focus{position:relative;z-index:1}\"], changeDetection: 0 });\nToggleButton.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nToggleButton.propDecorators = {\n    onLabel: [{ type: Input }],\n    offLabel: [{ type: Input }],\n    onIcon: [{ type: Input }],\n    offIcon: [{ type: Input }],\n    ariaLabelledBy: [{ type: Input }],\n    disabled: [{ type: Input }],\n    style: [{ type: Input }],\n    styleClass: [{ type: Input }],\n    inputId: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    iconPos: [{ type: Input }],\n    onChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToggleButton, [{\n        type: Component,\n        args: [{\n                selector: 'p-toggleButton',\n                template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `,\n                providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".p-button{-moz-user-select:none;-ms-flex-align:center;-ms-user-select:none;-webkit-user-select:none;align-items:center;cursor:pointer;display:-ms-inline-flexbox;display:inline-flex;margin:0;overflow:hidden;position:relative;text-align:center;user-select:none;vertical-align:bottom}.p-button-label{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right{-ms-flex-order:1;order:1}.p-button:disabled{cursor:default}.p-button-icon-only{-ms-flex-pack:center;justify-content:center}.p-button-icon-only .p-button-label{-ms-flex:0 0 auto;flex:0 0 auto;visibility:hidden;width:0}.p-button-vertical{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom{-ms-flex-order:2;order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-bottom-right-radius:0;border-top-right-radius:0}.p-buttonset .p-button:last-of-type{border-bottom-left-radius:0;border-top-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}\"]\n            }]\n    }], function () { return [{ type: ChangeDetectorRef }]; }, { iconPos: [{\n            type: Input\n        }], onChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], onLabel: [{\n            type: Input\n        }], offLabel: [{\n            type: Input\n        }], onIcon: [{\n            type: Input\n        }], offIcon: [{\n            type: Input\n        }], ariaLabelledBy: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], tabindex: [{\n            type: Input\n        }] }); })();\nclass ToggleButtonModule {\n}\nToggleButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToggleButtonModule });\nToggleButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToggleButtonModule_Factory(t) { return new (t || ToggleButtonModule)(); }, imports: [[CommonModule, RippleModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToggleButtonModule, { declarations: function () { return [ToggleButton]; }, imports: function () { return [CommonModule, RippleModule]; }, exports: function () { return [ToggleButton]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToggleButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, RippleModule],\n                exports: [ToggleButton],\n                declarations: [ToggleButton]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule };\n\n//# sourceMappingURL=primeng-togglebutton.js.map","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { User } from 'src/app/_class/user';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-form-userupdate',\n  templateUrl: './form-userupdate.component.html',\n  styleUrls: ['./form-userupdate.component.scss']\n})\nexport class FormUserupdateComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  formUserUpdate: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUserupdateComponent>, \n    private settingService: SettingsService, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private info: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUserUpdate = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n\n      catalogRead: new FormControl(false),\n      catalogWrite: new FormControl(false),\n      catalogDelete: new FormControl(false),\n      systemRead: new FormControl(false),\n      systemWrite: new FormControl(false),\n      systemDelete: new FormControl(false),\n      clientRead: new FormControl(false),\n      clientWrite: new FormControl(false),\n      clientDelete: new FormControl(false),\n      filmRead: new FormControl(false),\n      filmWrite: new FormControl(false),\n      filmDelete: new FormControl(false),\n      producerRead: new FormControl(false),\n      producerWrite: new FormControl(false),\n      producerDelete: new FormControl(false)\n    });\n    this.formUserUpdate.patchValue(this.user);\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateUser() {\n    this.settingService.updateUser(this.user.id,this.formUserUpdate.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        console.log(err);\n        this.info.showErrorUpdate(\"użytkownika\") \n      },\n      complete: () => {\n       }\n    })\n  }\n}","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Użytkownik</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formUserUpdate\">\n\n        <div style=\"width: 400px;\">\n            <div class=\"form-group row\">\n                <label for=\"name\" class=\"col-sm-3 col-form-label\">Imię Nazwisko</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('name')\" autofocus type=\"text\" id=\"name\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                        placeholder=\"Imię Nazwisko\" required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('name').hasError('required') && formUserUpdate.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"username\" class=\"col-sm-3 col-form-label\">Login</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('username')\" type=\"text\" id=\"username\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Login\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('username').hasError('required') && formUserUpdate.get('username').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"active\" class=\"col-sm-3 col-form-label\">Aktywny</label>\n                <div class=\"col-sm-9\">\n                    <mat-slide-toggle [formControl]=\"formUserUpdate.get('active')\" [color]=\"color\" [checked]=\"true\">\n                        Aktywny\n                    </mat-slide-toggle>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"roles\" class=\"col-sm-3 col-form-label\">Role</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('role')\" type=\"text\" id=\"roles\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Role\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('role').hasError('required') && formUserUpdate.get('role').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <p><b>Katalog</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Systemy</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Klient</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Okleina</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Producent</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formUserUpdate.invalid\" pButton pRipple type=\"button\" (click)=\"onUpdateUser()\"\n        matTooltip=\"Dodaj użytkownika\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"></button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-update-my-company',\n  templateUrl: './form-update-my-company.component.html',\n  styleUrls: ['./form-update-my-company.component.scss']\n})\nexport class FormUpdateMyCompanyComponent implements OnInit {\n\n  formUpdateMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUpdateMyCompanyComponent>,\n    private settingService: SettingsService,\n    @Inject(MAT_DIALOG_DATA) public company: any,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUpdateMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]}),\n      logoLink: new FormControl('')\n    });\n    this.formUpdateMyCompany.patchValue(this.company);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateMyCompany(){\n    this.settingService.updateMyCompany(this.company.id,this.formUpdateMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessUpdate(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n        console.log(err);\n          this.infoPopup.showErrorUpdate(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n\n","<form [formGroup]=\"formUpdateMyCompany\">\n\n    <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nazwa</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('name')\" type=\"text\" id=\"name\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa firmy\"\n                required autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('name').hasError('required') && formUpdateMyCompany.get('name').touched\">\n                musi być wypełnione\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"regon\" class=\"col-sm-3 col-form-label\">REGON</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('regon')\" type=\"text\" id=\"regon\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"REGON\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('regon').hasError('regonFormat') && formUpdateMyCompany.get('regon').touched\">\n                niepoprawny regon\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"contactemail\" class=\"col-sm-3 col-form-label\">EMAIL główny</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('contactemail')\" type=\"text\" id=\"contactemail\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                placeholder=\"Adres email głowny\" autocomplete=\"off\">\n\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('contactemail').hasError('email') && formUpdateMyCompany.get('contactemail').touched\">\n                niepoprawny email\n            </p>\n        </div>\n    </div>\n\n\n    <div class=\"form-group row\">\n        <label for=\"fvemail\" class=\"col-sm-3 col-form-label\">EMAIL faktura</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('fvemail')\" type=\"text\" id=\"fvemail\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Adres fv email\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('fvemail').hasError('email') && formUpdateMyCompany.get('fvemail').touched\">\n                niepoprawny email\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"phonenumber\" class=\"col-sm-3 col-form-label\">Numer telefonu</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('phonenumber')\" type=\"text\" id=\"phonenumber\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"numer tel.\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('phonenumber').hasError('minLength') && formUpdateMyCompany.get('phonenumber').touched\">\n                niepoprawny numer telefonu\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"logoLink\" class=\"col-sm-3 col-form-label\">Logo link</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('logoLink')\" type=\"text\" id=\"logoLink\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link do loga firmy\"\n                autocomplete=\"off\">\n        </div>\n    </div>\n\n\n</form>\n<hr>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button matTooltip=\"Aktualizuj firmę\" matTooltipClass=\"tooltip-green\" class=\"ml-1 ui-button-success\" type=\"button\"\n        pButton icon=\"pi pi-check\" (click)=\"onUpdateMyCompany()\" label=\"Zapisz\"\n        ></button>\n</div>\n<!-- [disabled]=\"formUpdateMyCompany.invalid\" -->","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) { }\n\n  // =============== USERS ============\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/users\");\n  }\n  addUser(data): Observable<any> {\n    return this.http.post<any>(\"api/user\", data);\n  }\n  updateUser(id, data){\n    return this.http.put(\"api/user/\" + id, data, { responseType: 'text' });\n  }\n  deleteUser(id) {\n    return this.http.delete(\"api/user/\" + id, { responseType: 'text' });\n  }\n  changePassword(id, data){\n    return this.http.put<any>(\"api/user/pass/\" + id, data);\n  }\n  //============== MY COMPANY ===============\n\n  getMyCompanies(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getMyCompanyById(id): Observable<any> {\n    return this.http.get<any[]>(\"api/mycompany/\" + id);\n  }\n  addMyCompany(data): Observable<any> {\n    return this.http.post<any>(\"api/mycompany\", data);\n  }\n  updateMyCompany(id, data){\n    return this.http.put(\"api/mycompany/\" + id, data, { responseType: 'text' });\n  }\n  deleteMyCompany(id) {\n    return this.http.delete(\"api/mycompany/\" + id, { responseType: 'text' });\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-form-users',\n  templateUrl: './form-users.component.html',\n  styleUrls: ['./form-users.component.scss']\n})\nexport class FormUsersComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  formUser: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<FormUsersComponent>, private settingService: SettingsService, private info: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formUser = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      password: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n\n      catalogRead: new FormControl(false),\n      catalogWrite: new FormControl(false),\n      catalogDelete: new FormControl(false),\n      systemRead: new FormControl(false),\n      systemWrite: new FormControl(false),\n      systemDelete: new FormControl(false),\n      clientRead: new FormControl(false),\n      clientWrite: new FormControl(false),\n      clientDelete: new FormControl(false),\n      filmRead: new FormControl(false),\n      filmWrite: new FormControl(false),\n      filmDelete: new FormControl(false),\n      producerRead: new FormControl(false),\n      producerWrite: new FormControl(false),\n      producerDelete: new FormControl(false)\n\n    })\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  onAddUser() {\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        this.info.showErrorAdd(\"użytkownika\") \n      },\n      complete: () => { }\n    })\n  }\n\n}\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Użytkownik</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formUser\">\n\n        <div style=\"width: 400px;\">\n            <div class=\"form-group row\">\n                <label for=\"name\" class=\"col-sm-3 col-form-label\">Imię Nazwisko</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('name')\" autofocus type=\"text\" id=\"name\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                        placeholder=\"Imię Nazwisko\" required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('name').hasError('required') && formUser.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"username\" class=\"col-sm-3 col-form-label\">Login</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('username')\" type=\"text\" id=\"username\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Login\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('username').hasError('required') && formUser.get('username').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"password\" class=\"col-sm-3 col-form-label\">Hasło</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"password\" pPassword [formControl]=\"formUser.get('password')\" id=\"password\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\"\n                        required autocomplete=\"off\" />\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('password').hasError('required') && formUser.get('password').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"active\" class=\"col-sm-3 col-form-label\">Aktywny</label>\n                <div class=\"col-sm-9\">\n                    <mat-slide-toggle [formControl]=\"formUser.get('active')\" [color]=\"color\" [checked]=\"true\">\n                        Aktywny\n                    </mat-slide-toggle>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"roles\" class=\"col-sm-3 col-form-label\">Role</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('role')\" type=\"text\" id=\"roles\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Role\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('role').hasError('required') && formUser.get('role').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <p><b>Katalog</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Systemy</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Klient</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Okleina</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Producent</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formUser.invalid\" pButton pRipple type=\"button\" (click)=\"onAddUser()\"\n        matTooltip=\"Dodaj użytkownika\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"></button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['users']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-users\"></i>\n                            <p class=\"card-text w-100 text-right\">Użytkownicy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['mojafirma']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-home\"></i>\n                            <p class=\"card-text w-100 text-right\">Moje Firmy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/_class/user';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.scss']\n})\nexport class FormPasswordComponent implements OnInit {\n\n  formPassword: FormGroup;\n  \n  constructor(\n    public dialogRef: MatDialogRef<FormPasswordComponent>, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group({\n      password: ['', { validators: Validators.required}],\n      confirmPassword: ['', { validators: Validators.required}]\n    },{validator: AppValidators.nomatch('password','confirmPassword')})\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  onChangePass(){\n    this.settingService.changePassword(this.user.id,this.formPassword.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"hasło użytkownika\");\n        this.dialogRef.close();\n      },\n      error:(err) =>{ this.info.showErrorUpdate(\"hasło użytkownika\");},\n      complete: () =>{}\n    })\n  }\n\n}\n","<div>\n    <h5>Zmiana hasła dla użytkownika {{ user.name }}</h5>\n</div>\n<hr>\n<form [formGroup]=\"formPassword\">\n    <div class=\"form-group row\">\n        <label for=\"password\" class=\"col-sm-3 col-form-label\">Hasło</label>\n        <div class=\"col-sm-9\">\n            <input type=\"password\" pPassword [formControl]=\"formPassword.get('password')\" id=\"password\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\" required\n                autocomplete=\"off\" />\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('password').hasError('required') && formPassword.get('password').touched\">\n                musi być wypełnione\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"confirmPassword\" class=\"col-sm-3 col-form-label\">Powtórz hasło</label>\n        <div class=\"col-sm-9\">\n            <input type=\"password\" pPassword [formControl]=\"formPassword.get('confirmPassword')\" id=\"confirmPassword\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\" required\n                autocomplete=\"off\" />\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('confirmPassword').hasError('required') && formPassword.get('confirmPassword').touched\">\n                musi być wypełnione\n            </p>\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('confirmPassword').hasError('nomatch') && formPassword.get('confirmPassword').touched\">\n                hasła muszą być identyczne\n            </p>\n        </div>\n    </div>\n\n</form>\n<hr>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie\" matTooltipClass=\"tooltip-red\" type=\"button\" pButton\n        icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formPassword.invalid\" matTooltip=\"Zmień hasło\" matTooltipClass=\"tooltip-green\"\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onChangePass()\"\n        label=\"Zapisz\"></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormUsersComponent } from './form-users/form-users.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { FormPasswordComponent } from './form-password/form-password.component';\nimport { User } from 'src/app/_class/user';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUserupdateComponent } from './form-userupdate/form-userupdate.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(\n    private location: Location, \n    public dialog: MatDialog,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getUsers().subscribe({\n      next: (res) =>{\n          this.users = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: ()=> {\n      }\n      \n    })\n  }\n\n  yesNo(is){\n    return is? \"TAK\" : \"NIE\";\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormUsersComponent, {\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n  openDialogUpdate(usr): void {\n    const dialogRef = this.dialog.open(FormUserupdateComponent, {\n      data: usr,\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialog.open(FormPasswordComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog pass was closed');\n    });\n  }\n\n  onDeleteUser(user: User){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ user.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.settingService.deleteUser(user.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"użytkownia\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"użytkownika\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class=\"row mb-2 ml-0\">\n    <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n</div>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n            <button class=\"w-100\" mat-raised-button color=\"primary\" (click)=\"openDialogAdd()\">Dodaj\n                użytkownika</button>\n        </div>\n    </div>\n    <div class=\"col-10\">\n        <div class=\"row\">\n            <p-table #us [value]=\"users\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['username']\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Użytkownicy</span></div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"us.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" class=\"p-inputtext\" />\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 40px;\">ID</th>\n                        <th style=\"width: 120px;\">Login</th>\n                        <th style=\"width: 120px;\">Imie Nazwisko</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Aktywny\">Akt.</th>\n                        <th style=\"width: 120px;\">Role</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Odczyt\">Kat. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Zapis\">Kat. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Usuwanie\">Kat. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"System Odczyt\">Sys. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"System Zapis\">Sys. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"System Usuwanie\">Sys. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Odczyt\">Kl. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Zapis\">Kl. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Usuwanie\">Kl. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Odczyt\">Okl. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Zapis\">Okl. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Usuwanie\">Okl. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Odczyt\">Prod. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Zapis\">Prod. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Usuwanie\">Prod. U.</th>\n\n                        <th style=\"width: 120px;\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData>\n                    <tr>\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.username}}\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            {{yesNo(rowData.active)}}\n                        </td>\n                        <td>\n                            {{rowData.role}}\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogRead\">\n                                {{yesNo(rowData.catalogRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogWrite\">\n                                {{yesNo(rowData.catalogWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogDelete\">\n                                {{yesNo(rowData.catalogDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemRead\">\n                                {{yesNo(rowData.systemRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemWrite\">\n                                {{yesNo(rowData.systemWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemDelete\">\n                                {{yesNo(rowData.systemDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientRead\">\n                                {{yesNo(rowData.clientRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientWrite\">\n                                {{yesNo(rowData.clientWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientDelete\">\n                                {{yesNo(rowData.clientDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmRead\">\n                                {{yesNo(rowData.filmRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmWrite\">\n                                {{yesNo(rowData.filmWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmDelete\">\n                                {{yesNo(rowData.filmDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerRead\">\n                                {{yesNo(rowData.producerRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerWrite\">\n                                {{yesNo(rowData.producerWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerDelete\">\n                                {{yesNo(rowData.producerDelete)}}</span>\n                        </td>\n\n                        <td style=\"text-align:center\">\n                            <button matTooltip=\"Edycja Użytkownika\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-pencil\" class=\"ui-button-info edit-button\"\n                                (click)=\"openDialogUpdate(rowData)\"></button>\n                            <button matTooltip=\"Zmiana hasła\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-key\" class=\"ml-1 ui-button-info edit-button\"\n                                (click)=\"openDialogChangePass(rowData)\"></button>\n                            <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-times\" class=\"ml-1 ui-button-info remove-button\"\n                                (click)=\"onDeleteUser(rowData)\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-mycompany',\n  templateUrl: './form-mycompany.component.html',\n  styleUrls: ['./form-mycompany.component.scss']\n})\nexport class FormMycompanyComponent implements OnInit {\n\n  formMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormMycompanyComponent>,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit(): void {\n    this.formMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.myCompanyExists], updateOn: 'blur' }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]}),\n      logoLink: new FormControl(''),\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddMyCompany(){\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n          this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n","<form [formGroup]=\"formMyCompany\">\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nazwa</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('name')\" autofocus type=\"text\" id=\"name\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa firmy\"\r\n                required autocomplete=\"off\" autofocus>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('name').hasError('required') && formMyCompany.get('name').touched\">\r\n                musi być wypełnione\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"nip\" class=\"col-sm-3 col-form-label\">NIP</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('nip')\" type=\"text\" id=\"nip\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"NIP\" required\r\n                autocomplete=\"off\">\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('required') && formMyCompany.get('nip').touched\">\r\n                musi być wypełnione\r\n            </p>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('nipFormat') && formMyCompany.get('nip').touched\">\r\n                niepoprawny nip\r\n            </p>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('mycompanyExists') && formMyCompany.get('nip').touched\">\r\n                ten numer znajduje się na liście\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"regon\" class=\"col-sm-3 col-form-label\">REGON</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('regon')\" type=\"text\" id=\"regon\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"REGON\"\r\n                autocomplete=\"off\">\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('regon').hasError('regonFormat') && formMyCompany.get('regon').touched\">\r\n                niepoprawny regon\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"contactemail\" class=\"col-sm-3 col-form-label\">EMAIL główny</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('contactemail')\" type=\"text\" id=\"contactemail\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\r\n                placeholder=\"Adres email głowny\" autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('contactemail').hasError('contactemail') && formMyCompany.get('contactemail').touched\">\r\n            niepoprawny email\r\n        </p>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"fvemail\" class=\"col-sm-3 col-form-label\">EMAIL faktura</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('fvemail')\" type=\"text\" id=\"fvemail\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Adres fv email\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('fvemail').hasError('fvemail') && formMyCompany.get('fvemail').touched\">\r\n            niepoprawny email\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"phonenumber\" class=\"col-sm-3 col-form-label\">Numer telefonu</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('phonenumber')\" type=\"text\" id=\"phonenumber\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"numer tel.\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('phonenumber').hasError('minLength') && formMyCompany.get('phonenumber').touched\">\r\n            niepoprawny numer telefonu\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"logoLink\" class=\"col-sm-3 col-form-label\">Logo link</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('logoLink')\" type=\"text\" id=\"logoLink\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link do loga firmy\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n<hr>\r\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\r\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\r\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\r\n    <button [disabled]=\"formMyCompany.invalid\" matTooltip=\"Dodaj firmę\" matTooltipClass=\"tooltip-green\"\r\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onAddMyCompany()\"\r\n        label=\"Zapisz\"></button>\r\n</div>"],"sourceRoot":"webpack:///"}