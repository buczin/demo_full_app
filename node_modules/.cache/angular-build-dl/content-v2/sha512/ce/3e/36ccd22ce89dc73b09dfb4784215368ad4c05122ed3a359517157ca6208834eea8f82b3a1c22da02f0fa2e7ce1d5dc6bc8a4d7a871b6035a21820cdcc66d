{"version":3,"sources":["src/app/contractor/client-add-form/client-add-form.component.html","src/app/contractor/client-main/client-main.component.html","src/app/contractor/client-add-form/client-add-form.component.scss","src/app/contractor/client-add-form/client-add-form.component.ts","src/app/contractor/client-main/client-main.component.scss","src/app/contractor/client-main/client-main.component.ts","src/app/contractor/client-service/client.service.ts","src/app/contractor/contractor-routing.module.ts","src/app/contractor/contractor.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"sb-dialog-titlebar\\\">\\n    <span class=\\\"\\\">Nowy Klient</span>\\n</div>\\n<div class=\\\"sb-dialog-content\\\">\\n\\n    <form class=\\\"m-4\\\" [formGroup]=\\\"formClient\\\">\\n\\n        <div class=\\\"form-group row mb-4\\\">\\n            <div class=\\\"col\\\">\\n                <label class=\\\"sb-small-label\\\" for=\\\"name\\\">Nazwa</label>\\n                <input [formControl]=\\\"formClient.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                    class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                    placeholder=\\\"Nazwa Klienta\\\" required autocomplete=\\\"off\\\">\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('name').hasError('required') && formClient.get('name').touched\\\">\\n                    musi być wypełnione\\n                </p>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row mb-4\\\">\\n            <div class=\\\"col\\\">\\n                <label class=\\\"sb-small-label\\\" for=\\\"nip\\\">NIP</label>\\n                <input [formControl]=\\\"formClient.get('nip')\\\" type=\\\"text\\\" id=\\\"nip\\\"\\n                    class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"NIP\\\"\\n                    required autocomplete=\\\"off\\\">\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('nip').hasError('required') && formClient.get('nip').touched\\\">\\n                    musi być wypełnione\\n                </p>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('nip').hasError('nipFormat') && formClient.get('nip').touched\\\">\\n                    niepoprawny nip\\n                </p>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('nip').hasError('nipExists') && formClient.get('nip').touched\\\">\\n                    ten numer znajduje się na liście\\n                </p>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row mb-4\\\">\\n            <div class=\\\"col\\\">\\n                <label class=\\\"sb-small-label\\\" for=\\\"regon\\\">REGON</label>\\n\\n                <input [formControl]=\\\"formClient.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\n                    class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\n                    autocomplete=\\\"off\\\">\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('regon').hasError('regonFormat') && formClient.get('regon').touched\\\">\\n                    niepoprawny regon\\n                </p>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row mb-4\\\">\\n            <div class=\\\"col\\\">\\n                <label class=\\\"sb-small-label\\\" for=\\\"email\\\">EMAIL</label>\\n                <input [formControl]=\\\"formClient.get('email')\\\" type=\\\"text\\\" id=\\\"email\\\"\\n                    class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Adres email\\\"\\n                    autocomplete=\\\"off\\\">\\n            </div>\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formClient.get('email').hasError('email') && formClient.get('email').touched\\\">\\n                niepoprawny email\\n            </p>\\n        </div>\\n\\n        <div class=\\\"form-group row mb-4\\\">\\n            <div class=\\\"col\\\">\\n                <label class=\\\"sb-small-label\\\" for=\\\"phonenumber\\\">Numer telefonu</label>\\n                <input [formControl]=\\\"formClient.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\n                    class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"numer tel.\\\"\\n                    autocomplete=\\\"off\\\">\\n            </div>\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formClient.get('phonenumber').hasError('minLength') && formClient.get('phonenumber').touched\\\">\\n                niepoprawny numer telefonu\\n            </p>\\n        </div>\\n    </form>\\n</div>\\n\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formClient.invalid\\\" matTooltip=\\\"Dodaj klienta\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddNewClient()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n        <div class=\\\"card card-stats\\\">\\n            <div class=\\\"card-body \\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5 col-md-4\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <span class=\\\"material-icons icon-big\\\">face</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-7 col-md-8\\\">\\n                        <div class=\\\"numbers\\\">\\n                            <p class=\\\"card-category\\\">Kontrahenci</p>\\n                            <p class=\\\"card-title\\\">{{clientCount}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer \\\">\\n                <hr>\\n                <div class=\\\"stats-bar\\\">\\n                    <div class=\\\"stats\\\">\\n                        <mat-icon class=\\\"fo-small-icon\\\">calculate</mat-icon><span class=\\\"fo-text\\\">Ilość</span>\\n                    </div>\\n                    <div class=\\\"stats-bar-button\\\">\\n                        <button (click)=\\\"showDialogToAddClient()\\\" matTooltip=\\\"Dodanie nowego kontrahenta\\\"\\n                            matTooltipClass=\\\"tooltip-red\\\"\\n                            class=\\\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\\\"\\n                            icon=\\\"pi pi-pencil\\\" pbutton=\\\"\\\" piniteditablerow=\\\"\\\" type=\\\"button\\\"\\n                            ng-reflect-icon=\\\"pi pi-pencil\\\"><span aria-hidden=\\\"true\\\"\\n                                class=\\\"ui-button-icon-left ui-clickable pi pi-plus\\\"></span>\\n                            <span aria-hidden=\\\"true\\\" class=\\\"ui-button-text ui-clickable\\\">ui-btn</span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <p-table #ct [value]=\\\"client\\\" [loading]=\\\"loading\\\" dataKey=\\\"id\\\" editMode=\\\"row\\\" sortMode=\\\"multiple\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [rowsPerPageOptions]=\\\"[10,20,50]\\\" [showCurrentPageReport]=\\\"true\\\"\\n        currentPageReportTemplate=\\\"{first} do {last} z {totalRecords}\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['name','nip','regon','email','phonenumber']\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                Lista Kontrahentów\\n                <div class=\\\"ui-table-globalfilter-container\\\">\\n                    <input pInputText type=\\\"text\\\" (input)=\\\"ct.filterGlobal($event.target.value, 'contains')\\\" placeholder=\\\"Wyszukiwarka\\\" />\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th pSortableColumn=\\\"name\\\">Nazwa<p-sortIcon field=\\\"name\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"nip\\\">NIP<p-sortIcon field=\\\"nip\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"regon\\\">REGON<p-sortIcon field=\\\"regon\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"email\\\">EMAIL<p-sortIcon field=\\\"email\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"phonenumber\\\">TEL.<p-sortIcon field=\\\"phonenumber\\\"></p-sortIcon></th>\\n                    <th style=\\\"width:8em\\\"></th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\n                <tr [pEditableRow]=\\\"rowData\\\">\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.name\\\" required>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.name}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n                    <td>\\n                        {{rowData.nip}}\\n                    </td>\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.regon\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.regon}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.email\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.email}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.phonenumber\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.phonenumber}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n\\n                    <td style=\\\"text-align:center\\\">\\n                        <button matTooltip=\\\"Edycja Kontrahenta\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"!editing && !err\\\"\\n                            pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                            (click)=\\\"onRowEditInit(rowData)\\\"></button>\\n                            <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\"\\n                            *ngIf=\\\"!editing && !err && auth.isAdmin\\\" pButton type=\\\"button\\\"\\n                            icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                            (click)=\\\"onRowDeleteClient(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Zapisz Kontrahenta\\\" matTooltipClass=\\\"tooltip-green\\\" *ngIf=\\\"editing\\\" pButton\\n                            type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\"\\n                            style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Anuluj\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"editing\\\" pButton type=\\\"button\\\"\\n                            pCancelEditableRow icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\"\\n                            (click)=\\\"onRowEditCancel(rowData, ri)\\\"></button>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"emptymessage\\\">\\n                <tr>\\n                    <td colspan=\\\"6\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n\\n    </div>\\n\\n</div>\\n\"","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vQzpcXFVzZXJzXFxTeWx3ZWtcXERlc2t0b3BcXGJtL3NyY1xcYXBwXFxjb250cmFjdG9yXFxjbGllbnQtYWRkLWZvcm1cXGNsaWVudC1hZGQtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ClientService } from '../client-service/client.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n\n  formClient: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<ClientAddFormComponent>,\n    private clientService: ClientService, \n    private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.clientExists], updateOn: 'blur' }),\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      email: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern('[0-9]')]})\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddNewClient() {\n    \n    this.clientService.addClient(this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"klienta\");\n          this.onNoClick();\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"klienta\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0b3IvY2xpZW50LW1haW4vY2xpZW50LW1haW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { MessageService, SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ClientAddFormComponent } from '../client-add-form/client-add-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.scss']\n})\nexport class ClientMainComponent implements OnInit {\n  \n  client: Client[] = [];\n\n  onErr: Client =\n    {\n      id: 0,\n      name: \"---\",\n      nip: \"---\",\n      regon: \"---\",\n      email: \"---\",\n      phonenumber: \"---\"\n    };\n  clientCount:number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client; } = {};\n  loading=false;\n\n  constructor(\n    public dialog: MatDialog,\n    private auth:AuthService,\n    private clientService: ClientService, \n    private infoPopup: InfoPopupComponent, \n    private messageService: MessageService, \n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData(){\n    this.loading=true;\n    this.clientService.getClients().subscribe(\n      {\n        next: (res) => {\n          this.client = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.showErrorDownload()\n          this.err = true;\n          this.client.push(this.onErr);\n        },\n        complete: () => {\n          this.loading=false;\n        }\n      }\n    )\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res\n      },\n      error: (err) => {\n        this.showErrorCount(\"klientów\")\n      },\n      complete: () => {\n      }\n    })\n\n\n  }\n\n  showDialogToAddClient() {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      width: '450px',\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog client add was closed');\n    });\n  }\n\n\n  showSuccess() {\n    this.messageService.add({ severity: 'success', summary: 'Edycja Klienta', detail: 'Poprawnie Zaktualizowano Klienta' });\n  }\n  showError() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się zaktualizować klienta' });\n  }\n\n  showErrorCount(what: String) {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać ilości ' + what });\n  }\n\n  showErrorDownload() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać listy klientów. Proszę odświeżyć stronę' });\n  }\n\n  clear() {\n    this.messageService.clear();\n  }\n\n  onRowEditInit(client: Client) {\n    this.clonedclients[client.id] = { ...client };\n  }\n\n  onRowEditSave(client: Client) {\n    \n    this.clientService.updateClient(client.id, client).subscribe(\n      {\n        next: (res) => {\n          \n          this.showSuccess();\n        },\n        error: (err) => {\n          \n          this.showError()\n        },\n        complete: () => {\n          delete this.clonedclients[client.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteClient(client: Client) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ client.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.clientService.deleteClient(client.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"klienta\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"klient\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancel(client: Client, index: number) {\n    this.client[index] = this.clonedclients[client.id];\n    delete this.clonedclients[client.id];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Client {\n  id?: number;\n  name?: String;\n  nip?: String;\n  regon?: String;\n  email?: String;\n  phonenumber?: String;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  deleteClient(id) {\n    return this.http.delete(\"api/client/\" + id, { responseType: 'text' });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\nimport { MatDialogModule } from '@angular/material/dialog';\n\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    MatDialogModule\n  ],\n  providers: [MessageService],\n  entryComponents:[ClientAddFormComponent]\n})\nexport class ContractorModule { }\n"],"sourceRoot":"webpack:///","file":"contractor-contractor-module-es5.js"}