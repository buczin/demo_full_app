{"version":3,"sources":["src/app/films/film-service/films.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SelectItem } from 'primeng/api';\n\n\nexport enum OkleinaEnum {\n  DOSTEPNA = \"DOSTEPNA\",\n  NIEDOSTEPNA = \"NIEDOSTEPNA\"\n}\n\nexport interface Okleina {\n  id?: number;\n  number?: string;\n  name?: string;\n  producer?: string;\n  ecoPlastNumber?: string;\n  ralNumber?: string;\n  imgLink?: string;\n  status?: OkleinaEnum;\n}\n\nexport interface Producent {\n  id?: number;\n  producerName?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  public allFilms: Okleina[];\n  public producers: Producent[] = [];\n  public producersSelect: SelectItem[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  loadProducersSelect(){\n    console.log(\"Load producers in service\");\n    this.producersSelect = [];\n    this.getProducers().subscribe({\n      next: (res) => {\n        res.forEach(element => {\n          this.producers = res;\n          let el: SelectItem = {label:element.producerName,value:element}\n          this.producersSelect.push(el);\n        });\n      },\n      error: (err) => {\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  getOklieny(): Observable<Okleina[]> {\n    return this.http.get<Okleina[]>(\"api/films\");\n  }\n  getOklina(id): Observable<Okleina> {\n    return this.http.get<Okleina>(\"api/film/\" + id);\n  }\n  getCountOkleina(): Observable<number> {\n    return this.http.get<number>(\"api/film/count\");\n  }\n  addOklina(data): Observable<Okleina> {\n    return this.http.post<Okleina>(\"api/film\", data);\n  }\n  updateOkleina(id, data): Observable<Okleina> {\n    return this.http.put<Okleina>(\"api/film/\" + id, data);\n  }\n  deleteOklina(id) {\n    return this.http.delete(\"api/film/\" + id, { responseType: 'text' });\n  }\n\n  // PRODUCERS\n\n  getProducers(): Observable<Producent[]> {\n    return this.http.get<Producent[]>(\"api/film/producers\");\n  }\n  getProducer(id): Observable<Producent> {\n    return this.http.get<Producent>(\"api/film/producer/\" + id);\n  }\n  getCountProducer(): Observable<number> {\n    return this.http.get<number>(\"api/film/producer/count\");\n  }\n  addProducer(data): Observable<Producent> {\n    return this.http.post<Producent>(\"api/film/producer\", data);\n  }\n  updateProducer(id, data): Observable<Producent> {\n    return this.http.put<Producent>(\"api/film/producer/\" + id, data);\n  }\n  deleteProducer(id) {\n    return this.http.delete(\"api/film/producer/\" + id, { responseType: 'text' });\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}