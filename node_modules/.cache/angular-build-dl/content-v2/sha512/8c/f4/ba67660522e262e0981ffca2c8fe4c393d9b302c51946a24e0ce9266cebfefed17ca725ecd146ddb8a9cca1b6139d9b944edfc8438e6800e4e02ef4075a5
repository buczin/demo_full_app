{"version":3,"sources":["webpack:///src/app/settings/mycompany/mycompany.component.ts","webpack:///src/app/settings/mycompany/mycompany.component.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/offer-param/offer-param.component.ts","webpack:///src/app/settings/offer-param/offer-param.component.html","webpack:///src/app/settings/users/form-users/form-users.component.ts","webpack:///src/app/settings/users/form-users/form-users.component.html","webpack:///src/app/settings/settings-main/settings-main.component.ts","webpack:///src/app/settings/settings-main/settings-main.component.html","webpack:///src/app/settings/users/form-password/form-password.component.ts","webpack:///src/app/settings/users/form-password/form-password.component.html","webpack:///src/app/settings/users/users.component.ts","webpack:///src/app/settings/users/users.component.html","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.html"],"names":["MycompanyComponent","location","dialogService","settingService","infoPopup","confirmationService","loadData","getMyCompanies","subscribe","next","res","mycompanies","error","err","showErrorDownload","complete","dialogRef","open","header","width","onClose","console","log","rowData","data","back","company","confirm","message","name","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteMyCompany","id","showSuccessDelete","showErrorDelete","backClicked","openDialogAddCompany","selector","templateUrl","styleUrls","routes","path","component","SettingsRoutingModule","forChild","imports","exports","SettingsModule","declarations","providers","OfferParamComponent","loadingSaveHelper","displayFormExchange","displayFormSetCost","displayFormSetUpCost","displayFormPrintText","displayFormChangeColor","displayCostsRange","helpers","formHelpers","exchangeRateAlu","exchangeRatePcv","defaultClientSetUpCost","defaultSetCost","defaultPrintTextHeader","defaultPrintTextTableFotter","defaultCostChangeColor","default_helper_pcv_mEasyTo50","default_helper_pcv_mEasyTo150","default_helper_pcv_mEasyTo500","default_helper_pcv_mEasyAbove500","default_helper_pcv_mHardTo50","default_helper_pcv_mHardTo150","default_helper_pcv_mHardTo500","default_helper_pcv_mHardAbove500","default_helper_alu_mEasyTo50","default_helper_alu_mEasyTo150","default_helper_alu_mEasyTo500","default_helper_alu_mEasyAbove500","default_helper_alu_mHardTo50","default_helper_alu_mHardTo150","default_helper_alu_mHardTo500","default_helper_alu_mHardAbove500","getHelpers","patchValue","value","updateHelpersCostsRange","exit","updateHelpersExchange","updateHelpersSetCost","updateHelpersSetUpCost","updatePrintText","updateHelpersColorChange","updateHelpersPrintText","updateCostsRange","FormUsersComponent","ref","config","info","loading","user","formUser","validators","required","username","active","role","catalogRead","catalogWrite","catalogDelete","systemRead","systemWrite","systemDelete","clientRead","clientWrite","clientDelete","filmRead","filmWrite","filmDelete","producerRead","producerWrite","producerDelete","offerRead","offerWrite","offerDelete","password","close","addUser","showSuccessAdd","showErrorAdd","updateUser","showSuccessUpdate","showErrorUpdate","SettingsMainComponent","FormPasswordComponent","fb","formPassword","group","confirmPassword","validator","nomatch","changePassword","onChangePass","UsersComponent","getUsers","users","is","usr","deleteUser","openDialogAddUser","FormMycompanyComponent","formMyCompany","shortName","shortId","nip","validatenip","regon","validateregon9","updateOn","fvemail","email","logoLink","www","phonenumber","minLength","phonenumber2","town","street","houseNumber","flatNumber","postalCode","province","country","asyncValidators","myCompanyExists","addMyCompany","updateMyCompany"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MyCompany, SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormMycompanyComponent } from './form-mycompany/form-mycompany.component';\nimport { Location } from '@angular/common';\nimport { ConfirmationService } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: MyCompany[];\n\n  constructor(\n    private location: Location,\n    public dialogService: DialogService,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) => {\n        this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\");\n      },\n      complete: () => {\n      }\n\n    })\n  }\n\n  openDialogAddCompany(): void {\n    const dialogRef = this.dialogService.open(FormMycompanyComponent, {\n      header: \"Nowa moja firma\",\n      width: '900px'\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogUpdateCompany(rowData): void {\n    const dialogRef = this.dialogService.open(FormMycompanyComponent, {\n      header: \"Aktualizacja mojej firmy\",\n      data: rowData,\n      width: '900px'\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog was closed');\n    });\n  }\n\n\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + company.name + '?',\n      header: 'Potwierdzenie',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"moja firma\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"moja firma\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-2 ml-0\">\n        <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n\n                    <button pButton type=\"button\" (click)=\"openDialogAddCompany()\" label=\"Dodaj firmę\"\n                    class=\"p-button-sm sb-button gray\"></button>\n            </div>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"row\">\n                <p-table #mc [value]=\"mycompanies\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['name']\" [resizableColumns]=\"true\" columnResizeMode=\"expand\">\n                    <ng-template pTemplate=\"caption\">\n                        Moje Firmy\n                        <div class=\"ui-table-globalfilter-container\">\n                            <input pInputText type=\"text\" (input)=\"mc.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 40px;\">ID</th>\n                            <th pResizableColumn>Nazwa</th>\n                            <th pResizableColumn>Identyfikator</th>\n                            <th pResizableColumn>NIP</th>\n                            <th pResizableColumn>REGON</th>\n                            <th pResizableColumn>Email firmy</th>\n                            <th pResizableColumn>Email FV</th>\n                            <th pResizableColumn>Nr. Tel.</th>\n                            <th pResizableColumn>Logo</th>\n                            <th pResizableColumn>www</th>\n                            <th style=\"width:8em\"></th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData>\n                        <tr>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.id}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.name}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.shortId}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.nip}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.regon}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.email}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.fvemail}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.phonenumber}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.logoLink}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.www}}\n                            </td>\n\n                            <td class=\"edit-col\">\n\n                                <button pButton pRipple type=\"button\" (click)=\"openDialogUpdateCompany(rowData)\"\n                                    icon=\"pi pi-pencil\" class=\"p-button-sm sb-button blue\" pTooltip=\"Edycja firmy\"></button>\n    \n                                <button pButton pRipple type=\"button\" (click)=\"onDeleteMyCompant(rowData)\" icon=\"pi pi-trash\"\n                                    class=\"p-button-sm ml-1 sb-button red\" pTooltip=\"Usuwanie\"></button>\n    \n                            </td>\n                           \n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"8\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { OfferParamComponent } from './offer-param/offer-param.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n  { path: 'parametry-oferty', component: OfferParamComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { FormMycompanyComponent } from './mycompany/form-mycompany/form-mycompany.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormUsersComponent } from './users/form-users/form-users.component';\nimport {PasswordModule} from 'primeng/password';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { FormPasswordComponent } from './users/form-password/form-password.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport {KeyFilterModule} from 'primeng/keyfilter';\nimport { OfferParamComponent } from './offer-param/offer-param.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { CalendarModule } from 'primeng/calendar';\nimport { CardModule } from 'primeng/card';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DragDropModule } from 'primeng/dragdrop';\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { EditorModule } from 'primeng/editor';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { StepsModule } from 'primeng/steps';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { TreeTableModule } from 'primeng/treetable';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {ToggleButtonModule} from 'primeng/togglebutton';\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent, FormMycompanyComponent, FormUsersComponent, FormPasswordComponent, OfferParamComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatButtonModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    CalendarModule,\n    MultiSelectModule,\n    EditorModule,\n    TreeTableModule,\n    RadioButtonModule,\n    AutoCompleteModule,\n    MatAutocompleteModule,\n    ContextMenuModule,\n    ConfirmDialogModule,\n    CheckboxModule,\n    ProgressBarModule,\n    InputTextModule,\n    RippleModule,\n    FileUploadModule,\n    StepsModule,\n    DragDropModule,\n    CardModule,\n    InputNumberModule,\n    DynamicDialogModule,\n    TooltipModule,\n    KeyFilterModule,\n    ProgressSpinnerModule,\n    InputTextareaModule,\n    ToggleButtonModule\n  ],\n  providers:[DialogService]\n})\nexport class SettingsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { OfferHelpers, SettingsService } from '../settings.service';\nimport { Location } from '@angular/common';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-offer-param',\n  templateUrl: './offer-param.component.html',\n  styleUrls: ['./offer-param.component.scss']\n})\nexport class OfferParamComponent implements OnInit {\n\n  helpers: OfferHelpers;\n\n  loadingSaveHelper = false;\n  displayFormExchange = false;\n  displayFormSetCost = false;\n  displayFormSetUpCost = false;\n  displayFormPrintText = false;\n  displayFormChangeColor = false;\n  displayCostsRange = false;\n  formHelpers: FormGroup;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService,\n    private location: Location,\n    private settingService: SettingsService\n  ) {\n    console.log(this.helpers);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  loadData() {\n    this.loadingSaveHelper = true;\n\n    this.formHelpers = new FormGroup({\n      id: new FormControl(''),\n      exchangeRateAlu: new FormControl(''),\n      exchangeRatePcv: new FormControl(''),\n      defaultClientSetUpCost: new FormControl(''),\n      defaultSetCost: new FormControl(''),\n      defaultPrintTextHeader: new FormControl(''),\n      defaultPrintTextTableFotter: new FormControl(''),\n      defaultCostChangeColor: new FormControl(''),\n\n      default_helper_pcv_mEasyTo50: new FormControl(''),\n      default_helper_pcv_mEasyTo150: new FormControl(''),\n      default_helper_pcv_mEasyTo500: new FormControl(''),\n      default_helper_pcv_mEasyAbove500: new FormControl(''),\n      default_helper_pcv_mHardTo50: new FormControl(''),\n      default_helper_pcv_mHardTo150: new FormControl(''),\n      default_helper_pcv_mHardTo500: new FormControl(''),\n      default_helper_pcv_mHardAbove500: new FormControl(''),\n\n      default_helper_alu_mEasyTo50: new FormControl(''),\n      default_helper_alu_mEasyTo150: new FormControl(''),\n      default_helper_alu_mEasyTo500: new FormControl(''),\n      default_helper_alu_mEasyAbove500: new FormControl(''),\n      default_helper_alu_mHardTo50: new FormControl(''),\n      default_helper_alu_mHardTo150: new FormControl(''),\n      default_helper_alu_mHardTo500: new FormControl(''),\n      default_helper_alu_mHardAbove500: new FormControl('')\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helpers = res[0];\n        if (this.helpers) {\n          this.formHelpers.patchValue(this.helpers);\n        }\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n\n  }\n\n  updateCostsRange() {\n    console.log(this.formHelpers.value)\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersCostsRange(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n\n  updateHelpersExchange() {\n    console.log(this.formHelpers.value)\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersExchange(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n\n  updateHelpersSetCost() {\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersSetCost(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  updateHelpersSetUpCost() {\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersSetUpCost(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  updateHelpersPrintText() {\n    this.loadingSaveHelper = true;\n    this.settingService.updatePrintText(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  updateHelpersColorChange() {\n    console.log(\"test\");\n    console.log(this.formHelpers.value)\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersColorChange(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  exit() {\n    this.displayFormExchange = false;\n    this.displayFormSetCost = false;\n    this.displayFormSetUpCost = false;\n    this.displayFormPrintText = false;\n    this.displayFormChangeColor = false;\n    this.displayCostsRange = false;\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-2 ml-0\">\n        <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n    </div>\n    <div class=\"row pt-4\">\n        <div class=\"col\">\n            <h4>Aktualny kurs alu:</h4>\n            <h1>{{ helpers ? (helpers.exchangeRateAlu | number: '1.2-2') : \"-\" }}</h1>\n            <h4>Aktualny kurs pcv:</h4>\n            <h1>{{ helpers ? (helpers.exchangeRatePcv | number: '1.2-2') : \"-\" }}</h1>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormExchange = !displayFormExchange\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana kursu\"></button>\n        </div>\n        <div class=\"col\">\n            <h4>Domyślny koszt ustawienia</h4>\n            <h1>{{ helpers ? (helpers.defaultClientSetUpCost | number: '1.2-2') : \"-\" }}</h1>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormSetUpCost = !displayFormSetUpCost\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana kosztu ustawienia\"></button>\n        </div>\n        <div class=\"col\">\n            <h4>Domyślny koszt pakietu/kompletu</h4>\n            <h1>{{ helpers ? (helpers.defaultSetCost | number: '1.2-2') : \"-\" }}</h1>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormSetCost = !displayFormSetCost\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana ceny pakietu\"></button>\n        </div>\n        <div class=\"col\">\n            <h4>Domyślny koszt zmiany koloru</h4>\n            <h1>{{ helpers ? (helpers.defaultCostChangeColor | number: '1.2-2') : \"-\" }}</h1>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormChangeColor = !displayFormChangeColor\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana kosztu zmiany koloru\"></button>\n        </div>\n    </div>\n    <div class=\"row pt-4\">\n        <div class=\"col\">\n            <h4>Domyślny tekst nagłówka oferty</h4>\n            <p *ngIf=\"helpers\" [innerHTML]=\"helpers.defaultPrintTextHeader\"></p>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormPrintText = !displayFormPrintText\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana tekstu\"></button>\n        </div>\n        <div class=\"col\">\n            <h4>Domyślny tekst opisu tabeli oferty</h4>\n            <p *ngIf=\"helpers\" [innerHTML]=\"helpers.defaultPrintTextTableFotter\"></p>\n\n            <button pButton pRipple type=\"button\" (click)=\"displayFormPrintText = !displayFormPrintText\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana tekstu\"></button>\n        </div>\n    </div>\n    <div class=\"row pt-4\">\n        <div class=\"col\">\n            <h4>Domyślne zakresy</h4>\n\n            <div class=\"stats-table\">\n                <table>\n                    <thead>\n                        <th class=\"text-left\">Metry</th>\n                        <th class=\"text-center\">Łatwe (PCV)</th>\n                        <th class=\"text-center\">Trudne (PCV)</th>\n                        <th class=\"text-center\">Łatwe (ALU)</th>\n                        <th class=\"text-center\">Trudne (ALU)</th>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td class=\"text-left\">0-50</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mEasyTo50}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mHardTo50}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mEasyTo50}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mHardTo50}}</td>\n                        </tr>\n                        <tr>\n                            <td class=\"text-left\">51-150</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mEasyTo150}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mHardTo150}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mEasyTo150}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mHardTo150}}</td>\n                        </tr>\n                        <tr>\n                            <td class=\"text-left\">151-500</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mEasyTo500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mHardTo500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mEasyTo500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mHardTo500}}</td>\n                        </tr>\n                        <tr>\n                            <td class=\"text-left\">pow. 500</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mEasyAbove500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_pcv_mHardAbove500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mEasyAbove500}}</td>\n                            <td class=\"text-center\">{{helpers?.default_helper_alu_mHardAbove500}}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n\n            <button pButton pRipple type=\"button\" (click)=\"displayCostsRange = !displayCostsRange\"\n                icon=\"pi pi-money-bill\" class=\"p-button-raised p-button-secondary m-1\" style=\"height: 28px;\"\n                pTooltip=\"Zmiana zakresów\"></button>\n        </div>\n    </div>\n</div>\n\n<p-dialog header=\"Aktualizacja kursu\" [(visible)]=\"displayFormExchange\" class=\"no-padding-dialog\">\n    <form [formGroup]=\"formHelpers\">\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4 d-flex justify-content-center\">\n                <label class=\"sb-small-label\" for=\"alu\">ALU</label>\n                <p-inputNumber inputId=\"alu\" [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                    [formControl]=\"formHelpers.get('exchangeRateAlu')\" [showButtons]=\"true\" [step]=\"0.1\">\n                </p-inputNumber>\n            </div>\n        </div>\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4 d-flex justify-content-center\">\n                <label class=\"sb-small-label\" for=\"pcv\">PCV</label>\n                <p-inputNumber inputId=\"pcv\" [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                    [formControl]=\"formHelpers.get('exchangeRatePcv')\" [showButtons]=\"true\" [step]=\"0.1\">\n                </p-inputNumber>\n            </div>\n        </div>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n            <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n                matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n                class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n            <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateHelpersExchange()\"\n                matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n                class=\"p-button-raised p-button-success p-button-sm\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </form>\n</p-dialog>\n\n<p-dialog header=\"Aktualizacja domyślnego kosztu kompletu/pakietu\" [(visible)]=\"displayFormSetCost\"\n    class=\"no-padding-dialog\">\n    <form [formGroup]=\"formHelpers\">\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4 d-flex justify-content-center\">\n                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                    [formControl]=\"formHelpers.get('defaultSetCost')\" [showButtons]=\"true\" [step]=\"0.1\">\n                </p-inputNumber>\n            </div>\n        </div>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n            <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n                matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n                class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n            <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateHelpersSetCost()\"\n                matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n                class=\"p-button-raised p-button-success p-button-sm\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </form>\n</p-dialog>\n\n<p-dialog header=\"Aktualizacja domyślnego kosztu ustawienia\" [(visible)]=\"displayFormSetUpCost\"\n    class=\"no-padding-dialog\">\n    <form [formGroup]=\"formHelpers\">\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4 d-flex justify-content-center\">\n                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                    [formControl]=\"formHelpers.get('defaultClientSetUpCost')\" [showButtons]=\"true\" [step]=\"0.1\">\n                </p-inputNumber>\n            </div>\n        </div>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n            <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n                matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n                class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n            <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateHelpersSetUpCost()\"\n                matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n                class=\"p-button-raised p-button-success p-button-sm\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </form>\n</p-dialog>\n\n<p-dialog header=\"Aktualizacja domyślnego kosztu zmiany koloru\" [(visible)]=\"displayFormChangeColor\"\n    class=\"no-padding-dialog\">\n    <form [formGroup]=\"formHelpers\">\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4 d-flex justify-content-center\">\n                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                    [formControl]=\"formHelpers.get('defaultCostChangeColor')\" [showButtons]=\"true\" [step]=\"0.1\">\n                </p-inputNumber>\n            </div>\n        </div>\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n            <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n                matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n                class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n            <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateHelpersColorChange()\"\n                matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n                class=\"p-button-raised p-button-success p-button-sm\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </form>\n</p-dialog>\n\n<p-dialog header=\"Aktualizacja domyślnego tekstu druku oferty\" [(visible)]=\"displayFormPrintText\"\n    class=\"no-padding-dialog\">\n    <form [formGroup]=\"formHelpers\">\n\n        <div class=\"row w-100 m-0\">\n            <div class=\"col p-4\">\n                <p>Nagłowek</p>\n                <p-editor [formControl]=\"formHelpers.get('defaultPrintTextHeader')\" [style]=\"{'height':'320px'}\">\n                </p-editor>\n            </div>\n\n            <div class=\"col p-4\">\n                <p>Opis pod tabelą</p>\n                <p-editor [formControl]=\"formHelpers.get('defaultPrintTextTableFotter')\" [style]=\"{'height':'320px'}\">\n                </p-editor>\n            </div>\n        </div>\n\n        <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n            <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n                matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n                class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n            <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateHelpersPrintText()\"\n                matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n                class=\"p-button-raised p-button-success p-button-sm\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </form>\n</p-dialog>\n\n<p-dialog header=\"Aktualizacja domyślnych zakresów\" [(visible)]=\"displayCostsRange\">\n    <div style=\"padding: 1rem;\">\n        <form [formGroup]=\"formHelpers\" class=\"sb-form\">\n            <div class=\"row\">\n                <div class=\"col helper-table\">\n                    <div class=\"text-center\" style=\"background-color: aquamarine;\">\n                        <span style=\"text-transform: uppercase; font-weight: bold;\">PCV</span>\n                    </div>\n\n                    <table style=\"margin: 0 auto;\">\n                        <thead>\n                            <th class=\"text-left\">Metry</th>\n                            <th class=\"text-center\">Łatwe</th>\n                            <th class=\"text-center\">Trudne</th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>0-50</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mEasyTo50')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mHardTo50')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>51-150</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mEasyTo150')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mHardTo150')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>151-500</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mEasyTo500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mHardTo500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>pow. 500</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mEasyAbove500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_pcv_mHardAbove500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col helper-table\">\n                    <div class=\"text-center mt-4\" style=\"background-color: aquamarine;\">\n                        <span style=\"text-transform: uppercase; font-weight: bold;\">ALU</span>\n                    </div>\n                    <table style=\"margin: 0 auto;\">\n                        <thead>\n                            <th class=\"text-left\">Metry</th>\n                            <th class=\"text-center\">Łatwe</th>\n                            <th class=\"text-center\">Trudne</th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td>0-50</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mEasyTo50')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mHardTo50')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>51-150</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mEasyTo150')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mHardTo150')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>151-500</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mEasyTo500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mHardTo500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>pow. 500</td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mEasyAbove500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                                <td>\n                                    <p-inputNumber mode=\"decimal\"\n                                        [formControl]=\"formHelpers.get('default_helper_alu_mHardAbove500')\"\n                                        [showButtons]=\"true\" [step]=\"0.1\">\n                                    </p-inputNumber>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </form>\n    </div>\n    <div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n        <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n            matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n            class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n        <button [disabled]=\"loadingSaveHelper\" pButton pRipple type=\"button\" (click)=\"updateCostsRange()\"\n            matTooltip=\"Aktualizuj\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n            class=\"p-button-raised p-button-success p-button-sm\">\n        </button>\n        <p-progressSpinner *ngIf=\"loadingSaveHelper\" [style]=\"{width: '25px', height: '25px'}\"\n            styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n\n</p-dialog>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ThemePalette } from '@angular/material/core';\nimport { User } from 'src/app/_class/user';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-form-users',\n  templateUrl: './form-users.component.html',\n  styleUrls: ['./form-users.component.scss']\n})\nexport class FormUsersComponent implements OnInit {\n\n  formUser: FormGroup;\n  user: User;\n  loading=false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent\n    ) {\n      this.user = config.data;\n     }\n\n  ngOnInit() {\n    if(this.user){\n      this.formUser = new FormGroup({\n        name: new FormControl('', { validators: Validators.required}),\n        username: new FormControl('', { validators: Validators.required}),\n        active: new FormControl(false),\n        role: new FormControl('', { validators: Validators.required}),\n        catalogRead: new FormControl(false),\n        catalogWrite: new FormControl(false),\n        catalogDelete: new FormControl(false),\n        systemRead: new FormControl(false),\n        systemWrite: new FormControl(false),\n        systemDelete: new FormControl(false),\n        clientRead: new FormControl(false),\n        clientWrite: new FormControl(false),\n        clientDelete: new FormControl(false),\n        filmRead: new FormControl(false),\n        filmWrite: new FormControl(false),\n        filmDelete: new FormControl(false),\n        producerRead: new FormControl(false),\n        producerWrite: new FormControl(false),\n        producerDelete: new FormControl(false),\n        offerRead: new FormControl(false),\n        offerWrite: new FormControl(false),\n        offerDelete: new FormControl(false)\n      });\n      this.formUser.patchValue(this.user);\n    }else{\n      this.formUser = new FormGroup({\n        name: new FormControl('', { validators: Validators.required}),\n        username: new FormControl('', { validators: Validators.required}),\n        password: new FormControl('', { validators: Validators.required}),\n        active: new FormControl(false),\n        role: new FormControl('', { validators: Validators.required}),\n  \n        catalogRead: new FormControl(false),\n        catalogWrite: new FormControl(false),\n        catalogDelete: new FormControl(false),\n        systemRead: new FormControl(false),\n        systemWrite: new FormControl(false),\n        systemDelete: new FormControl(false),\n        clientRead: new FormControl(false),\n        clientWrite: new FormControl(false),\n        clientDelete: new FormControl(false),\n        filmRead: new FormControl(false),\n        filmWrite: new FormControl(false),\n        filmDelete: new FormControl(false),\n        producerRead: new FormControl(false),\n        producerWrite: new FormControl(false),\n        producerDelete: new FormControl(false),\n        offerRead: new FormControl(false),\n        offerWrite: new FormControl(false),\n        offerDelete: new FormControl(false)\n      });\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addUser() {\n    this.loading=true;\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.loading=false;\n        this.ref.close(1);\n      },\n      error: (err) => { \n        this.info.showErrorAdd(\"użytkownika\");\n        this.loading=false;\n      },\n      complete: () => { }\n    })\n  }\n\n  updateUser() {\n    this.loading=true;\n    this.settingService.updateUser(this.user.id,this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"użytkownika\");\n        this.loading=false;\n        this.ref.close(1);\n      },\n      error: (err) => { \n        console.log(err);\n        this.info.showErrorUpdate(\"użytkownika\");\n        this.loading=false;\n      },\n      complete: () => {\n       }\n    })\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formUser\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"name\" class=\"sb-small-label\">Imię Nazwisko</label>\n                <input pInputText [formControl]=\"formUser.get('name')\" autofocus type=\"text\" id=\"name\" class=\"fullwidth\"\n                    placeholder=\"Imię Nazwisko\" required autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formUser.get('name').hasError('required') && formUser.get('name').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"username\" class=\"sb-small-label\">Login</label>\n                <input pInputText [formControl]=\"formUser.get('username')\" type=\"text\" id=\"username\" class=\"fullwidth\"\n                    placeholder=\"Login\" required autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formUser.get('username').hasError('required') && formUser.get('username').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div *ngIf=\"!user\" class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"password\" class=\"sb-small-label\">Hasło</label>\n                <input pPassword type=\"password\" [formControl]=\"formUser.get('password')\" id=\"password\"\n                    class=\"fullwidth\" placeholder=\"Hasło\" required autocomplete=\"off\" />\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formUser.get('password').hasError('required') && formUser.get('password').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <mat-slide-toggle [formControl]=\"formUser.get('active')\" [checked]=\"true\">\n                    Aktywny\n                </mat-slide-toggle>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"roles\" class=\"sb-small-label\">Role</label>\n                <input pInputText [formControl]=\"formUser.get('role')\" type=\"text\" id=\"roles\" class=\"fullwidth\" required\n                    autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formUser.get('role').hasError('required') && formUser.get('role').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class=\"row\">\n            \n            <div class=\"col\">\n                <p><b>Katalog</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('catalogRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"></p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n               <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('catalogWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"></p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('catalogDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\"></p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div> \n            </div>\n\n            <div class=\"col\">\n                <p><b>Systemy</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('systemRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('systemWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('systemDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Klient</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('clientRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('clientWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('clientDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Okleina</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('filmRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('filmWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('filmDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Producent</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('producerRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('producerWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('producerDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Oferty</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('offerRead')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('offerWrite')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton [formControl]=\"formUser.get('offerDelete')\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!user\" [disabled]=\"formUser.invalid || loading\" pButton pRipple type=\"button\" (click)=\"addUser()\"\n            pTooltip=\"Nowy użytkownik\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"user\" [disabled]=\"formUser.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateUser()\" pTooltip=\"Aktualizacja użytkownika\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['users']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-users\"></i>\n                            <p class=\"card-text w-100 text-right\">Użytkownicy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['mojafirma']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-home\"></i>\n                            <p class=\"card-text w-100 text-right\">Moje Firmy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['parametry-oferty']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-ticket\"></i>\n                            <p class=\"card-text w-100 text-right\">Parametry Oferty</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/_class/user';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.scss']\n})\nexport class FormPasswordComponent implements OnInit {\n\n  formPassword: FormGroup;\n  user: User;\n  loading=false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n    ) { \n      this.user = config.data;\n    }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group({\n      password: ['', { validators: Validators.required}],\n      confirmPassword: ['', { validators: Validators.required}]\n    },{validator: AppValidators.nomatch('password','confirmPassword')})\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  onChangePass(){\n    this.loading = true;\n    this.settingService.changePassword(this.user.id,this.formPassword.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"hasło użytkownika\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error:(err) =>{ \n        this.loading = false;\n        this.info.showErrorUpdate(\"hasło użytkownika\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formPassword\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"password\" class=\"sb-small-label\">Hasło</label>\n                <input pPassword class=\"fullwidth\" type=\"password\" [formControl]=\"formPassword.get('password')\" id=\"password\" required\n                    autocomplete=\"off\" />\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formPassword.get('password').hasError('required') && formPassword.get('password').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label for=\"confirmPassword\" class=\"sb-small-label\">Powtórz hasło</label>\n                <input pPassword class=\"fullwidth\" type=\"password\" [formControl]=\"formPassword.get('confirmPassword')\"\n                    id=\"confirmPassword\" required autocomplete=\"off\" />\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formPassword.get('confirmPassword').hasError('required') && formPassword.get('confirmPassword').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formPassword.get('confirmPassword').hasError('nomatch') && formPassword.get('confirmPassword').touched\">\n                    hasła muszą być identyczne\n                </p>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"formPassword.invalid || loading\" pButton pRipple type=\"button\" (click)=\"onChangePass()\"\n            pTooltip=\"Aktualizacja hasła\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormUsersComponent } from './form-users/form-users.component';\nimport { Location } from '@angular/common';\nimport { FormPasswordComponent } from './form-password/form-password.component';\nimport { User } from 'src/app/_class/user';\nimport { ConfirmationService } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(\n    public dialogService: DialogService,\n    private location: Location,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.settingService.getUsers().subscribe({\n      next: (res) => {\n        this.users = res;\n        console.log(this.users);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: () => {\n      }\n\n    })\n  }\n\n  yesNo(is) {\n    return is ? \"TAK\" : \"NIE\";\n  }\n\n  openDialogAddUser() {\n    const dialogRef = this.dialogService.open(FormUsersComponent, {\n      header: \"Nowy użytkownik\",\n      width: '500px'\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogUpdateUser(rowData) {\n    const dialogRef = this.dialogService.open(FormUsersComponent, {\n      header: \"Aktualizacja użytkownika\",\n      data: rowData,\n      width: '500px'\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialogService.open(FormPasswordComponent, {\n      header: \"Aktualizacja hasła\",\n      data: usr,\n      width: '450px'\n    });\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog pass was closed');\n    });\n  }\n\n  onDeleteUser(user: User) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + user.name + '?',\n      header: 'Potwierdzenie',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.settingService.deleteUser(user.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"użytkownia\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"użytkownika\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class=\"row mb-2 ml-0\">\n    <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n</div>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n\n            <button pButton type=\"button\" (click)=\"openDialogAddUser()\" label=\"Dodaj użytkownika\"\n                class=\"p-button-sm sb-button gray\"></button>\n\n        </div>\n    </div>\n    <div class=\"col-10\">\n        <div class=\"row\">\n            <p-table #us [value]=\"users\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['username']\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Użytkownicy</span></div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"us.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" class=\"p-inputtext\" />\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 40px;\">ID</th>\n                        <th style=\"width: 120px;\">Login</th>\n                        <th style=\"width: 120px;\">Imie Nazwisko</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Aktywny\">Akt.</th>\n                        <th style=\"width: 120px;\">Role</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"Katalog Odczyt\">Kat. O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Katalog Zapis\">Kat. Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Katalog Usuwanie\">Kat. U.</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"System Odczyt\">Sys. O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"System Zapis\">Sys. Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"System Usuwanie\">Sys. U.</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"Klient Odczyt\">Kl. O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Klient Zapis\">Kl. Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Klient Usuwanie\">Kl. U.</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"Okleiny Odczyt\">Okl. O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Okleiny Zapis\">Okl. Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Okleiny Usuwanie\">Okl. U.</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"Producenci Odczyt\">Prod. O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Producenci Zapis\">Prod. Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Producenci Usuwanie\">Prod. U.</th>\n\n                        <th style=\"width: 60px;\" pTooltip=\"Oferta Odczyt\">Oferta O.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Oferta Zapis\">Oferta Z.</th>\n                        <th style=\"width: 60px;\" pTooltip=\"Oferta Usuwanie\">Oferta U.</th>\n\n                        <th style=\"width: 120px;\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData>\n                    <tr>\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.username}}\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            {{yesNo(rowData.active)}}\n                        </td>\n                        <td>\n                            {{rowData.role}}\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogRead\">\n                                {{yesNo(rowData.catalogRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogWrite\">\n                                {{yesNo(rowData.catalogWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogDelete\">\n                                {{yesNo(rowData.catalogDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemRead\">\n                                {{yesNo(rowData.systemRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemWrite\">\n                                {{yesNo(rowData.systemWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemDelete\">\n                                {{yesNo(rowData.systemDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientRead\">\n                                {{yesNo(rowData.clientRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientWrite\">\n                                {{yesNo(rowData.clientWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientDelete\">\n                                {{yesNo(rowData.clientDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmRead\">\n                                {{yesNo(rowData.filmRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmWrite\">\n                                {{yesNo(rowData.filmWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmDelete\">\n                                {{yesNo(rowData.filmDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerRead\">\n                                {{yesNo(rowData.producerRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerWrite\">\n                                {{yesNo(rowData.producerWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerDelete\">\n                                {{yesNo(rowData.producerDelete)}}</span>\n                        </td>\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.offerRead\">\n                                {{yesNo(rowData.offerRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.offerWrite\">\n                                {{yesNo(rowData.offerWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.offerDelete\">\n                                {{yesNo(rowData.offerDelete)}}</span>\n                        </td>\n\n                        <td class=\"edit-col\">\n\n                            <button pButton pRipple type=\"button\" (click)=\"openDialogUpdateUser(rowData)\"\n                                icon=\"pi pi-pencil\" class=\"p-button-sm sb-button blue\" pTooltip=\"Edycja Użytkownika\"></button>\n\n                            <button pButton pRipple type=\"button\" (click)=\"openDialogChangePass(rowData)\"\n                                icon=\"pi pi-key\" class=\"p-button-sm ml-1 sb-button blue\" pTooltip=\"Zmiana hasła\"></button>\n\n                            <button pButton pRipple type=\"button\" (click)=\"onDeleteUser(rowData)\" icon=\"pi pi-trash\"\n                                class=\"p-button-sm ml-1 sb-button red\" pTooltip=\"Usuwanie\"></button>\n\n                        </td>\n\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-form-mycompany',\n  templateUrl: './form-mycompany.component.html',\n  styleUrls: ['./form-mycompany.component.scss']\n})\nexport class FormMycompanyComponent implements OnInit {\n\n  formMyCompany: FormGroup;\n  company: any;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.company = config.data;\n   }\n\n  ngOnInit(): void {\n    \n    if (this.company) {\n      this.formMyCompany = new FormGroup({\n        id: new FormControl(''),\n        name: new FormControl('', { validators: [Validators.required] }),\n        shortName: new FormControl('', { validators: [Validators.required] }),\n        shortId: new FormControl('', { validators: [Validators.required] }),\n\n        nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip] }),\n        regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n\n        fvemail: new FormControl('', { validators: [Validators.email] }),\n        logoLink: new FormControl(''),\n        email: new FormControl('', { validators: [Validators.email] }),\n        www: new FormControl(''),\n\n        phonenumber: new FormControl('', { validators: [Validators.minLength(9)] }),\n        phonenumber2: new FormControl('', { validators: [Validators.minLength(9)]}),\n\n        town: new FormControl(''),\n        street: new FormControl(''),\n        houseNumber: new FormControl(''),\n        flatNumber: new FormControl(''),\n        postalCode: new FormControl(''),\n        province: new FormControl(''),\n        country: new FormControl('')\n      });\n      this.formMyCompany.patchValue(this.company);\n      console.log(this.formMyCompany);\n    } else {\n\n      this.formMyCompany = new FormGroup({\n        name: new FormControl('', { validators: [Validators.required] }),\n        shortName: new FormControl('', { validators: [Validators.required] }),\n        shortId: new FormControl('', { validators: [Validators.required] }),\n\n        nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.myCompanyExists], updateOn: 'blur' }),\n        regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n\n        fvemail: new FormControl('', { validators: [Validators.email] }),\n        logoLink: new FormControl(''),\n        email: new FormControl('', { validators: [Validators.email] }),\n        www: new FormControl(''),\n  \n        phonenumber: new FormControl('', { validators: [Validators.minLength(9)] }),\n        phonenumber2: new FormControl('', { validators: [Validators.minLength(9)] }),\n\n        town: new FormControl(''),\n        street: new FormControl(''),\n        houseNumber: new FormControl(''),\n        flatNumber: new FormControl(''),\n        postalCode: new FormControl(''),\n        province: new FormControl(''),\n        country: new FormControl('')\n      });\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  onAddMyCompany() {\n    this.loading = true;\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.loading = false;\n        this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () => { }\n    })\n  }\n\n  onUpdateMyCompany() {\n    this.loading = true;\n    this.settingService.updateMyCompany(this.company.id, this.formMyCompany.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate(\"moja firma\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.loading = false;\n        this.infoPopup.showErrorUpdate(\"moja firma\");\n      },\n      complete: () => { }\n    })\n  }\n\n}\n","<div class=\"sb-dialog-content\">\r\n    <form [formGroup]=\"formMyCompany\" class=\"sb-form\">\r\n\r\n        <div class=\"form-group m-0 p-0\">\r\n            <div>\r\n                <p class=\"p-0 m-0\"><b>DANE</b></p>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"name\">Nazwa*</label>\r\n                    <textarea [style]=\"{'width':'100%'}\" pInputTextarea type=\"text\" id=\"name\"\r\n                        [formControl]=\"formMyCompany.get('name')\" required>\r\n                    </textarea>\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('name').hasError('required') && formMyCompany.get('name').touched\">\r\n                        musi być wypełnione\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"shortName\">Krótka nazwa</label>\r\n                    <input pInputText type=\"text\" id=\"shortName\" [formControl]=\"formMyCompany.get('shortName')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"shortId\">Identyfikator</label>\r\n                    <input pInputText type=\"text\" id=\"shortId\" [formControl]=\"formMyCompany.get('shortId')\"\r\n                        pKeyFilter=\"alpha\" maxlength=\"2\" minlength=\"2\" autocomplete=\"off\" required>\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('shortId').hasError('required') && formMyCompany.get('shortId').touched\">\r\n                        musi być wypełnione\r\n                    </p>\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('shortId').hasError('minlength') && formMyCompany.get('shortId').touched\">\r\n                        Identyfikator musi się składać z 2 znaków\r\n                    </p>\r\n                </div>\r\n\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"nip\">NIP*</label>\r\n                    <input [attr.disabled]=\"company ? true : null\" pInputText type=\"text\" id=\"nip\"\r\n                        [formControl]=\"formMyCompany.get('nip')\" autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('nip').hasError('nipFormat') && formMyCompany.get('nip').touched\">\r\n                        niepoprawny nip\r\n                    </p>\r\n                </div>\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"regon\">REGON</label>\r\n                    <input pInputText type=\"text\" id=\"regon\" [formControl]=\"formMyCompany.get('regon')\"\r\n                        autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('regon').hasError('regonFormat') && formMyCompany.get('regon').touched\">\r\n                        niepoprawny regon\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div>\r\n                <p class=\"mb-0 mt-4\"><b>ADRES</b></p>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"town\">Miasto</label>\r\n                    <input pInputText type=\"text\" id=\"town\" [formControl]=\"formMyCompany.get('town')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"street\">Ulica</label>\r\n                    <input pInputText type=\"text\" id=\"street\" [formControl]=\"formMyCompany.get('street')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\r\n                    <label class=\"mb-0\" for=\"houseNumber\">Numer budynku</label>\r\n                    <input pInputText type=\"text\" id=\"houseNumber\" [formControl]=\"formMyCompany.get('houseNumber')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\r\n                    <label class=\"mb-0\" for=\"flatNumber\">Numer mieszkania</label>\r\n                    <input pInputText type=\"text\" id=\"flatNumber\" [formControl]=\"formMyCompany.get('flatNumber')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"postalCode\">Kod Pocztowy</label>\r\n                    <input pInputText type=\"text\" id=\"postalCode\" [formControl]=\"formMyCompany.get('postalCode')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"province\">Województwo</label>\r\n                    <input pInputText type=\"text\" id=\"province\" [formControl]=\"formMyCompany.get('province')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"country\">Kraj</label>\r\n                    <input pInputText type=\"text\" id=\"country\" [formControl]=\"formMyCompany.get('country')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <div>\r\n                <p class=\"mb-0 mt-4\"><b>DANE KONTAKTOWE</b></p>\r\n            </div>\r\n\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"email\">EMAIL</label>\r\n                    <input pInputText type=\"text\" id=\"email\" [formControl]=\"formMyCompany.get('email')\"\r\n                        autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('email').hasError('email') && formMyCompany.get('email').touched\">\r\n                        niepoprawny email\r\n                    </p>\r\n                </div>\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"fvemail\">EMAIL FV</label>\r\n                    <input pInputText type=\"text\" id=\"fvemail\" [formControl]=\"formMyCompany.get('fvemail')\"\r\n                        autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('email').hasError('fvemail') && formMyCompany.get('fvemail').touched\">\r\n                        niepoprawny email\r\n                    </p>\r\n                </div>\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"phonenumber\">Numer telefonu</label>\r\n                    <input pInputText type=\"text\" id=\"phonenumber\" [formControl]=\"formMyCompany.get('phonenumber')\"\r\n                        autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('phonenumber').hasError('minLength') && formMyCompany.get('phonenumber').touched\">\r\n                        niepoprawny numer telefonu\r\n                    </p>\r\n                </div>\r\n\r\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"phonenumber2\">Numer telefonu 2</label>\r\n                    <input pInputText type=\"text\" id=\"phonenumber2\" [formControl]=\"formMyCompany.get('phonenumber2')\"\r\n                        autocomplete=\"off\">\r\n                    <p class=\"invalid-feedback\"\r\n                        *ngIf=\"formMyCompany.get('phonenumber2').hasError('minLength') && formMyCompany.get('phonenumber2').touched\">\r\n                        niepoprawny numer telefonu\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"www\">WWW</label>\r\n                    <input pInputText type=\"text\" id=\"www\" [formControl]=\"formMyCompany.get('www')\" autocomplete=\"off\">\r\n                </div>\r\n            </div>\r\n            <div class=\"p-fluid p-formgrid p-grid\">\r\n                <div class=\"p-field p-col-12 mb-0 pb-0\">\r\n                    <label class=\"mb-0\" for=\"logoLink\">Logo link</label>\r\n                    <input pInputText type=\"text\" id=\"logoLink\" [formControl]=\"formMyCompany.get('logoLink')\"\r\n                        autocomplete=\"off\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n\r\n<div class=\"sb-dialog-footer\">\r\n    <div class=\"sb-btn-close\">\r\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\r\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\r\n        </button>\r\n    </div>\r\n    <div class=\"sb-btn-save\">\r\n        <button *ngIf=\"!company\" [disabled]=\"formMyCompany.invalid || loading\" pButton pRipple type=\"button\"\r\n            (click)=\"onAddMyCompany()\" pTooltip=\"Nowa firma\" label=\"Zapisz\" icon=\"pi pi-check\"\r\n            class=\"p-button-sm sb-button green\">\r\n        </button>\r\n\r\n        <button *ngIf=\"company\" [disabled]=\"formMyCompany.invalid || loading\" pButton pRipple type=\"button\"\r\n            (click)=\"onUpdateMyCompany()\" pTooltip=\"Aktualizacja firmy\" label=\"Zapisz\" icon=\"pi pi-check\"\r\n            class=\"p-button-sm sb-button green\">\r\n        </button>\r\n\r\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\r\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\r\n    </div>\r\n</div>"]}