{"version":3,"sources":["webpack:///src/app/main/sidebar/menu-items/menu-items.component.ts","webpack:///src/app/main/sidebar/menu-items/menu-items.component.html","webpack:///src/app/_shared/shared/shared.module.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/production/production-service/production-service.service.ts","webpack:///src/app/_directives/permission.directive.ts","webpack:///src/app/print/print.service.ts","webpack:///src/app/_services/auth-guard.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/films/film-service/films.service.ts","webpack:///src/app/main/sidebar/sidebar.component.ts","webpack:///src/app/main/sidebar/sidebar.component.html","webpack:///src/app/main/dashboard/dashboard.component.ts","webpack:///src/app/main/dashboard/dashboard.component.html","webpack:///src/app/catalog/catalog-service/catalog.service.ts","webpack:///src/app/info-popup/info-popup.component.ts","webpack:///src/app/info-popup/info-popup.component.html","webpack:///src/app/print/print-production-order/print-production-order.component.ts","webpack:///src/app/print/print-production-order/print-production-order.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/main/page-container/page-container.component.ts","webpack:///src/app/main/page-container/page-container.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["MenuItemsComponent","auth","http","router","logout","selector","templateUrl","styleUrls","SharedModule","declarations","exports","AuthService","errorAuth","loading","userSubject","JSON","parse","localStorage","getItem","user","asObservable","credentials","headers","authorization","btoa","username","value","password","get","subscribe","next","authdata","window","setItem","stringify","console","log","navigateByUrl","error","err","complete","post","res","removeItem","navigate","authorities","find","x","authority","providedIn","environment","production","StatusOrder","StatusOrderPosition","ProductionServiceService","filmService","catalogService","myCompanyData","clientData","loadingDataValue","id","data","put","responseType","sort","idOrder","idPosition","map","patch","usedfilm","done","accepted","warranty","fv","startFrom","Date","getTime","getSystems","allSystems","getOklieny","filmSuggestions","getCatalogs","catalogSuggestions","getAllOrdersNew","getAllOrdersInProgress","getAllOrdersDone","getAllOrdersOut","getMyCompanies","getClients","getProductionOrdersNew","allOrdersNew","getProductionOrdersInProgress","allOrdersInProgress","getProductionOrdersDone","allOrdersDone","getProductionOrdersOut","allOrdersOut","forEach","element","el","label","name","push","PermissionDirective","permission","userValue","catalogDelete","nativeElement","style","display","catalogWrite","catalogRead","systemDelete","systemWrite","systemRead","clientDelete","clientWrite","clientRead","filmDelete","filmWrite","filmRead","producerDelete","producerWrite","producerRead","vfs","PrintService","componentFactoryResolver","appRef","injector","productionService","cookieService","isPrinting","documentName","documentData","componentFactory","resolveComponentFactory","componentRef","create","instance","attachView","hostView","domElem","rootNodes","document","body","appendChild","dialogComponentRef","detachView","destroy","setTimeout","getDataToPrint","printPosition","printSide","table","open","tableDataCol","stopka","show","field","tableHeaders","docDefinition","pageSize","pageOrientation","header","margin","columns","text","productionOrder","myCompany","alignment","orderNumber","client","footer","content","headerRows","orderPosition","getProductionOrder","getOrderPositions","printWithMake","AuthGuardService","AppComponent","title","XhrInterceptor","req","xhr","clone","set","handle","AppModule","provide","useClass","multi","imports","providers","bootstrap","OkleinaEnum","FilmsService","producers","producersSelect","getProducers","producerName","SidebarComponent","DashboardComponent","CatalogService","systems","systemsSelect","systemsSelectTable","InfoPopupComponent","messageService","detail","add","severity","summary","clear","PrintProductionOrderComponent","printService","onDataReady","html","getElementById","css","head","getElementsByTagName","createElement","type","media","createTextNode","print","removePrintComponentFromBody","sw","e","or","routes","path","canActivate","loadChildren","then","m","FilmsModule","ContractorModule","CatalogModule","SettingsModule","ProductionModule","OffersModule","component","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","LoginComponent","formBuilder","submitted","loginForm","group","required","invalid","login","f","controls","onSubmit","MainComponent","PageContainerComponent","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-menu-items',\n  templateUrl: './menu-items.component.html',\n  styleUrls: ['./menu-items.component.scss']\n})\nexport class MenuItemsComponent implements OnInit {\n\n  constructor(public auth: AuthService, private http: HttpClient, private router: Router){\n    //this.auth.authenticate(undefined,undefined);\n  }\n  logout(){\n    this.auth.logout();\n  }\n\n  ngOnInit() {\n  }\n\n}\n","<ul class=\"menu-items\">\n    <li>\n        <a class=\"detailed\" [routerLink]=\"['/home']\">\n            <span class=\"title\">Dashboard</span>\n            <span class=\"details\">---</span>\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-home\"></i>\n        </div>\n    </li>\n    <li *ngIf=\"auth.isAdmin\">\n        <a class=\"detailed\" [routerLink]=\"['/produkcja']\">\n            <span class=\"title\" style=\"color:mediumspringgreen\"><b>Produkcja</b></span>\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-inbox\"></i>\n        </div>\n    </li>\n    <li *ngIf=\"auth.isAdmin\">\n        <a class=\"detailed\" [routerLink]=\"['/oferty']\">\n            <span class=\"title\" style=\"color:mediumspringgreen\"><b>Oferty</b></span>\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-ticket\"></i>\n        </div>\n    </li>\n    <li>\n        <a class=\"detailed\" [routerLink]=\"['/katalog']\">\n            <span class=\"title\">Katalog</span>\n            <!-- <span class=\"details\">---</span> -->\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-folder\"></i>\n        </div>\n    </li>\n    <li>\n        <a class=\"detailed\" [routerLink]=\"['/kontrahent']\">\n            <span class=\"title\">Kontrahenci</span>\n            <!-- <span class=\"details\">---</span> -->\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-id-card\"></i>\n        </div>\n    </li>\n    <li>\n        <a class=\"detailed\" [routerLink]=\"['/okleiny']\">\n            <span class=\"title\">Okleiny</span>\n            <!-- <span class=\"details\">---</span> -->\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-pause\"></i>\n        </div>\n    </li>\n    <li *ngIf=\"auth.isAdmin\">\n        <a class=\"detailed\" [routerLink]=\"['/settings']\">\n            <span class=\"title\">Ustawienia</span>\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-cog\"></i>\n        </div>\n    </li>\n    <li>\n        <a class=\"detailed\" (click)=\"logout()\">\n            <span class=\"title\">Wyloguj</span>\n        </a>\n        <div class=\"icon-thumbnail\">\n            <i class=\"pi pi-sign-out\"></i>\n        </div>\n    </li>\n    <li></li>\n</ul>","import { NgModule } from '@angular/core';\nimport { PermissionDirective } from '../../_directives/permission.directive';\n\n@NgModule({\n  declarations: [PermissionDirective],\n  exports:[PermissionDirective]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { User } from '../_class/user';\nimport { environment } from 'src/environments/environment.prod';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private userSubject: BehaviorSubject<User>;\n  public user: Observable<User>;\n  public errorAuth = false;\n  public loading = false;\n  //public isAdmin = true;\n\n  constructor(\n    private router: Router,\n    private http: HttpClient\n  ) {\n    this.userSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('user')));\n    this.user = this.userSubject.asObservable();\n  }\n\n  public get userValue(): User {\n    return this.userSubject.value;\n  }\n\n  public get isAdmin(): Boolean {\n    if (this.userSubject.value != null) {\n      let authorities = this.userSubject.value.authorities\n      let res = authorities.find(x => x.authority == \"ADMIN\")\n      return res\n    } else {\n      return false;\n    }\n  }\n  login(credentials) {\n    const headers = new HttpHeaders(credentials ? {\n      authorization: 'Basic ' + btoa(credentials.username.value + ':' + credentials.password.value)\n    } : {});\n    this.http.get<any>('/api/login', { headers: headers }).subscribe({\n      next: user => {\n        user.authdata = window.btoa(credentials.username.value + ':' + credentials.password.value);\n        localStorage.setItem('user', JSON.stringify(user));\n        this.userSubject.next(user);\n        this.loading = false;\n        this.errorAuth = false;\n        console.log(\"Zalogowano\");\n        this.router.navigateByUrl('/');\n        return user;\n      },\n      error: (err) => {\n        console.log(\"error\");\n        this.loading = false;\n        this.errorAuth = true;\n      },\n      complete: () => {\n      }\n    }\n    )\n  }\n\n  // login(username: string, password: string) {\n  //   return this.http.post<any>(\"api/login\", { username, password })\n  //       .pipe(map(user => {\n  //           // store user details and basic auth credentials in local storage to keep user logged in between page refreshes\n  //           user.authdata = window.btoa(username + ':' + password);\n  //           localStorage.setItem('user', JSON.stringify(user));\n  //           this.userSubject.next(user);\n  //           console.log(user);\n  //           return user;\n  //       }));\n  // }\n\n  logout() {\n    this.http.post('/logout', {}).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: (err) => {\n        console.log(\"error\");\n      },\n      complete: () => {\n        localStorage.removeItem('user');\n        this.userSubject.next(null);\n        this.router.navigate(['/login']);\n        this.loading = false;\n      }\n    })\n  }\n\n\n  // authenticate(credentials, callback) {\n  //   const headers = new HttpHeaders(credentials ? {\n  //     authorization: 'Basic ' + btoa(credentials.username.value + ':' + credentials.password.value)\n  //   } : {});\n  //   this.http.get('login', { headers: headers }).subscribe(response => {\n  //     console.log(response);\n\n  //     if (response != null) {\n  //       if (response['name']) {\n  //         this.authenticated.next(true);\n  //         this.loading = false;\n  //       } else {\n  //         this.authenticated.next(false);\n  //         this.loading = false;\n  //       }\n  //     } else {\n  //       console.log('Worng pass or login.');\n  //       this.loading = false;\n  //       this.authenticated.next(false);\n  //     }\n  //       return callback && callback();\n  //     });\n  //}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Client } from 'src/app/contractor/client-service/client.service';\nimport { SelectItem } from 'primeng/api';\nimport { FilmsService, Okleina } from 'src/app/films/film-service/films.service';\nimport { KatalogProfili, CatalogService, KatalogSystem } from 'src/app/catalog/catalog-service/catalog.service';\n\nexport enum StatusOrder {\n  NOWE = \"NOWE\",\n  REALIZACJA = \"REALIZACJA\",\n  ZAKONCZONE = \"ZAKONCZONE\",\n  WYDANE = \"WYDANE\",\n  ARCHIWUM = \"ARCHIWUM\",\n  ANULOWANO = \"ANULOWANO\"\n}\n\nexport enum StatusOrderPosition {\n  NOWE = \"NOWE\",\n  PRZYPISANE = \"PRZYPISANE\",\n  OKLEINOWANE = \"OKLEINOWANE\",\n  WYKONANE = \"WYKONAN\",\n  SEZONOWANIE = \"SEZONOWANIE\",\n  MAGAZYN = \"MAGAZYN\",\n  WYDANE = \"WYDANE\",\n  ANULOWANO = \"ANULOWANO\"\n}\n\nexport interface ProductionOrder {\n  orderNumber: string,\n  numberClientOrder: string,\n  completed: boolean,\n  statusOrder: string,\n  dateAcceptanceOrder: Date,\n  dateCompletedOrder: Date,\n  dateReceiptOrder: Date,\n  myCompany: {\n    id: number,\n    name: string,\n    nip: string,\n    regon: string,\n    contactemail: string,\n    fvemail: string,\n    phonenumber: string\n  },\n  client: {\n    id: number,\n    name: string,\n    nip: string,\n    regon: string,\n    email: string,\n    phonenumber: string\n  }\n}\n\nexport interface OrderPosition {\n  id: number,\n  positionNumber: number,\n  profilType: string,\n  profilNumber: string,\n  comment: string,\n  accepted: boolean,\n  warranty: boolean,\n  numberFv: string,\n  dateCompletedPosition: Date,\n  completed: boolean,\n  statusOrderPosition: string\n  postionSide:PositionSide[]\n  productionOrder:any,\n}\n\nexport interface PositionSide {\n  id: number,\n  side: string,\n  filmNumber: string,\n  filmWidth: number,\n  dimensions: any,\n  sumAllDimensions: number,\n  plnMb: number,\n  costSet6Mb: number,\n  costSetup: number,\n  colorChange: boolean,\n  employees: string,\n  glue: string,\n  statusOrderPosition: any,\n  usedFilm: any,\n  orderPosition: OrderPosition,\n}\n\nexport interface UsedFilm {\n  id: number,\n  width: number,\n  length: number,\n  sumM2: number,\n  positionSide: PositionSide\n}\n\nexport interface ProfilDimension {\n  id: number,\n  quantity: number,\n  length: number,\n  sumMb: number,\n  positionSide: PositionSide\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductionServiceService {\n\n  myCompanyData: SelectItem[] = [];\n  clientData: SelectItem[] = [];\n  allSystems: KatalogSystem[];\n  filmSuggestions: Okleina[];\n  catalogSuggestions: KatalogProfili[];\n  allOrdersNew: ProductionOrder[];\n  allOrdersInProgress: ProductionOrder[];\n  allOrdersDone: ProductionOrder[];\n  allOrdersOut: ProductionOrder[];\n  loadingDataValue: number = 0;\n\n  constructor(\n    private http: HttpClient,\n    private filmService: FilmsService,\n    private catalogService: CatalogService\n    ) { }\n\n  getProductionOrders(): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/orders\");\n  }\n  getProductionOrder(id): Observable<ProductionOrder> {\n    return this.http.get<ProductionOrder>(\"api/production/order/\" + id);\n  }\n  addProductionOrder(data): Observable<ProductionOrder> {\n    return this.http.post<ProductionOrder>(\"api/production/order\", data);\n  }\n  updateProductionOrder(id, data) {\n    return this.http.put(\"api/production/order/\" + id, data, { responseType: 'text' });\n  }\n  deleteProductionOrder(id) {\n    return this.http.delete(\"api/production/order/\" + id, { responseType: 'text' });\n  }\n  changeProductionOrderStatus(id, data) {\n    return this.http.put(\"api/production/order/\" + id + \"/status\", data, { responseType: 'text' });\n  }\n\n\n  getProductionOrdersByStatus(sort): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/ordersBy?status=\" + sort);\n  }\n\n  getProductionOrdersNew(): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/orders/new\");\n  }\n  getProductionOrdersInProgress(): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/orders/inprogress\");\n  }\n  getProductionOrdersDone(): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/orders/done\");\n  }\n\n  getProductionOrdersOut(): Observable<ProductionOrder[]> {\n    return this.http.get<ProductionOrder[]>(\"api/production/orders/out\");\n  }\n\n  getCountProductionOrders(): Observable<number> {\n    return this.http.get<number>(\"api/production/order/count\");\n  }\n\n  //==========================================\n\n  getAllOrdersPositions(): Observable<OrderPosition[]> {\n    return this.http.get<OrderPosition[]>(\"api//production/orders/positions\");\n  }\n  getOrderPositions(idOrder): Observable<OrderPosition[]> {\n    return this.http.get<OrderPosition[]>(\"api/production/order/\" + idOrder + \"/positions\");\n  }\n  getOrderPosition(idOrder, idPosition): Observable<OrderPosition> {\n    return this.http.get<OrderPosition>(\"api/production/order/\" + idOrder + \"/position/\" + idPosition);\n  }\n  addOrderPositions(idOrder, data): Observable<OrderPosition> {\n    return this.http.post<OrderPosition>(\"api/production/order/\" + idOrder + \"/position\", data);\n  }\n  updateOrderPositions(idOrder, idPosition, data) {\n    return this.http.put(\"api/production/order/\" + idOrder+ \"/position/\" + idPosition, data, { responseType: 'text' });\n  }\n  deleteOrderPositions(idOrder, idPosition) {\n    return this.http.delete(\"api/production/order/\" + idOrder + \"/position/\" + idPosition, { responseType: 'text' });\n  }\n\n  reOrderPositions(map){\n    return this.http.patch(\"api/production/order/position/reorder\",map, { responseType: 'text' });\n  }\n\n  addOrderPositionSideUsedFilm(idOrder, idPosition,usedfilm){\n    return this.http.put(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/usedfilm\", usedfilm, { responseType: 'text' });\n  }\n\n  updateOrderPositionDoneInfo(idOrder, idPosition,done){\n    return this.http.put(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/done\", done, { responseType: 'text' });\n  }\n\n  updateOrderPositionAccepted(idOrder, idPosition,accepted){\n    return this.http.patch(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/accepted?value=\"+accepted,null, { responseType: 'text' });\n  }\n\n  updateOrderPositionWarranty(idOrder, idPosition,warranty){\n    return this.http.patch(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/warranty?value=\"+warranty,null, { responseType: 'text' });\n  }\n\n  updateOrderPositionFvNumber(idOrder, idPosition,fv){\n    return this.http.patch(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/fvnumber\",fv, { responseType: 'text' });\n  }\n\n  updateOrderPositionAfterDoneInfo(idOrder, idPosition,data){\n    return this.http.put(\"api/production/order/\"+ idOrder +\"/position/\"+idPosition+\"/afterDone\",data, { responseType: 'text' });\n  }\n\n  //--------------------\n  getMyCompaniesSub(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getClientsSub(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/clients\");\n  }\n\n\n  //GET SERVICE DATA\n\n  loadAllSystems(){\n    if(this.loadingDataValue == 100){this.loadingDataValue=0}\n    var startFrom = new Date().getTime();\n    console.log(\"LOADING -- SYSTEMS\");\n    this.catalogService.getSystems().subscribe({\n      next: (res) => {this.allSystems = res},\n      error: (err) => {console.log(err)},\n      complete: () => {\n        this.loadingDataValue = this.loadingDataValue + 33;\n        console.log(\"DONE -- SYSTEMS: \", new Date().getTime() - startFrom);\n      }\n    })\n  }\n\n  loadFilmSuggestions(){\n    if(this.loadingDataValue == 100){this.loadingDataValue=0}\n    var startFrom = new Date().getTime();\n    console.log(\"LOADING -- FILM SUGGESTIONS\");\n    this.filmService.getOklieny().subscribe({\n      next: (res) => {this.filmSuggestions = res},\n      error: (err) => {console.log(err)},\n      complete: () => {\n        this.loadingDataValue = this.loadingDataValue + 33;\n        console.log(\"DONE -- FILM SUGGESTIONS: \", new Date().getTime() - startFrom);\n      }\n    })\n  }\n\n  loadCatalogSuggestions(){\n    if(this.loadingDataValue == 100){this.loadingDataValue=0}\n    var startFrom = new Date().getTime();\n    console.log(\"LOADING -- CATALOG SUGGESTIONS\");\n    this.catalogService.getCatalogs().subscribe({\n      next: (res) => {this.catalogSuggestions = res},\n      error: (err) => {console.log(err)},\n      complete: () => {\n        this.loadingDataValue = this.loadingDataValue + 34;\n        console.log(\"DONE -- CATALOG SUGGESTIONS: \",new Date().getTime() - startFrom);\n      }\n    })\n  }\n\n  loadDataToService() {\n    console.log(\"loading data in service ...\");\n    this.getAllOrdersNew();\n    this.getAllOrdersInProgress();\n    this.getAllOrdersDone();\n    this.getAllOrdersOut();\n    this.getMyCompanies();\n    this.getClients();\n  }\n\n  getAllOrdersNew() {\n    this.getProductionOrdersNew().subscribe({\n      next: (res) => {\n        this.allOrdersNew = [];\n        this.allOrdersNew = res;\n      },\n      error: (err) => {\n        console.error(\"Can`t download new\")\n      },\n      complete: () => { }\n    });\n  }\n\n  getAllOrdersInProgress() {\n    this.getProductionOrdersInProgress().subscribe({\n      next: (res) => {\n        this.allOrdersInProgress = [];\n        this.allOrdersInProgress = res;\n      },\n      error: (err) => {\n        console.error(\"Can`t download inprogress orders\")\n      },\n      complete: () => { }\n    });\n  }\n\n  getAllOrdersDone() {\n    this.getProductionOrdersDone().subscribe({\n      next: (res) => {\n        this.allOrdersDone = [];\n        this.allOrdersDone = res;\n      },\n      error: (err) => {\n        console.error(\"Can`t download done orders\")\n      },\n      complete: () => { }\n    });\n  }\n\n  getAllOrdersOut() {\n    this.getProductionOrdersOut().subscribe({\n      next: (res) => {\n        this.allOrdersOut = [];\n        this.allOrdersOut = res;\n      },\n      error: (err) => {\n        console.error(\"Can`t download out orders\")\n      },\n      complete: () => { }\n    });\n  }\n\n  getMyCompanies() {\n    return this.http.get<any[]>(\"api/mycompanies\").subscribe({\n      next: (res) => {\n        this.myCompanyData = [];\n        res.forEach(element => {\n          let el: SelectItem = { label: element.name, value: element }\n          this.myCompanyData.push(el);\n        });\n      },\n      error: (err) => {\n        console.error(\"Can`t download myCompanies\")\n      },\n      complete: () => {\n      }\n    });\n  }\n\n  getClients() {\n    return this.http.get<any[]>(\"api/clients\").subscribe({\n      next: (res) => {\n        this.clientData = [];\n        res.forEach(element => {\n          let el: SelectItem = { label: element.name, value: element }\n          this.clientData.push(el);\n        });\n      },\n      error: (err) => {\n        console.error(\"Can`t download clients\")\n      },\n      complete: () => {\n      }\n    });\n  }\n\n\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\n\n@Directive({\n  selector: '[appPermission]'\n})\nexport class PermissionDirective {\n\n  @Input('permission') permission: string;\n\n  constructor(private el: ElementRef, private auth: AuthService) {\n  }\n  ngOnInit() {\n    switch (this.permission) {\n      case \"catalogDelete\":\n        if(this.auth.userValue.catalogDelete == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"catalogWrite\":\n        if(this.auth.userValue.catalogWrite == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"catalogRead\":\n        if(this.auth.userValue.catalogRead == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n\n      case \"systemDelete\":\n        if(this.auth.userValue.systemDelete == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"systemWrite\":\n        if(this.auth.userValue.systemWrite == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"systemRead\":\n        if(this.auth.userValue.systemRead == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n\n      case \"clientDelete\":\n        if(this.auth.userValue.clientDelete == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"clientWrite\":\n        if(this.auth.userValue.clientWrite == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"clientRead\":\n        if(this.auth.userValue.clientRead == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n\n      case \"filmDelete\":\n        if(this.auth.userValue.filmDelete == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"filmWrite\":\n        if(this.auth.userValue.filmWrite == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"filmRead\":\n        if(this.auth.userValue.filmRead == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n\n      case \"producerDelete\":\n        if(this.auth.userValue.producerDelete == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"producerWrite\":\n        if(this.auth.userValue.producerWrite == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n      case \"producerRead\":\n        if(this.auth.userValue.producerRead == false) {this.el.nativeElement.style.display = \"none\";}\n      break;\n\n      default:\n        break;\n    }\n  }\n\n}\n","import { ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PrintProductionOrderComponent } from './print-production-order/print-production-order.component';\nimport { OrderPosition, ProductionOrder, ProductionServiceService } from '../production/production-service/production-service.service';\nimport { forkJoin } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport * as pdfMake from '../../../node_modules/pdfmake/build/pdfmake';\nimport * as pdfFonts from '../../../node_modules/pdfmake/build/vfs_fonts';\n(<any>pdfMake).vfs = pdfFonts.pdfMake.vfs;\n\n//\"types\": [\"pdfmake\"],\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PrintService {\n\n  dialogComponentRef: ComponentRef<PrintProductionOrderComponent>\n  domElem: HTMLElement;\n  isPrinting = false;\n  url: string;\n  idOrder: string;\n  productionOrder: ProductionOrder;\n  orderPosition: OrderPosition[];\n  printPosition: any[];\n  printSide: any[];\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private injector: Injector,\n    private productionService: ProductionServiceService,\n    private cookieService: CookieService,\n  ) { }\n\n  printDocument(documentName: string, documentData: string) {\n    this.idOrder = documentData;\n    //this.isPrinting = true;\n    console.log(\"Init printing order: \" + this.idOrder);\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(PrintProductionOrderComponent);\n    const componentRef = componentFactory.create(this.injector);\n    componentRef.instance.idOrder = documentData;\n\n    this.appRef.attachView(componentRef.hostView);\n    this.domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    document.body.appendChild(this.domElem);\n    this.dialogComponentRef = componentRef;\n  }\n\n  removePrintComponentFromBody() {\n    console.log(\"Close\");\n    this.isPrinting = false;\n    this.appRef.detachView(this.dialogComponentRef.hostView);\n    this.dialogComponentRef.destroy();\n  }\n\n \n\n  // private openPDF(): void {\n  //   var html = document.getElementById('production-order-print');\n  //   let name = \"zlecenie_\" + this.idOrder + \".pdf\";\n\n  //   html2canvas(html).then(function (canvas) {\n  //     console.log(canvas);\n  //     const doc = new jsPDF(\"landscape\", \"pt\", \"a4\");\n  //     var width = doc.internal.pageSize.getWidth();\n  //     var height = doc.internal.pageSize.getHeight();\n  //     let imgData = canvas.toDataURL('image/png', 1.0);\n  //     doc.addImage(imgData, 'png', 0, 0, width, height);\n  //     doc.save(name);\n\n  //   }).finally(() => {\n  //     // this.isPrinting = false;\n  //     // this.removePrintComponentFromBody();\n  //   });\n  //   // const doc = new jsPDF(\"l\", \"pt\", \"a4\",true);\n  //   // doc.html(html).then(() => {\n  //   //   doc.save(name);\n  //   // })\n  // }\n\n  onDataReady() {\n    setTimeout(() => {\n      console.log(\"data ready\")\n      // this.openPDF();\n    });\n  }\n  // ==============  SECOND METHOD  =================\n\n  initPrint(id: string) {\n    console.log(\"Init printing order: \" + id);\n    this.idOrder = id;\n    this.getDataToPrint();\n    this.printPosition = JSON.parse(this.cookieService.get('printPositionColumns'));\n    this.printSide = JSON.parse(this.cookieService.get('printSideColumns'));\n  }\n\n  private printWithMake() {\n    // var myTableLayouts = {\n    //   layout: {\n    //     hLineWidth: function (i, node) {\n    //       if (i === 0 || i === node.table.body.length) {\n    //         return 0;\n    //       }\n    //       return (i === node.table.headerRows) ? 2 : 1;\n    //     },\n    //     vLineWidth: function (i) {\n    //       return 0;\n    //     },\n    //     hLineColor: function (i) {\n    //       return i === 1 ? 'black' : '#aaa';\n    //     },\n    //     paddingLeft: function (i) {\n    //       return i === 0 ? 0 : 8;\n    //     },\n    //     paddingRight: function (i, node) {\n    //       return (i === node.table.widths.length - 1) ? 0 : 8;\n    //     }\n    //   }\n    // };\n\n    pdfMake.createPdf(this.table()).open();\n    console.log(\"Open created pdf.\")\n  }\n\n  private table() {\n    console.log(\"Creating layout...\")\n    console.log(this.printPosition);\n    console.log(this.printSide);\n\n    let tableDataCol = ['positionNumber','profilNumber','profilType','side','filmNumber','filmWidth','profilDimensions'];\n    let stopka = false;\n    this.printSide.forEach(element => {\n      if (element.show) {\n        tableDataCol.push(element.field);\n      }\n    });\n\n    \n    let tableHeaders = [\"Nr.\",\"Rodzaj płaskownika\"];\n\n    // this.printPosition.forEach(element => {\n    //   if (element.field == \"footer\") {\n    //     stopka = element.show\n    //   } else {\n    //     if (element.show) {\n    //       tableHeaders.push(element.label);\n    //     }\n    //   }\n    // });\n\n    var docDefinition = {\n      pageSize: 'A4',\n      pageOrientation: 'landscape',\n      header: {\n        margin: [20, 20, 20, 10],\n        columns: [\n          { text: this.productionOrder.myCompany.name, alignment: 'left' },\n          { text: this.productionOrder.orderNumber, alignment: 'center' },\n          { text: this.productionOrder.client.name, alignment: 'right' }\n          //  [{ text: \"Numer zlecenia klienta: \" + this.productionOrder.numberClientOrder, alignment: 'left'},\"\",\"\"]\n        ]\n      },\n      footer: {\n        columns: [\n          // { text: 'left', alignment: 'left' },\n          // { text: 'Center', alignment: 'center' },\n          // { text: 'Right', alignment: 'right' }\n        ]\n      },\n\n      content: [{\n        headerRows: 1,\n        margin: [0, 0, 0, 0],\n        table: {\n          body: [\n            this.orderPosition\n          ]\n        }\n      }]\n    };\n\n    console.log(docDefinition);\n    return docDefinition;\n  }\n\n\n  private getDataToPrint() {\n    console.log(\"Starting loading data...\")\n    forkJoin([\n      this.productionService.getProductionOrder(this.idOrder),\n      this.productionService.getOrderPositions(this.idOrder)\n    ]).subscribe({\n      next: (res) => {\n        this.productionOrder = res[0];\n        this.orderPosition = res[1];\n      },\n      complete: () => {\n        console.log(\"Complete load data.\")\n        console.log(this.productionOrder);\n        console.log(this.orderPosition);\n        this.printWithMake();\n      }\n    });\n\n\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n\n  canActivate(): boolean {\n    if (!this.auth.userValue) {\n      this.router.navigate(['/login']);\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { AuthService } from './_services/auth.service';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { Okleina } from './films/film-service/films.service';\nimport { ajax } from 'rxjs/ajax';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Herakles';\n\n  constructor(){\n  }\n}\n","<app-info-popup></app-info-popup>\r\n<p-confirmDialog header=\"Potwierdzenie\" icon=\"pi pi-exclamation-triangle\"></p-confirmDialog>\r\n<app-main></app-main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injectable } from '@angular/core';\nimport { ToastModule } from 'primeng/toast';\nimport { MessagesModule } from 'primeng/messages';\nimport { MessageModule } from 'primeng/message';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { SidebarComponent } from './main/sidebar/sidebar.component';\nimport { MenuItemsComponent } from './main/sidebar/menu-items/menu-items.component';\nimport { PageContainerComponent } from './main/page-container/page-container.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DashboardComponent } from './main/dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule, HttpInterceptor, HttpRequest, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthService } from './_services/auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { InfoPopupComponent } from './info-popup/info-popup.component';\nimport { MessageService } from 'primeng/api';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ConfirmationService } from 'primeng/api';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatInputModule } from '@angular/material/input';\nimport { DialogModule } from 'primeng/dialog';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from './_shared/shared/shared.module'\n\n@Injectable()\nexport class XhrInterceptor implements HttpInterceptor {\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const xhr = req.clone({\n      headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\n    });\n    return next.handle(xhr);\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    SidebarComponent,\n    MenuItemsComponent,\n    PageContainerComponent,\n    DashboardComponent,\n    LoginComponent,\n    InfoPopupComponent\n  ],\n  imports: [\n    MatIconModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    ConfirmDialogModule,\n    DialogModule,\n    MatInputModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    RippleModule,\n    SharedModule\n  ],\n  providers: [InfoPopupComponent, MessageService, AuthService, ConfirmationService, { provide: HTTP_INTERCEPTORS, useClass: XhrInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SelectItem } from 'primeng/api';\n\n\nexport enum OkleinaEnum {\n  DOSTEPNA = \"DOSTEPNA\",\n  NIEDOSTEPNA = \"NIEDOSTEPNA\",\n  DOSTEPNOSCOGRANICZONA = \"DOSTEPNOSCOGRANICZONA\",\n}\n\nexport interface Okleina {\n  id?: number;\n  number?: string;\n  name?: string;\n  producer?: string;\n  ecoPlastNumber?: string;\n  ralNumber?: string;\n  imgLink?: string;\n  status?: OkleinaEnum;\n}\n\nexport interface Producent {\n  id?: number;\n  producerName?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  public allFilms: Okleina[];\n  public producers: Producent[] = [];\n  public producersSelect: SelectItem[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  loadProducersSelect(){\n    console.log(\"Load producers in service\");\n    this.producersSelect = [];\n    this.getProducers().subscribe({\n      next: (res) => {\n        res.forEach(element => {\n          this.producers = res;\n          let el: SelectItem = {label:element.producerName,value:element}\n          this.producersSelect.push(el);\n        });\n      },\n      error: (err) => {\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  getOklieny(): Observable<Okleina[]> {\n    return this.http.get<Okleina[]>(\"api/films\");\n  }\n  getOklina(id): Observable<Okleina> {\n    return this.http.get<Okleina>(\"api/film/\" + id);\n  }\n  getCountOkleina(): Observable<number> {\n    return this.http.get<number>(\"api/film/count\");\n  }\n  addOklina(data): Observable<Okleina> {\n    return this.http.post<Okleina>(\"api/film\", data);\n  }\n  updateOkleina(id, data): Observable<Okleina> {\n    return this.http.put<Okleina>(\"api/film/\" + id, data);\n  }\n  deleteOklina(id) {\n    return this.http.delete(\"api/film/\" + id, { responseType: 'text' });\n  }\n\n  // PRODUCERS\n\n  getProducers(): Observable<Producent[]> {\n    return this.http.get<Producent[]>(\"api/film/producers\");\n  }\n  getProducer(id): Observable<Producent> {\n    return this.http.get<Producent>(\"api/film/producer/\" + id);\n  }\n  getCountProducer(): Observable<number> {\n    return this.http.get<number>(\"api/film/producer/count\");\n  }\n  addProducer(data): Observable<Producent> {\n    return this.http.post<Producent>(\"api/film/producer\", data);\n  }\n  updateProducer(id, data): Observable<Producent> {\n    return this.http.put<Producent>(\"api/film/producer/\" + id, data);\n  }\n  deleteProducer(id) {\n    return this.http.delete(\"api/film/producer/\" + id, { responseType: 'text' });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/_services/auth.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"sidebar-header\">\n    <img alt=\"logo\" class=\"brand-logo-menu\" height=\"22\" width=\"78\" src=\"assets/img/logo.png\">\n        <div class=\"brand-logo-menu-icon\">\n        <mat-icon>forward</mat-icon>\n        </div>\n</div>\n<div class=\"sidebar-menu\">\n    <app-menu-items></app-menu-items>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"bg-white p-2 vh-100\">\n        <div class=\"text-center\">\n            <img class=\"pt-2\" src=\"../../../assets/img/logo_blue.png\" width=\"300px\" alt=\"logo\">\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SelectItem } from 'primeng/api';\n\nexport interface KatalogSystem {\n  id?: number;\n  name?: string;\n}\n\nexport interface KatalogProfili {\n  id?: number;\n  systemProfil?: KatalogSystem;\n  number?: string;\n  dimOuter?: string;\n  dimInner?: string;\n  dimOneSide?: string;\n  dimCenterSide?: string;\n  dimTwoSide?: string;\n  dimTwoSideInner?: string;\n  dimTwoSideOuter?: string;\n  actualMeasurement?: boolean;\n  hard?: boolean;\n  profileType?: string;\n  comments?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogService {\n\n  public systems: KatalogSystem[] = [];\n  public systemsSelect: SelectItem[] = [];\n  public systemsSelectTable: SelectItem[] = [];\n  constructor(private http: HttpClient) { }\n\n  loadSystems() {\n    this.systemsSelect = [];\n    this.systemsSelectTable = [{label:\"Wszystkie\",value:-1}];\n    this.getSystems().subscribe(\n      {\n        next: (res) => {\n          res.forEach(element => {\n            this.systems = res;\n            let el: SelectItem = {label:element.name,value:element}\n            this.systemsSelectTable.push(el);\n            this.systemsSelect.push(el);\n          });\n        },\n        error: (err) => {\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  // ================ KATALOG ==================\n\n  getCatalogs(): Observable<KatalogProfili[]> {\n    return this.http.get<KatalogProfili[]>(\"api/catalog/profiles\");\n  }\n\n  getCatalog(id): Observable<KatalogProfili> {\n    return this.http.get<KatalogProfili>(\"api/catalog/profil/\" + id);\n  }\n\n  getCatalogsBySystem(id): Observable<KatalogProfili[]> {\n    return this.http.get<KatalogProfili[]>(\"api/catalog/profil/system/\" + id);\n  }\n\n  getCountCatalog(): Observable<number> {\n\n    return this.http.get<number>(\"api/catalog/profil/count\");\n  }\n\n  addCatalog(data): Observable<KatalogProfili> {\n    return this.http.post<KatalogProfili>(\"api/catalog/profil\", data);\n  }\n\n  updateCatalog(id, data): Observable<KatalogProfili> {\n    return this.http.put<KatalogProfili>(\"api/catalog/profil/\" + id, data);\n  }\n\n  deleteCatalog(id) {\n    return this.http.delete(\"api/catalog/profil/\" + id, { responseType: 'text' });\n  }\n\n  // ================= SYSTEM ==================\n\n  getSystems(): Observable<KatalogSystem[]> {\n    return this.http.get<KatalogSystem[]>(\"api/catalog/systems\");\n  }\n\n  getSystem(id): Observable<KatalogSystem> {\n    return this.http.get<KatalogSystem>(\"api/catalog/system/\" + id);\n  }\n\n  getCountSystem(): Observable<number> {\n\n    return this.http.get<number>(\"api/catalog/system/count\");\n  }\n\n  addSystem(data): Observable<KatalogSystem> {\n    return this.http.post<KatalogSystem>(\"api/catalog/system\", data);\n  }\n\n  updateSystem(id, data): Observable<KatalogSystem> {\n    return this.http.put<KatalogSystem>(\"api/catalog/system/\" + id, data);\n  }\n\n  deleteSystem(id) {\n    return this.http.delete(\"api/catalog/system/\" + id, { responseType: 'text' });\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-info-popup',\n  templateUrl: './info-popup.component.html',\n  styleUrls: ['./info-popup.component.scss']\n})\nexport class InfoPopupComponent implements OnInit {\n\n  constructor(private messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n  // MESSAGES SUCCESS\n\nshowSuccessAdd(detail) {\n  this.messageService.add({ severity: 'success', summary: 'Dodanie ' + detail, detail: 'Poprawnie dodano pozycję ' + detail });\n}\n\nshowSuccessUpdate(detail) {\n  this.messageService.add({ severity: 'success', summary: 'Aktualizacja ' + detail, detail: 'Poprawnie zaktualizowano pozycję ' + detail });\n}\n\nshowSuccessDelete(detail) {\n  this.messageService.add({ severity: 'success', summary: 'Usunięcie ' + detail, detail: 'Poprawnie usunięto pozycję ' + detail });\n}\n\n// MESSAGES ERROR\n\nshowErrorAdd(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Dodanie ' + detail, detail: 'Nie udało się dodać pozycji ' + detail  });\n}\n\nshowErrorAddExists(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Dodanie ' + detail, detail: 'Pozycja o numerze ' + detail + ' istnieje.'  });\n}\n\n\nshowErrorUpdate(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Aktualizajca ' + detail, detail: 'Nie udało się zaktualizować pozycji ' + detail  });\n}\n\nshowErrorDelete(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Usunięcie ' + detail, detail: 'Nie udało się usunąć pozycji ' + detail  });\n}\n\nshowErrorCount(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Pobrania ilości ' + detail, detail: 'Nie udało się pobrać ilości ' + detail  });\n}\n\nshowErrorDownload(detail) {\n  this.messageService.add({ severity: 'error', summary: 'ERROR Pobieranie ' + detail, detail: 'Nie udało się pobrać pozycji ' + detail + '. Proszę odświeżyć stronę'});\n}\n\n// CLEAR\n\nclear() {\n  this.messageService.clear();\n}\n\n}\n","<p-toast position=\"top-right\"></p-toast>","import { Component, OnInit } from '@angular/core';\nimport { PrintService } from '../print.service';\nimport { ProductionServiceService, OrderPosition } from 'src/app/production/production-service/production-service.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { forkJoin } from 'rxjs';\n\n@Component({\n  selector: 'app-print-production-order',\n  templateUrl: './print-production-order.component.html',\n  styleUrls: ['./print-production-order.component.scss']\n})\nexport class PrintProductionOrderComponent implements OnInit {\n\n  idOrder: string;\n  productionOrder: any;\n  orderPosition: OrderPosition[];\n\n  printPosition: any[];\n  printSide: any[];\n\n  constructor(\n    private printService: PrintService,\n    private productionService: ProductionServiceService,\n    private cookieService: CookieService,\n  ) {\n    this.printPosition = JSON.parse(this.cookieService.get('printPositionColumns'));\n    this.printSide = JSON.parse(this.cookieService.get('printSideColumns'));\n  }\n\n  ngOnInit() {\n    console.log(\"Starting loading data...\")\n    forkJoin([\n      this.productionService.getProductionOrder(this.idOrder),\n      this.productionService.getOrderPositions(this.idOrder)\n    ]).subscribe({\n      next: (res) => {\n        this.productionOrder = res[0];\n        this.orderPosition = res[1];\n      },\n      complete: () => {\n        console.log(\"Complete load data.\")\n        this.onDataReady();\n      }\n    })\n  }\n\n  onDataReady() {\n    setTimeout(() => {\n      console.log(\"Creating layout...\")\n      let html = document.getElementById('production-order-print');\n\n      let css = '@page {size: a4 landscape; margin: 0.5cm; padding: 0;}',\n        head = document.head || document.getElementsByTagName('head')[0],\n        style = document.createElement('style');\n      style.type = 'text/css';\n      style.media = 'print';\n      style.appendChild(document.createTextNode(css));\n      head.appendChild(style);\n\n      window.print();\n      this.printService.removePrintComponentFromBody();\n    });\n  }\n\n\n  checkShow(sw) {\n    return this.printPosition.find(e => e.field === sw).show;\n  }\n\n  checkShowSide(sw) {\n    return this.printSide.find(e => e.field === sw).show;\n  }\n\n\n  yesNo(or) {\n    return or ? \"TAK\" : \"\";\n  }\n\n}","<div id=\"production-order-print\">\n\n    <div class=\"header\">\n        <div class=\"row p-0 m-0\">\n            <div class=\"col\">\n                <div class=\"row p-0 m-0\" style=\"font-size: 16px;\">\n                    <div class=\"col text-left\">\n                        <b>{{productionOrder.myCompany.name}}</b>\n                    </div>\n                    <div class=\"col text-center\"><b>{{productionOrder.orderNumber}}</b></div>\n                    <div class=\"col text-right\"><span style=\"font-size: 14px;\">NAZWA KONTRAHENTA</span>\n                        <br />\n                        <b>{{productionOrder.client.name}}</b>\n                    </div>\n                </div>\n                <div class=\"row p-0 m-0\" style=\"font-size: 14px;\">\n                    <div class=\"col text-left\"><span>Zamówienie klienta nr.:\n                        </span><b>{{productionOrder.numberClientOrder}}</b></div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <table id=\"table-data\" class=\"ml-4 mr-4 mb-4\">\n        <thead class=\"border header-data-table\">\n            <tr>\n                <th style=\"width: 20px;\" class=\"p-0 pl-1 m-0\">Nr.</th>\n                <th class=\"col150\">Rodzaj / Numer kształ.</th>\n                <th class=\"text-center\" style=\"width: auto;\">Strony</th>\n                <th class=\"col70\" *ngIf=\"checkShow('numberFv')\">Numer faktury</th>\n                <th class=\"col50\" *ngIf=\"checkShow('accepted')\">Zaakceptowano</th>\n                <th class=\"col70\" *ngIf=\"checkShow('statusOrderPosition')\">Status</th>\n                <th class=\"col50\" *ngIf=\"checkShow('completed')\">Wykonano</th>\n                <th class=\"col70\" *ngIf=\"checkShow('dateCompletedPosition')\">Data wykonania</th>\n                <th class=\"col50\" *ngIf=\"checkShow('warranty')\">Gwarancja</th>\n                <th class=\"col150\" *ngIf=\"checkShow('comment')\">Uwagi</th>\n            </tr>\n        </thead>\n        <tbody class=\"pSideRow border\">\n            <tr class=\"pOrder\" *ngFor=\"let rowData of orderPosition\">\n                <td>{{rowData.positionNumber}}</td>\n                <td>{{rowData.profilType}}<br />{{rowData.profilNumber}}</td>\n                <td style=\"max-height: 30px;\">\n                    <table style=\"height: 100%\">\n                        <thead class=\"pSide\">\n                            <tr>\n                                <th>Strona</th>\n                                <th>Nr. Okl.</th>\n                                <th>Szer. Okl</th>\n                                <th class=\"text-center\">Wymiary</th>\n                                <th>Suma MB</th>\n                                <th *ngIf=\"checkShowSide('usedFilm')\" class=\"text-center\">Zużycie</th>\n                                <th *ngIf=\"checkShowSide('plnMb')\">pln/mb</th>\n                                <th *ngIf=\"checkShowSide('costSet6Mb')\">kpl. 6Mb</th>\n                                <th *ngIf=\"checkShowSide('costSetup')\">Ust.</th>\n                                <th *ngIf=\"checkShowSide('costColorChange')\">Zm. kol.</th>\n                                <th *ngIf=\"checkShowSide('employees')\">Pracownicy</th>\n                                <th *ngIf=\"checkShowSide('glue')\">Klej</th>\n                                <th *ngIf=\"checkShowSide('statusOrderPosition')\">Status\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr class=\"positionSides\" *ngFor=\"let rowSide of rowData.postionSide\">\n                                <td class=\"col-side\">{{rowSide.side}}</td>\n                                <td class=\"col-filmNumber\">{{rowSide.filmNumber}}</td>\n                                <td class=\"col-filmWidth\">{{rowSide.filmWidth}}</td>\n                                <td class=\"col-dim\">\n                                    <table *ngIf=\"rowSide.profilDimensions.length != 0\"\n                                        style=\"height: 100%;width: 100%;\">\n                                        <thead class=\"pSideDim\" style=\"height: 100%\">\n                                            <tr>\n                                                <th style=\"font-size: 11px;\">Szt.</th>\n                                                <th style=\"font-size: 11px;\">Dług.</th>\n                                                <th style=\"font-size: 9px;\">Suma mb</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody style=\"height: 100%\">\n                                            <tr class=\"positionDim\" *ngFor=\"let rowDim of rowSide.profilDimensions\">\n                                                <td class=\"col-dimquantity\">{{rowDim.quantity}}</td>\n                                                <td class=\"col-dimlength\">{{rowDim.length}}</td>\n                                                <td class=\"col-dimsumMb\">{{rowDim.sumMb | number : '1.2-2'}}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </td>\n                                <td class=\"col-sumAllDim\">{{rowSide.sumAllDimensions | number : '1.2-2'}}\n                                </td>\n                                <td class=\"col-dim\" *ngIf=\"checkShowSide('usedFilm')\">\n                                    <table *ngIf=\"rowSide.usedFilm.length != 0\" style=\"height: 100%;width: 100%;\">\n                                        <thead class=\"pSideDim\">\n                                            <tr>\n                                                <th style=\"font-size: 11px;\">Szer.</th>\n                                                <th style=\"font-size: 11px;\">Dł.</th>\n                                                <th style=\"font-size: 9px;\">Suma m2</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr class=\"positionDim\" *ngFor=\"let rowUse of rowSide.usedFilm\">\n                                                <td class=\"col-usewidth\">{{rowUse.width}}</td>\n                                                <td class=\"col-uselength\">{{rowUse.length}}</td>\n                                                <td class=\"col-usesumM2\">{{rowUse.sumM2 | number : '1.2-2'}}\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </td>\n                                <td class=\"col-plnMb\" *ngIf=\"checkShowSide('plnMb')\">\n                                    {{rowSide.plnMb!=0 ? rowSide.plnMb : \"\"}}</td>\n                                <td class=\"col-costSet6Mb\" *ngIf=\"checkShowSide('costSet6Mb')\">\n                                    {{rowSide.costSet6Mb!=0 ? rowSide.costSet6Mb : \"\"}}</td>\n                                <td class=\"col-costSetup\" *ngIf=\"checkShowSide('costSetup')\">\n                                    {{rowSide.costSetup!=0 ? rowSide.costSetup : \"\"}}</td>\n                                <td class=\"col-colorChange\" *ngIf=\"checkShowSide('costColorChange')\">\n                                    {{rowSide.costColorChange!=0 ? rowSide.costColorChange : \"\"}}\n                                </td>\n                                <td class=\"col-employees\" *ngIf=\"checkShowSide('employees')\">\n                                    {{rowSide.employees}}</td>\n                                <td class=\"col-glue\" *ngIf=\"checkShowSide('glue')\">{{rowSide.glue}}</td>\n                                <td class=\"col-statusOrderPosition\" *ngIf=\"checkShowSide('statusOrderPosition')\">\n                                    {{rowSide.statusOrderPosition}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </td>\n                <td *ngIf=\"checkShow('numberFv')\">\n                    {{rowData.numberFv}}</td>\n                <td *ngIf=\"checkShow('accepted')\">\n                    {{yesNo(rowData.accepted)}}</td>\n                <td *ngIf=\"checkShow('statusOrderPosition')\">\n                    {{rowData.statusOrderPosition}}</td>\n                <td *ngIf=\"checkShow('completed')\">\n                    {{yesNo(rowData.completed)}}</td>\n                <td *ngIf=\"checkShow('dateCompletedPosition')\">\n                    {{rowData.dateCompletedPosition}}</td>\n                <td *ngIf=\"checkShow('warranty')\">\n                    {{yesNo(rowData.warranty)}}</td>\n                <td *ngIf=\"checkShow('comment')\">\n                    <div [innerHTML]=\"rowData.comment\"></div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n\n    <div class=\"footer\">\n        <div *ngIf=\"checkShow('footer')\" class=\"row p-0 m-0\" style=\"font-size: 14px;\">\n            <div class=\"col\">\n                <div class=\"row p-0 m-0\">\n                    <div class=\"col text-left justify-content-start\" style=\"display: grid;\">\n                        <div class=\"pb-1\">\n                            <span>DATA PRZYJĘCIA: <b>{{productionOrder.dateAcceptanceOrder}}</b></span>\n                        </div>\n                        <div class=\"pb-3\">\n                            <span>Potwierdzam zgodność danych <br /> do wykonania zlecenia</span>\n                        </div>\n                        <div><span>................................................</span><br /><span>(czytelny\n                                podpis odbierającego)</span></div>\n                    </div>\n\n                    <div class=\"col text-left justify-content-start\" style=\"display: grid;\">\n                        <div><span>DATA WYKONANIA: </span></div>\n                        <div><b>{{productionOrder.dateCompletedOrder}}</b></div>\n                        <div><span>................................................</span></div>\n                    </div>\n                    <div class=\"col text-left justify-content-center\" style=\"display: grid;\">\n                        <div class=\"pb-1\"><span>DATA ODBIORU: <b>{{productionOrder.dateReceiptOrder}}</b></span>\n                        </div>\n                        <div class=\"pb-3\">\n                            <span>Potwierdzam odbiór zgodnie <br /> z ilością i jakością</span>\n                        </div>\n                        <div><span>................................................</span><br /><span>(czytelny\n                                podpis zlecającego)</span></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './main/dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuardService as AuthGuard } from './_services/auth-guard.service';\n\nconst routes: Routes = [\n\n  {\n    path: 'okleiny',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./films/films.module').then((m) => m.FilmsModule)\n  },\n  {\n    path: 'kontrahent',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./contractor/contractor.module').then((m) => m.ContractorModule)\n  },\n\n  {\n    path: 'katalog',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./catalog/catalog.module').then((m) => m.CatalogModule)\n  },\n  {\n    path: 'settings',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./settings/settings.module').then((m) => m.SettingsModule)\n  },\n  {\n    path: 'produkcja',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./production/production.module').then((m) => m.ProductionModule)\n  },\n  {\n    path: 'oferty',\n    canActivate: [AuthGuard],\n    loadChildren: () => import('./offers/offers.module').then((m) => m.OffersModule)\n  },\n  \n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: '', redirectTo: '/home', pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { useHash: true })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public auth: AuthService,\n    private http: HttpClient,\n    private router: Router) { }\n\n  ngOnInit() {\n\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.auth.loading = true;\n    this.auth.login(this.f);\n  }\n\n}\n","<div class=\"login-background\"></div>\n<form class=\"form-signin card\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <img class=\"mb-4 mt-2\" style=\"margin: 0 auto\" src=\"../../assets/img/logo_blue.png\" alt=\"\" height=\"60\" width=\"220\">\n    <div class=\"form-group mb-0\">\n        <input type=\"text\" placeholder=\"Login\" formControlName=\"username\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.username.errors.required\">Login jest wymagany</div>\n        </div>\n    </div>\n    <div class=\"form-group mb-0\">\n        <input type=\"password\" placeholder=\"Hasło\" formControlName=\"password\" class=\"form-control\"\n            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n            <div *ngIf=\"f.password.errors.required\">Hasło jest wymagane</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div *ngIf=\"submitted\" class=\"invalid-feedback\">\n            <div *ngIf=\"auth.errorAuth\">Niepoprawny login lub hasło</div>\n        </div>\n        <button [disabled]=\"auth.loading\" class=\"mt-3 btn btn-outline-primary btn-block\">\n            <span *ngIf=\"auth.loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n            Zaloguj\n        </button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { PrintService } from '../print/print.service';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor(public auth: AuthService, public printService: PrintService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<app-sidebar [class.isPrinting]=\"printService.isPrinting\" [hidden]=\"!auth.userValue\" class=\"sbs-sidebar\"></app-sidebar>\n<app-page-container [ngClass]=\"{'nopad':!auth.userValue}\" class=\"page-container\">\n\n</app-page-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-container',\n  templateUrl: './page-container.component.html',\n  styleUrls: ['./page-container.component.scss']\n})\nexport class PageContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"page-content-wrapper \">\n    <div class=\"content\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}