{"version":3,"sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/drag-drop.js","./src/app/offers/print-offer-settings/print-offer-settings.component.ts","./src/app/offers/print-offer-settings/print-offer-settings.component.html","./src/app/offers/form/add-offer-position/add-offer-position.component.ts","./src/app/offers/form/add-offer-position/add-offer-position.component.html","./src/app/offers/form/update-film-buy-cost/update-film-buy-cost.component.ts","./src/app/offers/form/update-film-buy-cost/update-film-buy-cost.component.html","./src/app/offers/timeline-widget/timeline-widget.component.ts","./src/app/offers/timeline-widget/timeline-widget.component.html","./src/app/offers/form/update-client-helpers/update-client-helpers.component.ts","./src/app/offers/form/update-client-helpers/update-client-helpers.component.html","./src/app/offers/view-offer/view-offer.component.ts","./src/app/offers/view-offer/view-offer.component.html","./src/app/offers/main-offers/main-offers.component.ts","./src/app/offers/main-offers/main-offers.component.html","./src/app/offers/form/update-offer-position/update-offer-position.component.ts","./src/app/offers/form/update-offer-position/update-offer-position.component.html","./src/app/offers/form/new-offer/form-new-offer.component.ts","./src/app/offers/form/new-offer/form-new-offer.component.html","./src/app/offers/details-offer/details-offer.component.ts","./src/app/offers/details-offer/details-offer.component.html","./src/app/offers/offers-routing.module.ts","./src/app/offers/offers.module.ts","./src/app/offers/form/update-client-helper-range/update-client-helper-range.component.ts","./src/app/offers/form/update-client-helper-range/update-client-helper-range.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkR;AACvO;AACmD;AACN;AACwB;AACb;AAClB;AAC9B;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iCAAiC,mDAAmD;AACpF;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8BAA8B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,GAAG,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B,EAAE,gBAAgB;AACrF;AACA,mCAAmC,6FAA+B,EAAE,iBAAiB;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,iCAAiC;AACjC;AACA,+BAA+B,4CAAO;AACtC;AACA,wCAAwC,iDAAY;AACpD;AACA,sCAAsC,iDAAY;AAClD;AACA,mCAAmC,iDAAY;AAC/C;AACA,mCAAmC,iDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA,2BAA2B,4CAAO;AAClC;AACA,4BAA4B,4CAAO;AACnC;AACA,yBAAyB,4CAAO;AAChC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,kBAAkB,GAAG,kBAAkB;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,2EAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,eAAe;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,aAAa;AACvD;AACA;AACA;AACA,uCAAuC;AACvC,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gCAAgC,OAAO,GAAG,mBAAmB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,6CAA6C;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,qBAAqB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,cAAc,MAAM,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C,6BAA6B,kBAAkB;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,UAAU;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,0BAA0B,4CAAO;AACjC;AACA,2BAA2B,4CAAO;AAClC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,iDAAY;AACvD;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAQ,IAAI,4DAAuB;AAC/C,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,2EAAa;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,+DAA+D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,2BAA2B;AAC5F;AACA;AACA;AACA,oEAAoE,2BAA2B;AAC/F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mBAAmB,gBAAgB;AACnC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,2EAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,mBAAmB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2EAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,aAAa;AAC/D;AACA,qBAAqB;AACrB;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4EAAc,CAAC,2EAAa;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,qBAAqB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6FAA+B;AACnE;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA,6BAA6B,4CAAO;AACpC;AACA,0BAA0B,4CAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,oCAAoC,sDAAe,CAAC,oDAAM,GAAG,sDAAe,CAAC,wDAAQ,GAAG;AACtJ,yBAAyB,wEAAkB,EAAE,+CAA+C,6BAA6B,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,wDAAQ,GAAG,EAAE,+CAA+C;AAChN;AACA,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU,OAAO,oDAAM,EAAE,GAAG;AACjD,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,4BAA4B,sDAAe,CAAC,wDAAQ,GAAG,sDAAe,CAAC,oDAAM,GAAG,sDAAe,CAAC,oEAAa,GAAG,sDAAe,oBAAoB;AACjM,iBAAiB,wEAAkB,EAAE,uCAAuC,qBAAqB,8DAAQ,CAAC,wDAAQ,GAAG,8DAAQ,CAAC,oDAAM,GAAG,8DAAQ,CAAC,oEAAa,GAAG,8DAAQ,oBAAoB,EAAE,uCAAuC;AACrO;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,OAAO,oEAAa,EAAE;AAC3B,KAAK;AACL;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB,gBAAgB,qBAAqB;AACrC,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG,OAAO,oDAAM,EAAE,GAAG,OAAO,oEAAa,EAAE,GAAG,yBAAyB,EAAE,EAAE,QAAQ,EAAE;;AAErG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,4DAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,8DAA8D,sCAAsC;AACpG,wBAAwB,+DAAwB,EAAE,6EAA6E,qDAAqD,6CAA6C,gEAAyB,GAAG,8DAA8D,KAAK;AAChU;AACA,gBAAgB,OAAO,mDAAK,uCAAuC;AACnE;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA,6BAA6B,8DAA8D;AAC3F,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4DAAc;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mFAAqB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS,mBAAmB,gEAAS;AAC3D;AACA;AACA;AACA,6BAA6B,yEAAW;AACxC;AACA;AACA;AACA,gGAAgG,KAAK;AACrG;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mFAAqB;AACvD,qCAAqC,mFAAqB;AAC1D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,uFAAuF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,YAAY,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,CAAC,gEAAc,MAAM,+DAAwB,2BAA2B,+DAAwB,CAAC,uEAAgB,GAAG,+DAAwB,sBAAsB;AACpY,mBAAm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,KAAK,gBAAgB,UAAU,OAAO,yDAAW,EAAE,EAAE,EAAE,GAAG;AAC1D,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,4BAA4B,0DAAY;AACxC;AACA,yBAAyB,0DAAY;AACrC;AACA,2BAA2B,0DAAY;AACvC;AACA,0BAA0B,0DAAY;AACtC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA,yBAAyB,+CAAU;AACnC,0DAA0D,0DAAG;AAC7D;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2DAAI,KAAK,gEAAS;AACpC;AACA;AACA;AACA,uCAAuC,gEAAS;AAChD;AACA,YAAY,0DAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY,gEAAS;AACrB,uBAAuB,kDAAK;AAC5B,mDAAmD,gEAAS;AAC5D,iBAAiB;AACjB,aAAa,GAAG,gEAAS;AACzB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2EAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qCAAqC,kFAAoB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,eAAe;AAC/C,SAAS;AACT;AACA,6BAA6B,yCAAyC;AACtE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oHAAoH;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,2BAA2B,+DAAwB,CAAC,wDAAU,GAAG,+DAAwB,qBAAqB,+DAAwB,CAAC,wDAAQ,GAAG,+DAAwB,CAAC,oDAAM,GAAG,+DAAwB,CAAC,8DAAgB,GAAG,+DAAwB,sBAAsB,+DAAwB,CAAC,gEAAc,MAAM,+DAAwB,YAAY,+DAAwB,CAAC,+DAAiB,GAAG,+DAAwB,uBAAuB;AACve,eAAe,+DAAwB,EAAE,sHAAsH;AAC/J,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAk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","file":"offers-offers-module-es2015.js","sourcesContent":["import { ɵɵdefineInjectable, ɵɵinject, NgZone, Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, ElementRef, ChangeDetectorRef, Optional, SkipSelf, Output, TemplateRef, ViewContainerRef, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { ViewportRuler, ScrollDispatcher, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction extendStyles(dest, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            dest[key] = source[key];\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        touchAction: enable ? '' : 'none',\n        webkitUserDrag: enable ? '' : 'none',\n        webkitTapHighlightColor: enable ? '' : 'transparent',\n        userSelect: userSelect,\n        msUserSelect: userSelect,\n        webkitUserSelect: userSelect,\n        MozUserSelect: userSelect\n    });\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]);\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return pointerY > top - yThreshold && pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold && pointerX < right + xThreshold;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document, _viewportRuler) {\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this._viewportRuler.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element)\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = event.target;\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        // Used when figuring out whether an element is inside the scroll parent. If the scrolled\n        // parent is the `document`, we use the `documentElement`, because IE doesn't support\n        // `contains` on the `document`.\n        const scrolledParentNode = target === this._document ? target.documentElement : target;\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && scrolledParentNode.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    clone.value = source.value;\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch (_a) { }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._handles.find(handle => {\n                    const target = event.target;\n                    return !!target && (target === handle || handle.contains(target));\n                });\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            // Prevent the default action as early as possible in order to block\n            // native actions like dragging the selected text or images with the mouse.\n            event.preventDefault();\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferrable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!this._dropContainer || !this._dropContainer.isDragging()) {\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We only need the preview dimensions if we have a boundary element.\n            if (this._boundaryElement) {\n                // Cache the preview element rect if we haven't cached it already or if\n                // we cached it too early before the element dimensions were computed.\n                if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n                    this._previewRect = (this._preview || this._rootElement).getBoundingClientRect();\n                }\n            }\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                const activeTransform = this._activeTransform;\n                activeTransform.x =\n                    constrainedPointerPosition.x - this._pickupPositionOnPage.x + this._passiveTransform.x;\n                activeTransform.y =\n                    constrainedPointerPosition.y - this._pickupPositionOnPage.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n                // Apply transform as attribute if dragging and svg element to work for IE\n                if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n                    const appliedTransform = `translate(${activeTransform.x} ${activeTransform.y})`;\n                    this._rootElement.setAttribute('transform', appliedTransform);\n                }\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        this.withRootElement(element);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n        }\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, false));\n        this._toggleNativeDragInteractions();\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            removeNode(this._rootElement);\n        }\n        removeNode(this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement = this._rootElement = this._ownerSVGElement = this._placeholderTemplate =\n            this._previewTemplate = this._anchor = null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        this._disabledHandles.delete(handle);\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        if (this._preview) {\n            removeNode(this._preview);\n        }\n        if (this._previewRef) {\n            this._previewRef.destroy();\n        }\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        if (this._placeholder) {\n            removeNode(this._placeholder);\n        }\n        if (this._placeholderRef) {\n            this._placeholderRef.destroy();\n        }\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor = this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(this._getPointerPositionOnPage(event))\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const preview = this._preview = this._createPreviewElement();\n            const placeholder = this._placeholder = this._createPlaceholderElement();\n            const anchor = this._anchor = this._anchor || this._document.createComment('');\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            element.style.display = 'none';\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            getPreviewInsertionPoint(this._document).appendChild(preview);\n            this.started.next({ source: this }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Always stop propagation for the event that initializes\n        // the dragging sequence, in order to prevent it from potentially\n        // starting another sequence for a draggable parent somewhere up the DOM tree.\n        event.stopPropagation();\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const isSyntheticEvent = !isTouchSequence && this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (event.target && event.target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            this._rootElementTapHighlight = rootElement.style.webkitTapHighlightColor || '';\n            rootElement.style.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry.scroll.subscribe(scrollEvent => {\n            this._updateOnScroll(scrollEvent);\n        });\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement = previewTemplate && previewTemplate.template &&\n            !previewTemplate.matchSize ? { x: 0, y: 0 } :\n            this._getPointerPositionInElement(referenceElement, event);\n        const pointerPosition = this._pickupPositionOnPage = this._lastKnownPointerPosition =\n            this._getPointerPositionOnPage(event);\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        this._rootElement.style.display = '';\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._boundaryRect = this._previewRect = undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(this._getPointerPositionOnPage(event));\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance\n            });\n            container.drop(this, currentIndex, this._initialContainer, isPointerOverContainer, distance, this._initialIndex);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer && this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled ? this._initialIndex : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this)\n                });\n            });\n        }\n        this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n        this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n        this._preview.style.transform =\n            getTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._rootElement.getBoundingClientRect() : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform =\n                    getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            const element = this._rootElement;\n            preview = deepCloneNode(element);\n            matchElementSize(preview, element.getBoundingClientRect());\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            pointerEvents: 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            margin: '0',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            zIndex: `${this._config.zIndex || 1000}`\n        });\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._preview.style.transform = getTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event || (event.target === this._preview && event.propertyName === 'transform')) {\n                        this._preview.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(referenceElement, event) {\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event) ?\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n            // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n            // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n            // throwing an error. The value returned here will be incorrect, but since this only\n            // breaks inside a developer tool and the value is only used for secondary information,\n            // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n            (event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }) : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition ? this.constrainPosition(point, this) : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const previewRect = this._previewRect;\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewRect.height - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewRect.width - pickupX);\n            x = clamp(x, minX, maxX);\n            y = clamp(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        if (this._initialTransform == null) {\n            this._initialTransform = this._rootElement.style.transform || '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        this._rootElement.style.transform = this._initialTransform ?\n            transform + ' ' + this._initialTransform : transform;\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        const elementRect = this._rootElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = event.target;\n            // ClientRect dimensions are based on the scroll position of the page and its parent node so\n            // we have to update the cached boundary ClientRect if the user has scrolled. Check for\n            // the `document` specifically since IE doesn't support `contains` on it.\n            if (this._boundaryRect && (target === this._document ||\n                (target !== this._boundaryElement && target.contains(this._boundaryElement)))) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        const cachedPosition = this._parentPositions.positions.get(this._document);\n        return cachedPosition ? cachedPosition.scrollPosition :\n            this._viewportRuler.getViewportScrollPosition();\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * Helper to remove a node from the DOM and to do all the necessary null checks.\n * @param node Node to be removed.\n */\nfunction removeNode(node) {\n    if (node && node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the element into which the drag preview should be inserted. */\nfunction getPreviewInsertionPoint(documentRef) {\n    // We can't use the body if the user is in fullscreen mode,\n    // because the preview will render under the fullscreen element.\n    // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n    return documentRef.fullscreenElement ||\n        documentRef.webkitFullscreenElement ||\n        documentRef.mozFullScreenElement ||\n        documentRef.msFullscreenElement ||\n        documentRef.body;\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp$1(fromIndex, array.length - 1);\n    const to = clamp$1(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp$1(currentIndex, currentArray.length - 1);\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp$1(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp$1(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Number of pixels to scroll for each frame when auto-scrolling an element.\n * The value comes from trying it out manually until it feels right.\n */\nconst AUTO_SCROLL_STEP = 2;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occured and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = { drag: null, delta: 0, overlaps: false };\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Direction in which the list is oriented. */\n        this._orientation = 'vertical';\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Layout direction of the drop list. */\n        this._direction = 'ltr';\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                if (this._verticalScrollDirection === 1 /* UP */) {\n                    incrementVerticalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._verticalScrollDirection === 2 /* DOWN */) {\n                    incrementVerticalScroll(node, AUTO_SCROLL_STEP);\n                }\n                if (this._horizontalScrollDirection === 1 /* LEFT */) {\n                    incrementHorizontalScroll(node, -AUTO_SCROLL_STEP);\n                }\n                else if (this._horizontalScrollDirection === 2 /* RIGHT */) {\n                    incrementHorizontalScroll(node, AUTO_SCROLL_STEP);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document, _viewportRuler);\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._cacheItems();\n        this._siblings.forEach(sibling => sibling._startReceiving(this));\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /**\n     * Emits an event to indicate that the user moved an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this.start();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        let newIndex;\n        if (index == null) {\n            newIndex = this.sortingDisabled ? this._draggables.indexOf(item) : -1;\n            if (newIndex === -1) {\n                // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY);\n            }\n        }\n        else {\n            newIndex = index;\n        }\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else if (this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            const reference = activeDraggables[0].getRootElement();\n            reference.parentNode.insertBefore(placeholder, reference);\n            activeDraggables.unshift(item);\n        }\n        else {\n            coerceElement(this.element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that the positions were already cached when we called `start` above,\n        // but we need to refresh them since the amount of items has changed and also parent rects.\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param previousIndex Index of the item when dragging started.\n     *\n     * @breaking-change 11.0.0 `previousIndex` parameter to become required.\n     */\n    drop(item, currentIndex, previousContainer, isPointerOverContainer, distance, previousIndex) {\n        this._reset();\n        // @breaking-change 11.0.0 Remove this fallback logic once `previousIndex` is a required param.\n        if (previousIndex == null) {\n            previousIndex = previousContainer.getItemIndex(item);\n        }\n        this.dropped.next({ item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._cacheItems();\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        this._orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        if (!this._isDragging) {\n            return this._draggables.indexOf(item);\n        }\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this._orientation === 'horizontal' && this._direction === 'rtl' ?\n            this._itemPositions.slice().reverse() : this._itemPositions;\n        return findIndex(items, currentItem => currentItem.drag === item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return;\n        }\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentIndex = findIndex(siblings, currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        this.sorted.next({\n            previousIndex: currentIndex,\n            currentIndex: newIndex,\n            container: this,\n            item\n        });\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem ? item.getPlaceholderElement() :\n                sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = `translate3d(${Math.round(sibling.offset)}px, 0, 0)`;\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = `translate3d(0, ${Math.round(sibling.offset)}px, 0)`;\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* NONE */;\n        let horizontalScrollDirection = 0 /* NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = { width, height, top: 0, right: width, bottom: height, left: 0 };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode && (verticalScrollDirection !== this._verticalScrollDirection ||\n            horizontalScrollDirection !== this._horizontalScrollDirection ||\n            scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this._orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables.map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return { drag, offset: 0, clientRect: getMutableClientRect(elementToMeasure) };\n        }).sort((a, b) => {\n            return isHorizontal ? a.clientRect.left - b.clientRect.left :\n                a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                rootElement.style.transform = '';\n            }\n        });\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._activeDraggables = [];\n        this._itemPositions = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        let itemOffset = isHorizontal ? newPosition.left - currentPosition.left :\n            newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal ? newPosition.width - currentPosition.width :\n                newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this._orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this._orientation === 'horizontal';\n        return findIndex(this._itemPositions, ({ drag, clientRect }, _, array) => {\n            if (drag === item) {\n                // If there's only one item left in the container, it must be\n                // the dragged item itself so we use it as a reference.\n                return array.length < 2;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag && this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal ?\n                // Round these down since most browsers report client rects with\n                // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right) :\n                pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n    }\n    /** Caches the current items in the list and their positions. */\n    _cacheItems() {\n        this._activeDraggables = this._draggables.slice();\n        this._cacheItemPositions();\n        this._cacheParentPositions();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!isInsideClientRect(this._clientRect, x, y) || !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling)) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry.scroll.subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    // Since we know the amount that the user has scrolled we can shift all of the\n                    // client rectangles ourselves. This is cheaper than re-measuring everything and\n                    // we can avoid inconsistent behavior where we might be measuring the element before\n                    // its position has changed.\n                    this._itemPositions.forEach(({ clientRect }) => {\n                        adjustClientRect(clientRect, scrollDifference.top, scrollDifference.left);\n                    });\n                    // We need two loops for this, because we want all of the cached\n                    // positions to be up-to-date before we re-sort the item.\n                    this._itemPositions.forEach(({ drag }) => {\n                        if (this._dragDropRegistry.isDragging(drag)) {\n                            // We need to re-sort the item manually, because the pointer move\n                            // events won't be dispatched while the user is scrolling.\n                            drag._sortFromLastPointerPosition();\n                        }\n                    });\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = shadowRoot || this._document;\n        }\n        return this._cachedShadowRoot;\n    }\n}\n/**\n * Finds the index of an item that matches a predicate function. Used as an equivalent\n * of `Array.prototype.findIndex` which isn't part of the standard Google typings.\n * @param array Array in which to look for matches.\n * @param predicate Function used to determine whether an item is a match.\n */\nfunction findIndex(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i], i, array)) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Increments the vertical scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementVerticalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(0, amount);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollTop += amount;\n    }\n}\n/**\n * Increments the horizontal scroll position of a node.\n * @param node Node whose scroll position should change.\n * @param amount Amount of pixels that the `node` should be scrolled.\n */\nfunction incrementHorizontalScroll(node, amount) {\n    if (node === window) {\n        node.scrollBy(amount, 0);\n    }\n    else {\n        // Ideally we could use `Element.scrollBy` here as well, but IE and Edge don't support it.\n        node.scrollLeft += amount;\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* DOWN */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* RIGHT */;\n    }\n    return 0 /* NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* NONE */;\n    let horizontalScrollDirection = 0 /* NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = new Set();\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /** Emits when the viewport has been scrolled while the user is dragging an item. */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.size) {\n                event.preventDefault();\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._preventDefaultWhileDragging, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.has(drag)) {\n            return;\n        }\n        this._activeDragInstances.add(drag);\n        if (this._activeDragInstances.size === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            const moveEvent = isTouchEvent ? 'touchmove' : 'mousemove';\n            const upEvent = isTouchEvent ? 'touchend' : 'mouseup';\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(moveEvent, {\n                handler: (e) => this.pointerMove.next(e),\n                options: activeCapturingEventOptions\n            })\n                .set(upEvent, {\n                handler: (e) => this.pointerUp.next(e),\n                options: true\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        this._activeDragInstances.delete(drag);\n        if (this._activeDragInstances.size === 0) {\n            this._clearGlobalListeners();\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.has(drag);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n}\nDragDropRegistry.ɵfac = function DragDropRegistry_Factory(t) { return new (t || DragDropRegistry)(ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\nDragDropRegistry.ɵprov = ɵɵdefineInjectable({ factory: function DragDropRegistry_Factory() { return new DragDropRegistry(ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: DragDropRegistry, providedIn: \"root\" });\nDragDropRegistry.ctorParameters = () => [\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n}\nDragDrop.ɵfac = function DragDrop_Factory(t) { return new (t || DragDrop)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(NgZone), ɵngcc0.ɵɵinject(ViewportRuler), ɵngcc0.ɵɵinject(DragDropRegistry)); };\nDragDrop.ɵprov = ɵɵdefineInjectable({ factory: function DragDrop_Factory() { return new DragDrop(ɵɵinject(DOCUMENT), ɵɵinject(NgZone), ɵɵinject(ViewportRuler), ɵɵinject(DragDropRegistry)); }, token: DragDrop, providedIn: \"root\" });\nDragDrop.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewportRuler },\n    { type: DragDropRegistry }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDrop, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ViewportRuler }, { type: DragDropRegistry }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n}\nCdkDropListGroup.ɵfac = function CdkDropListGroup_Factory(t) { return new (t || CdkDropListGroup)(); };\nCdkDropListGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropListGroup, selectors: [[\"\", \"cdkDropListGroup\", \"\"]], inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, exportAs: [\"cdkDropListGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }])] });\nCdkDropListGroup.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDropListGroupDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropListGroup, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropListGroup]',\n                exportAs: 'cdkDropListGroup',\n                providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }]\n            }]\n    }], function () { return []; }, { disabled: [{\n            type: Input,\n            args: ['cdkDropListGroupDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\nconst ɵ0 = undefined;\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _dir, _group, \n    /**\n     * @deprecated _scrollDispatcher parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    _scrollDispatcher, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._group = _group;\n        this._scrollDispatcher = _scrollDispatcher;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef.getVisibleElement().compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            // @breaking-change 11.0.0 Remove null check for _scrollDispatcher once it's required.\n            if (!this._scrollableParentsResolved && this._scrollDispatcher) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                item: event.item.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                distance: event.distance\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n}\nCdkDropList.ɵfac = function CdkDropList_Factory(t) { return new (t || CdkDropList)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST_GROUP, 12), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8)); };\nCdkDropList.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDropList, selectors: [[\"\", \"cdkDropList\", \"\"], [\"cdk-drop-list\"]], hostAttrs: [1, \"cdk-drop-list\"], hostVars: 7, hostBindings: function CdkDropList_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassProp(\"cdk-drop-list-disabled\", ctx.disabled)(\"cdk-drop-list-dragging\", ctx._dropListRef.isDragging())(\"cdk-drop-list-receiving\", ctx._dropListRef.isReceiving());\n    } }, inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], id: \"id\", enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], data: [\"cdkDropListData\", \"data\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, exportAs: [\"cdkDropList\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ])] });\n/** Keeps track of the drop lists that are currently on the page. */\nCdkDropList._dropLists = [];\nCdkDropList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: CdkDropListGroup, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DROP_LIST_GROUP,] }, { type: SkipSelf }] },\n    { type: ScrollDispatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] }\n];\nCdkDropList.propDecorators = {\n    connectedTo: [{ type: Input, args: ['cdkDropListConnectedTo',] }],\n    data: [{ type: Input, args: ['cdkDropListData',] }],\n    orientation: [{ type: Input, args: ['cdkDropListOrientation',] }],\n    id: [{ type: Input }],\n    lockAxis: [{ type: Input, args: ['cdkDropListLockAxis',] }],\n    disabled: [{ type: Input, args: ['cdkDropListDisabled',] }],\n    sortingDisabled: [{ type: Input, args: ['cdkDropListSortingDisabled',] }],\n    enterPredicate: [{ type: Input, args: ['cdkDropListEnterPredicate',] }],\n    autoScrollDisabled: [{ type: Input, args: ['cdkDropListAutoScrollDisabled',] }],\n    dropped: [{ type: Output, args: ['cdkDropListDropped',] }],\n    entered: [{ type: Output, args: ['cdkDropListEntered',] }],\n    exited: [{ type: Output, args: ['cdkDropListExited',] }],\n    sorted: [{ type: Output, args: ['cdkDropListSorted',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDropList, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDropList], cdk-drop-list',\n                exportAs: 'cdkDropList',\n                providers: [\n                    // Prevent child drop lists from picking up the same group as their parent.\n                    { provide: CDK_DROP_LIST_GROUP, useValue: ɵ0 },\n                    { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                ],\n                host: {\n                    'class': 'cdk-drop-list',\n                    '[id]': 'id',\n                    '[class.cdk-drop-list-disabled]': 'disabled',\n                    '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                    '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()'\n                }\n            }]\n    }], function () { return [{ type: ElementRef }, { type: DragDrop }, { type: ChangeDetectorRef }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: CdkDropListGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DROP_LIST_GROUP]\n            }, {\n                type: SkipSelf\n            }] }, { type: ScrollDispatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }]; }, { connectedTo: [{\n            type: Input,\n            args: ['cdkDropListConnectedTo']\n        }], id: [{\n            type: Input\n        }], enterPredicate: [{\n            type: Input,\n            args: ['cdkDropListEnterPredicate']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDropListDropped']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDropListEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDropListExited']\n        }], sorted: [{\n            type: Output,\n            args: ['cdkDropListSorted']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDropListDisabled']\n        }], sortingDisabled: [{\n            type: Input,\n            args: ['cdkDropListSortingDisabled']\n        }], autoScrollDisabled: [{\n            type: Input,\n            args: ['cdkDropListAutoScrollDisabled']\n        }], orientation: [{\n            type: Input,\n            args: ['cdkDropListOrientation']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDropListLockAxis']\n        }], data: [{\n            type: Input,\n            args: ['cdkDropListData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        this._parentDrag = parentDrag;\n    }\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nCdkDragHandle.ɵfac = function CdkDragHandle_Factory(t) { return new (t || CdkDragHandle)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_PARENT, 12)); };\nCdkDragHandle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragHandle, selectors: [[\"\", \"cdkDragHandle\", \"\"]], hostAttrs: [1, \"cdk-drag-handle\"], inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }])] });\nCdkDragHandle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DRAG_PARENT,] }, { type: Optional }, { type: SkipSelf }] }\n];\nCdkDragHandle.propDecorators = {\n    disabled: [{ type: Input, args: ['cdkDragHandleDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragHandle, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDragHandle]',\n                host: {\n                    'class': 'cdk-drag-handle'\n                },\n                providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DRAG_PARENT]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }]; }, { disabled: [{\n            type: Input,\n            args: ['cdkDragHandleDisabled']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nCdkDragPlaceholder.ɵfac = function CdkDragPlaceholder_Factory(t) { return new (t || CdkDragPlaceholder)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nCdkDragPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPlaceholder, selectors: [[\"ng-template\", \"cdkDragPlaceholder\", \"\"]], inputs: { data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }])] });\nCdkDragPlaceholder.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPlaceholder.propDecorators = {\n    data: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPlaceholder]',\n                providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }]\n            }]\n    }], function () { return [{ type: TemplateRef }]; }, { data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() { return this._matchSize; }\n    set matchSize(value) { this._matchSize = coerceBooleanProperty(value); }\n}\nCdkDragPreview.ɵfac = function CdkDragPreview_Factory(t) { return new (t || CdkDragPreview)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nCdkDragPreview.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDragPreview, selectors: [[\"ng-template\", \"cdkDragPreview\", \"\"]], inputs: { matchSize: \"matchSize\", data: \"data\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }])] });\nCdkDragPreview.ctorParameters = () => [\n    { type: TemplateRef }\n];\nCdkDragPreview.propDecorators = {\n    data: [{ type: Input }],\n    matchSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDragPreview, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[cdkDragPreview]',\n                providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }]\n            }]\n    }], function () { return [{ type: TemplateRef }]; }, { matchSize: [{\n            type: Input\n        }], data: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved.pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance\n            }))).subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ?\n                config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null ?\n                config.pointerDirectionChangeThreshold : 5,\n            zIndex: config === null || config === void 0 ? void 0 : config.zIndex\n        });\n        this._dragRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    ngAfterViewInit() {\n        // We need to wait for the zone to stabilize, in order for the reference\n        // element to be in the proper place in the DOM. This is mostly relevant\n        // for draggable elements inside portals since they get stamped out in\n        // their original DOM position and then they get transferred to the portal.\n        this._ngZone.onStable\n            .pipe(take(1), takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._updateRootElement();\n            // Listen for any newly-added handles.\n            this._handles.changes.pipe(startWith(this._handles), \n            // Sync the new handles with the DragRef.\n            tap((handles) => {\n                const childHandleElements = handles\n                    .filter(handle => handle._parentDrag === this)\n                    .map(handle => handle.element);\n                // Usually handles are only allowed to be a descendant of the drag element, but if\n                // the consumer defined a different drag root, we should allow the drag element\n                // itself to be a handle too.\n                if (this._selfHandle && this.rootElementSelector) {\n                    childHandleElements.push(this.element);\n                }\n                this._dragRef.withHandles(childHandleElements);\n            }), \n            // Listen if the state of any of the handles changes.\n            switchMap((handles) => {\n                return merge(...handles.map(item => {\n                    return item._stateChanges.pipe(startWith(item));\n                }));\n            }), takeUntil(this._destroyed)).subscribe(handleInstance => {\n                // Enabled/disable the handle that changed in the DragRef.\n                const dragRef = this._dragRef;\n                const handle = handleInstance.element.nativeElement;\n                handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n            });\n            if (this.freeDragPosition) {\n                this._dragRef.setFreeDragPosition(this.freeDragPosition);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._dragRef.dispose();\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        const rootElement = this.rootElementSelector ?\n            getClosestMatchingAncestor(element, this.rootElementSelector) : element;\n        if (rootElement && rootElement.nodeType !== this._document.ELEMENT_NODE &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`cdkDrag must be attached to an element node. ` +\n                `Currently attached to \"${rootElement.nodeName}\".`);\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return getClosestMatchingAncestor(this.element.nativeElement, boundary);\n        }\n        const element = coerceElement(boundary);\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n            !element.contains(this.element.nativeElement)) {\n            throw Error('Draggable element is not inside of the node passed into cdkDragBoundary.');\n        }\n        return element;\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate ? {\n                    template: this._placeholderTemplate.templateRef,\n                    context: this._placeholderTemplate.data,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                const preview = this._previewTemplate ? {\n                    template: this._previewTemplate.templateRef,\n                    context: this._previewTemplate.data,\n                    matchSize: this._previewTemplate.matchSize,\n                    viewContainer: this._viewContainerRef\n                } : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay = (typeof dragStartDelay === 'object' && dragStartDelay) ?\n                    dragStartDelay : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview);\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(() => {\n            this.started.emit({ source: this });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(() => {\n            this.released.emit({ source: this });\n        });\n        ref.ended.subscribe(event => {\n            this.ended.emit({ source: this, distance: event.distance });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: event.container.data,\n                item: this,\n                currentIndex: event.currentIndex\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: event.container.data,\n                item: this\n            });\n        });\n        ref.dropped.subscribe(event => {\n            this.dropped.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                previousContainer: event.previousContainer.data,\n                container: event.container.data,\n                isPointerOverContainer: event.isPointerOverContainer,\n                item: this,\n                distance: event.distance\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n    }\n}\nCdkDrag.ɵfac = function CdkDrag_Factory(t) { return new (t || CdkDrag)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(CDK_DROP_LIST, 12), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DragDrop), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CDK_DRAG_HANDLE, 10)); };\nCdkDrag.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkDrag, selectors: [[\"\", \"cdkDrag\", \"\"]], contentQueries: function CdkDrag_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PREVIEW, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_PLACEHOLDER, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CDK_DRAG_HANDLE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previewTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderTemplate = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._handles = _t);\n    } }, hostAttrs: [1, \"cdk-drag\"], hostVars: 4, hostBindings: function CdkDrag_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-drag-disabled\", ctx.disabled)(\"cdk-drag-dragging\", ctx._dragRef.isDragging());\n    } }, inputs: { disabled: [\"cdkDragDisabled\", \"disabled\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], data: [\"cdkDragData\", \"data\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, exportAs: [\"cdkDrag\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkDrag.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_DROP_LIST,] }, { type: Optional }, { type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CDK_DRAG_CONFIG,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: DragDrop },\n    { type: ChangeDetectorRef },\n    { type: CdkDragHandle, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [CDK_DRAG_HANDLE,] }] }\n];\nCdkDrag.propDecorators = {\n    _handles: [{ type: ContentChildren, args: [CDK_DRAG_HANDLE, { descendants: true },] }],\n    _previewTemplate: [{ type: ContentChild, args: [CDK_DRAG_PREVIEW,] }],\n    _placeholderTemplate: [{ type: ContentChild, args: [CDK_DRAG_PLACEHOLDER,] }],\n    data: [{ type: Input, args: ['cdkDragData',] }],\n    lockAxis: [{ type: Input, args: ['cdkDragLockAxis',] }],\n    rootElementSelector: [{ type: Input, args: ['cdkDragRootElement',] }],\n    boundaryElement: [{ type: Input, args: ['cdkDragBoundary',] }],\n    dragStartDelay: [{ type: Input, args: ['cdkDragStartDelay',] }],\n    freeDragPosition: [{ type: Input, args: ['cdkDragFreeDragPosition',] }],\n    disabled: [{ type: Input, args: ['cdkDragDisabled',] }],\n    constrainPosition: [{ type: Input, args: ['cdkDragConstrainPosition',] }],\n    previewClass: [{ type: Input, args: ['cdkDragPreviewClass',] }],\n    started: [{ type: Output, args: ['cdkDragStarted',] }],\n    released: [{ type: Output, args: ['cdkDragReleased',] }],\n    ended: [{ type: Output, args: ['cdkDragEnded',] }],\n    entered: [{ type: Output, args: ['cdkDragEntered',] }],\n    exited: [{ type: Output, args: ['cdkDragExited',] }],\n    dropped: [{ type: Output, args: ['cdkDragDropped',] }],\n    moved: [{ type: Output, args: ['cdkDragMoved',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkDrag, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkDrag]',\n                exportAs: 'cdkDrag',\n                host: {\n                    'class': 'cdk-drag',\n                    '[class.cdk-drag-disabled]': 'disabled',\n                    '[class.cdk-drag-dragging]': '_dragRef.isDragging()'\n                },\n                providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_DROP_LIST]\n            }, {\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_CONFIG]\n            }] }, { type: Directionality, decorators: [{\n                type: Optional\n            }] }, { type: DragDrop }, { type: ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [CDK_DRAG_HANDLE]\n            }] }]; }, { started: [{\n            type: Output,\n            args: ['cdkDragStarted']\n        }], released: [{\n            type: Output,\n            args: ['cdkDragReleased']\n        }], ended: [{\n            type: Output,\n            args: ['cdkDragEnded']\n        }], entered: [{\n            type: Output,\n            args: ['cdkDragEntered']\n        }], exited: [{\n            type: Output,\n            args: ['cdkDragExited']\n        }], dropped: [{\n            type: Output,\n            args: ['cdkDragDropped']\n        }], moved: [{\n            type: Output,\n            args: ['cdkDragMoved']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkDragDisabled']\n        }], dragStartDelay: [{\n            type: Input,\n            args: ['cdkDragStartDelay']\n        }], lockAxis: [{\n            type: Input,\n            args: ['cdkDragLockAxis']\n        }], constrainPosition: [{\n            type: Input,\n            args: ['cdkDragConstrainPosition']\n        }], previewClass: [{\n            type: Input,\n            args: ['cdkDragPreviewClass']\n        }], boundaryElement: [{\n            type: Input,\n            args: ['cdkDragBoundary']\n        }], rootElementSelector: [{\n            type: Input,\n            args: ['cdkDragRootElement']\n        }], _handles: [{\n            type: ContentChildren,\n            args: [CDK_DRAG_HANDLE, { descendants: true }]\n        }], _previewTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PREVIEW]\n        }], _placeholderTemplate: [{\n            type: ContentChild,\n            args: [CDK_DRAG_PLACEHOLDER]\n        }], data: [{\n            type: Input,\n            args: ['cdkDragData']\n        }], freeDragPosition: [{\n            type: Input,\n            args: ['cdkDragFreeDragPosition']\n        }] }); })();\n/** Gets the closest ancestor of an element that matches a selector. */\nfunction getClosestMatchingAncestor(element, selector) {\n    let currentElement = element.parentElement;\n    while (currentElement) {\n        // IE doesn't support `matches` so we have to fall back to `msMatchesSelector`.\n        if (currentElement.matches ? currentElement.matches(selector) :\n            currentElement.msMatchesSelector(selector)) {\n            return currentElement;\n        }\n        currentElement = currentElement.parentElement;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DragDropModule {\n}\nDragDropModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: DragDropModule });\nDragDropModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function DragDropModule_Factory(t) { return new (t || DragDropModule)(); }, providers: [\n        DragDrop,\n    ], imports: [CdkScrollableModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DragDropModule, { declarations: function () { return [CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; }, exports: function () { return [CdkScrollableModule, CdkDropList, CdkDropListGroup, CdkDrag, CdkDragHandle, CdkDragPreview, CdkDragPlaceholder]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragDropModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    CdkDropList,\n                    CdkDropListGroup,\n                    CdkDrag,\n                    CdkDragHandle,\n                    CdkDragPreview,\n                    CdkDragPlaceholder,\n                ],\n                providers: [\n                    DragDrop,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n\n//# sourceMappingURL=drag-drop.js.map","import { Component, EventEmitter, Input, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { Offer, OffersService } from '../offers.service';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-print-offer-settings',\n  templateUrl: './print-offer-settings.component.html',\n  styleUrls: ['./print-offer-settings.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PrintOfferSettingsComponent implements OnInit {\n\n  @Input() offer: Offer;\n  @Output() refresh: EventEmitter<any> = new EventEmitter();\n\n  printTextHeader = \"\";\n  printTextTableFotter = \"\";\n  newCommentForm = \"\";\n  editTableFooter = false;\n  editHeader = false;\n  loading = false;\n  commentId = null;\n\n  allComments: any[];\n  selectedProducts: any[];\n  draggedProduct: any;\n\n  selectedComments = [];\n\n\n  constructor(\n    private offerService: OffersService,\n    private infoPopup: InfoPopupComponent\n  ) { }\n\n  ngOnInit(): void {\n    this.printTextHeader = this.offer.printTextHeader;\n    this.printTextTableFotter = this.offer.printTextTableFotter;\n    this.offer.offerComments.forEach(element => {\n      this.selectedComments.push(element.id)\n    });\n    this.getAllComments();\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.allComments, event.previousIndex, event.currentIndex);\n    this.allComments.forEach((x,index)=>{\n      x.number = index+1;\n    });\n    this.offerService.updatePositionComments(this.allComments).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessUpdate(\"\");\n      },\n      error: (err) =>{\n        console.log(err);\n      }\n    })\n  }\n\n  updatePrintHeader() {\n    this.loading = true;\n    this.offerService.updatePrintHeaderInOffer(this.offer.offerNumber, this.printTextHeader).subscribe({\n      next: (res) => {\n        this.printTextHeader = res;\n        this.editHeader = false;\n        this.infoPopup.showSuccessUpdate(\"nagłownek oferty\");\n        this.loading = false;\n      }, error: (err) => {\n        console.log(err);\n        this.loading = false;\n        this.infoPopup.showErrorUpdate(\"nagłownek oferty\");\n      },\n      complete: () => {\n        this.refresh.emit(true);\n      }\n    })\n  }\n\n  updatePrintTableFooter() {\n    this.loading = true;\n    this.offerService.updatePrintTableFooterInOffer(this.offer.offerNumber, this.printTextTableFotter).subscribe({\n      next: (res) => {\n        this.printTextTableFotter = res;\n        this.editTableFooter = false;\n        this.infoPopup.showSuccessUpdate(\"opis tabeli\");\n        this.loading = false;\n      }, error: (err) => {\n        console.log(err);\n        this.loading = false;\n        this.infoPopup.showErrorUpdate(\"opis tabeli\");\n      },\n      complete: () => {\n        this.refresh.emit(true);\n      }\n\n    })\n  }\n\n  // COMMENTS\n\n  getAllComments() {\n    this.offerService.getAllComments().subscribe({\n      next: (res) => {\n        this.allComments = res;\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  newComment() {\n    this.offerService.newComment(this.newCommentForm).subscribe({\n      next: (res) => {\n        this.getAllComments();\n        this.newCommentForm = \"\";\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  editComment(data) {\n    this.newCommentForm = data.comment;\n    this.commentId = data.id;\n  }\n\n  exitUpdateComment() {\n    this.newCommentForm = '';\n    this.commentId = null;\n  }\n\n  updateComment() {\n    this.offerService.updateComment(this.commentId, this.newCommentForm).subscribe({\n      next: (res) => {\n        this.getAllComments();\n        this.newCommentForm = '';\n        this.commentId = null;\n        this.refresh.emit(true);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  deleteComment(id) {\n    console.log(id);\n    this.offerService.deleteComment(id).subscribe({\n      next: (res) => {\n        this.getAllComments();\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n  updateCommentInOffer() {\n    console.log(\"test\");\n    let send = [];\n    this.selectedComments.forEach(x => {\n      this.allComments.forEach(e => {\n        if (e.id == x) {\n          send.push(e);\n        }\n      });\n    })\n    this.offerService.updateCommentsListInOffer(this.offer.offerNumber, send).subscribe({\n      next: (res) => {\n        this.refresh.emit(true);\n      },\n      error: (err) => {\n        console.log(err);\n      }\n    })\n  }\n\n}\n","<div class=\"print-offer-settings\">\n\n    <div class=\"set-header row\">\n        <div class=\"header-name\">\n            <h5>Nagłówek</h5>\n        </div>\n        <div class=\"break\"></div>\n        <div class=\"area\">\n            <div class=\"text\" *ngIf=\"!editHeader\" [innerHTML]=\"printTextHeader\"></div>\n            <div class=\"btn-edit\" *ngIf=\"!editHeader\">\n                <button pButton pRipple type=\"button\" (click)=\"editHeader = !editHeader\" icon=\"pi pi-pencil\"\n                    class=\"p-button-sm sb-button gray m-1\" style=\"height: 28px;\"></button>\n            </div>\n            <div class=\"col-g-12 col-md-12 col-lg-12\" *ngIf=\"editHeader\">\n                <p-editor [(ngModel)]=\"printTextHeader\" [style]=\"{'height':'320px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n                <div class=\"sb-dialog-footer\">\n                    <div class=\"sb-btn-close\">\n                        <button pButton pRipple type=\"button\" (click)=\"editHeader = !editHeader\"\n                            pTooltip=\"Anulowanie dodawania\" label=\"Anuluj\" icon=\"pi pi-times\"\n                            class=\"p-button-sm sb-button o-gray\">\n                        </button>\n                    </div>\n                    <div class=\"sb-btn-save\">\n                        <button [disabled]=\"loading\" pButton pRipple type=\"button\" (click)=\"updatePrintHeader()\"\n                            pTooltip=\"Zapisz nagłownek\" label=\"Zapisz\" icon=\"pi pi-check\"\n                            class=\"p-button-sm sb-button green\">\n                        </button>\n                        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\"\n                            styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\">\n                        </p-progressSpinner>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"set-tableFooter row\">\n        <div class=\"header-name\">\n            <h5>Opis tabeli</h5>\n        </div>\n        <div class=\"break\"></div>\n        <div class=\"area\">\n            <div class=\"text\" *ngIf=\"!editTableFooter\" [innerHTML]=\"printTextTableFotter\"></div>\n            <div class=\"btn-edit\" *ngIf=\"!editTableFooter\">\n                <button pButton pRipple type=\"button\" (click)=\"editTableFooter = !editTableFooter\" icon=\"pi pi-pencil\"\n                    class=\"p-button-sm sb-button gray m-1\" style=\"height: 28px;\"></button>\n            </div>\n            <div class=\"col-g-12 col-md-12 col-lg-12\" *ngIf=\"editTableFooter\">\n                <p-editor [(ngModel)]=\"printTextTableFotter\" [style]=\"{'height':'320px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n                <div class=\"sb-dialog-footer\">\n                    <div class=\"sb-btn-close\">\n                        <button pButton pRipple type=\"button\" (click)=\"editTableFooter = !editTableFooter\"\n                            pTooltip=\"Anulowanie dodawania\" label=\"Anuluj\" icon=\"pi pi-times\"\n                            class=\"p-button-sm sb-button o-gray\">\n                        </button>\n                    </div>\n                    <div class=\"sb-btn-save\">\n                        <button [disabled]=\"loading\" pButton pRipple type=\"button\" (click)=\"updatePrintTableFooter()\"\n                            pTooltip=\"Zapisz opis\" label=\"Zapisz\" icon=\"pi pi-check\"\n                            class=\"p-button-sm sb-button green\">\n                        </button>\n                        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\"\n                            styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\">\n                        </p-progressSpinner>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div class=\"set-comments row\">\n        <div class=\"header-name\">\n            <h5>Uwagi</h5>\n        </div>\n        <div class=\"break\"></div>\n        <div class=\"area-comment\">\n\n            <ul cdkDropList class=\"comment-list\" (cdkDropListDropped)=\"drop($event)\">\n                <li *ngFor=\"let item of allComments\" class=\"list-box\" cdkDrag>\n                    <div class=\"check\">\n                        <p-checkbox name=\"groupname\" (onChange)=\"updateCommentInOffer()\" value=\"item\"\n                            [(ngModel)]=\"selectedComments\" [value]=\"item.id\"></p-checkbox>\n                    </div>\n                    <div class=\"number\">\n                        {{item.number}}\n                    </div>\n                    <div class=\"text\" [innerHTML]=\"item.comment\"></div>\n                    <div class=\"btn-edit\">\n                        <button pButton pRipple type=\"button\" icon=\"pi pi-pencil\" (click)=\"editComment(item)\"\n                            class=\"p-button-sm sb-button gray m-1\" style=\"height: 28px;\"></button>\n                        <button pButton pRipple (click)=\"deleteComment(item.id)\" type=\"button\" icon=\"pi pi-trash\"\n                            class=\"p-button-sm sb-button red m-1\" style=\"height: 28px;\"></button>\n                    </div>\n                </li>\n            </ul>\n\n            <div class=\"new-comment\">\n                <!-- <textarea rows=\"5\" cols=\"30\" pInputTextarea [(ngModel)]=\"newCommentForm\"></textarea> -->\n\n                <p-editor [(ngModel)]=\"newCommentForm\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n                <div class=\"buttons-save\">\n                    <button *ngIf=\"!commentId\" pButton pRipple type=\"button\" (click)=\"newComment()\"\n                        pTooltip=\"Dodaj nową uwagę\" icon=\"pi pi-plus\" class=\"p-button-sm sb-button blue\"></button>\n\n                    <button *ngIf=\"commentId\" pButton pRipple type=\"button\" (click)=\"updateComment()\"\n                        pTooltip=\"Aktualizacja uwagi\" icon=\"pi pi-check\" class=\"p-button-sm sb-button blue\"></button>\n\n                    <button *ngIf=\"commentId\" pButton pRipple type=\"button\" (click)=\"exitUpdateComment()\"\n                        pTooltip=\"Anuluj\" icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\"></button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DialogService, DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { KatalogProfili, KatalogSystem } from 'src/app/catalog/catalog-service/catalog.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ProductionServiceService } from 'src/app/production/production-service/production-service.service';\nimport { OfferHelpers, SettingsService } from 'src/app/settings/settings.service';\nimport { GlobalService } from 'src/app/_services/global.service';\nimport { Offer, OffersService } from '../../offers.service';\n\n@Component({\n  selector: 'app-add-offer-position',\n  templateUrl: './add-offer-position.component.html',\n  styleUrls: ['./add-offer-position.component.scss']\n})\nexport class AddOfferPositionComponent implements OnInit {\n  catalogSugFiltered: any;\n  helper: OfferHelpers = {\n    exchangeRateAlu: null,\n    exchangeRatePcv: null,\n    defaultSetCost: null,\n    defaultClientSetUpCost: null,\n    defaultPrintTextHeader: null,\n    defaultPrintTextTableFotter: null,\n    defaultCostChangeColor: null\n  };\n  selectedSystem: KatalogSystem = null;\n  selectedCatalog: KatalogProfili = null;\n  allCatalog: KatalogProfili[];\n  filmSugFiltered: any;\n  sideSugFiltered: any;\n  formOfferPosition: FormGroup;\n  searchBy = ['number'];\n  sideSug = [\"zew\", \"wew\", \"jedno\", \"środek\", \"obu\", \"obu-zew\", \"obu-wew\"];\n  offerData: Offer;\n  exchange: any;\n  loading = false;\n  changeSetUpCost = false;\n\n  constructor(\n    public productionService: ProductionServiceService,\n    public settingService: SettingsService,\n    public offerService: OffersService,\n    private cookieService: CookieService,\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    if (!this.cookieService.check('creatorSelectedSystemOffer')) {\n      this.cookieService.set('creatorSelectedSystemOffer', JSON.stringify(this.selectedSystem))\n    } else {\n      this.selectedSystem = JSON.parse(this.cookieService.get('creatorSelectedSystemOffer'));\n    }\n    this.filterBySystem();\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n        this.changeAlu(false);\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n\n    this.formOfferPosition = new FormGroup({\n      profilType: new FormControl('', { validators: [Validators.required] }),\n      profilNumber: new FormControl('', { validators: [Validators.required] }),\n      alu: new FormControl(false),\n      catalogIdHelper: new FormControl(''),\n      warranty: new FormControl(true),\n      offerPositionSides: new FormArray([\n        new FormGroup({\n          side: new FormControl(''),\n          filmNumber: new FormControl(null),\n          filmWidth: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n          filmEntrusted: new FormControl(false),\n          quantityMb: new FormControl(6.5, { validators: [Validators.required, Validators.nullValidator] }),\n          hard: new FormControl(false),\n          changeColor: new FormControl(false),\n          bicolor: new FormControl(null),\n          costChangeColor: new FormControl(null),\n          costSetupAdditional: new FormControl(null),\n          exchangeRate: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n          additional: new FormControl(this.offerData.client.helper_additional, { validators: [Validators.required, Validators.nullValidator] }),\n          cost: new FormControl(this.offerData.client.helper_cost, { validators: [Validators.required, Validators.nullValidator] }),\n          mIs: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n        })\n      ])\n    });\n    // this.offerService.getExchangeHelper().subscribe({\n    //   next: (res) => {\n    //     this.exchange = res[0];\n    //     this.formOfferPosition.controls.offerPositionSides['controls'][0]['controls'].exchangeRate.setValue(this.exchange.exchangeRate);\n    //   }\n    // });\n    if (this.cookieService.check('lastUsedFilm')) {\n      let okl = JSON.parse(this.cookieService.get('lastUsedFilm'));\n      this.formOfferPosition.controls.offerPositionSides['controls'][0].get('filmNumber').setValue(okl.number);\n      this.formOfferPosition.controls.offerPositionSides['controls'][0].get('bicolor').setValue(okl.surchargePercentage);\n    }\n    this.calculateSides();\n  }\n\n  filterBySystem() {\n    this.allCatalog = [];\n    if (this.selectedSystem != null) {\n      for (let i = 0; i < this.productionService.catalogSuggestions.length; i++) {\n        let cat = this.productionService.catalogSuggestions[i];\n        if (cat.systemProfil.name != null) {\n          if (cat.systemProfil.id === (this.selectedSystem.id)) {\n            this.allCatalog.push(cat);\n          }\n        }\n      }\n      this.cookieService.set('creatorSelectedSystemOffer', JSON.stringify(this.selectedSystem));\n    } else {\n      this.allCatalog = this.productionService.catalogSuggestions;\n    }\n  }\n\n  searchCatalog(event) {\n    this.catalogSugFiltered = [];\n    if (event.query != \"\") {\n      console.log(\"loading\");\n      for (let i = 0; i < this.allCatalog.length; i++) {\n        let cat = this.allCatalog[i];\n        if (cat.number != null && this.searchBy.includes(\"number\")) {\n          if (cat.number.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n        if (cat.profileType != null && this.searchBy.includes(\"name\")) {\n          if (cat.profileType.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n      }\n    } else {\n      this.allCatalog.forEach(x => this.catalogSugFiltered.push(x));\n    }\n  }\n\n  searchFilm(event) {\n    this.filmSugFiltered = [];\n    for (let i = 0; i < this.productionService.filmSuggestions.length; i++) {\n      let film = this.productionService.filmSuggestions[i];\n      if (film.number.toLowerCase().includes(event.query.toLowerCase()) || film.name.toLowerCase().includes(event.query.toLowerCase())) {\n        this.filmSugFiltered.push(film);\n      }\n    }\n  }\n\n  searchSide(event) {\n    this.sideSugFiltered = [];\n    for (let i = 0; i < this.sideSug.length; i++) {\n      let side = this.sideSug[i];\n      if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.sideSugFiltered.push(side);\n      }\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n\n  get sides(): FormArray {\n    return this.formOfferPosition.get(\"offerPositionSides\") as FormArray\n  }\n\n  addSide() {\n    const group = new FormGroup({\n      side: new FormControl(''),\n      filmNumber: new FormControl(null),\n      filmWidth: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n      filmEntrusted: new FormControl(false),\n      quantityMb: new FormControl(6.5, { validators: [Validators.required, Validators.nullValidator] }),\n      hard: new FormControl(false),\n      changeColor: new FormControl(false),\n      bicolor: new FormControl(null),\n      costSetupAdditional: new FormControl(null),\n      costChangeColor: new FormControl(null),\n      exchangeRate: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n      additional: new FormControl(this.offerData.client.helper_additional, { validators: [Validators.required, Validators.nullValidator] }),\n      cost: new FormControl(this.offerData.client.helper_cost, { validators: [Validators.required, Validators.nullValidator] }),\n      mIs: new FormControl(null, { validators: [Validators.required, Validators.nullValidator] }),\n    });\n    this.sides.push(group);\n    if (this.cookieService.check('lastUsedFilm')) {\n      let okl = JSON.parse(this.cookieService.get('lastUsedFilm'));\n      this.formOfferPosition.controls.offerPositionSides['controls'][this.sides.length - 1].get('filmNumber').setValue(okl.number);\n      this.formOfferPosition.controls.offerPositionSides['controls'][this.sides.length - 1].get('bicolor').setValue(okl.surchargePercentage);\n    }\n    this.calculateSides();\n    this.changeAlu(this.formOfferPosition.get('alu').value);\n  }\n\n  duplicateLastSide() {\n    let tmp = this.sides.at(this.sides.length - 1);\n    this.addSide();\n    this.sides.at(this.sides.length - 1).patchValue(tmp.value);\n  }\n\n  removeSide(i: number) {\n    this.sides.removeAt(i);\n  }\n\n  onSelectFilm(event, i) {\n    this.sides.controls[i].get('filmNumber').setValue(event.number);\n    this.sides.controls[i].get('bicolor').setValue(event.surchargePercentage);\n    this.cookieService.set('lastUsedFilm', JSON.stringify(event));\n  }\n\n  onSelectSide(e, index) {\n    if (this.selectedCatalog != null) {\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index].get('hard').setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get('filmWidth').setValue(res);\n    }\n  }\n\n  onSelectCatalog(event: KatalogProfili) {\n    this.selectedCatalog = event;\n    this.formOfferPosition.get(\"profilNumber\").setValue(event.number);\n    this.formOfferPosition.get(\"profilType\").setValue(event.offerName);\n    this.formOfferPosition.get(\"alu\").setValue(event.alu);\n    this.formOfferPosition.get(\"catalogIdHelper\").setValue(event.id);\n    if (!this.selectedSystem) {\n      this.selectedSystem = event.systemProfil;\n      this.filterBySystem();\n    }\n    this.sides.controls.forEach((x, index) => {\n      let e = x.get('side').value;\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index].get('hard').setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get('filmWidth').setValue(res);\n    });\n  }\n  calculateSides() {\n    for (let index = 0; index < this.sides.length; index++) {\n      this.changeHard(index);\n    }\n  }\n\n  changeHard(i) {\n    let event = this.sides.controls[i]['controls']['quantityMb'].value;\n    this.loadM(event, i);\n  }\n\n  changeAlu(event) {\n    if (event) {\n      this.sides.controls.forEach(x => {\n        x['controls']['exchangeRate'].setValue(this.helper.exchangeRateAlu);\n      })\n    } else {\n      this.sides.controls.forEach(x => {\n        x['controls']['exchangeRate'].setValue(this.helper.exchangeRatePcv);\n      })\n    }\n  }\n\n  colorFieldChange(i,event){\n    if(event){\n      this.sides.controls[i]['controls']['changeColor'].setValue(true);\n    }else{\n      this.sides.controls[i]['controls']['changeColor'].setValue(false);\n    }\n  }\n\n  changeColorChangebox(i,event) {\n    if (event.checked) {\n      this.sides.controls[i]['controls']['costChangeColor'].setValue(this.offerData.client.helper_costChangeColor);\n    } else {\n      this.sides.controls[i]['controls']['costChangeColor'].setValue('');\n    }\n  }\n\n  loadM(event, i) {\n    let tmpHard = this.sides.controls[i]['controls']['hard'].value;\n    if (event <= 50) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo50);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo50);\n      }\n    } else if (event > 50 && event <= 150) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo150);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo150);\n      }\n    } else if (event > 150 && event <= 500) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo500);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo500);\n      }\n    } else if (event > 500) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardAbove500);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyAbove500);\n      }\n    }\n\n  }\n\n  addOfferPosition() {\n    this.loading = true;\n    this.offerService.addNewOfferPosition(this.offerData.offerNumber, this.formOfferPosition.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"pozycja\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"pozycja\");\n        this.loading = false;\n        console.log(err);\n      }\n    })\n  }\n\n}\n","<div class=\"sb-dialog-content\" style=\"width: 1000px; min-width: 1000px;\">\n    <form [formGroup]=\"formOfferPosition\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"systemId\">Wybór systemu</label>\n                        <p-dropdown [options]=\"productionService.allSystems\" (onChange)=\"filterBySystem()\"\n                            styleClass=\"fullwidth\" appendTo=\"body\" [(ngModel)]=\"selectedSystem\"\n                            [ngModelOptions]=\"{standalone: true}\" placeholder=\"Wybierz system\" optionLabel=\"name\"\n                            [showClear]=\"true\" filter=\"true\">\n                        </p-dropdown>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                        <p-radioButton class=\"p-2\" name=\"groupSearch\" value=\"number\" label=\"Numer\"\n                            [(ngModel)]=\"searchBy\" [ngModelOptions]=\"{standalone: true}\"></p-radioButton>\n                        <p-radioButton class=\"p-2\" name=\"groupSearch\" value=\"name\" label=\"Nazwa\" [(ngModel)]=\"searchBy\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        </p-radioButton>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"profilNumberId\">Numer kształtownika *</label>\n                        <p-autoComplete [inputStyle]=\"{'font-weight':'bold'}\" autocomplete=\"off\" appendTo=\"body\"\n                            styleClass=\"fullwidth\" [formControl]=\"formOfferPosition.get('profilNumber')\"\n                            [suggestions]=\"catalogSugFiltered\" (completeMethod)=\"searchCatalog($event)\"\n                            [dropdown]=\"true\" emptyMessage=\"Nie znaleziono\" (onSelect)=\"onSelectCatalog($event)\">\n                            <ng-template let-catalog pTemplate=\"item\">\n\n                                <div\n                                    [class]=\"'measure-badge status-' + catalog.actualMeasurement + ' catalog-dropdown'\">\n\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <div style=\"font-size:16px;\">\n                                                <i style=\"color:red;font-size: 1em;padding-right: 2px;\"\n                                                    *ngIf=\"catalog.hard\" class=\"pi pi-exclamation-triangle\"></i>\n                                                {{catalog.number}}\n                                            </div>\n                                            <div style=\"font-size:12px;\">{{catalog.profileType}}</div>\n                                            <div style=\"font-size:12px;\">{{catalog.systemProfil.name}}</div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div style=\"font-size:12px;\">ZEW: <b>{{catalog.dimOuter}}</b></div>\n                                            <div style=\"font-size:12px;\">WEW: <b>{{catalog.dimInner}}</b></div>\n                                            <div style=\"font-size:12px;\">JEDN: <b>{{catalog.dimOneSide}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">ŚRO: <b>{{catalog.dimCenterSide}}</b>\n                                            </div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div style=\"font-size:12px;\">OBU: <b>{{catalog.dimTwoSide}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">OBU ZEW:\n                                                <b>{{catalog.dimTwoSideOuter}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">OBU WEW:\n                                                <b>{{catalog.dimTwoSideInner}}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </ng-template>\n                        </p-autoComplete>\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formOfferPosition.get('profilNumber').hasError('required') && formOfferPosition.get('profilNumber').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                        <label class=\"sb-small-label\" for=\"profilTypeId\">Rodzaj kształtownika *</label>\n                        <input pInputText type=\"text\" autocomplete=\"off\" class=\"fullwidth\"\n                            [formControl]=\"formOfferPosition.get('profilType')\">\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formOfferPosition.get('profilType').hasError('required') && formOfferPosition.get('profilType').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row pt-1\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n                        <p-checkbox [formControl]=\"formOfferPosition.get('alu')\" (ngModelChange)=\"changeAlu($event)\"\n                            [binary]=\"true\" label=\"Alu\">\n                        </p-checkbox>\n                    </div>\n                </div>\n                <div class=\"row pt-1\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n                        <p-checkbox [formControl]=\"formOfferPosition.get('warranty')\" [binary]=\"true\" label=\"Gwarancja\">\n                        </p-checkbox>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"row w-100 m-0\">\n\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form\">\n                        <div class=\"row\">\n                            <div class=\"sb-stars-header\">Ustawienia klienta</div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead>\n                                            <th class=\"text-left\">Metry</th>\n                                            <th class=\"text-center\">Łatwe</th>\n                                            <th class=\"text-center\">Trudne</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-left\">0-50</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo50}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo50}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">51-150</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo150}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo150}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">151-500</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo500}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo500}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">pow. 500</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyAbove500}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardAbove500}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead>\n                                            <th></th>\n                                            <th class=\"text-center\">Kurs</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>ALU</td>\n                                                <td class=\"text-center\">{{helper.exchangeRateAlu}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>PCV</td>\n                                                <td class=\"text-center\">{{helper.exchangeRatePcv}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"row w-100 m-0\">\n                    <div *ngIf=\"selectedCatalog != null\" class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form mt-2\">\n\n                        <div class=\"row p-1\">\n\n                            <div class=\"sb-stars-header\">Wybrana pozycja</div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead class=\"sb-header-normal\">\n                                            <th class=\"text-left\">Numer</th>\n                                            <th class=\"text-left\">Nazwa</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-center\"><b>{{selectedCatalog.number}}</b></td>\n                                                <td class=\"text-center\"><b>{{selectedCatalog.offerName}}</b></td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <tbody>\n                                            <tr>\n                                                <td *ngIf=\"selectedCatalog.hard\" style=\"color:red; border: 0;\"\n                                                    class=\"text-center\">\n                                                    <i style=\"padding-right: 5px;\"\n                                                        class=\"pi pi-exclamation-triangle\"></i>\n                                                    <span>TRUDNE</span>\n                                                </td>\n                                                <td *ngIf=\"selectedCatalog.actualMeasurement\"\n                                                    style=\"color:green; border: 0;\" class=\"text-center\">\n                                                    <i style=\"padding-right: 5px;\" class=\"pi pi-check-circle\"></i>\n                                                    <span>Wymiar zmierzony fizycznie</span>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row p-1\">\n                            <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead class=\"sb-header-normal\">\n                                            <th class=\"text-center\">ZEW</th>\n                                            <th class=\"text-center\">WEW</th>\n                                            <th class=\"text-center\">JEDN</th>\n                                            <th class=\"text-center\">ŚROD</th>\n                                            <th class=\"text-center\">OBU</th>\n                                            <th class=\"text-center\">OBU ZEW</th>\n                                            <th class=\"text-center\">OBU WEW</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimOuter ? selectedCatalog.dimOuter : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimInner ? selectedCatalog.dimInner : \"--\"}}</b>\n                                                </td>\n\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimOneSide ? selectedCatalog.dimOneSide : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimCenterSide ? selectedCatalog.dimCenterSide : \"--\"}}</b>\n                                                </td>\n\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSide ? selectedCatalog.dimTwoSide : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSideOuter ? selectedCatalog.dimTwoSideOuter : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSideInner ? selectedCatalog.dimTwoSideInner : \"--\"}}</b>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row mt-2\" *ngIf=\"selectedCatalog.comments\" style=\"border-top:1px solid #D5D5D5\">\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 p-0\" pTooltip=\"Uwagi\">\n                                <div class=\"sb-stars-header\" style=\"color:red; font-size: 10px;\">UWAGI:</div>\n                                <div class=\"pl-1\" [innerHtml]=\"selectedCatalog.comments\"></div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n        <div class=\"row mb-2\">\n            <div class=\"col text-center\">\n                <span><b>STRONY</b></span>\n            </div>\n        </div>\n\n        <div formArrayName=\"offerPositionSides\">\n\n            <div class=\"row sb-position-side\" *ngFor=\"let item of sides.controls; index as i\" [formGroupName]=\"i\">\n\n                <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n\n                    <div class=\"row flex-nowrap sb-row-position-side\">\n\n                        <div class=\"col-sm-12 col-md-1 col-lg-1 sb-col-side count\">\n\n                            <button pButton pRipple type=\"button\" (click)=\"removeSide(i)\" style=\"height: 25px;\"\n                                pTooltip=\"Usuń stronę\" icon=\"pi pi-times\" class=\"p-button-sm sb-button red\"></button>\n\n                            <span class=\"text-center p-2\">{{i + 1}}</span>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n\n                            <label class=\"sb-small-label \" for=\"side\">Str. kształ.</label>\n                            <p-autoComplete formControlName=\"side\" autocomplete=\"off\" [suggestions]=\"sideSugFiltered\"\n                                (completeMethod)=\"searchSide($event)\" [dropdown]=\"true\" autocomplete=\"off\"\n                                [completeOnFocus]=\"true\" appendTo=\"body\" (onSelect)=\"onSelectSide($event,i)\">\n                                <ng-template let-side pTemplate=\"item\">\n                                    <div class=\"catalog-dropdown-side\">\n                                        <div class=\"row\">\n                                            <div class=\"col\">{{side}}</div>\n                                        </div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n\n                            <label class=\"sb-small-label\" for=\"filmNumber\">Numer Okleiny</label>\n                            <p-autoComplete formControlName=\"filmNumber\" [minLength]=\"1\" [suggestions]=\"filmSugFiltered\"\n                                (completeMethod)=\"searchFilm($event)\" [dropdown]=\"true\" autocomplete=\"off\"\n                                [completeOnFocus]=\"true\" appendTo=\"body\" (onSelect)=\"onSelectFilm($event,i)\">\n                                <ng-template let-film pTemplate=\"item\">\n                                    <div class=\"catalog-dropdown-film\">\n                                        <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                                        <div class=\"row\">\n                                            <div class=\"col-6\">\n                                                <div style=\"font-size:16px;\">{{film.number}}</div>\n                                                <div style=\"font-size:12px;\"> {{film.name}}</div>\n                                            </div>\n\n                                            <div class=\"col-6 pl-2 text-center\" [ngSwitch]=\"film.status\"\n                                                style=\"font-size:12px;\">\n                                                <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-dost\">DOST.</div>\n                                                <div *ngSwitchCase=\"'NIEDOSTEPNA'\" class=\"status-niedost\">NIEDOST.</div>\n                                                <div *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\" class=\"status-ogr\">OGRAN.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n\n                            <label class=\"sb-small-label\" for=\"filmWidthId\">Szer. Okl. *</label>\n                            <p-inputNumber formControlName=\"filmWidth\" inputId=\"filmWidthId\" suffix=\" mm\" [min]=\"0\"\n                                [step]=\"1\" [inputStyle]=\"{'font-weight':'bold'}\">\n                            </p-inputNumber>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <label class=\"sb-small-label \" for=\"quantityMb\">Ilość Mb *</label>\n                            <p-inputNumber (onInput)=\"loadM($event.value,i)\" formControlName=\"quantityMb\"\n                                inputId=\"quantityMb\" mode=\"decimal\" [min]=\"0\" [step]=\"0.5\" [minFractionDigits]=\"1\">\n                            </p-inputNumber>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n\n                    <div class=\"row flex-nowrap sb-row-position-side justify-content-end\">\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"additional\">Dopłata *</label>\n                            <p-inputNumber formControlName=\"additional\" mode=\"decimal\" [min]=\"0\" [step]=\"0.10\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"cost\">Koszt *</label>\n                            <p-inputNumber formControlName=\"cost\" mode=\"decimal\" [min]=\"0\" [step]=\"0.01\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"mIs\">Przelicznik *</label>\n                            <p-inputNumber formControlName=\"mIs\" mode=\"decimal\" [min]=\"0\" [step]=\"0.10\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"bicolor\">Bicolor</label>\n                            <p-inputNumber formControlName=\"bicolor\" type=\"number\" [min]=\"0\" suffix=\"%\" [step]=\"1\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"costChangeColor\">Zm. koloru</label>\n                            <p-inputNumber formControlName=\"costChangeColor\"  (ngModelChange)=\"colorFieldChange(i,$event)\"\n                                type=\"number\" [min]=\"0\" [step]=\"10\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"exchangeRate\">Kurs *</label>\n                            <p-inputNumber formControlName=\"exchangeRate\" type=\"number\" [min]=\"0\" [step]=\"0.10\">\n                            </p-inputNumber>\n                        </div>\n                    </div>\n\n                    <div class=\"row align-items-center w-100 m-0\">\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"hard\" (ngModelChange)=\"changeHard(i)\" [binary]=\"true\"\n                                label=\"Trudne\">\n                            </p-checkbox>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"filmEntrusted\" [binary]=\"true\" label=\"Folia powierzona\">\n                            </p-checkbox>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"changeColor\" (onChange)=\"changeColorChangebox(i,$event)\"\n                                [binary]=\"true\" label=\"Zm. koloru\">\n                            </p-checkbox>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"costSetupAdditional\">Ust**</label>\n                            <p-inputNumber\n                                pTooltip=\"Podmienia koszt ustawienia, ignoruje zakresy dla ustawienia podstawowego\"\n                                formControlName=\"costSetupAdditional\" type=\"number\" [min]=\"0\" [step]=\"10\">\n                            </p-inputNumber>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center\">\n                    <button pButton pRipple type=\"button\" (click)=\"addSide()\" pTooltip=\"Dodaj stronę\" icon=\"pi pi-plus\"\n                        label=\"Dodaj stronę\" class=\"p-button-sm sb-button blue m-1\"></button>\n\n                    <button [disabled]=\"sides.length == 0\" pButton pRipple type=\"button\" (click)=\"duplicateLastSide()\"\n                        pTooltip=\"Powielanie ostatniej pozycji\" icon=\"pi pi-angle-double-down\" label=\"Powiel stronę\"\n                        class=\"p-button-sm sb-button blue m-1\"></button>\n                </div>\n            </div>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\" style=\"position: sticky;bottom: 0;\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"formOfferPosition.invalid || loading || sides.length == 0\" pButton pRipple type=\"button\"\n            (click)=\"addOfferPosition()\" pTooltip=\"Dodaj pozycję\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { Offer, OffersService } from '../../offers.service';\n\n@Component({\n  selector: 'app-update-film-buy-cost',\n  templateUrl: './update-film-buy-cost.component.html',\n  styleUrls: ['./update-film-buy-cost.component.scss']\n})\nexport class UpdateFilmBuyCostComponent implements OnInit {\n\n  formCost:FormGroup\n  offerData: Offer;\n  loading=false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig\n  ) { \n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formCost = new FormGroup({\n      costNettoBuyFilm: new FormControl(''),\n      buyFilmComment: new FormControl('Okleina potrzebna do okleinowania ')\n    })\n    this.formCost.get('costNettoBuyFilm').setValue(this.offerData.costNettoBuyFilm);\n    if(this.offerData.buyFilmComment){\n      this.formCost.get('buyFilmComment').setValue(this.offerData.buyFilmComment);\n    }\n  }\n\n  saveCost(){\n    this.loading=true;\n    this.offerService.updateFilmBuyCost(this.offerData.offerNumber,this.formCost.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate('koszt zakupu okleiny');\n        this.loading=false;\n        this.ref.close(1);\n      },\n      error:(err)=>{\n        this.loading=false;\n        this.infoPopup.showErrorUpdate('koszt zakupu okleiny');\n        console.log(err);\n      },\n      complete:()=>{\n        \n      }\n    })\n  }\n\n  exit(id){\n    this.ref.close(id);\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formCost\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"costNettoBuyFilm\">Koszt zakupu okleiny netto</label>\n                <p-inputNumber inputId=\"costNettoBuyFilm\" mode=\"decimal\"\n                    [formControl]=\"formCost.get('costNettoBuyFilm')\" [showButtons]=\"true\" [step]=\"1\"\n                    min=\"0\">\n                </p-inputNumber>\n\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                \n                <label class=\"sb-small-label\" for=\"buyFilmComment\">Opis</label>\n                <p-editor [formControl]=\"formCost.get('buyFilmComment')\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"loading\" pButton pRipple type=\"button\" (click)=\"saveCost()\" pTooltip=\"Aktualizuj\"\n            label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { OffersService } from '../offers.service';\n\n@Component({\n  selector: 'app-timeline-widget',\n  templateUrl: './timeline-widget.component.html',\n  styleUrls: ['./timeline-widget.component.scss']\n})\nexport class TimelineWidgetComponent implements OnInit {\n\n  @Input() offerNumber: string;\n  newNote = \"\";\n  @Input() offerNotes: any;\n  public now: Date = new Date();\n\n  constructor(\n    private offerService: OffersService,\n    private infoPopup: InfoPopupComponent\n  ) { \n    setInterval(() => {\n      this.now = new Date();\n    }, 1);\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n  getNotes() {\n    this.offerService.getOfferNotes(this.offerNumber).subscribe({\n      next: (res) => {\n        this.offerNotes = res;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  addNewNote(offerNumber, newNote) {\n    this.offerService.addNewOfferNote(offerNumber, newNote).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd('notatkę');\n        this.newNote = \"\";\n        this.getNotes();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  deleteNote(offerNumber, id) {\n    this.offerService.deleteOfferNote(offerNumber, id).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessDelete('notatkę');\n        this.getNotes();\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n  }\n\n}\n","<div class=\"sb-timeline-widget\">\n    <!-- <div class=\"timeline-line\"></div> -->\n    <ul class=\"sb-timeline\">\n        <li *ngFor=\"let item of offerNotes\">\n            <div class=\"date\">\n                <span>{{item.createdDate | date:'dd.MM.yyyy, HH:mm'}}</span>\n                <i class=\"pi pi-comment\" style=\"font-size: 2rem\"></i>\n            </div>\n            <div class=\"message\">\n                <div class=\"checked\" [innerHTML]=\"item.message\"></div>\n                <button pButton pRipple type=\"button\" (click)=\"deleteNote(offerNumber,item.id)\" pTooltip=\"Usuń notatke\" icon=\"pi pi-trash\"\n                class=\"p-button-sm sb-button red\"></button>\n            </div>\n            <div class=\"break\"></div>\n            <div class=\"author\">{{item.createdBy}}</div>\n        </li>\n        <li>\n            <div class=\"date\">\n                <span>{{ now | date:'dd.MM.yyyy, HH:mm' }}</span>\n                <i class=\"pi pi-comment\" style=\"font-size: 2rem\"></i>\n            </div>\n            <div class=\"message\">\n            <!-- <div class=\"timeline-new\"> -->\n                <!-- <textarea rows=\"5\" cols=\"30\" pInputTextarea [(ngModel)]=\"newNote\"></textarea> -->\n\n                <p-editor [(ngModel)]=\"newNote\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n\n                <button pButton pRipple type=\"button\" (click)=\"addNewNote(offerNumber,newNote)\"\n                    pTooltip=\"Nowa notatka\" icon=\"pi pi-plus\" class=\"p-button-sm sb-button blue\"></button>\n            </div>\n            <div class=\"break\"></div>\n            <div class=\"author\"></div>\n        </li>\n    </ul>\n    \n  \n    <!-- <div class=\"clearfix\"></div> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { Offer, OffersService } from '../../offers.service';\n\n@Component({\n  selector: 'app-update-client-helpers',\n  templateUrl: './update-client-helpers.component.html',\n  styleUrls: ['./update-client-helpers.component.scss']\n})\nexport class UpdateClientHelpersComponent implements OnInit {\n\n  formClientHelper:FormGroup;\n  offerData: Offer;\n  loading = false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig,\n  ) { \n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formClientHelper = new FormGroup({\n      helper_additional: new FormControl(''),\n      helper_cost: new FormControl(''),\n      helper_setUpCost: new FormControl(''),\n      helper_costChangeColor: new FormControl('')\n    });\n    this.formClientHelper.patchValue(this.offerData.client);\n  }\n\n  updateHelpers(){\n    this.loading = true;\n    this.offerService.updateClientHelpers(this.offerData.client.id,this.formClientHelper.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate('parametry');\n        this.ref.close(1);\n      },\n      error:(err)=>{\n        this.infoPopup.showErrorUpdate('parametry');\n        console.log(err);\n      },\n      complete:()=>{\n        this.loading=false;\n      }\n    })\n  }\n\n  exit(id){\n    this.ref.close(id);\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formClientHelper\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                 <label class=\"sb-small-label\" for=\"additional\">Dopłata</label>\n                <p-inputNumber inputId=\"additional\" mode=\"decimal\"\n                    [formControl]=\"formClientHelper.get('helper_additional')\" [showButtons]=\"true\" [step]=\"1\" min=\"0\">\n                </p-inputNumber>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label class=\"sb-small-label\" for=\"cost\">Koszt</label>\n                <p-inputNumber inputId=\"cost\" mode=\"decimal\"\n                    [formControl]=\"formClientHelper.get('helper_cost')\" [showButtons]=\"true\" [step]=\"0.01\" min=\"0\">\n                </p-inputNumber>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label class=\"sb-small-label\" for=\"set\">Ustawienie</label>\n                <p-inputNumber inputId=\"set\" mode=\"decimal\"\n                    [formControl]=\"formClientHelper.get('helper_setUpCost')\" [showButtons]=\"true\" [step]=\"1\" min=\"0\">\n                </p-inputNumber>\n            </div>\n        </div>\n       \n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                <label class=\"sb-small-label\" for=\"costChangeColor\">Zm. koloru</label>\n                <p-inputNumber inputId=\"costChangeColor\" mode=\"decimal\"\n                    [formControl]=\"formClientHelper.get('helper_costChangeColor')\" [showButtons]=\"true\" [step]=\"1\" min=\"0\">\n                </p-inputNumber>\n            </div>\n        </div>\n    </form>\n\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"loading\" pButton pRipple type=\"button\" (click)=\"updateHelpers()\" pTooltip=\"Aktualizuj\"\n            label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { PrintOfferService } from 'src/app/print/print-offer.service';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { Offer, OfferPosition, OffersService } from '../offers.service';\n\n@Component({\n  selector: 'app-view-offer',\n  templateUrl: './view-offer.component.html',\n  styleUrls: ['./view-offer.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ViewOfferComponent implements OnInit {\n\n  @Input() offer: Offer;\n  offerPositions: OfferPosition[];\n  offerId: string;\n  headerText = '';\n  footerInfo = '';\n  offerComments: any;\n  hideWarranty = true;\n  hideZM = true;\n  username: string;\n\n  constructor(\n    private offerService: OffersService,\n    private printOfferService: PrintOfferService,\n    private authService: AuthService\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.username = this.authService.userValue.name;\n    for (let propName in changes) {\n      if (propName === 'offer') {\n        this.offer = changes[propName].currentValue\n        this.offerPositions = this.offer.offerPosition;\n        this.offerComments = this.offer.offerComments.sort((a,b)=>{\n          if(a.number > b.number){\n            return 1;\n          }else if (a.number < b.number){\n            return -1;\n          }else{\n            return 0;\n          }\n      });\n      }\n    }\n\n    if (this.checkIfWarranty(this.offerPositions)) {\n      this.hideWarranty = true;\n    } else {\n      this.hideWarranty = false;\n    };\n\n    if (this.checkIfZM(this.offerPositions)) {\n      this.hideZM = false;\n    } else {\n      this.hideZM = true;\n    };\n  }\n\n  ngOnInit(): void {\n    this.offerPositions = this.offer.offerPosition;\n    this.offerId = this.offer.offerNumber;\n    this.headerText = this.offer.printTextHeader;\n    this.footerInfo = this.offer.printTextTableFotter;\n    this.offerComments = this.offer.offerComments.sort((a,b)=>{\n        if(a.number > b.number){\n          return 1;\n        }else if (a.number < b.number){\n          return -1;\n        }else{\n          return 0;\n        }\n    });\n  }\n\n  checkIfWarranty(positions: OfferPosition[]) {\n    let tmp = positions.find(x => x.warranty == false);\n    if (tmp) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  checkIfZM(positions: OfferPosition[]) {\n    let test = positions.find(x => {\n      let tmp = x.offerPositionSides.find(s => s.changeColor == true);\n      if (tmp) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n\n    if (test) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  checkComments() {\n    if (this.offerComments === undefined || this.offerComments.length == 0) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n}\n\n\n","<div id=\"print_offer_view\">\n\n    <div class=\"row header_top\">\n        <div class=\"col address\">\n            {{offer.myCompany.name}}<br>\n            {{'ul. ' + offer.myCompany.street + ' ' + offer.myCompany.houseNumber}}{{offer.myCompany.flatNumber ? '/' + offer.myCompany.flatNumber : ''}},\n            {{offer.myCompany.postalCode + ' ' + offer.myCompany.town}}<br>\n            {{offer.myCompany.email ? offer.myCompany.email + ', ' : '' }}{{offer.myCompany.www ? offer.myCompany.www : ''}}\n        </div>\n        <div class=\"col logo\">\n            <!-- {{offer.myCompany.logoLink}} -->\n            <div class=\"float-right\" *ngIf=\"offer.myCompany.logoLink\">\n                <img height=\"50px\" [src]=\"offer.myCompany.logoLink\" alt=\"\">\n            </div>\n            <p *ngIf=\"!offer.myCompany.logoLink\" class=\"float-right\">{{offer.myCompany.name}}</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col client_adress\">\n            {{offer.client.name}} <br>\n            {{'ul. ' + offer.client.street + ' ' + offer.client.houseNumber}}{{offer.client.flatNumber ? '/' + offer.client.flatNumber : ''}}<br>\n            {{offer.client.postalCode + ' ' + offer.client.town}}\n        </div>\n        <div class=\"col offer_date\">\n            <p>Kraków, dn. {{offer.offerDate | date:'dd.MM.yyyy'}} r.</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col text\" [innerHTML]=\"headerText\">\n\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <div class=\"sb_table\">\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_header\">\n                    <div class=\"sb_item\">Nazwa i Numer kształownika</div>\n                    <div class=\"sb_item warranty_col\">Gwarancja</div>\n                    <div class=\"sb_side\">\n                        <div class=\"sb_item\">Strona okleinowania</div>\n                        <div class=\"sb_item\">Numer okleiny</div>\n                        <div class=\"sb_item\">Szerokość oklejanej powierzchni w mm</div>\n                        <div class=\"sb_item\">Cena PLN/mb</div>\n                        <div class=\"sb_item\">Ilość mb</div>\n                        <div class=\"sb_item\">Razem w PLN</div>\n                        <div [ngClass]=\"{'zm_hide': hideZM}\" class=\"sb_additional\">\n                            <div class=\"sb_item\">Dopłaty PLN</div>\n                            <div class=\"sb_item\">U*</div>\n                            <div class=\"sb_item\">P*</div>\n                            <div class=\"sb_item zm_col\">ZM*</div>\n                        </div>\n                    </div>\n                </div>\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body\"\n                    *ngFor=\"let position of offerPositions\">\n                    <div class=\"sb_item\">{{position.profilType}}<br>{{position.profilNumber}}</div>\n                    <div class=\"sb_item warranty_col\">{{position.warranty ? \"\" : \"NIE\"}}</div>\n                    <div>\n                        <div class=\"sb_side\" *ngFor=\"let pozSide of position.offerPositionSides\">\n                            <div class=\"sb_item\">{{pozSide.side}}</div>\n                            <div class=\"sb_item\">{{pozSide.filmNumber}}</div>\n                            <div class=\"sb_item\">{{pozSide.filmWidth}}</div>\n                            <div class=\"sb_item\">{{pozSide.plnMb | number : '1.2-2'}}</div>\n                            <div class=\"sb_item\">{{pozSide.quantityMb}}</div>\n                            <div class=\"sb_item\">{{pozSide.togetherPay | number : '1.2-2'}}</div>\n                            <div [ngClass]=\"{'zm_hide': hideZM}\" class=\"sb_additional\">\n                                <div class=\"sb_item\">{{pozSide.costSetup | number : '1.2-2'}}</div>\n                                <div class=\"sb_item\">{{pozSide.costSet | number : '1.2-2'}}</div>\n                                <div class=\"sb_item zm_col\">{{pozSide.costChangeColor | number : '1.2-2'}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item title\">Suma w PLN</div>\n                            <div class=\"sb_additional_sum1\">\n                                <div class=\"sb_item title\">Suma dopłat w PLN</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side_sum\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item\">{{offer.sumAllPositionsPln | number : '1.2-2'}}</div>\n                            <div [ngClass]=\"{'zm_hide': hideZM}\" class=\"sb_additional\">\n                                <div class=\"sb_item\">{{offer.sumSetUpCost | number : '1.2-2'}}</div>\n                                <div class=\"sb_item\">{{offer.sumSetCost | number : '1.2-2'}}</div>\n                                <div class=\"sb_item zm_col\">{{offer.sumCostChangeColor | number : '1.2-2'}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Sum all -->\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side_sumAll\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item title\">Razem netto w PLN</div>\n                        </div>\n                    </div>\n                </div>\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side_sumAll\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item\">{{offer.sumAllNetto | number : '1.2-2'}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Buy film cost  -->\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\" *ngIf=\"offer.costNettoBuyFilm\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side_sumAll\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item title\">Zakup okleiny netto w PLN</div>\n                        </div>\n                    </div>\n                </div>\n                <div [ngClass]=\"{'warranty_hide': hideWarranty}\" class=\"sb_body_sum\" *ngIf=\"offer.costNettoBuyFilm\">\n                    <div></div>\n                    <div class=\"warranty_col\"></div>\n                    <div>\n                        <div class=\"sb_side_sumAll\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div class=\"sb_item\">{{offer.costNettoBuyFilm | number : '1.2-2'}}</div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row tablefooter-info\">\n        <div class=\"col tablefooter\" [innerHtml]=\"footerInfo\"></div>\n    </div>\n\n    <div class=\"row\" *ngIf=\"offer.costNettoBuyFilm\">\n        <div class=\"col tablefooter-film\" [innerHtml]=\"offer.buyFilmComment\"></div>\n    </div>\n\n\n    <div class=\"row p-flex-column\">\n        <div *ngIf=\"checkComments()\" class=\"col\"><p><b>UWAGI:</b></p></div>\n        <div class=\"col comments\">\n            <ul>\n                <li *ngFor=\"let item of offerComments\">\n                    <span [innerHTML]=\"item.comment\"></span>\n                </li>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col bottom-sign\">\n            <p>Z poważaniem,</p>\n            <p>{{username}}</p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SelectItem, SortEvent } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { GlobalService } from 'src/app/_services/global.service';\nimport { FormNewOfferComponent } from '../form/new-offer/form-new-offer.component';\nimport { Offer, OffersService, OfferStatus } from '../offers.service';\n\n@Component({\n  selector: 'app-main-offers',\n  templateUrl: './main-offers.component.html',\n  styleUrls: ['./main-offers.component.scss']\n})\nexport class MainOffersComponent implements OnInit {\n\n  offersCount = 0;\n  loadingTable=false;\n  optionsSort: SelectItem[] = [];\n\n  allOffers: Offer[];\n  offersNew: Offer[];\n  offersInpreparation: Offer[];\n  offersSent: Offer[];\n  offersAccepted: Offer[];\n  offersCanceled: Offer[];\n\n  constructor(\n    public dialogService: DialogService,\n    public offerService: OffersService,\n    private infoPopup: InfoPopupComponent,\n    public globalService: GlobalService\n    ) { }\n\n  ngOnInit(): void {\n    this.optionsSort = [\n      { label: \"Wszystkie\", value: '-1' },\n      { label: \"Nowe\", value: OfferStatus.NEW },\n      { label: \"W przygotowaniu\", value: OfferStatus.INPREPARATION },\n      { label: \"Wysłana\", value: OfferStatus.SENT },\n      { label: \"Zaakceptowana\", value: OfferStatus.ACCEPTED },\n      { label: \"Anulowana\", value: OfferStatus.CANCELED },\n     \n    ]\n    this.loadData();\n    //this.offerService.getAllOrdersNew();\n  }\n\n  showDialogToAddOffer() {\n    const ref = this.dialogService.open(FormNewOfferComponent, {\n      header: 'Nowa Oferta',\n      styleClass: 'no-padding-dialog',\n      width: '500px',\n    });\n\n    ref.onClose.subscribe(result => {\n      console.log('The dialog add new offer was closed');\n    });\n  }\n\n  loadData() {\n    this.globalService.loadingGlobal = true;\n    this.loadingTable = true;\n    this.offerService.getCountOffers().subscribe({\n      next: (res) => {\n        this.offersCount = res;\n      },\n      error: (err) => {\n        this.offersCount= 0;\n        this.infoPopup.showErrorDownload(\"ilości zleceń\");\n      },\n      complete: () => { }\n    });\n\n    this.offerService.getAllOffers().subscribe({\n      next: (res) => {\n        this.allOffers = [];\n        this.allOffers = res;\n\n        this.offersNew = this.allOffers.filter(x=>\n          x.offerStatus == OfferStatus.NEW\n        )\n        this.offersInpreparation = this.allOffers.filter(x=>\n          x.offerStatus == OfferStatus.INPREPARATION\n        )\n        this.offersSent = this.allOffers.filter(x=>\n          x.offerStatus == OfferStatus.SENT\n        )\n        this.offersAccepted = this.allOffers.filter(x=>\n          x.offerStatus == OfferStatus.ACCEPTED\n        )\n        this.offersCanceled = this.allOffers.filter(x=>\n          x.offerStatus == OfferStatus.CANCELED\n        )\n\n        this.loadingTable = false;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"ofert\");\n      },\n      complete: () => {\n        this.globalService.loadingGlobal = false;\n       }\n    });\n  }\n\n  loadByStatus(value) {\n    if (value != '-1') {\n      this.offerService.getAllOffersByStatus(value).subscribe({\n        next: (res) => {\n          this.allOffers = [];\n          this.allOffers = res;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"ofert\");\n        },\n        complete: () => { }\n      })\n    } else {\n      this.loadData();\n    }\n  }\n\n  // SORT FUNCTION\n  customSort(event: SortEvent) {\n    event.data.sort((data1, data2) => {\n      let value1 = data1[event.field];\n      let value2 = data2[event.field];\n      let result = null;\n      let result2 = null;\n      if (value1 == null && value2 != null)\n        result = -1;\n      else if (value1 != null && value2 == null)\n        result = 1;\n      else if (value1 == null && value2 == null)\n        result = 0;\n      else if (typeof value1 === 'string' && typeof value2 === 'string' && event.field != \"offerNumber\")\n        result = value1.localeCompare(value2);\n      else if (event.field == \"offerNumber\") {\n        if (Math.abs(value1.substring(value1.length - 4)) < Math.abs(value2.substring(value2.length - 4))) return (event.order * -1);\n        if (Math.abs(value1.substring(value1.length - 4)) > Math.abs(value2.substring(value2.length - 4))) return (event.order * 1);\n        if (Math.abs(value1.substring(0, value1.length - 4)) < Math.abs(value2.substring(0, value2.length - 4))) return (event.order * -1);\n        if (Math.abs(value1.substring(0, value1.length - 4)) > Math.abs(value2.substring(0, value2.length - 4))) return (event.order * 1);\n      }\n      else\n        result = (value1 < value2) ? -1 : (value1 > value2) ? 1 : 0;\n      return (event.order * result);\n    });\n  }\n\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-ticket\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Oferty</p>\n                                <p class=\"card-title\">{{offersCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddOffer()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n<p-tabView>\n    <p-tabPanel header=\"Nowe\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #ofn styleClass=\"p-datatable-striped\" [value]=\"offersNew\" dataKey=\"id\" [paginator]=\"true\"\n                    [rows]=\"10\" [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\"\n                    [showCurrentPageReport]=\"true\" [loading]=\"loadingTable\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"offerNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\"\n                                    (click)=\"globalService.loadingGlobal = true\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"W przygotowaniu\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #ofn styleClass=\"p-datatable-striped\" [value]=\"offersInpreparation\" dataKey=\"id\"\n                    [paginator]=\"true\" [rows]=\"10\" [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\"\n                    [showCurrentPageReport]=\"true\" [loading]=\"loadingTable\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"offerNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\"\n                                    (click)=\"globalService.loadingGlobal = true\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Wysłane\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #ofn styleClass=\"p-datatable-striped\" [value]=\"offersSent\" dataKey=\"id\" [paginator]=\"true\"\n                    [rows]=\"10\" [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\"\n                    [showCurrentPageReport]=\"true\" [loading]=\"loadingTable\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"offerNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\"\n                                    (click)=\"globalService.loadingGlobal = true\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Zaakceptowane\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #ofn styleClass=\"p-datatable-striped\" [value]=\"offersAccepted\" dataKey=\"id\" [paginator]=\"true\"\n                    [rows]=\"10\" [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\"\n                    [showCurrentPageReport]=\"true\" [loading]=\"loadingTable\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"offerNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\"\n                                    (click)=\"globalService.loadingGlobal = true\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Anulowane\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #ofn styleClass=\"p-datatable-striped\" [value]=\"offersCanceled\" dataKey=\"id\" [paginator]=\"true\"\n                    [rows]=\"10\" [resizableColumns]=\"true\" [rowsPerPageOptions]=\"[10,20,50]\"\n                    [showCurrentPageReport]=\"true\" [loading]=\"loadingTable\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" sortField=\"offerNumber\" sortOrder=\"-1\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\"\n                                    (click)=\"globalService.loadingGlobal = true\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Wszystkie\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <p-table #of styleClass=\"p-datatable-striped\" [value]=\"allOffers\" dataKey=\"id\" [paginator]=\"true\"\n                    [rowsPerPageOptions]=\"[10,20,50]\" [rows]=\"10\" [resizableColumns]=\"true\" sortField=\"offerNumber\"\n                    sortOrder=\"-1\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" (sortFunction)=\"customSort($event)\"\n                    [customSort]=\"true\" [rowHover]=\"true\">\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Oferty</span></div>\n                            <div class=\"col\" style=\"text-align: end;\">\n                                <p-dropdown #of placeholder=\"Wybierz Status\"\n                                    (onChange)=\"loadByStatus(of.selectedOption.value)\" [options]=\"optionsSort\"\n                                    [filter]=\"true\" filterBy=\"name,value\" class=\"\">\n                                </p-dropdown>\n                            </div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr class=\"pm-head\">\n                            <th pSortableColumn=\"offerNumber\">Numer Oferty<p-sortIcon field=\"offerNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"client.name\">Klient<p-sortIcon field=\"client.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerDate\">Data Oferty<p-sortIcon field=\"offerDate\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"myCompany.name\">Firma<p-sortIcon field=\"myCompany.name\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"offerStatus\">Status<p-sortIcon field=\"offerStatus\">\n                                </p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"createdBy\">Utworzone przez<p-sortIcon field=\"createdBy\">\n                                </p-sortIcon>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'offerNumber', 'startsWith')\"\n                                    placeholder=\"Szukaj po numerze oferty\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                                <input pInputText type=\"text\"\n                                    (input)=\"of.filter($event.target.value, 'client.name', 'startsWith')\"\n                                    placeholder=\"Szukaj po nazwie klienta\" class=\"p-inputtext-sm w-100\">\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                            <th>\n                            </th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                        <tr class=\"pm-body\">\n                            <td><a routerLink=\"oferta/{{rowData.offerNumber}}\">{{rowData.offerNumber}}</a></td>\n                            <td>{{rowData.client.name}}</td>\n                            <td>{{rowData.myCompany.name}}</td>\n                            <td>{{rowData.offerDate}}</td>\n                            <td>{{rowData.statusOrder}}</td>\n                            <td>{{rowData.createdBy}}</td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </p-tabPanel>\n\n\n</p-tabView>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { KatalogSystem, KatalogProfili } from 'src/app/catalog/catalog-service/catalog.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ProductionServiceService } from 'src/app/production/production-service/production-service.service';\nimport { OfferHelpers, SettingsService } from 'src/app/settings/settings.service';\nimport { Offer, OfferPosition, OffersService } from '../../offers.service';\n\n@Component({\n  selector: 'app-update-offer-position',\n  templateUrl: './update-offer-position.component.html',\n  styleUrls: ['./update-offer-position.component.scss']\n})\nexport class UpdateOfferPositionComponent implements OnInit {\n  helper: OfferHelpers = {\n    exchangeRateAlu: null,\n    exchangeRatePcv: null,\n    defaultSetCost: null,\n    defaultClientSetUpCost: null,\n    defaultPrintTextHeader: null,\n    defaultPrintTextTableFotter: null,\n    defaultCostChangeColor: null\n  };\n  catalogSugFiltered: any;\n  selectedSystem: KatalogSystem = null;\n  selectedCatalog: KatalogProfili = null;\n  allCatalog: KatalogProfili[];\n  filmSugFiltered: any;\n  sideSugFiltered: any;\n  formOfferPosition: FormGroup;\n  searchBy = ['number'];\n  sideSug = [\"zew\", \"wew\", \"jedno\", \"środek\", \"obu\", \"obu-zew\", \"obu-wew\"];\n  offerData: Offer;\n  offerPosition: OfferPosition;\n  exchange: any;\n  loading = false;\n  changeSetUpCost = false;\n  \n  constructor(\n    public productionService: ProductionServiceService,\n    public settingService: SettingsService,\n    public offerService: OffersService,\n    private cookieService: CookieService,\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig\n  ) {\n    this.offerData = config.data[0];\n    this.offerPosition = config.data[1];\n  }\n\n  ngOnInit(): void {\n    this.findSystem(this.offerPosition.catalogIdHelper);\n    this.filterBySystem();\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n\n    this.formOfferPosition = new FormGroup({\n      id: new FormControl(''),\n      profilType: new FormControl('', { validators: [Validators.required] }),\n      profilNumber: new FormControl('', { validators: [Validators.required] }),\n      alu: new FormControl(null),\n      catalogIdHelper: new FormControl(''),\n      warranty: new FormControl(null),\n      offerPositionSides: new FormArray([\n        new FormGroup({\n          id: new FormControl(''),\n          side: new FormControl(''),\n          filmNumber: new FormControl(''),\n          filmWidth: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n          filmEntrusted: new FormControl(''),\n          quantityMb: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n          hard: new FormControl(''),\n          changeColor: new FormControl(false),\n          costSetupAdditional: new FormControl(''),\n          exchangeRate: new FormControl(''),\n          bicolor: new FormControl(''),\n          costChangeColor: new FormControl(''),\n          additional: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n          cost: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n          mIs: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n        })\n      ])\n    });\n\n    this.loadStructure().then(x=>{\n      this.formOfferPosition.patchValue(this.offerPosition);\n    })\n  }\n\n  loadStructure(){\n    return new Promise((resolve, reject) => {\n      for (let index = 1; index < this.offerPosition.offerPositionSides.length; index++) {\n        this.addSide();\n      }\n      resolve();\n  });\n\n  }\n\n  findSystem(id) {\n    if (id != null && id != '') {\n      let cat = this.productionService.catalogSuggestions.find(x => x.id == id);\n      this.selectedSystem = cat.systemProfil;\n      this.selectedCatalog = cat;\n    }\n  }\n\n  filterBySystem() {\n    this.allCatalog = [];\n    if (this.selectedSystem != null) {\n      for (let i = 0; i < this.productionService.catalogSuggestions.length; i++) {\n        let cat = this.productionService.catalogSuggestions[i];\n        if (cat.systemProfil.name != null) {\n          if (cat.systemProfil.id === (this.selectedSystem.id)) {\n            this.allCatalog.push(cat);\n          }\n        }\n      }\n      this.cookieService.set('creatorSelectedSystemOffer', JSON.stringify(this.selectedSystem));\n    } else {\n      this.allCatalog = this.productionService.catalogSuggestions;\n    }\n  }\n\n  searchCatalog(event) {\n    this.catalogSugFiltered = [];\n    if (event.query != \"\") {\n      console.log(\"loading\");\n      for (let i = 0; i < this.allCatalog.length; i++) {\n        let cat = this.allCatalog[i];\n        if (cat.number != null && this.searchBy.includes(\"number\")) {\n          if (cat.number.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n        if (cat.profileType != null && this.searchBy.includes(\"name\")) {\n          if (cat.profileType.toLowerCase().includes(event.query.toLowerCase())) {\n            this.catalogSugFiltered.push(cat);\n          }\n        }\n      }\n    } else {\n      this.allCatalog.forEach(x => this.catalogSugFiltered.push(x));\n    }\n  }\n\n  duplicateLastSide(){\n    let tmp = this.sides.at(this.sides.length-1);\n    tmp.get('id').patchValue(null);\n    this.addSide();\n    this.sides.at(this.sides.length-1).patchValue(tmp.value);\n  }\n\n\n  searchFilm(event) {\n    this.filmSugFiltered = [];\n    for (let i = 0; i < this.productionService.filmSuggestions.length; i++) {\n      let film = this.productionService.filmSuggestions[i];\n      if (film.number.toLowerCase().includes(event.query.toLowerCase()) || film.name.toLowerCase().includes(event.query.toLowerCase())) {\n        this.filmSugFiltered.push(film);\n      }\n    }\n  }\n\n  searchSide(event) {\n    this.sideSugFiltered = [];\n    for (let i = 0; i < this.sideSug.length; i++) {\n      let side = this.sideSug[i];\n      if (side.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.sideSugFiltered.push(side);\n      }\n    }\n  }\n\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  get sides(): FormArray {\n    return this.formOfferPosition.get(\"offerPositionSides\") as FormArray\n  }\n\n  addSide() {\n    const group = new FormGroup({\n      id: new FormControl(''),\n      side: new FormControl(''),\n      filmNumber: new FormControl(null),\n      filmWidth: new FormControl('', { validators: [Validators.required,Validators.nullValidator] }),\n      filmEntrusted: new FormControl(false),\n      quantityMb: new FormControl(6.5, { validators: [Validators.required,Validators.nullValidator] }),\n      hard: new FormControl(false),\n      changeColor: new FormControl(false),\n      costSetupAdditional: new FormControl(''),\n      bicolor: new FormControl(null),\n      costChangeColor: new FormControl(null),\n      exchangeRate: new FormControl(null, { validators: [Validators.required,Validators.nullValidator] }),\n      additional: new FormControl(this.offerData.client.helper_additional, { validators: [Validators.required,Validators.nullValidator] }),\n      cost: new FormControl(this.offerData.client.helper_cost, { validators: [Validators.required,Validators.nullValidator] }),\n      mIs: new FormControl(null, { validators: [Validators.required,Validators.nullValidator] }),\n    });\n    this.sides.push(group);\n    this.changeHard(this.sides.length-1);\n    if (this.formOfferPosition.get('alu').value) {\n      this.sides.controls[this.sides.length-1]['controls']['exchangeRate'].setValue(this.helper.exchangeRateAlu);\n    } else {\n      this.sides.controls[this.sides.length-1]['controls']['exchangeRate'].setValue(this.helper.exchangeRatePcv);\n    }\n  }\n\n  removeSide(i: number) {\n    this.sides.removeAt(i);\n  }\n\n  onSelectFilm(event, i) {\n    this.sides.controls[i].get('filmNumber').setValue(event.number);\n    this.sides.controls[i].get('bicolor').setValue(event.surchargePercentage);\n  }\n\n  onSelectSide(e, index) {\n    if (this.selectedCatalog != null) {\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index].get('hard').setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get('filmWidth').setValue(res);\n    }\n  }\n\n  onSelectCatalog(event: KatalogProfili) {\n    this.selectedCatalog = event;\n    this.formOfferPosition.get(\"profilNumber\").setValue(event.number);\n    this.formOfferPosition.get(\"profilType\").setValue(event.offerName);\n    this.formOfferPosition.get(\"alu\").setValue(event.alu);\n    this.formOfferPosition.get(\"catalogIdHelper\").setValue(event.id);\n    this.sides.controls.forEach((x, index) => {\n      let e = x.get('side').value;\n      let res = \"\";\n      switch (e) {\n        case \"jedno\":\n          res = this.selectedCatalog.dimOneSide;\n          break;\n        case \"środek\":\n          res = this.selectedCatalog.dimCenterSide;\n          break;\n        case \"obu\":\n          res = this.selectedCatalog.dimTwoSide;\n          break;\n        case \"obu-zew\":\n          res = this.selectedCatalog.dimTwoSideOuter;\n          break;\n        case \"obu-wew\":\n          res = this.selectedCatalog.dimTwoSideInner;\n          break;\n        case \"zew\":\n          res = this.selectedCatalog.dimOuter;\n          break;\n        case \"wew\":\n          res = this.selectedCatalog.dimInner;\n          break;\n      }\n      this.sides.controls[index].get('hard').setValue(this.selectedCatalog.hard);\n      this.sides.controls[index].get('filmWidth').setValue(res);\n    });\n  }\n\n  calculateSides() {\n    for (let index = 0; index < this.sides.length; index++) {\n      this.changeHard(index);\n      // if(this.sides.controls[index]['controls']['costChangeColor'].value){\n      //   this.sides.controls[index]['controls']['colorChangeBool'].setValue(true);\n      // }\n    }\n  }\n\n  colorFieldChange(i,event){\n    if(event){\n      this.sides.controls[i]['controls']['changeColor'].setValue(true);\n    }else{\n      this.sides.controls[i]['controls']['changeColor'].setValue(false);\n    }\n  }\n\n  changeColorChangebox(i,event) {\n    if (event.checked) {\n      this.sides.controls[i]['controls']['costChangeColor'].setValue(this.offerData.client.helper_costChangeColor);\n    } else {\n      this.sides.controls[i]['controls']['costChangeColor'].setValue('');\n    }\n  }\n\n  changeHard(i) {\n    let event = this.sides.controls[i]['controls']['quantityMb'].value;\n    this.loadM(event, i);\n  }\n\n\n  changeAlu(event) {\n    if (event) {\n      this.sides.controls.forEach(x => {\n        x['controls']['exchangeRate'].setValue(this.helper.exchangeRateAlu);\n      })\n    } else {\n      this.sides.controls.forEach(x => {\n        x['controls']['exchangeRate'].setValue(this.helper.exchangeRatePcv);\n      })\n    }\n  }\n\n  \n\n  loadM(event, i) {\n    let tmpHard = this.sides.controls[i]['controls']['hard'].value;\n    if (event <= 50) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo50);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo50);\n      }\n    } else if (event > 50 && event <= 150) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo150);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo150);\n      }\n    } else if (event > 150 && event <= 500) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardTo500);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyTo500);\n      }\n    } else if (event > 500) {\n      if (tmpHard) {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mHardAbove500);\n      } else {\n        this.sides.controls[i]['controls']['mIs'].setValue(this.offerData.client.helper_mEasyAbove500);\n      }\n    }\n\n  }\n\n  updateOfferPosition() {\n    this.loading = true;\n    this.offerService.updateOfferPosition(this.offerData.offerNumber, this.offerPosition.id, this.formOfferPosition.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"pozycja\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"pozycja\");\n        this.loading = false;\n        console.log(err);\n      }\n    })\n  }\n\n}","<div class=\"sb-dialog-content\" style=\"width: 1000px; min-width: 1000px;\">\n    <form [formGroup]=\"formOfferPosition\" class=\"sb-form\">\n        <div class=\"row\">\n            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"systemId\">Wybór systemu</label>\n                        <p-dropdown [options]=\"productionService.allSystems\" (onChange)=\"filterBySystem()\"\n                            styleClass=\"fullwidth\" appendTo=\"body\" [(ngModel)]=\"selectedSystem\"\n                            [ngModelOptions]=\"{standalone: true}\" placeholder=\"Wybierz system\" optionLabel=\"name\"\n                            [showClear]=\"true\" filter=\"true\">\n                        </p-dropdown>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                        <p-radioButton class=\"p-2\" name=\"groupSearch\" value=\"number\" label=\"Numer\"\n                            [(ngModel)]=\"searchBy\" [ngModelOptions]=\"{standalone: true}\"></p-radioButton>\n                        <p-radioButton class=\"p-2\" name=\"groupSearch\" value=\"name\" label=\"Nazwa\" [(ngModel)]=\"searchBy\"\n                            [ngModelOptions]=\"{standalone: true}\">\n                        </p-radioButton>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"profilNumberId\">Numer kształtownika *</label>\n                        <p-autoComplete [inputStyle]=\"{'font-weight':'bold'}\" autocomplete=\"off\" appendTo=\"body\"\n                            styleClass=\"fullwidth\" [formControl]=\"formOfferPosition.get('profilNumber')\"\n                            [suggestions]=\"catalogSugFiltered\" (completeMethod)=\"searchCatalog($event)\"\n                            [dropdown]=\"true\" emptyMessage=\"Nie znaleziono\" (onSelect)=\"onSelectCatalog($event)\">\n                            <ng-template let-catalog pTemplate=\"item\">\n\n                                <div\n                                    [class]=\"'measure-badge status-' + catalog.actualMeasurement + ' catalog-dropdown'\">\n\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            <div style=\"font-size:16px;\">\n                                                <i style=\"color:red;font-size: 1em;padding-right: 2px;\"\n                                                    *ngIf=\"catalog.hard\" class=\"pi pi-exclamation-triangle\"></i>\n                                                {{catalog.number}}\n                                            </div>\n                                            <div style=\"font-size:12px;\">{{catalog.profileType}}</div>\n                                            <div style=\"font-size:12px;\">{{catalog.systemProfil.name}}</div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div style=\"font-size:12px;\">ZEW: <b>{{catalog.dimOuter}}</b></div>\n                                            <div style=\"font-size:12px;\">WEW: <b>{{catalog.dimInner}}</b></div>\n                                            <div style=\"font-size:12px;\">JEDN: <b>{{catalog.dimOneSide}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">ŚRO: <b>{{catalog.dimCenterSide}}</b>\n                                            </div>\n                                        </div>\n                                        <div class=\"col\">\n                                            <div style=\"font-size:12px;\">OBU: <b>{{catalog.dimTwoSide}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">OBU ZEW:\n                                                <b>{{catalog.dimTwoSideOuter}}</b>\n                                            </div>\n                                            <div style=\"font-size:12px;\">OBU WEW:\n                                                <b>{{catalog.dimTwoSideInner}}</b>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n\n                            </ng-template>\n                        </p-autoComplete>\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formOfferPosition.get('profilNumber').hasError('required') && formOfferPosition.get('profilNumber').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                        <label class=\"sb-small-label\" for=\"profilTypeId\">Rodzaj kształtownika *</label>\n                        <input pInputText type=\"text\" autocomplete=\"off\" class=\"fullwidth\"\n                            [formControl]=\"formOfferPosition.get('profilType')\">\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formOfferPosition.get('profilType').hasError('required') && formOfferPosition.get('profilType').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row pt-1\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n                        <p-checkbox [formControl]=\"formOfferPosition.get('alu')\" (ngModelChange)=\"changeAlu($event)\"\n                            [binary]=\"true\" label=\"Alu\">\n                        </p-checkbox>\n                    </div>\n                </div>\n                <div class=\"row pt-1\">\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex align-items-center\">\n                        <p-checkbox [formControl]=\"formOfferPosition.get('warranty')\" [binary]=\"true\" label=\"Gwarancja\">\n                        </p-checkbox>\n                    </div>\n                </div>\n                \n            </div>\n\n            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                <div class=\"row w-100 m-0\">\n\n                    <div class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form\">\n                        <div class=\"row\">\n                            <div class=\"sb-stars-header\">Ustawienia klienta</div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead>\n                                            <th class=\"text-left\">Metry</th>\n                                            <th class=\"text-center\">Łatwe</th>\n                                            <th class=\"text-center\">Trudne</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-left\">0-50</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo50}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo50}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">51-150</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo150}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo150}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">151-500</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyTo500}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardTo500}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td class=\"text-left\">pow. 500</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mEasyAbove500}}</td>\n                                                <td class=\"text-center\">{{offerData.client.helper_mHardAbove500}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead>\n                                            <th></th>\n                                            <th class=\"text-center\">Kurs</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td>ALU</td>\n                                                <td class=\"text-center\">{{helper.exchangeRateAlu}}</td>\n                                            </tr>\n                                            <tr>\n                                                <td>PCV</td>\n                                                <td class=\"text-center\">{{helper.exchangeRatePcv}}</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div class=\"row w-100 m-0\">\n                    <div *ngIf=\"selectedCatalog != null\" class=\"col-sm-12 col-md-12 col-lg-12 sb-stats-form mt-2\">\n\n                        <div class=\"row p-1\">\n\n                            <div class=\"sb-stars-header\">Wybrana pozycja</div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead class=\"sb-header-normal\">\n                                            <th class=\"text-left\">Numer</th>\n                                            <th class=\"text-left\">Nazwa</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-center\"><b>{{selectedCatalog.number}}</b></td>\n                                                <td class=\"text-center\"><b>{{selectedCatalog.offerName}}</b></td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-12 col-md-6 col-lg-6\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <tbody>\n                                            <tr>\n                                                <td *ngIf=\"selectedCatalog.hard\" style=\"color:red; border: 0;\"\n                                                    class=\"text-center\">\n                                                    <i style=\"padding-right: 5px;\"\n                                                        class=\"pi pi-exclamation-triangle\"></i>\n                                                    <span>TRUDNE</span>\n                                                </td>\n                                                <td *ngIf=\"selectedCatalog.actualMeasurement\"\n                                                    style=\"color:green; border: 0;\" class=\"text-center\">\n                                                    <i style=\"padding-right: 5px;\" class=\"pi pi-check-circle\"></i>\n                                                    <span>Wymiar zmierzony fizycznie</span>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row p-1\">\n                            <div class=\"col-sm-12 col-md-12 col-lg-12\">\n                                <div class=\"stats-table\">\n                                    <table>\n                                        <thead class=\"sb-header-normal\">\n                                            <th class=\"text-center\">ZEW</th>\n                                            <th class=\"text-center\">WEW</th>\n                                            <th class=\"text-center\">JEDN</th>\n                                            <th class=\"text-center\">ŚROD</th>\n                                            <th class=\"text-center\">OBU</th>\n                                            <th class=\"text-center\">OBU ZEW</th>\n                                            <th class=\"text-center\">OBU WEW</th>\n                                        </thead>\n                                        <tbody>\n                                            <tr>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimOuter ? selectedCatalog.dimOuter : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimInner ? selectedCatalog.dimInner : \"--\"}}</b>\n                                                </td>\n\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimOneSide ? selectedCatalog.dimOneSide : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimCenterSide ? selectedCatalog.dimCenterSide : \"--\"}}</b>\n                                                </td>\n\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSide ? selectedCatalog.dimTwoSide : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSideOuter ? selectedCatalog.dimTwoSideOuter : \"--\"}}</b>\n                                                </td>\n                                                <td class=\"text-center\">\n                                                    <b>{{selectedCatalog.dimTwoSideInner ? selectedCatalog.dimTwoSideInner : \"--\"}}</b>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row mt-2\" *ngIf=\"selectedCatalog.comments\" style=\"border-top:1px solid #D5D5D5\">\n                            <div class=\"col-sm-12 col-md-12 col-lg-12 p-0\" pTooltip=\"Uwagi\">\n                                <div class=\"sb-stars-header\" style=\"color:red; font-size: 10px;\">UWAGI:</div>\n                                <div class=\"pl-1\" [innerHtml]=\"selectedCatalog.comments\"></div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n        <div class=\"row mb-2\">\n            <div class=\"col text-center\">\n                <span><b>STRONY</b></span>\n            </div>\n        </div>\n\n        <div formArrayName=\"offerPositionSides\">\n\n            <div class=\"row sb-position-side\" *ngFor=\"let item of sides.controls; index as i\" [formGroupName]=\"i\">\n\n                <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n\n                    <div class=\"row flex-nowrap sb-row-position-side\">\n\n                        <div class=\"col-sm-12 col-md-1 col-lg-1 sb-col-side count\">\n\n                            <button pButton pRipple type=\"button\" (click)=\"removeSide(i)\" style=\"height: 25px;\"\n                                pTooltip=\"Usuń stronę\" icon=\"pi pi-times\" class=\"p-button-sm sb-button red\"></button>\n\n                            <span class=\"text-center p-2\">{{i + 1}}</span>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n\n                            <label class=\"sb-small-label \" for=\"side\">Str. kształ.</label>\n                            <p-autoComplete formControlName=\"side\" autocomplete=\"off\" [suggestions]=\"sideSugFiltered\"\n                                (completeMethod)=\"searchSide($event)\" [dropdown]=\"true\" autocomplete=\"off\"\n                                [completeOnFocus]=\"true\" appendTo=\"body\" (onSelect)=\"onSelectSide($event,i)\">\n                                <ng-template let-side pTemplate=\"item\">\n                                    <div class=\"catalog-dropdown-side\">\n                                        <div class=\"row\">\n                                            <div class=\"col\">{{side}}</div>\n                                        </div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n\n                            <label class=\"sb-small-label\" for=\"filmNumber\">Numer Okleiny</label>\n                            <p-autoComplete formControlName=\"filmNumber\" [minLength]=\"1\" [suggestions]=\"filmSugFiltered\"\n                                (completeMethod)=\"searchFilm($event)\" [dropdown]=\"true\" autocomplete=\"off\"\n                                [completeOnFocus]=\"true\" appendTo=\"body\" (onSelect)=\"onSelectFilm($event,i)\">\n                                <ng-template let-film pTemplate=\"item\">\n                                    <div class=\"catalog-dropdown-film\">\n                                        <!-- <img src=\"{{film.imgLink}}\" style=\"width:32px;display:inline-block;margin:5px 0 2px 5px\"/> -->\n                                        <div class=\"row\">\n                                            <div class=\"col-6\">\n                                                <div style=\"font-size:16px;\">{{film.number}}</div>\n                                                <div style=\"font-size:12px;\"> {{film.name}}</div>\n                                            </div>\n\n                                            <div class=\"col-6 pl-2 text-center\" [ngSwitch]=\"film.status\"\n                                                style=\"font-size:12px;\">\n                                                <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-dost\">DOST.</div>\n                                                <div *ngSwitchCase=\"'NIEDOSTEPNA'\" class=\"status-niedost\">NIEDOST.</div>\n                                                <div *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\" class=\"status-ogr\">OGRAN.\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </ng-template>\n                            </p-autoComplete>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n\n                            <label class=\"sb-small-label\" for=\"filmWidthId\">Szer. Okl. *</label>\n                            <p-inputNumber formControlName=\"filmWidth\" suffix=\" mm\" [min]=\"0\"\n                                [step]=\"1\" [inputStyle]=\"{'font-weight':'bold'}\">\n                            </p-inputNumber>\n\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <label class=\"sb-small-label \" for=\"quantityMb\">Ilość Mb *</label>\n                            <p-inputNumber (onInput)=\"loadM($event.value,i)\" formControlName=\"quantityMb\"\n                                 mode=\"decimal\" [min]=\"0\" [step]=\"0.5\" [minFractionDigits]=\"1\">\n                            </p-inputNumber>\n                        </div>\n\n                    </div>\n                </div>\n\n                <div class=\"col-sm-12 col-md-12 col-lg-6 p-0\">\n\n                    <div class=\"row flex-nowrap sb-row-position-side justify-content-end\">\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"additional\">Dopłata *</label>\n                            <p-inputNumber formControlName=\"additional\" mode=\"decimal\" [min]=\"0\" [step]=\"0.10\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"cost\">Koszt *</label>\n                            <p-inputNumber formControlName=\"cost\" mode=\"decimal\" [min]=\"0\" [step]=\"0.01\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"mIs\">Przelicznik *</label>\n                            <p-inputNumber formControlName=\"mIs\" mode=\"decimal\" [min]=\"0\" [step]=\"0.10\"\n                                [minFractionDigits]=\"2\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"bicolor\">Bicolor</label>\n                            <p-inputNumber formControlName=\"bicolor\" type=\"number\" [min]=\"0\" suffix=\"%\" [step]=\"1\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"costChangeColor\">Zm. koloru</label>\n                            <p-inputNumber formControlName=\"costChangeColor\" type=\"number\" [min]=\"0\" [step]=\"10\" (ngModelChange)=\"colorFieldChange(i,$event)\">\n                            </p-inputNumber>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-2 col-lg-2 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"exchangeRate\">Kurs *</label>\n                            <p-inputNumber formControlName=\"exchangeRate\" type=\"number\" [min]=\"0\" [step]=\"0.1\">\n                            </p-inputNumber>\n                        </div>\n                    </div>\n\n                    <div class=\"row align-items-center w-100 m-0\">\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"hard\" (ngModelChange)=\"changeHard(i)\" [binary]=\"true\"\n                                label=\"Trudne\">\n                            </p-checkbox>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"filmEntrusted\" [binary]=\"true\" label=\"Folia powierzona\">\n                            </p-checkbox>\n                        </div>\n\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <p-checkbox formControlName=\"changeColor\"\n                                (onChange)=\"changeColorChangebox(i,$event)\" [binary]=\"true\" label=\"Zm. koloru\">\n                            </p-checkbox>\n                        </div>\n                        <div class=\"col-sm-12 col-md-3 col-lg-3 sb-col-side\">\n                            <label class=\"sb-small-label\" for=\"costSetupAdditional\">Ust**</label>\n                            <p-inputNumber pTooltip=\"Podmienia koszt ustawienia, ignoruje zakresy dla ustawienia podstawowego\" formControlName=\"costSetupAdditional\" type=\"number\" [min]=\"0\" [step]=\"10\">\n                            </p-inputNumber>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12 col-md-12 col-lg-12 d-flex justify-content-center\">\n                    <button pButton pRipple type=\"button\" (click)=\"addSide()\" pTooltip=\"Dodaj stronę\" icon=\"pi pi-plus\"\n                        label=\"Dodaj stronę\" class=\"p-button-sm sb-button blue m-1\"></button>\n\n                    <button [disabled]=\"sides.length == 0\" pButton pRipple type=\"button\" (click)=\"duplicateLastSide()\"\n                        pTooltip=\"Powielanie ostatniej pozycji\" icon=\"pi pi-angle-double-down\" label=\"Powiel stronę\"\n                        class=\"p-button-sm sb-button blue m-1\"></button>\n                </div>\n            </div>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\" style=\"position: sticky;bottom: 0;\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"formOfferPosition.invalid || loading || sides.length == 0\" pButton pRipple type=\"button\"\n            (click)=\"updateOfferPosition()\" pTooltip=\"Aktualizuj pozycję\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { reduce } from 'rxjs/operators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { OffersService } from '../../offers.service'\n\n@Component({\n  selector: 'app-form-new-offer',\n  templateUrl: './form-new-offer.component.html',\n  styleUrls: ['./form-new-offer.component.scss']\n})\nexport class FormNewOfferComponent implements OnInit {\n\n  color: ThemePalette = 'warn';\n  formOffer: FormGroup;\n  loading = false;\n  pl = {\n    firstDayOfWeek: 1,\n    dayNames: [\"Niedziela\", \"Poniedziałek\", \"Wtorek\", \"Środa\", \"Czwartek\", \"Piątek\", \"Sobota\"],\n    dayNamesShort: [\"Niedz\", \"Pon\", \"Wt\", \"Śr\", \"Czw\", \"Pt\", \"Sob\"],\n    dayNamesMin: [\"Ni\", \"Po\", \"Wt\", \"Śr\", \"Cz\", \"Pt\", \"So\"],\n    monthNames: [\"Styczeń\", \"Luty\", \"Marzec\", \"Kwiecień\", \"Maj\", \"Czerwiec\", \"Lipiec\", \"Sierpień\", \"Wrzesień\", \"Październik\", \"Listopad\", \"Grudzień\"],\n    monthNamesShort: [\"Sty\", \"Lut\", \"Mar\", \"Kwi\", \"Maj\", \"Cze\", \"Lip\", \"Sie\", \"Wrz\", \"Paź\", \"Lis\", \"Gru\"],\n    today: 'Dziś',\n    clear: 'Wyczyść',\n    dateFormat: 'dd-mm-yy',\n    weekHeader: 'Wk'\n  };\n\n  constructor(\n    public offerService: OffersService,\n    private infoPopup: InfoPopupComponent,\n    private route: ActivatedRoute,\n    private router: Router,\n    public ref: DynamicDialogRef\n  ) { }\n\n  ngOnInit(): void {\n    this.formOffer = new FormGroup({\n      offerNumber: new FormControl(''),\n      offerDate: new FormControl(new Date()),\n      myCompany: new FormControl('', { validators: [Validators.required] }),\n      client: new FormControl('', { validators: [Validators.required] })\n    })\n    this.offerService.getMyCompanies();\n    this.offerService.getClients();\n  }\n\n  addOffer(){\n    this.loading = true;\n    this.offerService.addNewOffer(this.formOffer.value).subscribe({\n      next: (res)=>{\n        this.router.navigate(['../marketing/oferta/', res.offerNumber], { relativeTo: this.route });\n        this.infoPopup.showSuccessAdd(\"oferta\");\n        this.exit(1);\n        this.loading = false;\n      },\n      error: (err)=>{\n        console.log(err);\n        this.infoPopup.showErrorAdd(\"oferta\");\n        this.loading = false;\n      },\n      complete: () =>{\n      }\n    })\n  }\n  exit(id) {\n    this.ref.close(id);\n  }\n\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formOffer\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n                \n                <label class=\"sb-small-label\" for=\"myCompany\">Oferta do firmy *</label>\n\n                <p-dropdown [style]=\"{'width':'100%'}\" appendTo=\"body\" placeholder=\"Wybierz firmę\" id=\"myCompany\"\n                    [options]=\"offerService.myCompanyData\" [filter]=\"true\" filterBy=\"name,value.name\"\n                    [formControl]=\"formOffer.get('myCompany')\" required></p-dropdown>\n\n                <p class=\"invalid-feedback\" *ngIf=\"formOffer.get('myCompany').hasError('required') && formOffer.get('myCompany').touched\">\n                    musi być wypełnione\n                </p>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"client\">Klient *</label>\n                \n                <p-dropdown placeholder=\"Wybierz klienta\" [style]=\"{'width':'100%'}\" appendTo=\"body\" id=\"client\"\n                    [options]=\"offerService.clientData\" [filter]=\"true\" filterBy=\"name,value.name\"\n                    [formControl]=\"formOffer.get('client')\" required>\n                </p-dropdown>\n\n                <p class=\"invalid-feedback\" *ngIf=\"formOffer.get('client').hasError('required') && formOffer.get('client').touched\">\n                    musi być wypełnione\n                </p>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <label class=\"sb-small-label\" for=\"offerDate\">Data Oferty</label>\n\n                <p-calendar dateFormat=\"yy-mm-dd\" appendTo=\"body\" [monthNavigator]=\"true\" [locale]=\"pl\"\n                    [formControl]=\"formOffer.get('offerDate')\" [showIcon]=\"true\" required>\n                </p-calendar>\n\n            </div>\n\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <label class=\"sb-small-label\" for=\"offerNumber\">Numer oferty**</label>\n\n                <input pInputText id=\"offerNumber\" pKeyFilter=\"alpha\" [formControl]=\"formOffer.get('offerNumber')\" type=\"text\"\n                    pTooltip=\"Pole przeznaczone do wpisania numeru oferty jeżeli chcemy ustawić indywidualny. Pozostawienie pustego pola spowoduje automatyczne wygenerowanie numeru oferty.\"\n                    class=\"\" placeholder=\"LMMrr-O-FM\" autocomplete=\"off\">\n\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"formOffer.invalid || loading\" pButton pRipple type=\"button\" (click)=\"addOffer()\"\n            pTooltip=\"Dodaj ofertę\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, Injectable, OnInit } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, ActivatedRoute, Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { ConfirmationService } from 'primeng/api';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { Observable } from 'rxjs';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ProductionServiceService } from 'src/app/production/production-service/production-service.service';\nimport { OfferHelpers, SettingsService } from 'src/app/settings/settings.service';\nimport { AddOfferPositionComponent } from '../form/add-offer-position/add-offer-position.component';\nimport { UpdateClientHelpersComponent } from '../form/update-client-helpers/update-client-helpers.component';\nimport { UpdateClientHelperRangeComponent } from '../form/update-client-helper-range/update-client-helper-range.component';\nimport { UpdateOfferPositionComponent } from '../form/update-offer-position/update-offer-position.component';\nimport { Offer, OfferPosition, OffersService, OfferStatus } from '../offers.service';\nimport { PrintOfferService } from '../../print/print-offer.service'\nimport { GlobalService } from 'src/app/_services/global.service';\nimport { UpdateFilmBuyCostComponent } from '../form/update-film-buy-cost/update-film-buy-cost.component';\n\n@Injectable()\nexport class OfferResolver implements Resolve<any> {\n  constructor(private offerService: OffersService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any> | Promise<any> | any {\n    console.log(\"Resolve Offer with id: \" + route.paramMap.get('id'))\n    return this.offerService.getOfferById(route.paramMap.get('id'));\n  }\n}\n\n@Component({\n  selector: 'app-details-offer',\n  templateUrl: './details-offer.component.html',\n  styleUrls: ['./details-offer.component.scss']\n})\nexport class DetailsOfferComponent implements OnInit {\n\n  offer: Offer;\n  offerNumber: string;\n  helper: OfferHelpers = {\n    exchangeRateAlu: null,\n    exchangeRatePcv: null,\n    defaultSetCost: null,\n    defaultClientSetUpCost: null,\n    defaultPrintTextHeader: null,\n    defaultPrintTextTableFotter: null,\n    defaultCostChangeColor: null\n  };\n  loadingTable = false;\n  loadingSaveHelper = false;\n  displayFormExchange = false;\n  displayPrintOffer = false;\n  loadingPrintOffer = false;\n  loadingChangeStatus = false;\n  displayChangeStatus = false;\n  modelStatusChange = null;\n  offerPositions: OfferPosition[];\n  totalPLN: number = 0;\n  totalAdditionalU: number = 0;\n  totalAdditionalP: number = 0;\n  allTotalPLN: number = 0;\n  offerNotes: any;\n  allStatus = [\n    { label: \"Nowe\", value: OfferStatus.NEW },\n    { label: \"W przygotowaniu\", value: OfferStatus.INPREPARATION },\n    { label: \"Wysłana\", value: OfferStatus.SENT },\n    { label: \"Zaakceptowana\", value: OfferStatus.ACCEPTED },\n    { label: \"Anulowana\", value: OfferStatus.CANCELED }\n  ]\n\n  constructor(\n    private route: ActivatedRoute,\n    private infoPopup: InfoPopupComponent,\n    private cookieService: CookieService,\n    private confirmationService: ConfirmationService,\n    private router: Router,\n    private offerService: OffersService,\n    private settingService: SettingsService,\n    public dialogService: DialogService,\n    public productionService: ProductionServiceService,\n    public printOfferService: PrintOfferService,\n    public globalService: GlobalService\n  ) { }\n\n  ngOnInit(): void {\n    this.loadingTable = true;\n    this.route.data.subscribe({\n      next: (res) => {\n        this.offer = res.offer;\n        this.offerNumber = res.offer.offerNumber;\n        this.offerNotes = res.offer.offerNotes;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n        this.offerPositions = this.offer.offerPosition.sort((a, b) => a.positionNumber - b.positionNumber);\n        this.offerPositions.forEach(x => {\n          x = x.offerPositionSides.sort((a, b) => {\n            if (a.side == \"zew\" || a.side == \"wew\" || a.side == \"obu-wew\" || a.side == \"obu-zew\" || a.side == \"obu\") {\n              if (a.side > b.side) {\n                return -1;\n              }\n              if (a.side < b.side) {\n                return 1;\n              }\n            } else {\n              if (a.side < b.side) {\n                return -1;\n              }\n              if (a.side > b.side) {\n                return 1;\n              }\n            }\n            return 0;\n          });\n        })\n        this.loadingTable = false;\n        this.globalService.loadingGlobal = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.infoPopup.showErrorDownload(\"oferta\");\n      },\n      complete: () => {\n      }\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n\n    this.productionService.loadCatalogSuggestions();\n    this.productionService.loadFilmSuggestions();\n    this.productionService.loadAllSystems();\n\n    console.log(this.offer);\n    this.modelStatusChange = this.offer.offerStatus;\n  }\n\n  loadData() {\n    console.log(\"refresh\")\n    this.loadingTable = true;\n    this.offerService.getOfferById(this.offerNumber).subscribe({\n      next: (res) => {\n        this.offer = res;\n        this.offerNotes = this.offer.offerNotes;\n        this.offerNotes.sort((a, b) => {\n          if (a.createdDate > b.createdDate) {\n            return 1;\n          }\n          if (a.createdDate < b.createdDate) {\n            return -1;\n          }\n          return 0;\n        });\n        this.offerPositions = this.offer.offerPosition.sort((a, b) => a.positionNumber - b.positionNumber);\n        this.offerPositions.forEach(x => {\n          x = x.offerPositionSides.sort((a, b) => {\n            if (a.side == \"zew\" || a.side == \"wew\" || a.side == \"obu-wew\" || a.side == \"obu-zew\" || a.side == \"obu\") {\n              if (a.side > b.side) {\n                return -1;\n              }\n              if (a.side < b.side) {\n                return 1;\n              }\n            } else {\n              if (a.side < b.side) {\n                return -1;\n              }\n              if (a.side > b.side) {\n                return 1;\n              }\n            }\n            return 0;\n          });\n        })\n        this.loadingTable = false;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helper = res[0];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {\n      }\n    })\n    this.modelStatusChange = this.offer.offerStatus;\n  }\n\n  statusOfferSwitch(stat) {\n    switch (stat) {\n      case OfferStatus.NEW:\n        return \"Nowa\"\n      case OfferStatus.INPREPARATION:\n        return \"W przygotowaniu\"\n      case OfferStatus.SENT:\n        return \"Wysłana\"\n      case OfferStatus.ACCEPTED:\n        return \"Zaakceptowana\"\n      case OfferStatus.CANCELED:\n        return \"Anulowana\"\n    }\n  }\n\n  showChangeStatusDialog() {\n    this.displayChangeStatus = true;\n  }\n\n  updateOfferStatus() {\n    this.loadingChangeStatus = true;\n    console.log(this.modelStatusChange);\n    this.offerService.updateOfferStatus(this.offerNumber, this.modelStatusChange).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate(\"status oferty\");\n        this.loadingChangeStatus = false;\n        this.displayChangeStatus = false;\n        this.loadData();\n      },\n      error: (err) => {\n        console.log(err);\n        this.infoPopup.showErrorUpdate(\"status oferty\");\n        this.loadingChangeStatus = false;\n      }\n    })\n  }\n\n  backClicked() {\n    this.router.navigateByUrl('/marketing');\n  }\n\n  deleteOffer() {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć oferte: ' + this.offer.offerNumber + ' ?',\n      header: 'Potwierdzenie',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.globalService.loadingGlobal = true;\n        this.offerService.deleteOffer(this.offer.offerNumber).subscribe({\n          next: (res) => {\n            console.log(res);\n            this.infoPopup.showSuccessDelete(\"oferta\");\n            this.globalService.loadingGlobal = false;\n            this.backClicked();\n          },\n          error: (err) => {\n            console.log(err);\n            this.infoPopup.showErrorDelete(\"oferta\");\n          }\n        })\n      }\n    });\n  }\n\n  deleteOfferRow(posData: OfferPosition) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć pozycję: ' + posData.profilNumber + ' ?',\n      header: 'Potwierdzenie',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.globalService.loadingGlobal = true;\n        this.offerService.deleteOfferPosition(this.offer.offerNumber, posData.id).subscribe({\n          next: (res) => {\n            this.loadData();\n            this.globalService.loadingGlobal = false;\n            this.infoPopup.showSuccessDelete(\"pozycje\");\n          },\n          error: (err) => {\n            console.log(err);\n            this.infoPopup.showErrorDelete(\"pozycje\");\n          }\n        })\n      }\n    });\n  }\n\n  showDialogToAddCostBuyFilm() {\n    const ref = this.dialogService.open(UpdateFilmBuyCostComponent, {\n      header: 'Aktualizacja kosztu zakupu okleiny',\n      data: this.offer\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update cost buy film was closed');\n    });\n  }\n\n  showDialogToAddOfferPosition() {\n    const ref = this.dialogService.open(AddOfferPositionComponent, {\n      header: 'Nowa pozycja',\n      data: this.offer\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog add offer position was closed');\n    });\n  }\n\n  showDialogToUpdateOfferPosition(posData) {\n    const ref = this.dialogService.open(UpdateOfferPositionComponent, {\n      header: 'Aktualizacja pozycji',\n      data: [this.offer, posData]\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update offer position was closed');\n    });\n  }\n\n  showDialogToUpdateHelperOffer() {\n    const ref = this.dialogService.open(UpdateClientHelpersComponent, {\n      header: 'Aktualizacja ustawień dla firmy: ' + this.offer.client.name,\n      data: this.offer,\n      width: '300px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update helpers was closed');\n    });\n  }\n\n  showDialogToUpdateHelperOfferRange() {\n    const ref = this.dialogService.open(UpdateClientHelperRangeComponent, {\n      header: 'Aktualizacja ustawień dla firmy: ' + this.offer.client.name,\n      data: this.offer\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update helpers range was closed');\n    });\n  }\n\n\n  // ===============  PRINT  =================\n\n  showDialogToSelectPrint() {\n    this.displayPrintOffer = true;\n  }\n\n  closePrintOffer() {\n    this.displayPrintOffer = false;\n    this.loadingPrintOffer = false;\n  }\n\n  printOffer() {\n    this.loadingPrintOffer = true;\n    this.printOfferService.initPrint('offer', this.offer.offerNumber);\n    this.closePrintOffer();\n  }\n\n  printOfferCosts() {\n    this.loadingPrintOffer = true;\n    this.printOfferService.initPrint('offerCost', this.offer.offerNumber);\n    this.closePrintOffer();\n  }\n\n\n\n}\n","<div class=\"container-offer-details\">\n\n    <div class=\"row mb-2\">\n        <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <button pButton pRipple type=\"button\" (click)=\"backClicked()\" icon=\"pi pi-chevron-left\"\n                style=\"width: 50px !important;\" class=\"p-button-sm sb-button blue back\"></button>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <div class=\"float-right\" *ngIf=\"offer.myCompany.logoLink\">\n                <img height=\"50px\" [src]=\"offer.myCompany.logoLink\" alt=\"\">\n            </div>\n            <p *ngIf=\"!offer.myCompany.logoLink\" class=\"float-right\">{{offer.myCompany.name}}</p>\n        </div>\n\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-ticket\"></i>\n                </div>\n                <div class=\"stats-numbers\">{{offer.offerNumber}}</div>\n                <div class=\"stats-subtitle\">Numer oferty</div>\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-user\"></i>\n                </div>\n                <div class=\"stats-numbers\">{{offer.client.name}}</div>\n                <div class=\"stats-subtitle\">Kontrahent</div>\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-check-circle\"></i>\n                </div>\n                <div class=\"stats-numbers\">{{statusOfferSwitch(offer.offerStatus)}}</div>\n                <div class=\"stats-subtitle\">Status</div>\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-calendar\"></i>\n                </div>\n                <div class=\"stats-numbers\">{{offer.offerDate | date:'dd.MM.yyyy'}}</div>\n                <div class=\"stats-subtitle\">Data oferty</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"row\">\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-plus-circle\"></i>\n                </div>\n                <div class=\"stats-numbers\">{{offer.createdBy}}</div>\n                <div class=\"stats-subtitle\">Oferta utworzona przez</div>\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-money-bill\"></i>\n                </div>\n                <div class=\"row w-100 m-0\" style=\"top: -12px;position: relative;\">\n\n                    <div class=\"col-g-12 col-md-6 col-lg-6 stats-table-clients\">\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <th class=\"text-left\">Dopłata</th>\n                                    <td class=\"text-center\">{{offer.client.helper_additional}}</td>\n                                </tr>\n                                <tr>\n                                    <th class=\"text-left\">Koszt</th>\n                                    <td class=\"text-center\">{{offer.client.helper_cost}}</td>\n                                </tr>\n                                <tr>\n                                    <th class=\"text-left\">Ustawienie</th>\n                                    <td class=\"text-center\">{{offer.client.helper_setUpCost}}</td>\n                                </tr>\n                                <tr>\n                                    <th class=\"text-left revers\">Zm. koloru</th>\n                                    <td class=\"text-center\">{{offer.client.helper_costChangeColor}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6 stats-table-clients\">\n                        <table>\n                            <thead>\n                                <th></th>\n                                <th class=\"text-center\">Kurs</th>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <th>ALU</th>\n                                    <td class=\"text-center\">{{ helper ? helper.exchangeRateAlu : \"-\"}}</td>\n                                </tr>\n                                <tr>\n                                    <th>PCV</th>\n                                    <td class=\"text-center\">{{ helper ? helper.exchangeRatePcv : \"-\"}}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-table\"></i>\n                </div>\n                <div class=\"stats-table\">\n                    <table>\n                        <thead>\n                            <th class=\"text-left\">Metry</th>\n                            <th class=\"text-center\">Łatwe</th>\n                            <th class=\"text-center\">Trudne</th>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td class=\"text-left\">0-50</td>\n                                <td class=\"text-center\">{{offer.client.helper_mEasyTo50}}</td>\n                                <td class=\"text-center\">{{offer.client.helper_mHardTo50}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-left\">51-150</td>\n                                <td class=\"text-center\">{{offer.client.helper_mEasyTo150}}</td>\n                                <td class=\"text-center\">{{offer.client.helper_mHardTo150}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-left\">151-500</td>\n                                <td class=\"text-center\">{{offer.client.helper_mEasyTo500}}</td>\n                                <td class=\"text-center\">{{offer.client.helper_mHardTo500}}</td>\n                            </tr>\n                            <tr>\n                                <td class=\"text-left\">pow. 500</td>\n                                <td class=\"text-center\">{{offer.client.helper_mEasyAbove500}}</td>\n                                <td class=\"text-center\">{{offer.client.helper_mHardAbove500}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n                <div class=\"stats-subtitle fix\">Zakresy klienta</div>\n            </div>\n        </div>\n\n        <div class=\"col-g-12 col-md-6 col-lg-3\">\n            <div class=\"sb-stats\">\n                <div class=\"stats-icon\">\n                    <i class=\"pi pi-cog\"></i>\n                </div>\n                <div class=\"stats-button\">\n\n                    <button pButton type=\"button\" (click)=\"showDialogToUpdateHelperOffer()\" label=\"Zmień parametry\"\n                        class=\"p-button-sm sb-button gray\" pTooltip=\"Zmiana ustawień stałych kontrahenta\"></button>\n                    <button pButton type=\"button\" (click)=\"showDialogToUpdateHelperOfferRange()\" label=\"Zmień zakresy\"\n                        class=\"p-button-sm sb-button gray\" pTooltip=\"Zmiana ustawień stałych kontrahenta\"></button>\n\n                </div>\n                <div class=\"stats-subtitle fix\">Ustawienia</div>\n            </div>\n        </div>\n\n    </div>\n\n    <div class=\"row sb-progress-bar\" [ngClass]=\"{'hide': productionService.loadingDataValue >= 100}\">\n        <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <p-progressBar [value]=\"productionService.loadingDataValue\"></p-progressBar>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <p-toolbar styleClass=\"sb-toolbar\">\n\n                <div class=\"p-toolbar-group-left\">\n                    <button [disabled]=\"productionService.loadingDataValue != 100\" pButton pRipple type=\"button\"\n                        (click)=\"showDialogToAddOfferPosition()\" pTooltip=\"Dodanie pojedyńczej pozycji\"\n                        icon=\"pi pi-plus\" label=\"Pojedyńcza pozycja\" class=\"p-button-sm sb-button blue\"></button>\n\n                    <button pButton pRipple type=\"button\" (click)=\"showDialogToAddCostBuyFilm()\"\n                        pTooltip=\"Kosztu zakupu okleiny\" icon=\"pi pi-money-bill\" label=\"Koszt zakupu okl.\"\n                        class=\"p-button-sm sb-button gray\"></button>\n\n                    <button pButton pRipple type=\"button\" (click)=\"showChangeStatusDialog()\"\n                        pTooltip=\"Zmiana statusu oferty\" icon=\"pi pi-check-circle\" label=\"Zmiana statusu\"\n                        class=\"p-button-sm sb-button gray\"></button>\n\n                    <button pButton type=\"button\" (click)=\"showDialogToSelectPrint()\" pTooltip=\"Drukowanie\"\n                        icon=\"pi pi-print\" label=\"Drukowanie\" class=\"p-button-sm sb-button yellow ml-2\"></button>\n                </div>\n\n                <div class=\"p-toolbar-group-right\">\n                    <button pButton type=\"button\" (click)=\"deleteOffer()\" pTooltip=\"Usunięcie oferty\"\n                        pTooltipClass=\"tooltip-red\" icon=\"pi pi-trash\" class=\"p-button-sm sb-button red\"></button>\n                </div>\n\n            </p-toolbar>\n        </div>\n    </div>\n\n\n    <div class=\"row\">\n        <div class=\"col\">\n            <p-tabView>\n                <p-tabPanel header=\"Edycja\" leftIcon=\"pi pi-pencil\">\n\n                    <div class=\"row\" style=\"padding: 1rem;\">\n                        <div class=\"col-g-12 col-md-12 col-lg-12\">\n                            <p-table [loading]=\"loadingTable\"\n                                [style]=\"{'min-width': '1100px','width':'fit-content','margin':'0 auto'}\"\n                                [value]=\"offerPositions\" [autoLayout]=\"true\" [rowHover]=\"true\">\n                                <ng-template pTemplate=\"header\">\n                                    <tr class=\"p-header\">\n                                        <th class=\"nr\">Nr.</th>\n                                        <th class=\"name-k\">Nazwa kształ.</th>\n                                        <th class=\"number-k\">Numer kształ.</th>\n                                        <th class=\"warranty\">Gwarancja</th>\n                                        <th class=\"ph-side\">Strony</th>\n                                        <th class=\"edit-col\"></th>\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-posData>\n                                    <tr class=\"p-body\">\n                                        <td class=\"nr\">{{posData.positionNumber}}</td>\n                                        <td class=\"name-k\">{{posData.profilType}}</td>\n                                        <td class=\"number-k\">{{posData.profilNumber}}</td>\n\n                                        <td class=\"warranty text-center\">\n                                            <span [class]=\"'warranty-badge status-' + posData.warranty\">\n                                                {{posData.warranty ? \"TAK\" : \"NIE\"}}\n                                            </span>\n                                        </td>\n\n                                        <td class=\"pb-side\">\n                                            <p-table [value]=\"posData.offerPositionSides\" [autoLayout]=\"true\"\n                                                [rowHover]=\"true\">\n                                                <ng-template pTemplate=\"header\">\n                                    <tr class=\"pside-header\">\n                                        <th class=\"side\">Strona</th>\n                                        <th class=\"film-number\">Numer Okl.</th>\n                                        <th class=\"film-width\">Szer. Okl.</th>\n                                        <th class=\"pln\">PLN/mb</th>\n                                        <th class=\"quantity\">Ilość mb</th>\n                                        <th class=\"sum\">Razem PLN</th>\n                                        <th class=\"u\" pTooltip=\"Ustawienie maszyny\">U*</th>\n                                        <th class=\"p\" pTooltip=\"Usługa w pakiecie\">P*</th>\n                                        <th class=\"zm\" pTooltip=\"Zmiana koloru\">ZM*</th>\n                                    </tr>\n                                </ng-template>\n                                <ng-template pTemplate=\"body\" let-pozSide>\n                                    <tr class=\"pside-body\">\n                                        <td class=\"side\">{{pozSide.side}}</td>\n                                        <td class=\"film-number\">{{pozSide.filmNumber}}</td>\n                                        <td class=\"film-width\">{{pozSide.filmWidth}}</td>\n                                        <td class=\"pln\">{{pozSide.plnMb}}</td>\n                                        <td class=\"quantity\">{{pozSide.quantityMb}}</td>\n                                        <td class=\"sum\">{{pozSide.togetherPay}}</td>\n                                        <td class=\"u\">{{pozSide.costSetup}}</td>\n                                        <td class=\"p\">{{pozSide.costSet}}</td>\n                                        <td class=\"zm\">{{pozSide.costChangeColor ? pozSide.costChangeColor : \"\"}}</td>\n                                    </tr>\n                                </ng-template>\n                            </p-table>\n                            </td>\n                            <td class=\"edit-col\">\n                                <button pButton pRipple appPermission permission=\"offerWrite\" type=\"button\"\n                                    [disabled]=\"productionService.loadingDataValue != 100\"\n                                    (click)=\"showDialogToUpdateOfferPosition(posData)\" icon=\"pi pi-pencil\"\n                                    class=\"p-button-sm sb-button blue\"></button>\n                                <button pButton pRipple appPermission permission=\"offerDelete\" type=\"button\"\n                                    (click)=\"deleteOfferRow(posData)\" icon=\"pi pi-trash\"\n                                    class=\"p-button-sm ml-1 sb-button red\"></button>\n                            </td>\n                            </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"footer\">\n                                <tr>\n                                    <td colspan=\"4\" class=\"p-text-right\"></td>\n                                    <td colspan=\"2\" class=\"p-0\">\n                                        <div class=\"sum-table\" style=\"float: right;\">\n                                            <div class=\"row m-0 sum-table-row\">\n                                                <div class=\"text-center\" style=\"width: 120px;\">\n                                                    <div class=\"row w-100 m-0 \">\n                                                        <div class=\"col\"\n                                                            style=\"height: 50px; border: 1px solid #c8c8c8; border-bottom: 0\">\n                                                            Suma w PLN\n                                                        </div>\n                                                    </div>\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\" style=\"border: 1px solid #c8c8c8\">\n                                                            {{offer.sumAllPositionsPln}}\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div class=\"text-center\" style=\"width: 180px;\">\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\"\n                                                            style=\"height: 50px;border: 1px solid #c8c8c8; border-bottom: 0\">\n                                                            Suma dopłat\n                                                            w PLN</div>\n                                                    </div>\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\" style=\"border: 1px solid #c8c8c8\">\n                                                            {{offer.sumSetUpCost}}</div>\n                                                        <div class=\"col\"\n                                                            style=\"border: 1px solid #c8c8c8; border-left: 0\">\n                                                            {{offer.sumSetCost}}</div>\n                                                        <div class=\"col\"\n                                                            style=\"border: 1px solid #c8c8c8; border-left: 0\">\n                                                            {{offer.sumCostChangeColor}}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row m-0 sum-table-row\">\n                                                <div class=\"text-center\" style=\"width: 300px;\">\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\"\n                                                            style=\"border: 1px solid #c8c8c8; border-bottom: 0\">Razem\n                                                            netto\n                                                            w PLN</div>\n                                                    </div>\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\" style=\"border: 1px solid #c8c8c8\">\n                                                            {{offer.sumAllNetto}}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            <div class=\"row m-0 sum-table-row\" *ngIf=\"offer.costNettoBuyFilm\">\n                                                <div class=\"text-center\" style=\"width: 300px;\">\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\"\n                                                            style=\"border: 1px solid #c8c8c8; border-bottom: 0\">Zakup\n                                                            okleiny netto w PLN</div>\n                                                    </div>\n                                                    <div class=\"row w-100 m-0\">\n                                                        <div class=\"col\" style=\"border: 1px solid #c8c8c8\">\n                                                            {{offer.costNettoBuyFilm}}</div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </ng-template>\n                            <ng-template pTemplate=\"emptymessage\">\n                                <tr>\n                                    <td [attr.colspan]=\"6\" style=\"text-align:left\">Brak danych.</td>\n                                </tr>\n                            </ng-template>\n                            </p-table>\n                        </div>\n                    </div>\n                </p-tabPanel>\n                <p-tabPanel header=\"Notatki\" leftIcon=\"pi pi-align-justify\">\n\n                    <app-timeline-widget [offerNumber]=\"offerNumber\" [offerNotes]=\"offerNotes\"></app-timeline-widget>\n\n                </p-tabPanel>\n                <p-tabPanel header=\"Ustawienia\" leftIcon=\"pi pi-print\">\n\n                    <app-print-offer-settings [offer]=\"offer\" (refresh)=\"loadData()\"></app-print-offer-settings>\n\n                </p-tabPanel>\n                <p-tabPanel header=\"Podgląd\" leftIcon=\"pi pi-search\">\n                    <app-view-offer [offer]=\"offer\"></app-view-offer>\n                </p-tabPanel>\n            </p-tabView>\n        </div>\n    </div>\n</div>\n\n<!-- ================= PRINT ================= -->\n<p-dialog header=\"Drukowanie\" [(visible)]=\"displayPrintOffer\" styleClass=\"print_dialog\">\n\n    <div class=\"sb-dialog-content\">\n        <div class=\"row print_choose_buttons\">\n\n            <div class=\"col\">\n                <button pButton pRipple type=\"button\" label=\"Drukowanie oferty\" (click)=\"printOffer()\"\n                    class=\"sb-button gray w-100 h-100\"></button>\n            </div>\n\n            <div class=\"col\">\n                <button pButton pRipple type=\"button\" label=\"Drukowanie zakresu cen\" (click)=\"printOfferCosts()\"\n                    class=\"sb-button gray w-100 h-100\"></button>\n            </div>\n        </div>\n    </div>\n    <div class=\"sb-dialog-footer\">\n        <div class=\"sb-btn-close\">\n            <button pButton pRipple type=\"button\" (click)=\"closePrintOffer()\" pTooltip=\"Anulowanie drukowania\"\n                label=\"Anuluj\" icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n            </button>\n        </div>\n        <div class=\"sb-btn-save\">\n            <p-progressSpinner *ngIf=\"loadingPrintOffer\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </div>\n</p-dialog>\n\n\n<!-- ================= STATUS CHANGE ================= -->\n<p-dialog header=\"Zmiana statusu\" [(visible)]=\"displayChangeStatus\">\n\n    <div class=\"sb-dialog-content\">\n        <div class=\"row \">\n            <div class=\"col\">\n                <p-dropdown #of placeholder=\"Wybierz Status\" [(ngModel)]=\"modelStatusChange\"\n                    [options]=\"allStatus\" [filter]=\"true\" filterBy=\"name,value\" styleClass=\"w-100\" appendTo=\"body\">\n                </p-dropdown>\n            </div>\n        </div>\n    </div>\n    <div class=\"sb-dialog-footer\">\n        <div class=\"sb-btn-close\">\n            <button pButton pRipple type=\"button\" (click)=\"displayChangeStatus = false\"\n                pTooltip=\"Anulowanie\" label=\"Anuluj\" icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n            </button>\n        </div>\n        <div class=\"sb-btn-save\">\n            <button [disabled]=\"loadingChangeStatus\" pButton pRipple type=\"button\" (click)=\"updateOfferStatus()\"\n                pTooltip=\"Aktualizacja statusu\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n            </button>\n            <p-progressSpinner *ngIf=\"loadingChangeStatus\" [style]=\"{width: '25px', height: '25px'}\"\n                styleClass=\"custom-spinner\" strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n        </div>\n    </div>\n</p-dialog>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DetailsOfferComponent, OfferResolver } from './details-offer/details-offer.component';\nimport { MainOffersComponent } from './main-offers/main-offers.component';\n\n\nconst routes: Routes = [\n  { path: '', component: MainOffersComponent },\n  {\n    path: 'oferta/:id', component: DetailsOfferComponent,\n    resolve: {\n      offer: OfferResolver\n    },\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class OffersRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OffersRoutingModule } from './offers-routing.module';\nimport { MainOffersComponent } from './main-offers/main-offers.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { CardModule } from 'primeng/card';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { ContextMenuModule } from 'primeng/contextmenu';\nimport { DialogModule } from 'primeng/dialog';\n//import { DragDropModule } from 'primeng/dragdrop';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { DialogService, DynamicDialogModule } from 'primeng/dynamicdialog';\nimport { EditorModule } from 'primeng/editor';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { PasswordModule } from 'primeng/password';\nimport { ProgressBarModule } from 'primeng/progressbar';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { StepsModule } from 'primeng/steps';\nimport { TableModule } from 'primeng/table';\nimport { TabViewModule } from 'primeng/tabview';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { TreeTableModule } from 'primeng/treetable';\nimport { FormNewOfferComponent } from './form/new-offer/form-new-offer.component';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DetailsOfferComponent, OfferResolver } from './details-offer/details-offer.component';\nimport { AddOfferPositionComponent } from './form/add-offer-position/add-offer-position.component';\nimport { UpdateClientHelpersComponent } from './form/update-client-helpers/update-client-helpers.component';\nimport { UpdateOfferPositionComponent } from './form/update-offer-position/update-offer-position.component';\nimport {ToolbarModule} from 'primeng/toolbar';\nimport { UpdateClientHelperRangeComponent } from './form/update-client-helper-range/update-client-helper-range.component';\nimport { ViewOfferComponent } from './view-offer/view-offer.component';\nimport { TimelineWidgetComponent } from './timeline-widget/timeline-widget.component';\nimport { PrintOfferSettingsComponent } from './print-offer-settings/print-offer-settings.component';\nimport { UpdateFilmBuyCostComponent } from './form/update-film-buy-cost/update-film-buy-cost.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  declarations: [\n    MainOffersComponent, \n    FormNewOfferComponent,\n    DetailsOfferComponent, \n    AddOfferPositionComponent, \n    UpdateClientHelpersComponent, \n    UpdateOfferPositionComponent, \n    UpdateClientHelperRangeComponent, ViewOfferComponent, TimelineWidgetComponent, PrintOfferSettingsComponent, UpdateFilmBuyCostComponent,\n  ],\n  imports: [\n    CommonModule,\n    OffersRoutingModule,\n    MatIconModule,\n    DragDropModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatButtonModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    CalendarModule,\n    MultiSelectModule,\n    EditorModule,\n    TreeTableModule,\n    RadioButtonModule,\n    AutoCompleteModule,\n    MatAutocompleteModule,\n    ContextMenuModule,\n    ConfirmDialogModule,\n    CheckboxModule,\n    ProgressBarModule,\n    InputTextModule,\n    RippleModule,\n    FileUploadModule,\n    StepsModule,\n    DragDropModule,\n    CardModule,\n    InputNumberModule,\n    DynamicDialogModule,\n    TooltipModule,\n    KeyFilterModule,\n    ProgressSpinnerModule,\n    ToolbarModule,\n  ],\n  providers: [DialogService,OfferResolver]\n})\nexport class OffersModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { Offer, OffersService } from '../../offers.service';\n\n@Component({\n  selector: 'app-update-client-helper-range',\n  templateUrl: './update-client-helper-range.component.html',\n  styleUrls: ['./update-client-helper-range.component.scss']\n})\nexport class UpdateClientHelperRangeComponent implements OnInit {\n\n  formClientHelper:FormGroup;\n  offerData: Offer;\n  loading = false;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    public ref: DynamicDialogRef,\n    private offerService: OffersService,\n    public config: DynamicDialogConfig,\n  ) { \n    this.offerData = config.data;\n  }\n\n  ngOnInit(): void {\n    this.formClientHelper = new FormGroup({\n      helper_mEasyTo50: new FormControl(''),\n      helper_mEasyTo150: new FormControl(''),\n      helper_mEasyTo500: new FormControl(''),\n      helper_mEasyAbove500: new FormControl(''),\n      \n      helper_mHardTo50: new FormControl(''),\n      helper_mHardTo150: new FormControl(''),\n      helper_mHardTo500: new FormControl(''),\n      helper_mHardAbove500: new FormControl(''),\n    });\n    this.formClientHelper.patchValue(this.offerData.client);\n  }\n\n  updateHelpers(){\n    this.loading = true;\n    this.offerService.updateClientHelpersRange(this.offerData.client.id,this.formClientHelper.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessUpdate('parametry');\n        this.ref.close(1);\n      },\n      error:(err)=>{\n        this.infoPopup.showErrorUpdate('parametry');\n        console.log(err);\n      },\n      complete:()=>{\n        this.loading=false;\n      }\n    })\n  }\n\n  exit(id){\n    this.ref.close(id);\n  }\n\n}","<div class=\"sb-dialog-content\">\n\n    <form [formGroup]=\"formClientHelper\">\n        <div class=\"row \">\n            <div class=\"col helper-table\">\n                <table style=\"margin: 0 auto;\">\n                    <thead>\n                        <th class=\"text-left\">Metry</th>\n                        <th class=\"text-center\">Łatwe</th>\n                        <th class=\"text-center\">Trudne</th>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>0-50</td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mEasyTo50')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mHardTo50')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>51-150</td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mEasyTo150')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mHardTo150')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>151-500</td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mEasyTo500')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mHardTo500')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>pow. 500</td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mEasyAbove500')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                            <td>\n                                <p-inputNumber [inputStyle]=\"{'width':'100px'}\" mode=\"decimal\"\n                                    [formControl]=\"formClientHelper.get('helper_mHardAbove500')\" [showButtons]=\"true\"\n                                    [step]=\"0.1\">\n                                </p-inputNumber>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </form>\n\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie aktualizowania\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button [disabled]=\"loading\" pButton pRipple type=\"button\" (click)=\"updateHelpers()\" pTooltip=\"Aktualizuj\"\n            label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>"],"sourceRoot":"webpack:///"}