{"version":3,"sources":["./src/app/settings/mycompany/form-mycompany/form-mycompany.component.html","./src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.html","./src/app/settings/mycompany/mycompany.component.html","./src/app/settings/settings-main/settings-main.component.html","./src/app/settings/users/form-password/form-password.component.html","./src/app/settings/users/form-users/form-users.component.html","./src/app/settings/users/form-userupdate/form-userupdate.component.html","./src/app/settings/users/users.component.html","./src/app/_class/user.ts","./src/app/settings/mycompany/form-mycompany/form-mycompany.component.scss","./src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","./src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.scss","./src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.ts","./src/app/settings/mycompany/mycompany.component.scss","./src/app/settings/mycompany/mycompany.component.ts","./src/app/settings/settings-main/settings-main.component.scss","./src/app/settings/settings-main/settings-main.component.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.service.ts","./src/app/settings/users/form-password/form-password.component.scss","./src/app/settings/users/form-password/form-password.component.ts","./src/app/settings/users/form-users/form-users.component.scss","./src/app/settings/users/form-users/form-users.component.ts","./src/app/settings/users/form-userupdate/form-userupdate.component.scss","./src/app/settings/users/form-userupdate/form-userupdate.component.ts","./src/app/settings/users/users.component.scss","./src/app/settings/users/users.component.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<form [formGroup]=\\\"formMyCompany\\\">\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('name')\\\" autofocus type=\\\"text\\\" id=\\\"name\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Nazwa firmy\\\"\\r\\n                required autocomplete=\\\"off\\\" autofocus>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('name').hasError('required') && formMyCompany.get('name').touched\\\">\\r\\n                musi być wypełnione\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"nip\\\" class=\\\"col-sm-3 col-form-label\\\">NIP</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('nip')\\\" type=\\\"text\\\" id=\\\"nip\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"NIP\\\" required\\r\\n                autocomplete=\\\"off\\\">\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('required') && formMyCompany.get('nip').touched\\\">\\r\\n                musi być wypełnione\\r\\n            </p>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('nipFormat') && formMyCompany.get('nip').touched\\\">\\r\\n                niepoprawny nip\\r\\n            </p>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('mycompanyExists') && formMyCompany.get('nip').touched\\\">\\r\\n                ten numer znajduje się na liście\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('regon').hasError('regonFormat') && formMyCompany.get('regon').touched\\\">\\r\\n                niepoprawny regon\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"contactemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL główny</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('contactemail')\\\" type=\\\"text\\\" id=\\\"contactemail\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\r\\n                placeholder=\\\"Adres email głowny\\\" autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('contactemail').hasError('contactemail') && formMyCompany.get('contactemail').touched\\\">\\r\\n            niepoprawny email\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"fvemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL faktura</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('fvemail')\\\" type=\\\"text\\\" id=\\\"fvemail\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Adres fv email\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('fvemail').hasError('fvemail') && formMyCompany.get('fvemail').touched\\\">\\r\\n            niepoprawny email\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"numer tel.\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('phonenumber').hasError('minLength') && formMyCompany.get('phonenumber').touched\\\">\\r\\n            niepoprawny numer telefonu\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n<hr>\\r\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\r\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\r\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\r\\n    <button [disabled]=\\\"formMyCompany.invalid\\\" matTooltip=\\\"Dodaj firmę\\\" matTooltipClass=\\\"tooltip-green\\\"\\r\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddMyCompany()\\\"\\r\\n        label=\\\"Zapisz\\\"></button>\\r\\n</div>\"","export default \"<form [formGroup]=\\\"formUpdateMyCompany\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Nazwa firmy\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('name').hasError('required') && formUpdateMyCompany.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('regon').hasError('regonFormat') && formUpdateMyCompany.get('regon').touched\\\">\\n                niepoprawny regon\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"contactemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL główny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('contactemail')\\\" type=\\\"text\\\" id=\\\"contactemail\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                placeholder=\\\"Adres email głowny\\\" autocomplete=\\\"off\\\">\\n\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('contactemail').hasError('email') && formUpdateMyCompany.get('contactemail').touched\\\">\\n                niepoprawny email\\n            </p>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"fvemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL faktura</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('fvemail')\\\" type=\\\"text\\\" id=\\\"fvemail\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Adres fv email\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('fvemail').hasError('email') && formUpdateMyCompany.get('fvemail').touched\\\">\\n                niepoprawny email\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"numer tel.\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('phonenumber').hasError('minLength') && formUpdateMyCompany.get('phonenumber').touched\\\">\\n                niepoprawny numer telefonu\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button matTooltip=\\\"Aktualizuj firmę\\\" matTooltipClass=\\\"tooltip-green\\\" class=\\\"ml-1 ui-button-success\\\" type=\\\"button\\\"\\n        pButton icon=\\\"pi pi-check\\\" (click)=\\\"onUpdateMyCompany()\\\" label=\\\"Zapisz\\\"\\n        ></button>\\n</div>\\n<!-- [disabled]=\\\"formUpdateMyCompany.invalid\\\" -->\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row mb-2 ml-0\\\">\\n        <button (click)=\\\"backClicked()\\\" mat-raised-button><i class=\\\"pi pi-chevron-left\\\"></i></button>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2\\\">\\n            <div class=\\\"bg-white shadow-sm w-100 h-100 p-2 rounded\\\" style=\\\"text-align: center;\\\">\\n                <button class=\\\"w-100\\\" mat-raised-button color=\\\"primary\\\"\\n                    (click)=\\\"openDialogAdd()\\\">Dodaj firmę</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-10\\\">\\n            <div class=\\\"row\\\">\\n                <p-table #mc [value]=\\\"mycompanies\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['name']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\">\\n                    <ng-template pTemplate=\\\"caption\\\">\\n                        Moje Firmy\\n                        <div class=\\\"ui-table-globalfilter-container\\\">\\n                            <input pInputText type=\\\"text\\\" (input)=\\\"mc.filterGlobal($event.target.value, 'contains')\\\"\\n                                placeholder=\\\"Wyszukiwarka\\\" />\\n                        </div>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <tr>\\n                            <th style=\\\"width: 40px;\\\">ID</th>\\n                            <th pResizableColumn>Nazwa</th>\\n                            <th pResizableColumn>NIP</th>\\n                            <th pResizableColumn>REGON</th>\\n                            <th pResizableColumn>Email firmy</th>\\n                            <th pResizableColumn>Email FV</th>\\n                            <th pResizableColumn>Nr. Tel.</th>\\n                            <th style=\\\"width:8em\\\"></th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                        <tr>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.id}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.name}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.nip}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.regon}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.contactemail}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.fvemail}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.phonenumber}}\\n                            </td>\\n                            <td style=\\\"text-align:center\\\">\\n                                <button matTooltip=\\\"Edycja firmy\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                                    (click)=\\\"onEditMyCompany(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                                    (click)=\\\"onDeleteMyCompant(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\n                        <tr>\\n                            <td colspan=\\\"8\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['users']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-users\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Użytkownicy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['mojafirma']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-home\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Moje Firmy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div>\\n    <h5>Zmiana hasła dla użytkownika {{ user.name }}</h5>\\n</div>\\n<hr>\\n<form [formGroup]=\\\"formPassword\\\">\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-3 col-form-label\\\">Hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formPassword.get('password')\\\" id=\\\"password\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('password').hasError('required') && formPassword.get('password').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"confirmPassword\\\" class=\\\"col-sm-3 col-form-label\\\">Powtórz hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formPassword.get('confirmPassword')\\\" id=\\\"confirmPassword\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('confirmPassword').hasError('required') && formPassword.get('confirmPassword').touched\\\">\\n                musi być wypełnione\\n            </p>\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('confirmPassword').hasError('nomatch') && formPassword.get('confirmPassword').touched\\\">\\n                hasła muszą być identyczne\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie\\\" matTooltipClass=\\\"tooltip-red\\\" type=\\\"button\\\" pButton\\n        icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formPassword.invalid\\\" matTooltip=\\\"Zmień hasło\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onChangePass()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<form [formGroup]=\\\"formUser\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Imię Nazwisko</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('name')\\\" autofocus type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Imię Nazwisko\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('name').hasError('required') && formUser.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-3 col-form-label\\\">Login</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('username')\\\" type=\\\"text\\\" id=\\\"username\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Login\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('username').hasError('required') && formUser.get('username').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-3 col-form-label\\\">Hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formUser.get('password')\\\" id=\\\"password\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('password').hasError('required') && formUser.get('password').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"active\\\" class=\\\"col-sm-3 col-form-label\\\">Aktywny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <mat-slide-toggle [formControl]=\\\"formUser.get('active')\\\"\\n                [color]=\\\"warn\\\"\\n                [checked]=\\\"true\\\">\\n                Aktywny\\n            </mat-slide-toggle>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"roles\\\" class=\\\"col-sm-3 col-form-label\\\">Role</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('role')\\\" type=\\\"text\\\" id=\\\"roles\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Role\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('role').hasError('required') && formUser.get('role').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formUser.invalid\\\" matTooltip=\\\"Dodaj użytkownika\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddUser()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<form [formGroup]=\\\"formUserUpdate\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Imię Nazwisko</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Imię Nazwisko\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('name').hasError('required') && formUserUpdate.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-3 col-form-label\\\">Login</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('username')\\\" type=\\\"text\\\" id=\\\"username\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Login\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('username').hasError('required') && formUserUpdate.get('username').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"active\\\" class=\\\"col-sm-3 col-form-label\\\">Aktywny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <mat-slide-toggle [formControl]=\\\"formUserUpdate.get('active')\\\"\\n                [color]=\\\"warn\\\"\\n                [checked]=\\\"true\\\">\\n                Aktywny\\n            </mat-slide-toggle>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"roles\\\" class=\\\"col-sm-3 col-form-label\\\">Role</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('role')\\\" type=\\\"text\\\" id=\\\"roles\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Role\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('role').hasError('required') && formUserUpdate.get('role').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formUserUpdate.invalid\\\" matTooltip=\\\"Aktualizuj użytkownika\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onUpdateUser()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row mb-2 ml-0\\\">\\n        <button (click)=\\\"backClicked()\\\" mat-raised-button><i class=\\\"pi pi-chevron-left\\\"></i></button>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2\\\">\\n            <div class=\\\"bg-white shadow-sm w-100 h-100 p-2 rounded\\\" style=\\\"text-align: center;\\\">\\n                <button class=\\\"w-100\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialogAdd()\\\">Dodaj\\n                    użytkownika</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-10\\\">\\n            <div class=\\\"row\\\">\\n                <p-table #us [value]=\\\"users\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['username']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\">\\n                    <ng-template pTemplate=\\\"caption\\\">\\n                        Użytkownicy\\n                        <div class=\\\"ui-table-globalfilter-container\\\">\\n                            <input pInputText type=\\\"text\\\" (input)=\\\"us.filterGlobal($event.target.value, 'contains')\\\"\\n                                placeholder=\\\"Wyszukiwarka\\\" />\\n                        </div>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <tr>\\n                            <th style=\\\"width: 40px;\\\">ID</th>\\n                            <th pResizableColumn>Login</th>\\n                            <th pResizableColumn>Imie Nazwisko</th>\\n                            <th pResizableColumn>Aktywny</th>\\n                            <th pResizableColumn>Role</th>\\n                            <th style=\\\"width:8em\\\"></th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                        <tr>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.id}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.username}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.name}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.active}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.role}}\\n                            </td>\\n                            <td style=\\\"text-align:center\\\">\\n                                <button matTooltip=\\\"Edycja Użytkownika\\\" matTooltipClass=\\\"tooltip-red\\\" pButton\\n                                    type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                                    (click)=\\\"openDialogUpdate(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Zmiana hasła\\\" matTooltipClass=\\\"tooltip-red\\\" pButton\\n                                    type=\\\"button\\\" icon=\\\"pi pi-key\\\" class=\\\"ml-1 ui-button-info edit-button\\\"\\n                                    (click)=\\\"openDialogChangePass(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-times\\\" class=\\\"ml-1 ui-button-info remove-button\\\"\\n                                    (click)=\\\"onDeleteUser(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\n                        <tr>\\n                            <td colspan=\\\"6\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    name: string;\r\n    authdata: User;\r\n  authorities: any;\r\n}","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvbXljb21wYW55L2Zvcm0tbXljb21wYW55L0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxcc2V0dGluZ3NcXG15Y29tcGFueVxcZm9ybS1teWNvbXBhbnlcXGZvcm0tbXljb21wYW55LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zZXR0aW5ncy9teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLFdBQUE7QUNDSjs7QURDQTtFQUNJLGlCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9zZXR0aW5ncy9teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyLWJ0biBidXR0b257XHJcbiAgICBtYXJnaW46IDAgMC41ZW0gMCAwO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuLmZvb3Rlci1idG57XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSIsIi5mb290ZXItYnRuIGJ1dHRvbiB7XG4gIG1hcmdpbjogMCAwLjVlbSAwIDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyLWJ0biB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-mycompany',\n  templateUrl: './form-mycompany.component.html',\n  styleUrls: ['./form-mycompany.component.scss']\n})\nexport class FormMycompanyComponent implements OnInit {\n\n  formMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormMycompanyComponent>,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit(): void {\n    this.formMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.myCompanyExists], updateOn: 'blur' }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]})\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddMyCompany(){\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n          this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215Y29tcGFueS9mb3JtLXVwZGF0ZS1teS1jb21wYW55L2Zvcm0tdXBkYXRlLW15LWNvbXBhbnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-update-my-company',\n  templateUrl: './form-update-my-company.component.html',\n  styleUrls: ['./form-update-my-company.component.scss']\n})\nexport class FormUpdateMyCompanyComponent implements OnInit {\n\n  formUpdateMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUpdateMyCompanyComponent>,\n    private settingService: SettingsService,\n    @Inject(MAT_DIALOG_DATA) public company: any,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUpdateMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]})\n    });\n    this.formUpdateMyCompany.patchValue(this.company);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateMyCompany(){\n    this.settingService.updateMyCompany(this.company.id,this.formUpdateMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessUpdate(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n        console.log(err);\n          this.infoPopup.showErrorUpdate(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215Y29tcGFueS9teWNvbXBhbnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormMycompanyComponent } from './form-mycompany/form-mycompany.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUpdateMyCompanyComponent } from './form-update-my-company/form-update-my-company.component';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: any;\n\n  constructor(\n    private location: Location,\n    public dialog: MatDialog, \n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) =>{\n          this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormMycompanyComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  onEditMyCompany(company){\n    const dialogRef = this.dialog.open(FormUpdateMyCompanyComponent, {\n      data: company,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ company.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"moja firma\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"moja firma\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLW1haW4vc2V0dGluZ3MtbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { FormMycompanyComponent } from './mycompany/form-mycompany/form-mycompany.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormUsersComponent } from './users/form-users/form-users.component';\nimport {PasswordModule} from 'primeng/password';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { FormPasswordComponent } from './users/form-password/form-password.component';\nimport { FormUserupdateComponent } from './users/form-userupdate/form-userupdate.component';\nimport { FormUpdateMyCompanyComponent } from './mycompany/form-update-my-company/form-update-my-company.component';\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent, FormMycompanyComponent, FormUsersComponent, FormPasswordComponent, FormUserupdateComponent, FormUpdateMyCompanyComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule\n  ],\n  entryComponents: [FormUpdateMyCompanyComponent,FormUserupdateComponent,FormPasswordComponent,FormUsersComponent,FormMycompanyComponent]\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) { }\n\n  // =============== USERS ============\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/users\");\n  }\n  addUser(data): Observable<any> {\n    return this.http.post<any>(\"api/user\", data);\n  }\n  updateUser(id, data){\n    return this.http.put(\"api/user/\" + id, data, { responseType: 'text' });\n  }\n  deleteUser(id) {\n    return this.http.delete(\"api/user/\" + id, { responseType: 'text' });\n  }\n  changePassword(id, data){\n    return this.http.put<any>(\"api/user/pass/\" + id, data);\n  }\n  //============== MY COMPANY ===============\n\n  getMyCompanies(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getMyCompanyById(id): Observable<any> {\n    return this.http.get<any[]>(\"api/mycompany/\" + id);\n  }\n  addMyCompany(data): Observable<any> {\n    return this.http.post<any>(\"api/mycompany\", data);\n  }\n  updateMyCompany(id, data){\n    return this.http.put(\"api/mycompany/\" + id, data, { responseType: 'text' });\n  }\n  deleteMyCompany(id) {\n    return this.http.delete(\"api/mycompany/\" + id, { responseType: 'text' });\n  }\n  \n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9DOlxcVXNlcnNcXFN5bHdla1xcRGVza3RvcFxcYm0vc3JjXFxhcHBcXHNldHRpbmdzXFx1c2Vyc1xcZm9ybS1wYXNzd29yZFxcZm9ybS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9mb3JtLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9mb3JtLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/_class/user';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.scss']\n})\nexport class FormPasswordComponent implements OnInit {\n\n  formPassword: FormGroup;\n  \n  constructor(\n    public dialogRef: MatDialogRef<FormPasswordComponent>, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group({\n      password: ['', { validators: Validators.required}],\n      confirmPassword: ['', { validators: Validators.required}]\n    },{validator: AppValidators.nomatch('password','confirmPassword')})\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  onChangePass(){\n    this.settingService.changePassword(this.user.id,this.formPassword.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"hasło użytkownika\");\n        this.dialogRef.close();\n      },\n      error:(err) =>{ this.info.showErrorUpdate(\"hasło użytkownika\");},\n      complete: () =>{}\n    })\n  }\n\n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9DOlxcVXNlcnNcXFN5bHdla1xcRGVza3RvcFxcYm0vc3JjXFxhcHBcXHNldHRpbmdzXFx1c2Vyc1xcZm9ybS11c2Vyc1xcZm9ybS11c2Vycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9mb3JtLXVzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9mb3JtLXVzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-users',\n  templateUrl: './form-users.component.html',\n  styleUrls: ['./form-users.component.scss']\n})\nexport class FormUsersComponent implements OnInit {\n\n  formUser: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<FormUsersComponent>, private settingService: SettingsService, private info: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formUser = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      password: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddUser() {\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        this.info.showErrorAdd(\"użytkownika\") \n      },\n      complete: () => { }\n    })\n  }\n\n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2VydXBkYXRlL0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxcc2V0dGluZ3NcXHVzZXJzXFxmb3JtLXVzZXJ1cGRhdGVcXGZvcm0tdXNlcnVwZGF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2VydXBkYXRlL2Zvcm0tdXNlcnVwZGF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsV0FBQTtBQ0NKOztBRENBO0VBQ0ksaUJBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3VzZXJzL2Zvcm0tdXNlcnVwZGF0ZS9mb3JtLXVzZXJ1cGRhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyLWJ0biBidXR0b257XHJcbiAgICBtYXJnaW46IDAgMC41ZW0gMCAwO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuLmZvb3Rlci1idG57XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSIsIi5mb290ZXItYnRuIGJ1dHRvbiB7XG4gIG1hcmdpbjogMCAwLjVlbSAwIDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyLWJ0biB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { User } from 'src/app/_class/user';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-userupdate',\n  templateUrl: './form-userupdate.component.html',\n  styleUrls: ['./form-userupdate.component.scss']\n})\nexport class FormUserupdateComponent implements OnInit {\n\n  formUserUpdate: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUserupdateComponent>, \n    private settingService: SettingsService, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private info: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUserUpdate = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n    });\n    this.formUserUpdate.patchValue(this.user);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateUser() {\n    this.settingService.updateUser(this.user.id,this.formUserUpdate.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        console.log(err);\n        this.info.showErrorUpdate(\"użytkownika\") \n      },\n      complete: () => {\n       }\n    })\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormUsersComponent } from './form-users/form-users.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { FormPasswordComponent } from './form-password/form-password.component';\nimport { User } from 'src/app/_class/user';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUserupdateComponent } from './form-userupdate/form-userupdate.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(\n    private location: Location, \n    public dialog: MatDialog,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getUsers().subscribe({\n      next: (res) =>{\n          this.users = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormUsersComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n  openDialogUpdate(usr): void {\n    const dialogRef = this.dialog.open(FormUserupdateComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialog.open(FormPasswordComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog pass was closed');\n    });\n  }\n\n  onDeleteUser(user: User){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ user.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.settingService.deleteUser(user.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"użytkownia\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"użytkownika\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n"],"sourceRoot":"webpack:///"}