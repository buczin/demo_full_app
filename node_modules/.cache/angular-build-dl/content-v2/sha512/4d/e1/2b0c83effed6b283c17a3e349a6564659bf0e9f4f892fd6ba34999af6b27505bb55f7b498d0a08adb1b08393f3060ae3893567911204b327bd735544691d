{"version":3,"sources":["webpack:///node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-togglebutton.js","webpack:///src/app/_class/user.ts","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.html","webpack:///src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.ts","webpack:///src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.html","webpack:///src/app/settings/mycompany/mycompany.component.ts","webpack:///src/app/settings/mycompany/mycompany.component.html","webpack:///src/app/settings/settings-main/settings-main.component.ts","webpack:///src/app/settings/settings-main/settings-main.component.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.service.ts","webpack:///src/app/settings/users/form-password/form-password.component.ts","webpack:///src/app/settings/users/form-password/form-password.component.html","webpack:///src/app/settings/users/form-users/form-users.component.ts","webpack:///src/app/settings/users/form-users/form-users.component.html","webpack:///src/app/settings/users/form-userupdate/form-userupdate.component.ts","webpack:///src/app/settings/users/form-userupdate/form-userupdate.component.html","webpack:///src/app/settings/users/users.component.ts","webpack:///src/app/settings/users/users.component.html"],"names":["_c0","a1","a2","ToggleButton_span_1_Template","rf","ctx","ctx_r0","checked","onIcon","offIcon","iconPos","_c1","a3","TOGGLEBUTTON_VALUE_ACCESSOR","provide","useExisting","ToggleButton","multi","cd","onChange","onModelChange","onModelTouched","event","disabled","emit","originalEvent","markForCheck","value","fn","val","onLabel","length","ɵfac","ToggleButton_Factory","t","ɵcmp","type","selectors","inputs","offLabel","ariaLabelledBy","style","styleClass","inputId","tabindex","outputs","features","decls","vars","consts","template","ToggleButton_Template","ToggleButton_Template_div_click_0_listener","$event","toggle","ToggleButton_Template_div_keydown_enter_0_listener","hasOnLabel","hasOffLabel","directives","styles","changeDetection","ctorParameters","propDecorators","args","selector","providers","OnPush","ToggleButtonModule","ɵmod","ɵinj","factory","ToggleButtonModule_Factory","imports","ngJitMode","declarations","exports","User","FormMycompanyComponent","dialogRef","settingService","infoPopup","formMyCompany","name","validators","required","nip","validatenip","asyncValidators","myCompanyExists","updateOn","regon","validateregon9","contactemail","email","fvemail","phonenumber","minLength","pattern","logoLink","close","addMyCompany","subscribe","next","res","showSuccessAdd","error","err","showErrorAdd","complete","onNoClick","onAddMyCompany","templateUrl","styleUrls","FormUpdateMyCompanyComponent","company","formUpdateMyCompany","patchValue","updateMyCompany","id","showSuccessUpdate","console","log","showErrorUpdate","onUpdateMyCompany","MycompanyComponent","location","dialog","confirmationService","loadData","getMyCompanies","mycompanies","showErrorDownload","open","width","afterClosed","result","data","back","confirm","message","acceptLabel","rejectLabel","accept","deleteMyCompany","showSuccessDelete","showErrorDelete","backClicked","openDialogAdd","SettingsMainComponent","routes","path","component","SettingsRoutingModule","forChild","SettingsModule","entryComponents","SettingsService","http","get","post","put","responseType","providedIn","FormPasswordComponent","user","info","fb","formPassword","group","password","confirmPassword","validator","nomatch","changePassword","onChangePass","FormUsersComponent","color","formUser","username","active","role","catalogRead","catalogWrite","catalogDelete","systemRead","systemWrite","systemDelete","clientRead","clientWrite","clientDelete","filmRead","filmWrite","filmDelete","producerRead","producerWrite","producerDelete","addUser","exit","onAddUser","FormUserupdateComponent","formUserUpdate","updateUser","onUpdateUser","UsersComponent","getUsers","users","is","panelClass","usr","deleteUser"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { forwardRef, EventEmitter, ChangeDetectorRef, Component, ChangeDetectionStrategy, Input, Output, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RippleModule } from 'primeng/ripple';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'primeng/ripple';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = function (a1, a2) { return { \"p-button-icon\": true, \"p-button-icon-left\": a1, \"p-button-icon-right\": a2 }; };\nfunction ToggleButton_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r0.checked ? ctx_r0.onIcon : ctx_r0.offIcon);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c0, ctx_r0.iconPos === \"left\", ctx_r0.iconPos === \"right\"));\n} }\nconst _c1 = function (a1, a2, a3) { return { \"p-button p-togglebutton p-component\": true, \"p-button-icon-only\": a1, \"p-highlight\": a2, \"p-disabled\": a3 }; };\nconst TOGGLEBUTTON_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ToggleButton),\n    multi: true\n};\nclass ToggleButton {\n    constructor(cd) {\n        this.cd = cd;\n        this.iconPos = 'left';\n        this.onChange = new EventEmitter();\n        this.checked = false;\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n    }\n    toggle(event) {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            this.onModelChange(this.checked);\n            this.onModelTouched();\n            this.onChange.emit({\n                originalEvent: event,\n                checked: this.checked\n            });\n            this.cd.markForCheck();\n        }\n    }\n    onBlur() {\n        this.onModelTouched();\n    }\n    writeValue(value) {\n        this.checked = value;\n        this.cd.markForCheck();\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n    }\n    get hasOnLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n    get hasOffLabel() {\n        return this.onLabel && this.onLabel.length > 0;\n    }\n}\nToggleButton.ɵfac = function ToggleButton_Factory(t) { return new (t || ToggleButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nToggleButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToggleButton, selectors: [[\"p-toggleButton\"]], inputs: { iconPos: \"iconPos\", disabled: \"disabled\", onLabel: \"onLabel\", offLabel: \"offLabel\", onIcon: \"onIcon\", offIcon: \"offIcon\", ariaLabelledBy: \"ariaLabelledBy\", style: \"style\", styleClass: \"styleClass\", inputId: \"inputId\", tabindex: \"tabindex\" }, outputs: { onChange: \"onChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([TOGGLEBUTTON_VALUE_ACCESSOR])], decls: 4, vars: 12, consts: [[\"role\", \"checkbox\", \"pRipple\", \"\", 3, \"ngClass\", \"ngStyle\", \"click\", \"keydown.enter\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [1, \"p-button-label\"], [3, \"ngClass\"]], template: function ToggleButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function ToggleButton_Template_div_click_0_listener($event) { return ctx.toggle($event); })(\"keydown.enter\", function ToggleButton_Template_div_keydown_enter_0_listener($event) { return ctx.toggle($event); });\n        ɵngcc0.ɵɵtemplate(1, ToggleButton_span_1_Template, 1, 6, \"span\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction3(8, _c1, ctx.onIcon && ctx.offIcon && !ctx.hasOnLabel && !ctx.hasOffLabel, ctx.checked, ctx.disabled))(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : \"0\")(\"aria-checked\", ctx.checked);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.onIcon || ctx.offIcon);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.checked ? ctx.hasOnLabel ? ctx.onLabel : \"\" : ctx.hasOffLabel ? ctx.offLabel : \"\");\n    } }, directives: [ɵngcc1.Ripple, ɵngcc2.NgClass, ɵngcc2.NgStyle, ɵngcc2.NgIf], styles: [\".p-button[_ngcontent-%COMP%]{margin:0;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-align:center;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label[_ngcontent-%COMP%]{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right[_ngcontent-%COMP%]{-ms-flex-order:1;order:1}.p-button[_ngcontent-%COMP%]:disabled{cursor:default}.p-button-icon-only[_ngcontent-%COMP%]{-ms-flex-pack:center;justify-content:center}.p-button-icon-only[_ngcontent-%COMP%]   .p-button-label[_ngcontent-%COMP%]{visibility:hidden;width:0;-ms-flex:0 0 auto;flex:0 0 auto}.p-button-vertical[_ngcontent-%COMP%]{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom[_ngcontent-%COMP%]{-ms-flex-order:2;order:2}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]{margin:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:last-child){border-right:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset[_ngcontent-%COMP%]   .p-button[_ngcontent-%COMP%]:focus{position:relative;z-index:1}\"], changeDetection: 0 });\nToggleButton.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nToggleButton.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\nToggleButton.propDecorators = {\n    onLabel: [{ type: Input }],\n    offLabel: [{ type: Input }],\n    onIcon: [{ type: Input }],\n    offIcon: [{ type: Input }],\n    ariaLabelledBy: [{ type: Input }],\n    disabled: [{ type: Input }],\n    style: [{ type: Input }],\n    styleClass: [{ type: Input }],\n    inputId: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    iconPos: [{ type: Input }],\n    onChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToggleButton, [{\n        type: Component,\n        args: [{\n                selector: 'p-toggleButton',\n                template: `\n        <div [ngClass]=\"{'p-button p-togglebutton p-component': true, 'p-button-icon-only': (onIcon && offIcon && !hasOnLabel && !hasOffLabel),'p-highlight': checked,'p-disabled':disabled}\" \n                        [ngStyle]=\"style\" [class]=\"styleClass\" (click)=\"toggle($event)\" (keydown.enter)=\"toggle($event)\"\n                        [attr.tabindex]=\"disabled ? null : '0'\" role=\"checkbox\" [attr.aria-checked]=\"checked\" pRipple>\n            <span *ngIf=\"onIcon||offIcon\" [class]=\"checked ? this.onIcon : this.offIcon\" \n                [ngClass]=\"{'p-button-icon': true, 'p-button-icon-left': (iconPos === 'left'), 'p-button-icon-right': (iconPos === 'right')}\"></span>\n            <span class=\"p-button-label\">{{checked ? hasOnLabel ? onLabel : '' : hasOffLabel ? offLabel : ''}}</span>\n        </div>\n    `,\n                providers: [TOGGLEBUTTON_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".p-button{margin:0;display:-ms-inline-flexbox;display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-align:center;align-items:center;vertical-align:bottom;text-align:center;overflow:hidden;position:relative}.p-button-label{-ms-flex:1 1 auto;flex:1 1 auto}.p-button-icon-right{-ms-flex-order:1;order:1}.p-button:disabled{cursor:default}.p-button-icon-only{-ms-flex-pack:center;justify-content:center}.p-button-icon-only .p-button-label{visibility:hidden;width:0;-ms-flex:0 0 auto;flex:0 0 auto}.p-button-vertical{-ms-flex-direction:column;flex-direction:column}.p-button-icon-bottom{-ms-flex-order:2;order:2}.p-buttonset .p-button{margin:0}.p-buttonset .p-button:not(:last-child){border-right:0}.p-buttonset .p-button:not(:first-of-type):not(:last-of-type){border-radius:0}.p-buttonset .p-button:first-of-type{border-top-right-radius:0;border-bottom-right-radius:0}.p-buttonset .p-button:last-of-type{border-top-left-radius:0;border-bottom-left-radius:0}.p-buttonset .p-button:focus{position:relative;z-index:1}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { iconPos: [{\n            type: Input\n        }], onChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], onLabel: [{\n            type: Input\n        }], offLabel: [{\n            type: Input\n        }], onIcon: [{\n            type: Input\n        }], offIcon: [{\n            type: Input\n        }], ariaLabelledBy: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], tabindex: [{\n            type: Input\n        }] }); })();\nclass ToggleButtonModule {\n}\nToggleButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ToggleButtonModule });\nToggleButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ToggleButtonModule_Factory(t) { return new (t || ToggleButtonModule)(); }, imports: [[CommonModule, RippleModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ToggleButtonModule, { declarations: function () { return [ToggleButton]; }, imports: function () { return [CommonModule, RippleModule]; }, exports: function () { return [ToggleButton]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ToggleButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, RippleModule],\n                exports: [ToggleButton],\n                declarations: [ToggleButton]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TOGGLEBUTTON_VALUE_ACCESSOR, ToggleButton, ToggleButtonModule };\n\n//# sourceMappingURL=primeng-togglebutton.js.map","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    name: string;\r\n    authdata: User;\r\n  authorities: any;\r\n\r\n  catalogRead: boolean;\r\n  catalogWrite: boolean;\r\n  catalogDelete: boolean;\r\n  systemRead: boolean;\r\n  systemWrite: boolean;\r\n  systemDelete: boolean;\r\n  filmRead: boolean;\r\n  filmWrite: boolean;\r\n  filmDelete: boolean;\r\n  clientRead: boolean;\r\n  clientWrite: boolean;\r\n  clientDelete: boolean;\r\n  producerRead: boolean;\r\n  producerWrite: boolean;\r\n  producerDelete: boolean;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-mycompany',\n  templateUrl: './form-mycompany.component.html',\n  styleUrls: ['./form-mycompany.component.scss']\n})\nexport class FormMycompanyComponent implements OnInit {\n\n  formMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormMycompanyComponent>,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit(): void {\n    this.formMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.myCompanyExists], updateOn: 'blur' }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]}),\n      logoLink: new FormControl(''),\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddMyCompany(){\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n          this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n","<form [formGroup]=\"formMyCompany\">\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nazwa</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('name')\" autofocus type=\"text\" id=\"name\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa firmy\"\r\n                required autocomplete=\"off\" autofocus>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('name').hasError('required') && formMyCompany.get('name').touched\">\r\n                musi być wypełnione\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"nip\" class=\"col-sm-3 col-form-label\">NIP</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('nip')\" type=\"text\" id=\"nip\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"NIP\" required\r\n                autocomplete=\"off\">\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('required') && formMyCompany.get('nip').touched\">\r\n                musi być wypełnione\r\n            </p>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('nipFormat') && formMyCompany.get('nip').touched\">\r\n                niepoprawny nip\r\n            </p>\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('nip').hasError('mycompanyExists') && formMyCompany.get('nip').touched\">\r\n                ten numer znajduje się na liście\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"regon\" class=\"col-sm-3 col-form-label\">REGON</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('regon')\" type=\"text\" id=\"regon\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"REGON\"\r\n                autocomplete=\"off\">\r\n            <p class=\"invalid-feedback\"\r\n                *ngIf=\"formMyCompany.get('regon').hasError('regonFormat') && formMyCompany.get('regon').touched\">\r\n                niepoprawny regon\r\n            </p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"contactemail\" class=\"col-sm-3 col-form-label\">EMAIL główny</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('contactemail')\" type=\"text\" id=\"contactemail\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\r\n                placeholder=\"Adres email głowny\" autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('contactemail').hasError('contactemail') && formMyCompany.get('contactemail').touched\">\r\n            niepoprawny email\r\n        </p>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"fvemail\" class=\"col-sm-3 col-form-label\">EMAIL faktura</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('fvemail')\" type=\"text\" id=\"fvemail\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Adres fv email\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('fvemail').hasError('fvemail') && formMyCompany.get('fvemail').touched\">\r\n            niepoprawny email\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"phonenumber\" class=\"col-sm-3 col-form-label\">Numer telefonu</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('phonenumber')\" type=\"text\" id=\"phonenumber\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"numer tel.\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n        <p class=\"invalid-feedback\"\r\n            *ngIf=\"formMyCompany.get('phonenumber').hasError('minLength') && formMyCompany.get('phonenumber').touched\">\r\n            niepoprawny numer telefonu\r\n        </p>\r\n    </div>\r\n\r\n    <div class=\"form-group row\">\r\n        <label for=\"logoLink\" class=\"col-sm-3 col-form-label\">Logo link</label>\r\n        <div class=\"col-sm-9\">\r\n            <input [formControl]=\"formMyCompany.get('logoLink')\" type=\"text\" id=\"logoLink\"\r\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link do loga firmy\"\r\n                autocomplete=\"off\">\r\n        </div>\r\n    </div>\r\n\r\n</form>\r\n<hr>\r\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\r\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\r\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\r\n    <button [disabled]=\"formMyCompany.invalid\" matTooltip=\"Dodaj firmę\" matTooltipClass=\"tooltip-green\"\r\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onAddMyCompany()\"\r\n        label=\"Zapisz\"></button>\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-update-my-company',\n  templateUrl: './form-update-my-company.component.html',\n  styleUrls: ['./form-update-my-company.component.scss']\n})\nexport class FormUpdateMyCompanyComponent implements OnInit {\n\n  formUpdateMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUpdateMyCompanyComponent>,\n    private settingService: SettingsService,\n    @Inject(MAT_DIALOG_DATA) public company: any,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUpdateMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]}),\n      logoLink: new FormControl('')\n    });\n    this.formUpdateMyCompany.patchValue(this.company);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateMyCompany(){\n    this.settingService.updateMyCompany(this.company.id,this.formUpdateMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessUpdate(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n        console.log(err);\n          this.infoPopup.showErrorUpdate(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n\n","<form [formGroup]=\"formUpdateMyCompany\">\n\n    <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-sm-3 col-form-label\">Nazwa</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('name')\" type=\"text\" id=\"name\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa firmy\"\n                required autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('name').hasError('required') && formUpdateMyCompany.get('name').touched\">\n                musi być wypełnione\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"regon\" class=\"col-sm-3 col-form-label\">REGON</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('regon')\" type=\"text\" id=\"regon\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"REGON\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('regon').hasError('regonFormat') && formUpdateMyCompany.get('regon').touched\">\n                niepoprawny regon\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"contactemail\" class=\"col-sm-3 col-form-label\">EMAIL główny</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('contactemail')\" type=\"text\" id=\"contactemail\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                placeholder=\"Adres email głowny\" autocomplete=\"off\">\n\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('contactemail').hasError('email') && formUpdateMyCompany.get('contactemail').touched\">\n                niepoprawny email\n            </p>\n        </div>\n    </div>\n\n\n    <div class=\"form-group row\">\n        <label for=\"fvemail\" class=\"col-sm-3 col-form-label\">EMAIL faktura</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('fvemail')\" type=\"text\" id=\"fvemail\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Adres fv email\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('fvemail').hasError('email') && formUpdateMyCompany.get('fvemail').touched\">\n                niepoprawny email\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"phonenumber\" class=\"col-sm-3 col-form-label\">Numer telefonu</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('phonenumber')\" type=\"text\" id=\"phonenumber\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"numer tel.\"\n                autocomplete=\"off\">\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formUpdateMyCompany.get('phonenumber').hasError('minLength') && formUpdateMyCompany.get('phonenumber').touched\">\n                niepoprawny numer telefonu\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"logoLink\" class=\"col-sm-3 col-form-label\">Logo link</label>\n        <div class=\"col-sm-9\">\n            <input [formControl]=\"formUpdateMyCompany.get('logoLink')\" type=\"text\" id=\"logoLink\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link do loga firmy\"\n                autocomplete=\"off\">\n        </div>\n    </div>\n\n\n</form>\n<hr>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie dodawania\" matTooltipClass=\"tooltip-red\"\n        type=\"button\" pButton icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button matTooltip=\"Aktualizuj firmę\" matTooltipClass=\"tooltip-green\" class=\"ml-1 ui-button-success\" type=\"button\"\n        pButton icon=\"pi pi-check\" (click)=\"onUpdateMyCompany()\" label=\"Zapisz\"\n        ></button>\n</div>\n<!-- [disabled]=\"formUpdateMyCompany.invalid\" -->","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormMycompanyComponent } from './form-mycompany/form-mycompany.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUpdateMyCompanyComponent } from './form-update-my-company/form-update-my-company.component';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: any;\n\n  constructor(\n    private location: Location,\n    public dialog: MatDialog, \n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) =>{\n          this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormMycompanyComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  onEditMyCompany(company){\n    const dialogRef = this.dialog.open(FormUpdateMyCompanyComponent, {\n      data: company,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ company.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"moja firma\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"moja firma\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n\n}\n","<div class=\"container\">\n    <div class=\"row mb-2 ml-0\">\n        <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-2\">\n            <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n                <button class=\"w-100\" mat-raised-button color=\"primary\"\n                    (click)=\"openDialogAdd()\">Dodaj firmę</button>\n            </div>\n        </div>\n        <div class=\"col-10\">\n            <div class=\"row\">\n                <p-table #mc [value]=\"mycompanies\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['name']\" [resizableColumns]=\"true\" columnResizeMode=\"expand\">\n                    <ng-template pTemplate=\"caption\">\n                        Moje Firmy\n                        <div class=\"ui-table-globalfilter-container\">\n                            <input pInputText type=\"text\" (input)=\"mc.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th style=\"width: 40px;\">ID</th>\n                            <th pResizableColumn>Nazwa</th>\n                            <th pResizableColumn>NIP</th>\n                            <th pResizableColumn>REGON</th>\n                            <th pResizableColumn>Email firmy</th>\n                            <th pResizableColumn>Email FV</th>\n                            <th pResizableColumn>Nr. Tel.</th>\n                            <th pResizableColumn>Logo</th>\n                            <th style=\"width:8em\"></th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData>\n                        <tr>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.id}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.name}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.nip}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.regon}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.contactemail}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.fvemail}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.phonenumber}}\n                            </td>\n                            <td class=\"ui-resizable-column\">\n                                {{rowData.logoLink}}\n                            </td>\n                            <td style=\"text-align:center\">\n                                <button matTooltip=\"Edycja firmy\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                    icon=\"pi pi-pencil\" class=\"ui-button-info edit-button\"\n                                    (click)=\"onEditMyCompany(rowData)\"></button>\n                                <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                    icon=\"pi pi-times\" class=\"ml-2 ui-button-info remove-button\"\n                                    (click)=\"onDeleteMyCompant(rowData)\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"8\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n                </p-table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['users']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-users\"></i>\n                            <p class=\"card-text w-100 text-right\">Użytkownicy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col\">\n            <a [routerLink]=\"['mojafirma']\">\n                <div class=\"card\" style=\"width: 18rem;\">\n                    <div class=\"card-body\">\n                        <div class=\"d-flex flex-row\">\n                            <i class=\"pi pi-home\"></i>\n                            <p class=\"card-text w-100 text-right\">Moje Firmy</p>\n                        </div>\n                    </div>\n                </div>\n            </a>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { FormMycompanyComponent } from './mycompany/form-mycompany/form-mycompany.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormUsersComponent } from './users/form-users/form-users.component';\nimport {PasswordModule} from 'primeng/password';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { FormPasswordComponent } from './users/form-password/form-password.component';\nimport { FormUserupdateComponent } from './users/form-userupdate/form-userupdate.component';\nimport { FormUpdateMyCompanyComponent } from './mycompany/form-update-my-company/form-update-my-company.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport {ToggleButtonModule} from 'primeng/togglebutton';\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent, FormMycompanyComponent, FormUsersComponent, FormPasswordComponent, FormUserupdateComponent, FormUpdateMyCompanyComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    InputTextModule,\n    RippleModule,\n    ToggleButtonModule\n  ],\n  entryComponents: [FormUpdateMyCompanyComponent,FormUserupdateComponent,FormPasswordComponent,FormUsersComponent,FormMycompanyComponent]\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) { }\n\n  // =============== USERS ============\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/users\");\n  }\n  addUser(data): Observable<any> {\n    return this.http.post<any>(\"api/user\", data);\n  }\n  updateUser(id, data){\n    return this.http.put(\"api/user/\" + id, data, { responseType: 'text' });\n  }\n  deleteUser(id) {\n    return this.http.delete(\"api/user/\" + id, { responseType: 'text' });\n  }\n  changePassword(id, data){\n    return this.http.put<any>(\"api/user/pass/\" + id, data);\n  }\n  //============== MY COMPANY ===============\n\n  getMyCompanies(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getMyCompanyById(id): Observable<any> {\n    return this.http.get<any[]>(\"api/mycompany/\" + id);\n  }\n  addMyCompany(data): Observable<any> {\n    return this.http.post<any>(\"api/mycompany\", data);\n  }\n  updateMyCompany(id, data){\n    return this.http.put(\"api/mycompany/\" + id, data, { responseType: 'text' });\n  }\n  deleteMyCompany(id) {\n    return this.http.delete(\"api/mycompany/\" + id, { responseType: 'text' });\n  }\n  \n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/_class/user';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.scss']\n})\nexport class FormPasswordComponent implements OnInit {\n\n  formPassword: FormGroup;\n  \n  constructor(\n    public dialogRef: MatDialogRef<FormPasswordComponent>, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group({\n      password: ['', { validators: Validators.required}],\n      confirmPassword: ['', { validators: Validators.required}]\n    },{validator: AppValidators.nomatch('password','confirmPassword')})\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  onChangePass(){\n    this.settingService.changePassword(this.user.id,this.formPassword.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"hasło użytkownika\");\n        this.dialogRef.close();\n      },\n      error:(err) =>{ this.info.showErrorUpdate(\"hasło użytkownika\");},\n      complete: () =>{}\n    })\n  }\n\n}\n","<div>\n    <h5>Zmiana hasła dla użytkownika {{ user.name }}</h5>\n</div>\n<hr>\n<form [formGroup]=\"formPassword\">\n    <div class=\"form-group row\">\n        <label for=\"password\" class=\"col-sm-3 col-form-label\">Hasło</label>\n        <div class=\"col-sm-9\">\n            <input type=\"password\" pPassword [formControl]=\"formPassword.get('password')\" id=\"password\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\" required\n                autocomplete=\"off\" />\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('password').hasError('required') && formPassword.get('password').touched\">\n                musi być wypełnione\n            </p>\n        </div>\n    </div>\n\n    <div class=\"form-group row\">\n        <label for=\"confirmPassword\" class=\"col-sm-3 col-form-label\">Powtórz hasło</label>\n        <div class=\"col-sm-9\">\n            <input type=\"password\" pPassword [formControl]=\"formPassword.get('confirmPassword')\" id=\"confirmPassword\"\n                class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\" required\n                autocomplete=\"off\" />\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('confirmPassword').hasError('required') && formPassword.get('confirmPassword').touched\">\n                musi być wypełnione\n            </p>\n            <p class=\"invalid-feedback\"\n                *ngIf=\"formPassword.get('confirmPassword').hasError('nomatch') && formPassword.get('confirmPassword').touched\">\n                hasła muszą być identyczne\n            </p>\n        </div>\n    </div>\n\n</form>\n<hr>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\">\n    <button class=\"ui-dialog-titlebar-close\" matTooltip=\"Anulowanie\" matTooltipClass=\"tooltip-red\" type=\"button\" pButton\n        icon=\"pi pi-times\" (click)=\"onNoClick()\" label=\"Anuluj\"></button>\n    <button [disabled]=\"formPassword.invalid\" matTooltip=\"Zmień hasło\" matTooltipClass=\"tooltip-green\"\n        class=\"ui-button-success\" type=\"button\" pButton icon=\"pi pi-check\" (click)=\"onChangePass()\"\n        label=\"Zapisz\"></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-form-users',\n  templateUrl: './form-users.component.html',\n  styleUrls: ['./form-users.component.scss']\n})\nexport class FormUsersComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  formUser: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<FormUsersComponent>, private settingService: SettingsService, private info: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formUser = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      password: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n\n      catalogRead: new FormControl(false),\n      catalogWrite: new FormControl(false),\n      catalogDelete: new FormControl(false),\n      systemRead: new FormControl(false),\n      systemWrite: new FormControl(false),\n      systemDelete: new FormControl(false),\n      clientRead: new FormControl(false),\n      clientWrite: new FormControl(false),\n      clientDelete: new FormControl(false),\n      filmRead: new FormControl(false),\n      filmWrite: new FormControl(false),\n      filmDelete: new FormControl(false),\n      producerRead: new FormControl(false),\n      producerWrite: new FormControl(false),\n      producerDelete: new FormControl(false)\n\n    })\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  onAddUser() {\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        this.info.showErrorAdd(\"użytkownika\") \n      },\n      complete: () => { }\n    })\n  }\n\n}\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Użytkownik</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formUser\">\n\n        <div style=\"width: 400px;\">\n            <div class=\"form-group row\">\n                <label for=\"name\" class=\"col-sm-3 col-form-label\">Imię Nazwisko</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('name')\" autofocus type=\"text\" id=\"name\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                        placeholder=\"Imię Nazwisko\" required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('name').hasError('required') && formUser.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"username\" class=\"col-sm-3 col-form-label\">Login</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('username')\" type=\"text\" id=\"username\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Login\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('username').hasError('required') && formUser.get('username').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"password\" class=\"col-sm-3 col-form-label\">Hasło</label>\n                <div class=\"col-sm-9\">\n                    <input type=\"password\" pPassword [formControl]=\"formUser.get('password')\" id=\"password\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Hasło\"\n                        required autocomplete=\"off\" />\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('password').hasError('required') && formUser.get('password').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"active\" class=\"col-sm-3 col-form-label\">Aktywny</label>\n                <div class=\"col-sm-9\">\n                    <mat-slide-toggle [formControl]=\"formUser.get('active')\" [color]=\"color\" [checked]=\"true\">\n                        Aktywny\n                    </mat-slide-toggle>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"roles\" class=\"col-sm-3 col-form-label\">Role</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUser.get('role')\" type=\"text\" id=\"roles\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Role\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUser.get('role').hasError('required') && formUser.get('role').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <p><b>Katalog</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Systemy</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Klient</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Okleina</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Producent</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formUser.invalid\" pButton pRipple type=\"button\" (click)=\"onAddUser()\"\n        matTooltip=\"Dodaj użytkownika\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"></button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { User } from 'src/app/_class/user';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { ThemePalette } from '@angular/material/core';\n\n@Component({\n  selector: 'app-form-userupdate',\n  templateUrl: './form-userupdate.component.html',\n  styleUrls: ['./form-userupdate.component.scss']\n})\nexport class FormUserupdateComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  formUserUpdate: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUserupdateComponent>, \n    private settingService: SettingsService, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private info: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUserUpdate = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      role: new FormControl('', { validators: Validators.required}),\n\n      catalogRead: new FormControl(false),\n      catalogWrite: new FormControl(false),\n      catalogDelete: new FormControl(false),\n      systemRead: new FormControl(false),\n      systemWrite: new FormControl(false),\n      systemDelete: new FormControl(false),\n      clientRead: new FormControl(false),\n      clientWrite: new FormControl(false),\n      clientDelete: new FormControl(false),\n      filmRead: new FormControl(false),\n      filmWrite: new FormControl(false),\n      filmDelete: new FormControl(false),\n      producerRead: new FormControl(false),\n      producerWrite: new FormControl(false),\n      producerDelete: new FormControl(false)\n    });\n    this.formUserUpdate.patchValue(this.user);\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateUser() {\n    this.settingService.updateUser(this.user.id,this.formUserUpdate.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        console.log(err);\n        this.info.showErrorUpdate(\"użytkownika\") \n      },\n      complete: () => {\n       }\n    })\n  }\n}","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Użytkownik</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formUserUpdate\">\n\n        <div style=\"width: 400px;\">\n            <div class=\"form-group row\">\n                <label for=\"name\" class=\"col-sm-3 col-form-label\">Imię Nazwisko</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('name')\" autofocus type=\"text\" id=\"name\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                        placeholder=\"Imię Nazwisko\" required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('name').hasError('required') && formUserUpdate.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"username\" class=\"col-sm-3 col-form-label\">Login</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('username')\" type=\"text\" id=\"username\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Login\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('username').hasError('required') && formUserUpdate.get('username').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"active\" class=\"col-sm-3 col-form-label\">Aktywny</label>\n                <div class=\"col-sm-9\">\n                    <mat-slide-toggle [formControl]=\"formUserUpdate.get('active')\" [color]=\"color\" [checked]=\"true\">\n                        Aktywny\n                    </mat-slide-toggle>\n                </div>\n            </div>\n\n            <div class=\"form-group row\">\n                <label for=\"roles\" class=\"col-sm-3 col-form-label\">Role</label>\n                <div class=\"col-sm-9\">\n                    <input [formControl]=\"formUserUpdate.get('role')\" type=\"text\" id=\"roles\"\n                        class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Role\"\n                        required autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formUserUpdate.get('role').hasError('required') && formUserUpdate.get('role').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n            </div>\n        </div>\n        <hr>\n        <div class=\"form-group row\">\n            <div class=\"col\">\n                <p><b>Katalog</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"catalogDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Systemy</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"systemDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Klient</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"clientDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Okleina</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"filmDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n            <div class=\"col\">\n                <p><b>Producent</b></p>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerRead\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Odczyt</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerWrite\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Zapis</p>\n                </div>\n                <div class=\"row m-0\">\n                    <p-toggleButton formControlName=\"producerDelete\" onIcon=\"pi pi-check\" offIcon=\"pi pi-times\">\n                    </p-toggleButton>\n                    <p class=\"ml-1\">Usuwanie</p>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n    <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formUserUpdate.invalid\" pButton pRipple type=\"button\" (click)=\"onUpdateUser()\"\n        matTooltip=\"Dodaj użytkownika\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormUsersComponent } from './form-users/form-users.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { FormPasswordComponent } from './form-password/form-password.component';\nimport { User } from 'src/app/_class/user';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUserupdateComponent } from './form-userupdate/form-userupdate.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(\n    private location: Location, \n    public dialog: MatDialog,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getUsers().subscribe({\n      next: (res) =>{\n          this.users = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: ()=> {\n      }\n      \n    })\n  }\n\n  yesNo(is){\n    return is? \"TAK\" : \"NIE\";\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormUsersComponent, {\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n  openDialogUpdate(usr): void {\n    const dialogRef = this.dialog.open(FormUserupdateComponent, {\n      data: usr,\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialog.open(FormPasswordComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog pass was closed');\n    });\n  }\n\n  onDeleteUser(user: User){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ user.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.settingService.deleteUser(user.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"użytkownia\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"użytkownika\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class=\"row mb-2 ml-0\">\n    <button (click)=\"backClicked()\" mat-raised-button><i class=\"pi pi-chevron-left\"></i></button>\n</div>\n<div class=\"row\">\n    <div class=\"col-2\">\n        <div class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\" style=\"text-align: center;\">\n            <button class=\"w-100\" mat-raised-button color=\"primary\" (click)=\"openDialogAdd()\">Dodaj\n                użytkownika</button>\n        </div>\n    </div>\n    <div class=\"col-10\">\n        <div class=\"row\">\n            <p-table #us [value]=\"users\" dataKey=\"id\" [filterDelay]=\"0\" [globalFilterFields]=\"['username']\">\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Użytkownicy</span></div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"us.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" class=\"p-inputtext\" />\n                        </div>\n                    </div>\n                </ng-template>\n                <ng-template pTemplate=\"header\">\n                    <tr>\n                        <th style=\"width: 40px;\">ID</th>\n                        <th style=\"width: 120px;\">Login</th>\n                        <th style=\"width: 120px;\">Imie Nazwisko</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Aktywny\">Akt.</th>\n                        <th style=\"width: 120px;\">Role</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Odczyt\">Kat. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Zapis\">Kat. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Katalog Usuwanie\">Kat. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"System Odczyt\">Sys. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"System Zapis\">Sys. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"System Usuwanie\">Sys. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Odczyt\">Kl. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Zapis\">Kl. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Klient Usuwanie\">Kl. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Odczyt\">Okl. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Zapis\">Okl. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Okleiny Usuwanie\">Okl. U.</th>\n\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Odczyt\">Prod. O.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Zapis\">Prod. Z.</th>\n                        <th style=\"width: 60px;\" matTooltip=\"Producenci Usuwanie\">Prod. U.</th>\n\n                        <th style=\"width: 120px;\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData>\n                    <tr>\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.username}}\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            {{yesNo(rowData.active)}}\n                        </td>\n                        <td>\n                            {{rowData.role}}\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogRead\">\n                                {{yesNo(rowData.catalogRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogWrite\">\n                                {{yesNo(rowData.catalogWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.catalogDelete\">\n                                {{yesNo(rowData.catalogDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemRead\">\n                                {{yesNo(rowData.systemRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemWrite\">\n                                {{yesNo(rowData.systemWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.systemDelete\">\n                                {{yesNo(rowData.systemDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientRead\">\n                                {{yesNo(rowData.clientRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientWrite\">\n                                {{yesNo(rowData.clientWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.clientDelete\">\n                                {{yesNo(rowData.clientDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmRead\">\n                                {{yesNo(rowData.filmRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmWrite\">\n                                {{yesNo(rowData.filmWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.filmDelete\">\n                                {{yesNo(rowData.filmDelete)}}</span>\n                        </td>\n\n\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerRead\">\n                                {{yesNo(rowData.producerRead)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerWrite\">\n                                {{yesNo(rowData.producerWrite)}}</span>\n                        </td>\n                        <td>\n                            <span [class]=\"'user-badge status-' + rowData.producerDelete\">\n                                {{yesNo(rowData.producerDelete)}}</span>\n                        </td>\n\n                        <td style=\"text-align:center\">\n                            <button matTooltip=\"Edycja Użytkownika\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-pencil\" class=\"ui-button-info edit-button\"\n                                (click)=\"openDialogUpdate(rowData)\"></button>\n                            <button matTooltip=\"Zmiana hasła\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-key\" class=\"ml-1 ui-button-info edit-button\"\n                                (click)=\"openDialogChangePass(rowData)\"></button>\n                            <button matTooltip=\"Usuwanie\" matTooltipClass=\"tooltip-red\" pButton type=\"button\"\n                                icon=\"pi pi-times\" class=\"ml-1 ui-button-info remove-button\"\n                                (click)=\"onDeleteUser(rowData)\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"6\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n        </div>\n    </div>\n</div>"]}