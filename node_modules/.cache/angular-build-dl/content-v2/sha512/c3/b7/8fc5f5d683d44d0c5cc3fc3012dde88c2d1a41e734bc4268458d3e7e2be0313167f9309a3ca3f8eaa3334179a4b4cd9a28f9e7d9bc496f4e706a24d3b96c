{"version":3,"sources":["webpack:///src/app/contractor/client-add-form/client-add-form.component.ts","webpack:///src/app/contractor/client-add-form/client-add-form.component.html","webpack:///src/app/contractor/client-main/client-main.component.ts","webpack:///src/app/contractor/client-main/client-main.component.html","webpack:///src/app/contractor/client-service/client.service.ts","webpack:///src/app/contractor/contractor-routing.module.ts","webpack:///src/app/contractor/contractor.module.ts"],"names":["ClientAddFormComponent","ref","config","clientService","infoPopup","loading","clientData","data","formClient","id","symfoniaId","shortName","name","validators","required","nip","validatenip","pesel","regon","validateregon9","updateOn","town","street","houseNumber","flatNumber","postalCode","province","country","phonenumber","phonenumber2","email","www","patchValue","close","addClient","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","updateClient","showSuccessUpdate","showErrorUpdate","selector","templateUrl","styleUrls","ClientMainComponent","dialog","auth","confirmationService","client","onErr","clonedclients","loadData","getClients","showErrorDownload","push","getCountClient","clientCount","showErrorCount","dialogRef","open","header","width","onClose","console","log","selected","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteClient","showSuccessDelete","showErrorDelete","showDialogToAddClient","ClientService","http","get","post","put","responseType","providedIn","routes","path","component","ContractorRoutingModule","forChild","imports","exports","ContractorModule","declarations","providers","entryComponents"],"mappings":"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","file":"contractor-contractor-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n\n  formClient: FormGroup;\n  clientData: Client;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private clientService: ClientService,\n    private infoPopup: InfoPopupComponent) {\n    this.clientData = config.data;\n  }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      id: new FormControl(''),\n      symfoniaId: new FormControl(''),\n      shortName: new FormControl(''),\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [AppValidators.validatenip] }),\n      pesel: new FormControl(''),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n\n      town: new FormControl(''),\n      street: new FormControl(''),\n      houseNumber: new FormControl(''),\n      flatNumber: new FormControl(''),\n      postalCode: new FormControl(''),\n      province: new FormControl(''),\n      country: new FormControl(''),\n\n      phonenumber: new FormControl(''),\n      phonenumber2: new FormControl(''),\n      email: new FormControl('', { validators: [Validators.email] }),\n      www: new FormControl('')\n    });\n\n    if (this.clientData) {\n      this.formClient.patchValue(this.clientData);\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n\n  addNewClient() {\n    this.loading = true;\n    this.clientService.addClient(this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"klienta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"klienta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateClient() {\n    this.loading = true;\n    this.clientService.updateClient(this.formClient.value.id, this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"klienta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"klienta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formClient\" class=\"sb-form\">\n\n        <div class=\"form-group m-0 p-0\">\n            <div>\n                <p class=\"p-0 m-0\"><b>DANE</b></p>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"name\">Nazwa*</label>\n                    <textarea [style]=\"{'width':'100%'}\" pInputTextarea type=\"text\" id=\"name\"\n                        [formControl]=\"formClient.get('name')\" required>\n                    </textarea>\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('name').hasError('required') && formClient.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"shortName\">Skrócona nazwa</label>\n                    <input pInputText type=\"text\" id=\"shortName\" [formControl]=\"formClient.get('shortName')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"symfoniaId\">Symfonia ID</label>\n                    <input pInputText type=\"text\" id=\"symfoniaId\" [formControl]=\"formClient.get('symfoniaId')\"\n                        autocomplete=\"off\">\n                </div>\n\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"nip\">NIP*</label>\n                    <input [attr.disabled]=\"clientData ? true : null\" pInputText type=\"text\" id=\"nip\"\n                        [formControl]=\"formClient.get('nip')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('nip').hasError('nipFormat') && formClient.get('nip').touched\">\n                        niepoprawny nip\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"regon\">REGON</label>\n                    <input pInputText type=\"text\" id=\"regon\" [formControl]=\"formClient.get('regon')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('regon').hasError('regonFormat') && formClient.get('regon').touched\">\n                        niepoprawny regon\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"pesel\">PESEL</label>\n                    <input [attr.disabled]=\"clientData ? true : null\" pInputText type=\"text\" id=\"pesel\"\n                        [formControl]=\"formClient.get('pesel')\" autocomplete=\"off\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <p class=\"mb-0 mt-4\"><b>ADRES</b></p>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"town\">Miasto</label>\n                    <input pInputText type=\"text\" id=\"town\" [formControl]=\"formClient.get('town')\" autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"street\">Ulica</label>\n                    <input pInputText type=\"text\" id=\"street\" [formControl]=\"formClient.get('street')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\n                    <label class=\"mb-0\" for=\"houseNumber\">Numer budynku</label>\n                    <input pInputText type=\"text\" id=\"houseNumber\" [formControl]=\"formClient.get('houseNumber')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\n                    <label class=\"mb-0\" for=\"flatNumber\">Numer mieszkania</label>\n                    <input pInputText type=\"text\" id=\"flatNumber\" [formControl]=\"formClient.get('flatNumber')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"postalCode\">Kod Pocztowy</label>\n                    <input pInputText type=\"text\" id=\"postalCode\" [formControl]=\"formClient.get('postalCode')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"province\">Województwo</label>\n                    <input pInputText type=\"text\" id=\"province\" [formControl]=\"formClient.get('province')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"country\">Kraj</label>\n                    <input pInputText type=\"text\" id=\"country\" [formControl]=\"formClient.get('country')\"\n                        autocomplete=\"off\">\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <p class=\"mb-0 mt-4\"><b>DANE KONTAKTOWE</b></p>\n            </div>\n\n            <div class=\"p-fluid p-formgrid p-grid\">\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"email\">EMAIL</label>\n                    <input pInputText type=\"text\" id=\"email\" [formControl]=\"formClient.get('email')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('email').hasError('email') && formClient.get('email').touched\">\n                        niepoprawny email\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"phonenumber\">Numer telefonu</label>\n                    <input pInputText type=\"text\" id=\"phonenumber\" [formControl]=\"formClient.get('phonenumber')\"\n                        autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('phonenumber').hasError('minLength') && formClient.get('phonenumber').touched\">\n                        niepoprawny numer telefonu\n                    </p>\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"phonenumber2\">Numer telefonu 2</label>\n                    <input pInputText type=\"text\" id=\"phonenumber2\" [formControl]=\"formClient.get('phonenumber2')\"\n                        autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('phonenumber2').hasError('minLength') && formClient.get('phonenumber2').touched\">\n                        niepoprawny numer telefonu\n                    </p>\n                </div>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n                <div class=\"p-field p-col-12 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"www\">WWW</label>\n                    <input pInputText type=\"text\" id=\"www\" [formControl]=\"formClient.get('www')\" autocomplete=\"off\">\n                </div>\n\n            </div>\n        </div>\n\n    </form>\n</div>\n\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!clientData\" [disabled]=\"formClient.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewClient()\" pTooltip=\"Dodaj nowego kontrahenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"clientData\" [disabled]=\"formClient.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateClient()\" pTooltip=\"Aktualizacja kontrahenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { MessageService, SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ClientAddFormComponent } from '../client-add-form/client-add-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.scss']\n})\nexport class ClientMainComponent implements OnInit {\n  \n  client: Client[] = [];\n\n  onErr: Client =\n    {\n      id: 0,\n      name: \"---\",\n      nip: \"---\",\n      regon: \"---\",\n      email: \"---\",\n      phonenumber: \"---\"\n    };\n  clientCount:number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client; } = {};\n  loading=false;\n  selectedClient:any;\n\n  constructor(\n    public dialog: DialogService,\n    public auth:AuthService,\n    private clientService: ClientService, \n    private infoPopup: InfoPopupComponent,  \n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData(){\n    this.loading=true;\n    this.clientService.getClients().subscribe(\n      {\n        next: (res) => {\n          this.client = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"kontrahenci\")\n          this.err = true;\n          this.client.push(this.onErr);\n        },\n        complete: () => {\n          this.loading=false;\n        }\n      }\n    )\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"klientów\")\n      },\n      complete: () => {\n      }\n    })\n\n\n  }\n\n  showDialogToAddClient() {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Nowy kontrahent\",\n      width: '1000px',\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog client add was closed');\n    });\n  }\n\n  showDialogToUpdateClient(selected) {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Aktualizacja kontrahenta\",\n      width: '1000px',\n      data: selected,\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update client was closed');\n    });\n  }\n\n\n  onRowDeleteClient(client: Client) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ client.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.clientService.deleteClient(client.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"klienta\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"klient\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-id-card\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Kontrahenci</p>\n                                <p class=\"card-title\">{{clientCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddClient()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n\n        <p-table #ct styleClass=\"p-datatable-striped\" [value]=\"client\" [loading]=\"loading\" dataKey=\"id\" editMode=\"row\"\n            sortMode=\"multiple\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\"\n            [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n            [filterDelay]=\"0\" [autoLayout]=\"true\" selectionMode=\"single\" [(selection)]=\"selectedClient\"\n            [globalFilterFields]=\"['name','nip','pesel','shortName','phonenumber']\" [rowHover]=\"true\"\n            columnResizeMode=\"expand\">\n            <ng-template pTemplate=\"caption\">\n\n                <div class=\"row\">\n                    <div class=\"col\"><span>Lista Kontrahentów</span></div>\n                    <div class=\"col\" style=\"text-align: end;\"><input pInputText class=\"p-inputtext\" type=\"text\"\n                            (input)=\"ct.filterGlobal($event.target.value, 'contains')\" placeholder=\"Wyszukiwarka\" />\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr class=\"cl-header\">\n                    <th pTooltip=\"symfonia ID\">\n                        <div>symf. ID</div>\n                    </th>\n                    <th pSortableColumn=\"shortName\">\n                        <div>Skrót nazwa<p-sortIcon field=\"shortName\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"name\">\n                        <div>Nazwa <p-sortIcon field=\"name\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"town\">\n                        <div>Miasto <p-sortIcon field=\"town\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th>\n                        <div>Ulica</div>\n                    </th>\n                    <th>\n                        <div>Nr. budynku</div>\n                    </th>\n                    <th>\n                        <div>Nr. mieszkania</div>\n                    </th>\n                    <th>\n                        <div>Kod pocztowy</div>\n                    </th>\n                    <th>\n                        <div>Województwo</div>\n                    </th>\n                    <th>\n                        <div>Kraj</div>\n                    </th>\n                    <th>\n                        <div>nr. tel.</div>\n                    </th>\n                    <th>\n                        <div>nr. tel. 2</div>\n                    </th>\n                    <th>\n                        <div>email</div>\n                    </th>\n                    <th>\n                        <div>nip</div>\n                    </th>\n                    <th>\n                        <div>pesel</div>\n                    </th>\n                    <th>\n                        <div>regon</div>\n                    </th>\n                    <th>\n                        <div>www</div>\n                    </th>\n                    <th style=\"min-width: 80px;\"></th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                <tr class=\"cl-body\" [pSelectableRow]=\"rowData\">\n                    <td>{{rowData.symfoniaId}}</td>\n                    <td>{{rowData.shortName}}</td>\n                    <td>{{rowData.name}}</td>\n                    <td>{{rowData.town}}</td>\n                    <td>{{rowData.street}}</td>\n                    <td>{{rowData.houseNumber}}</td>\n                    <td>{{rowData.flatNumber}}</td>\n                    <td>{{rowData.postalCode}}</td>\n                    <td>{{rowData.province}}</td>\n                    <td>{{rowData.country}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.phonenumber}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.phonenumber2}}</td>\n                    <td>{{rowData.email}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.nip}}</td>\n                    <td>{{rowData.pesel}}</td>\n                    <td>{{rowData.regon}}</td>\n                    <td>{{rowData.www}}</td>\n\n                    <td class=\"edit-col\">\n                        \n                        <button pButton pRipple appPermission permission=\"catalogWrite\" type=\"button\"\n                            (click)=\"showDialogToUpdateClient(rowData)\" icon=\"pi pi-pencil\"\n                            class=\"p-button-sm sb-button blue\"></button>\n\n                        <button pButton pRipple appPermission permission=\"catalogDelete\" type=\"button\"\n                            (click)=\"onRowDeleteClient(rowData)\" icon=\"pi pi-trash\"\n                            class=\"p-button-sm ml-1 sb-button red\"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                    <td colspan=\"18\" style=\"text-align:left\">Brak danych.</td>\n                </tr>\n            </ng-template>\n        </p-table>\n\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Client {\n  id?: number;\n  symfoniaId?: number;\n  shortName?: string;\n  name?: string;\n  town?: string;\n  street?: string;\n  houseNumber?: string;\n  flatNumber?: string;\n  postalCode?: string;\n  province?: string;\n  country?: string;\n  phonenumber?: string;\n  phonenumber2?: string;\n  email?: string;\n  nip?: string;\n  pesel?: string;\n  regon?: string;\n  www?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  deleteClient(id) {\n    return this.http.delete(\"api/client/\" + id, { responseType: 'text' });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    ProgressSpinnerModule,\n    TooltipModule\n  ],\n  providers: [MessageService,DialogService],\n  entryComponents:[ClientAddFormComponent]\n})\nexport class ContractorModule { }\n"]}