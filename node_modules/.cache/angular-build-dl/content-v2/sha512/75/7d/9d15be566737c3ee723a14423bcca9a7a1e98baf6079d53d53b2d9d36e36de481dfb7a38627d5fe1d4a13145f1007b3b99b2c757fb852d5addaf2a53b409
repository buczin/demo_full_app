{"version":3,"sources":["./src/app/settings/mycompany/mycompany.component.html","./src/app/settings/settings-main/settings-main.component.html","./src/app/settings/users/users.component.html","./src/app/settings/mycompany/mycompany.component.scss","./src/app/settings/mycompany/mycompany.component.ts","./src/app/settings/settings-main/settings-main.component.scss","./src/app/settings/settings-main/settings-main.component.ts","./src/app/settings/settings-routing.module.ts","./src/app/settings/settings.module.ts","./src/app/settings/settings.service.ts","./src/app/settings/users/users.component.scss","./src/app/settings/users/users.component.ts"],"names":[],"mappings":"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","file":"settings-settings-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <p-table #mc [value]=\\\"companies\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['name']\\\">\\n                <ng-template pTemplate=\\\"caption\\\">\\n                    Użytkownicy\\n                    <div class=\\\"ui-table-globalfilter-container\\\">\\n                        <input pInputText type=\\\"text\\\" (input)=\\\"mc.filterGlobal($event.target.value, 'contains')\\\"\\n                            placeholder=\\\"Wyszukiwarka\\\" />\\n                    </div>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th style=\\\"width: 40px;\\\">ID</th>\\n                        <th>Nazwa</th>\\n                        <th>NIP</th>\\n                        <th>REGON</th>\\n                        <th>Główny mail</th>\\n                        <th>Mail wysyłkowy</th>\\n                        <th>nr. tel.</th>\\n                        <th style=\\\"width:8em\\\"></th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                    <tr>\\n                        <td>\\n                            {{rowData.id}}\\n                        </td>\\n                        <td>\\n                            {{rowData.name}}\\n                        </td>\\n                        <td>\\n                            {{rowData.nip}}\\n                        </td>\\n                        <td>\\n                            {{rowData.regon}}\\n                        </td>\\n                        <td>\\n                            {{rowData.mainemail}}\\n                        </td>\\n                        <td>\\n                            {{sendingemail}}\\n                        </td>\\n                        <td>\\n                            {{phonenumber}}\\n                        </td>\\n                        <td style=\\\"text-align:center\\\">\\n                            <button matTooltip=\\\"Edycja firmy\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                                (click)=\\\"onEditMyCompany(rowData)\\\"></button>\\n                            <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                                (click)=\\\"onDeleteMyCompany(rowData)\\\"></button>\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\n                    <tr>\\n                        <td colspan=\\\"3\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row row-cols-2\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['users']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-users\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Użytkownicy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['mojafirma']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-users\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Moje Firmy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n    </div>\\n    <div class=\\\"col\\\">\\n        <div class=\\\"row\\\">\\n            <p-table #us [value]=\\\"users\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['username']\\\">\\n                <ng-template pTemplate=\\\"caption\\\">\\n                    Użytkownicy\\n                    <div class=\\\"ui-table-globalfilter-container\\\">\\n                        <input pInputText type=\\\"text\\\" (input)=\\\"us.filterGlobal($event.target.value, 'contains')\\\"\\n                            placeholder=\\\"Wyszukiwarka\\\" />\\n                    </div>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"header\\\">\\n                    <tr>\\n                        <th style=\\\"width: 40px;\\\">ID</th>\\n                        <th>Login</th>\\n                        <th>Imie Nazwisko</th>\\n                        <th>Aktywny</th>\\n                        <th>Role</th>\\n                        <th style=\\\"width:8em\\\"></th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                    <tr>\\n                        <td>\\n                            {{rowData.id}}\\n                        </td>\\n                        <td>\\n                            {{rowData.username}}\\n                        </td>\\n                        <td>\\n                            {{rowData.name}}\\n                        </td>\\n                        <td>\\n                            {{rowData.active}}\\n                        </td>\\n                        <td>\\n                            {{rowData.roles}}\\n                        </td>\\n                        <td style=\\\"text-align:center\\\">\\n                            <button matTooltip=\\\"Edycja Użytkownika\\\" matTooltipClass=\\\"tooltip-red\\\"\\n                            pButton type=\\\"button\\\" icon=\\\"pi pi-pencil\\\"\\n                                class=\\\"ui-button-info edit-button\\\" (click)=\\\"onEditUser(rowData)\\\"></button>\\n                            <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton\\n                                type=\\\"button\\\" icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                                (click)=\\\"onDeleteUser(rowData)\\\"></button>\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\\"emptymessage\\\">\\n                    <tr>\\n                        <td colspan=\\\"3\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n    </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215Y29tcGFueS9teWNvbXBhbnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: any;\n\n  constructor(private settingService: SettingsService,private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) =>{\n          this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLW1haW4vc2V0dGluZ3MtbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule\n  ]\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) { }\n\n  // =============== USERS ============\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/users\");\n  }\n  addUser(data): Observable<any> {\n    return this.http.post<any>(\"api/user\", data);\n  }\n  updateUser(id, data): Observable<any> {\n    return this.http.put<any>(\"api/user/\" + id, data);\n  }\n  deleteUser(id) {\n    return this.http.delete<Response>(\"api/user/\" + id);\n  }\n  //============== MY COMPANY ===============\n\n  getMyCompanies(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getMyCompanyById(id): Observable<any> {\n    return this.http.get<any[]>(\"api/mycompany/\" + id);\n  }\n  addMyCompany(data): Observable<any> {\n    return this.http.post<any>(\"api/mycompany\", data);\n  }\n  updateMyCompany(id, data): Observable<any> {\n    return this.http.put<any>(\"api/mycompany/\" + id, data);\n  }\n  deleteMyCompany(id) {\n    return this.http.delete<Response>(\"api/mycompany/\" + id);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(private settingService: SettingsService,private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.settingService.getUsers().subscribe({\n      next: (res) =>{\n          this.users = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}