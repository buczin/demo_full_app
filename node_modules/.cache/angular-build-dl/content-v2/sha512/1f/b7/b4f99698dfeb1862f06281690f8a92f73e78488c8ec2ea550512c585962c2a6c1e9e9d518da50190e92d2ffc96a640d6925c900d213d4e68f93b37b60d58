{"version":3,"sources":["webpack:///src/app/catalog/catalog.module.ts","webpack:///src/app/catalog/form/system-add-form/system-add-form.component.ts","webpack:///src/app/catalog/form/system-add-form/system-add-form.component.html","webpack:///src/app/catalog/catalog-routing.module.ts","webpack:///src/app/catalog/form/catalog-add-form/catalog-add-form.component.ts","webpack:///src/app/catalog/form/catalog-add-form/catalog-add-form.component.html","webpack:///src/app/catalog/catalog-main/catalog-main.component.ts","webpack:///src/app/catalog/catalog-main/catalog-main.component.html"],"names":["CatalogModule","declarations","imports","providers","entryComponents","SystemAddFormComponent","ref","catalogService","infoPopup","config","loading","systemData","data","formSystem","name","validators","required","comment","patchValue","asyncValidators","systemExists","updateOn","id","close","addSystem","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","updateSystem","showSuccessUpdate","showErrorUpdate","selector","templateUrl","styleUrls","routes","path","component","CatalogRoutingModule","forChild","exports","CatalogAddFormComponent","catalogData","filteredSystems","systems","formCatalog","number","profileType","systemProfil","offerName","dimOuter","dimInner","dimOneSide","dimCenterSide","dimTwoSide","dimTwoSideInner","dimTwoSideOuter","actualMeasurement","hard","alu","comments","console","log","event","i","length","sys","toLowerCase","indexOf","query","push","isString","tmpSys","addCatalog","updateCatalog","String","filterSystems","CatalogMainComponent","dialogService","auth","confirmationService","color","catalog","system","loadingCatalog","onErrSystem","onErr","clonedCatalogs","clonedSystem","loadData","loadSystems","getCatalogs","showErrorDownload","getCountCatalog","catalogCount","showErrorCount","getCountSystem","systemCount","kat","getCatalogsBySystem","katalog","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteCatalog","showSuccessDelete","showErrorDelete","val","deleteSystem","open","header","width","onClose","rowData","showDialogToAddCatalog","showDialogToAddSystem","transform","opacity","animations"],"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","file":"catalog-catalog-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CatalogMainComponent } from './catalog-main/catalog-main.component';\nimport { CatalogAddFormComponent } from './form/catalog-add-form/catalog-add-form.component';\nimport { SystemAddFormComponent } from './form/system-add-form/system-add-form.component';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { TabViewModule } from 'primeng/tabview';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CatalogRoutingModule } from './catalog-routing.module';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { EditorModule } from 'primeng/editor';\nimport {TooltipModule} from 'primeng/tooltip';\n@NgModule({\n  declarations: [CatalogMainComponent, CatalogAddFormComponent, SystemAddFormComponent],\n  imports: [\n    CommonModule,\n    CatalogRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    DialogModule,\n    TabViewModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    InputTextareaModule,\n    AutoCompleteModule,\n    MatDialogModule,\n    CheckboxModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    EditorModule,\n    ProgressSpinnerModule,\n    TooltipModule\n  ],\n  providers: [DialogService],\n  entryComponents:[SystemAddFormComponent,CatalogAddFormComponent]\n})\nexport class CatalogModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CatalogService, KatalogSystem } from '../../catalog-service/catalog.service';\n\n@Component({\n  selector: 'app-system-add-form',\n  templateUrl: './system-add-form.component.html',\n  styleUrls: ['./system-add-form.component.scss']\n})\nexport class SystemAddFormComponent implements OnInit {\n\n  formSystem: FormGroup;\n  loading = false;\n  systemData: KatalogSystem;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    private catalogService: CatalogService,\n    private infoPopup: InfoPopupComponent,\n    public config: DynamicDialogConfig,\n  ) {\n    this.systemData = config.data;\n  }\n\n  ngOnInit() {\n    if (this.systemData) {\n      this.formSystem = new FormGroup({\n        name: new FormControl('', { validators: [Validators.required] }),\n        comment: new FormControl(''),\n      })\n      this.formSystem.patchValue(this.systemData);\n    } else {\n      this.formSystem = new FormGroup({\n        name: new FormControl('', { validators: [Validators.required], asyncValidators: [AppValidators.systemExists], updateOn: 'blur' }),\n        comment: new FormControl(''),\n      })\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewSystem() {\n    this.loading = true;\n    this.catalogService.addSystem(this.formSystem.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"systemu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"systemu\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      })\n  }\n\n  updateSystem() {\n    this.loading = true;\n    this.catalogService.updateSystem(this.systemData.id,this.formSystem.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"systemu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"systemu\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      })\n  }\n}\n","<div class=\"sb-dialog-content\">\n\n    <form [formGroup]=\"formSystem\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"systemNameId\">Nazwa systemu *</label>\n                <input pInputText id=\"systemNameId\" style=\"width: 100%;\" [formControl]=\"formSystem.get('name')\" type=\"text\" required>\n                \n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formSystem.get('name').hasError('required') && formSystem.get('name').touched\">\n                    musi być wypełnione\n                </p>\n\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formSystem.get('name').hasError('systemExists') && formSystem.get('name').touched\">\n                    taki system już istnieje\n                </p>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n                <p-editor [formControl]=\"formSystem.get('comment')\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n\n        <button *ngIf=\"!systemData\" [disabled]=\"formSystem.invalid || loading\" pButton pRipple type=\"button\" (click)=\"addNewSystem()\"\n            pTooltip=\"Dodaj nowy system\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"systemData\" [disabled]=\"formSystem.invalid || loading\" pButton pRipple type=\"button\" (click)=\"updateSystem()\"\n            pTooltip=\"Aktualizacja systemu\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatalogMainComponent } from './catalog-main/catalog-main.component';\n\nconst routes: Routes = [\n\n  { path: '', component: CatalogMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CatalogRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CatalogService, KatalogProfili, KatalogSystem } from '../../catalog-service/catalog.service';\n\n@Component({\n  selector: 'app-catalog-add-form',\n  templateUrl: './catalog-add-form.component.html',\n  styleUrls: ['./catalog-add-form.component.scss']\n})\nexport class CatalogAddFormComponent implements OnInit {\n\n  formCatalog: FormGroup;\n  systems: SelectItem[];\n  filteredSystems: any[];\n  loading=false;\n  catalogData: KatalogProfili\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private catalogService: CatalogService, \n    private infoPopup: InfoPopupComponent,\n    ) {\n      this.catalogData = config.data;\n     }\n\n  ngOnInit() {\n    this.filteredSystems = this.catalogService.systems;\n    this.formCatalog = new FormGroup({\n      number: new FormControl('', { validators: [Validators.required]}),\n      profileType: new FormControl('', { validators: [Validators.required] }),\n      systemProfil: new FormControl('', { validators: [Validators.required]}),\n      offerName: new FormControl(''),\n      dimOuter: new FormControl(''),\n      dimInner: new FormControl(''),\n      dimOneSide: new FormControl(''),\n      dimCenterSide: new FormControl(''),\n      dimTwoSide: new FormControl(''),\n      dimTwoSideInner: new FormControl(''),\n      dimTwoSideOuter: new FormControl(''),\n      actualMeasurement: new FormControl(false),\n      hard: new FormControl(false),\n      alu: new FormControl(false),\n      comments: new FormControl('')\n    });\n\n    if(this.catalogData){\n      this.formCatalog.patchValue(this.catalogData);\n      console.log(this.catalogData);\n    }\n  }\n\n  filterSystems(event) {\n    this.filteredSystems = [];\n    for (let i = 0; i < this.catalogService.systems.length; i++) {\n      let sys = this.catalogService.systems[i];\n      if (sys.name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.filteredSystems.push(sys);\n      }\n    }\n  }\n\n  exit(id){\n    this.ref.close(id);\n  }\n\n  addNewCatalog() {\n    this.loading=true;\n    if(this.isString(this.formCatalog.value.systemProfil)){\n      let tmpSys: KatalogSystem = {id: null, name: this.formCatalog.value.systemProfil}\n      this.formCatalog.value.systemProfil = tmpSys;\n    }\n    this.catalogService.addCatalog(this.formCatalog.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"katalogu\");\n          this.loading=false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"katalogu\");\n          this.loading=false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateCatalog() {\n    this.loading=true;\n    this.catalogService.updateCatalog(this.catalogData.id,this.formCatalog.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"katalogu\");\n          this.loading=false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"katalogu\");\n          this.loading=false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  isString (value) {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n}\n\n","<div class=\"sb-dialog-content\">\n\n    <form [formGroup]=\"formCatalog\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n                        <span><b>RODZAJ</b></span>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"systemProfil\">System</label>\n\n                        <p-autoComplete [style]=\"{'width':'100%'}\" [minLength]=\"1\"\n                            [formControl]=\"formCatalog.get('systemProfil')\" [suggestions]=\"filteredSystems\"\n                            (completeMethod)=\"filterSystems($event)\" [dropdown]=\"true\" placeholder=\"Wybierz system\"\n                            field=\"name\">\n                            <ng-template let-systemProfil pTemplate=\"item\">\n                                <div class=\"catalog-dropdown-system\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            {{systemProfil.name}}\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </p-autoComplete>\n\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('systemProfil').hasError('required') && formCatalog.get('systemProfil').touched\">\n                            musi być wypełnione\n                        </p>\n\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"number\">Numer*</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('number')\" type=\"text\" id=\"number\"\n                          required autofocus autocomplete=\"off\">\n                       \n                            <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('number').hasError('required') && formCatalog.get('number').touched\">\n                            musi być wypełnione\n                        </p>\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('number').hasError('catalogExists') && formCatalog.get('number').touched\">\n                            ten numer znajduje się w katalogu\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"profileType\">Rodzaj Ksztaltownika*</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('profileType')\" type=\"text\" id=\"profileType\" required>\n                        \n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('profileType').hasError('required') && formCatalog.get('profileType').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"offerName\">Nazwa na ofercie</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('offerName')\" type=\"text\" id=\"offerName\">\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('hard')\" [binary]=\"true\" label=\"Trudny\"></p-checkbox>\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('alu')\" [binary]=\"true\" label=\"Profil aluminiowy\">\n                        </p-checkbox>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n                        <span><b>WYMIARY</b></span>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimOuter\">Zewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimOuter')\" type=\"number\" id=\"dimOuter\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimInner\">Wewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimInner')\" type=\"number\" id=\"dimInner\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimOneSide\">Jednostronny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimOneSide')\" type=\"number\" id=\"dimOneSide\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSide\">Obustronny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSide')\" type=\"number\" id=\"dimTwoSide\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n                        <label class=\"sb-small-label\" for=\"dimCenterSide\">Środek</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimCenterSide')\" type=\"number\" id=\"dimCenterSide\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSideOuter\">Obu. Zewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSideOuter')\" type=\"number\" id=\"dimTwoSideOuter\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSideInner\">Obu. Wewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSideInner')\" type=\"number\" id=\"dimTwoSideInner\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('actualMeasurement')\" [binary]=\"true\"\n                            label=\"Pomiar rzeczywisty (zweryfikowany)\"></p-checkbox>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n                <p-editor [formControl]=\"formCatalog.get('comments')\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n            </div>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!catalogData\" [disabled]=\"formCatalog.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewCatalog()\" pTooltip=\"Dodaj nowy katalog\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"catalogData\" [disabled]=\"formCatalog.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateCatalog()\" pTooltip=\"Aktualizacja katalogu\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CatalogService, KatalogProfili, KatalogSystem } from '../catalog-service/catalog.service';\nimport { SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ThemePalette } from '@angular/material/core';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { CatalogAddFormComponent } from '../form/catalog-add-form/catalog-add-form.component';\nimport { SystemAddFormComponent } from '../form/system-add-form/system-add-form.component';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-catalog-main',\n  templateUrl: './catalog-main.component.html',\n  styleUrls: ['./catalog-main.component.scss'],\n  animations: [\n    trigger('rowExpansionTrigger', [\n      state('void', style({\n        transform: 'translateX(-10%)',\n        opacity: 0\n      })),\n      state('active', style({\n        transform: 'translateX(0)',\n        opacity: 1\n      })),\n      transition('* <=> *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ])\n  ]\n})\nexport class CatalogMainComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  catalog: KatalogProfili[] = [];\n  system: KatalogSystem[] = [];\n  loadingCatalog = false;\n\n  onErrSystem: KatalogSystem = {\n    id: 0,\n    name: \"---\"\n  }\n  catalogCount: number;\n  systemCount: number;\n  onErr: KatalogProfili =\n    {\n      id: 0,\n      systemProfil: this.onErrSystem,\n      number: \"---\",\n      dimOuter: \"---\",\n      dimInner: \"---\",\n      dimOneSide: \"---\",\n      dimTwoSide: \"---\",\n      dimTwoSideInner: \"---\",\n      dimTwoSideOuter: \"---\",\n      actualMeasurement: false,\n      hard: false,\n      profileType: \"---\",\n      comments: \"---\"\n    };\n\n  err: boolean;\n  newCatalog: boolean;\n  available: SelectItem[];\n  clonedCatalogs: { [s: string]: KatalogProfili; } = {};\n  clonedSystem: { [s: string]: KatalogSystem; } = {};\n\n  constructor(\n    public dialogService: DialogService,\n    public catalogService: CatalogService, \n    private infoPopup: InfoPopupComponent, \n    public auth: AuthService, \n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData() {\n    this.loadingCatalog = true;\n    this.catalogService.loadSystems();\n\n    this.catalogService.getCatalogs().subscribe(\n      {\n        next: (res) => {\n          this.catalog = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"katalogu\")\n          this.err = true;\n          this.catalog.push(this.onErr);\n        },\n        complete: () => {\n          this.loadingCatalog = false;\n        }\n      }\n    )\n\n    this.catalogService.getCountCatalog().subscribe({\n      next: (res) => {\n        this.catalogCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"katalogu\")\n      },\n      complete: () => {\n      }\n    })\n\n    this.catalogService.getCountSystem().subscribe({\n      next: (res) => {\n        this.systemCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"systemów\")\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  loadSelectedSystem(kat) {\n    this.catalog = [];\n    this.loadingCatalog = true;\n    if (kat == -1) {\n      this.catalogService.getCatalogs().subscribe(\n        {\n          next: (res) => {\n            this.catalog = res;\n            this.err = false;\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDownload(\"katalogu\")\n            this.err = true;\n            this.catalog.push(this.onErr);\n          },\n          complete: () => {\n            this.loadingCatalog = false;\n          }\n        }\n      )\n    } else {\n      this.catalogService.getCatalogsBySystem(kat.id).subscribe(\n        {\n          next: (res) => {\n            this.catalog = res;\n            this.err = false;\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDownload(\"katalogu\")\n            this.err = true;\n            this.catalog.push(this.onErr);\n          },\n          complete: () => {\n            this.loadingCatalog = false;\n          }\n        }\n      )\n    }\n  }\n\n\n  // onRowEditInit(catalog: KatalogProfili) {\n  //   this.clonedCatalogs[catalog.id] = { ...catalog };\n  // }\n\n  // onRowEditSave(catalog: KatalogProfili) {\n  //   this.catalogService.updateCatalog(catalog.id, catalog).subscribe(\n  //     {\n  //       next: (res) => {\n  //         this.infoPopup.showSuccessUpdate(\"katalogu\");\n  //       },\n  //       error: (err) => {\n  //         this.infoPopup.showErrorUpdate(\"katalogu\");\n  //       },\n  //       complete: () => {\n  //         delete this.clonedCatalogs[catalog.id];\n  //       }\n  //     }\n  //   )\n  // }\n\n  onRowDeleteCatalog(katalog: KatalogProfili) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ katalog.number + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.catalogService.deleteCatalog(katalog.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"katalogu\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"katalogu\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  showBoolean(val){\n    if(val){\n      return \"TAK\"\n    }else{\n      return \"\"\n    }\n  }\n\n  // onRowEditCancel(catalog: KatalogProfili, index: number) {\n  //   this.catalog[index] = this.clonedCatalogs[catalog.id];\n  //   delete this.clonedCatalogs[catalog.id];\n  // }\n\n  //============== SYSTEMS ==================\n\n  // onRowEditSystem(system: KatalogSystem) {\n  //   this.clonedSystem[system.id] = { ...system };\n  // }\n\n  // onRowEditSaveSystem(system: KatalogSystem) {\n  //   this.catalogService.updateSystem(system.id, system).subscribe(\n  //     {\n  //       next: (res) => {\n  //         this.infoPopup.showSuccessUpdate(\"systemu\");\n  //       },\n  //       error: (err) => {\n  //         this.infoPopup.showErrorUpdate(\"systemu\");\n  //       },\n  //       complete: () => {\n  //         delete this.clonedSystem[system.id];\n  //       }\n  //     }\n  //   )\n  // }\n\n  onRowDeleteSystem(system: KatalogSystem) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ system.name +'?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.catalogService.deleteSystem(system.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"systemu\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"systemu\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n            \n          }\n        )\n      }\n    });\n  }\n\n  // onRowEditCancelSystem(system: KatalogSystem, index: number) {\n  //   this.system[index] = this.clonedSystem[system.id];\n  //   delete this.clonedSystem[system.id];\n  // }\n\n\n  // DIALOGS\n\n  showDialogToAddCatalog() {\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: 'Nowa pozycja katalogu',\n      width: '800px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog catalog add was closed');\n    });\n  }\n\n  showDialogToUpdateCatalog(rowData){\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: 'Aktualizacja pozycji katalogu',\n      data: rowData,\n      width: '800px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog catalog add was closed');\n    });\n  }\n\n  showDialogToAddSystem() {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: 'Nowy system',\n      width: '450px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog system add was closed');\n    });\n  }\n\n  showDialogToUpdateSystem(rowData) {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: 'Aktualizacja systemu - '+ rowData.name,\n      data: rowData,\n      width: '450px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog system update was closed');\n    });\n  }\n\n\n}\n","<div class=\"row\">\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-folder\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Pozycje</p>\n                                <p class=\"card-title\">{{catalogCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddCatalog()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-tags\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Systemy</p>\n                                <p class=\"card-title\">{{systemCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddSystem()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Katalog Profili\">\n\n        <p-table #kp styleClass=\"p-datatable-striped\" selectionMode=\"single\" [value]=\"catalog\" dataKey=\"id\"\n            editMode=\"row\" [loading]=\"loadingCatalog\" [paginator]=\"true\" [rows]=\"10\"\n            [rowsPerPageOptions]=\"[10,20,50,100]\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n            [globalFilterFields]=\"['number','profileType','systemProfil.name','offerName']\" [rowHover]=\"true\"\n            sortField=\"systemProfil.name\" sortOrder=\"1\">\n\n            <ng-template pTemplate=\"caption\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <span>Katalog Profili</span></div>\n                    <div class=\"col\" style=\"text-align: end;\">\n                        <p-dropdown #ss (onChange)=\"loadSelectedSystem(ss.selectedOption.value)\"\n                            [options]=\"catalogService.systemsSelectTable\" [filter]=\"true\" filterBy=\"name,value.name\"\n                            placeholder=\"Wybierz system\">\n                        </p-dropdown>\n                        <input type=\"text\" class=\"p-inputtext-lg\"\n                            (input)=\"kp.filterGlobal($event.target.value, 'contains')\" class=\"ml-2 p-inputtext\"\n                            placeholder=\"Wyszukiwarka\" pInputText />\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr class=\"ct-head\">\n                    <th style=\"width: 180px;\" pSortableColumn=\"number\">\n                        <div>Numer<p-sortIcon field=\"number\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"profileType\">\n                        <div>Rodzaj Kształtownika<p-sortIcon field=\"profileType\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"offerName\">\n                        <div>Na Ofercie<p-sortIcon field=\"offerName\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"systemProfil.name\">\n                        <div>System<p-sortIcon field=\"systemProfil.name\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Zewnętrzny\">\n                        <div>Zew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Wewnętrzny\">\n                        <div>Wew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Jednostronny\">\n                        <div>Jedno.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Środek\">\n                        <div>Środek</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obustronny\">\n                        <div>Obu.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obu. Zewnętrzny\">\n                        <div>Obu. Zew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obu. Wewnętrzny\">\n                        <div>Obu. Wew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Pomiar rzeczywisty (zweryfikowany)\">\n                        <div>Rzeczy.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Trudne\">\n                        <div>Trudne</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Aluminium\">\n                        <div>Alu</div>\n                    </th>\n                    <th style=\"width: 60px;\">\n                        <div>Uwagi</div>\n                    </th>\n                    <th style=\"min-width: 80px; width: 80px;\"></th>\n                </tr>\n                <tr>\n                    <th>\n                        <input pInputText type=\"text\" (input)=\"kp.filter($event.target.value, 'number', 'startsWith')\"\n                            placeholder=\"Szukaj po numerze\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'profileType', 'startsWith')\"\n                            placeholder=\"Szukaj po rodzaju\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'offerName', 'startsWith')\"\n                            placeholder=\"Szukaj po nazwie\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'systemProfil.name', 'startsWith')\"\n                            placeholder=\"Szukaj po systemie\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-expanded=\"expanded\" let-ri=\"rowIndex\">\n                <tr [pEditableRow]=\"rowData\" class=\"ct-body\" [pSelectableRow]=\"rowData\">\n                    <td>\n                        {{rowData.number}}\n                    </td>\n                    <td>\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <!-- <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.profileType\" required> -->\n\n                                <textarea [style]=\"{'width':'100%'}\" pInputTextarea [(ngModel)]=\"rowData.profileType\"\n                                    placeholder=\"Uwagi\" required></textarea>\n\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.profileType}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n                    <td>\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <!-- <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.offerName\" required> -->\n\n                                <textarea [style]=\"{'width':'100%'}\" pInputTextarea [(ngModel)]=\"rowData.offerName\"\n                                    placeholder=\"Uwagi\" required></textarea>\n\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.offerName}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td>\n                        {{rowData.systemProfil.name}}\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimOuter\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimOuter}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimInner\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimInner}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimOneSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimOneSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimCenterSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimCenterSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimTwoSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\"\n                                    [(ngModel)]=\"rowData.dimTwoSideOuter\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSideOuter}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\"\n                                    [(ngModel)]=\"rowData.dimTwoSideInner\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSideInner}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.actualMeasurement\" [binary]=\"true\">\n                                </p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'measure-badge status-' + rowData.actualMeasurement\">\n                                    {{showBoolean(rowData.actualMeasurement)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.hard\" [binary]=\"true\"></p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'hard-badge status-' + rowData.hard\">\n                                    {{showBoolean(rowData.hard)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.alu\" [binary]=\"true\"></p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'measure-badge status-' + rowData.alu\">\n                                    {{showBoolean(rowData.alu)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td>\n                        <a *ngIf=\"rowData.comments\" href=\"#\" [pRowToggler]=\"rowData\">\n                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n                        </a>\n                    </td>\n\n                    <td class=\"edit-col\">\n\n                        <button pButton pRipple appPermission permission=\"catalogWrite\" type=\"button\"\n                            (click)=\"showDialogToUpdateCatalog(rowData)\" icon=\"pi pi-pencil\"\n                            class=\"p-button-sm sb-button blue\"></button>\n\n                        <button pButton pRipple appPermission permission=\"catalogDelete\" type=\"button\"\n                            (click)=\"onRowDeleteCatalog(rowData)\" icon=\"pi pi-trash\"\n                            class=\"p-button-sm ml-1 sb-button red\"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"rowexpansion\" let-rowData>\n                <tr>\n                    <td [attr.colspan]=\"16\">\n                        <div class=\"p-grid ui-fluid\" style=\"font-size:16px;padding:20px\"\n                            [@rowExpansionTrigger]=\"'active'\">\n                            <div class=\"p-col-12 p-md-9\" [innerHTML]=\"rowData.comments\">\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                    <td colspan=\"14\" style=\"text-align:left\">Brak danych.</td>\n                </tr>\n            </ng-template>\n        </p-table>\n\n    </p-tabPanel>\n    <p-tabPanel header=\"Systemy\">\n        <ng-template pTemplate=\"content\">\n\n            <p-table #sy styleClass=\"p-datatable-striped\" selectionMode=\"single\" [value]=\"catalogService.systems\"\n                dataKey=\"id\" editMode=\"row\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\"\n                [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n                [filterDelay]=\"0\" [globalFilterFields]=\"['name']\">\n\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Systemy</span></div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"sy.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </div>\n                </ng-template>\n\n                <ng-template pTemplate=\"header\">\n                    <tr class=\"sys-head\">\n                        <th style=\"width: 40px;\">\n                            <div>ID</div>\n                        </th>\n                        <th pSortableColumn=\"name\">\n                            <div>Nazwa<p-sortIcon field=\"name\"></p-sortIcon>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"comment\">\n                            <div>Opis<p-sortIcon field=\"comment\"></p-sortIcon>\n                            </div>\n                        </th>\n                        <th style=\"min-width: 80px; width: 80px;\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                    <tr [pEditableRow]=\"rowData\" class=\"sys-body\">\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            <div [innerHTML]=\"rowData.comment\"></div>\n                        </td>\n\n                        <td class=\"edit-col\">\n                            <button pButton pRipple appPermission permission=\"systemWrite\" type=\"button\"\n                                (click)=\"showDialogToUpdateSystem(rowData)\" icon=\"pi pi-pencil\"\n                                class=\"p-button-sm sb-button blue\"></button>\n\n                            <button pButton pRipple appPermission permission=\"systemDelete\" type=\"button\"\n                                (click)=\"onRowDeleteSystem(rowData)\" icon=\"pi pi-trash\"\n                                class=\"p-button-sm ml-1 sb-button red\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"4\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n\n        </ng-template>\n\n    </p-tabPanel>\n</p-tabView>"]}