{"version":3,"sources":["webpack:///src/app/films/producer-add-form/producer-add-form.component.ts","webpack:///src/app/films/producer-add-form/producer-add-form.component.html","webpack:///src/app/films/films-routing.module.ts","webpack:///src/app/films/film-main/film-main.component.ts","webpack:///src/app/films/film-main/film-main.component.html","webpack:///src/app/films/film-add-form/film-add-form.component.ts","webpack:///src/app/films/film-add-form/film-add-form.component.html","webpack:///src/app/films/films.module.ts"],"names":["ProducerAddFormComponent","dialogRef","filmService","infoPopup","formProducer","producerName","validators","required","asyncValidators","producerExists","updateOn","close","addProducer","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","addNewProducer","selector","templateUrl","styleUrls","routes","path","component","FilmsRoutingModule","forChild","imports","exports","FilmMainComponent","dialog","auth","confirmationService","film","producer","positionpersite","onErr","id","number","name","ecoPlastNumber","ralNumber","imgLink","status","NIEDOSTEPNA","clonedFilms","clonedProducers","loading","loadData","available","label","DOSTEPNA","DOSTEPNOSCOGRANICZONA","displayDialogOkleina","loadProducersSelect","getOklieny","showErrorDownload","push","getCountOkleina","filmCount","showErrorCount","getCountProducer","producerCount","selectedOkleina","data","open","width","panelClass","afterClosed","result","console","log","updateOkleina","showSuccessUpdate","showErrorUpdate","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteOklina","showSuccessDelete","showErrorDelete","index","updateProducer","deleteProducer","showDialogToAddFilm","showDialogToAddProducer","onDialogHide","FilmAddFormComponent","formFilm","filmExists","event","selectedFilm","target","addOklina","addNewFilm","FilmsModule","declarations","providers","entryComponents"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYgB;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;UDNHA,wB;AAIX,0CACSC,SADT,EAEUC,WAFV,EAGUC,SAHV,EAGyC;AAAA;;AAFhC,eAAAF,SAAA,GAAAA,SAAA;AACC,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAAkC;;;;qCAEjC;AACT,iBAAKC,YAAL,GAAoB,IAAI,wDAAJ,CAAc;AAChCC,0BAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ,CAAd;AAAqCC,+BAAe,EAAE,CAAC,wEAAcC,cAAf,CAAtD;AAAsFC,wBAAQ,EAAE;AAAhG,eAApB;AADkB,aAAd,CAApB;AAGD;;;iCAEG;AACF,iBAAKT,SAAL,CAAeU,KAAf;AACD;;;2CAEgB;AAAA;;AACf,iBAAKT,WAAL,CAAiBU,WAAjB,CAA6B,KAAKR,YAAL,CAAkBS,KAA/C,EAAsDC,SAAtD,CACE;AACEC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,qBAAI,CAACb,SAAL,CAAec,cAAf,CAA8B,YAA9B;;AAA4C;;AAC5C,qBAAI,CAACC,IAAL;AACD,eAJH;AAKEC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,qBAAI,CAACjB,SAAL,CAAekB,YAAf,CAA4B,YAA5B;AACD,eAPH;AAQEC,sBAAQ,EAAE,oBAAM,CACf;AATH,aADF;AAaD;;;;;;;yBAjCUtB,wB,EAAwB,sI,EAAA,yI,EAAA,2J;AAAA,O;;;cAAxBA,wB;AAAwB,8C;AAAA,iB;AAAA,e;AAAA,ojC;AAAA;AAAA;ACbrC;;AACI;;AAAe;;AAAc;;AACjC;;AACA;;AACI;;AAEI;;AACI;;AACI;;AAAmD;;AAAgB;;AACnE;;AAGA;;AAIA;;AAIJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAAsC;AAAA,qBAAS,IAAAkB,IAAA,EAAT;AAAe,aAAf;;AAEmC;;AAEzE;;AAAwE;AAAA,qBAAS,IAAAK,cAAA,EAAT;AAAyB,aAAzB;;AAEnB;;AAEzD;;;;AA/BsB;;AAAA;;AAKC;;AAAA;;AAIH;;AAAA;;AAIA;;AAAA;;AAcR;;AAAA;;;;;;;;;wEDlBCvB,wB,EAAwB;gBALpC,uDAKoC;iBAL1B;AACTwB,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK0B,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMC,MAAM,GAAW,CAErB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAFqB,CAAvB;;UAUaC,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBAHpB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGoB,EAFnB,4DAEmB;;;;4HAAlBG,kB,EAAkB;AAAA;AAAA,oBAFnB,4DAEmB;AAAA,S;AAFP,O;;;;;wEAEXA,kB,EAAkB;gBAJ9B,sDAI8B;iBAJrB;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIqB,U;;;;;;;;;;;;;;;;;;ACf/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC+EwB;;AACI;;AACI;;AAAM;;AAAY;;AACtB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sCAAsC,UAAtC,CAAT;AAA0D,WAA1D;;AADJ;;AAGJ;;AACJ;;;;;;AAGA;;AACI;;AAA6B;;AAAK;;AAClC;;AACA;;AAA2B;;AAAK;;AAChC;;AACA;;AAA+B;;AAAS;;AACxC;;AACA;;AAAI;;AACJ;;AACA;;AAAgC;;AAAQ;;AACxC;;AACA;;AAAqC;;AAAmB;;AAExD;;AACA;;AAAI;;AAAS;;AACb;;AAA6B;;AAAM;;AACnC;;AACA;;AACJ;;;;;;;;AAUgB;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAAlD;;;;;;AAAkD;;;;;;AAIlD;;;;;;AAAA;;;;;;;;AAOA;;AAEI;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;;;;;;;AAFT,mHAAuC,QAAvC,EAAuC,IAAvC,EAAuC,SAAvC,EAAuC,mBAAvC;;;;;;AAKnC;;;;;;AAAA;;;;;;;;AAQA;;AAAkD;AAAA;;AAAA;;AAAA;AAAA;;AAAlD;;;;;;AAAkD;;;;;;;;AAGlD;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;;;;;AAAK;;;;;;;;AASL;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;;;;;AACI;;;;;;AAGJ;;;;;;AAAA;;;;;;;;AAQA;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;;;;;AACI;;;;;;AAGJ;;;;;;AAAA;;;;;;;;AAQA;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;;;;;AACI;;;;;;AAGJ;;;;;;AAAA;;;;;;;;;;;;;;AASA;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAwD;;;;;;;;AAA3B;;AADD,iGAAqB,SAArB,EAAqB,iBAArB;;;;;;AAM5B;;AAAgE;;AAAK;;;;;;AACrE;;AAAsE;;AAAQ;;;;;;AAC9E;;AAA4E;;AAAM;;;;;;AAHtF;;AACI;;AACA;;AACA;;AACJ;;;;;;AAJK;;AACI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;AAQjB;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEoC;;;;;;;;AAExC;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGyD;;;;;;;;AAE7D;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAE6B;;;;;;;;AAE5E;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAEa;;;;;;AAjHtE;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAIA;;AAGJ;;AACJ;;AACA;;AACI;;AACI;;AAKA;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAGA;;AAIJ;;AACJ;;AAEA;;AACI;;AACI;;AAIA;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAIA;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAIA;;AAGJ;;AACJ;;AAGA;;AACI;;AACI;;AAIA;;AASJ;;AACJ;;AAEA;;AACI;;AAKA;;AAMA;;AAIA;;AAGJ;;AACJ;;;;;;;;;AAnHI;;AAEI;;AAAA;;AAgGoC;;AAAA;;AAKF;;AAAA;;AAK8B;;AAAA;;AAIV;;AAAA;;;;;;AAO9D;;AACI;;AAAwC;;AAAY;;AACxD;;;;;;;;AAqBI;;AACI;;AACI;;AAAM;;AAAU;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,uCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AADJ;;AAGJ;;AACJ;;;;;;AAIA;;AACI;;AAAyB;;AAAE;;AAC3B;;AAAmC;;AAAgB;;AAEnD;;AACA;;AACJ;;;;;;;;AAWgB;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;;;;;AACI;;;;;;AAGJ;;;;;;AAAA;;;;;;;;AAKR;;AACkB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGsB;;;;;;;;AAExC;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGyD;;;;;;;;AAE7D;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGU;;;;;;;;AAEzD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAE0D;;;;;;AApCtE;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AAIA;;AAGJ;;AACJ;;AACA;;AACI;;AAMA;;AAMA;;AAKA;;AAIJ;;AACJ;;;;;;;;;AAtCI;;AAEI;;AAAA;;AAiBI;;AAAA;;AAK8B;;AAAA;;AAKiC;;AAAA;;AAMjC;;AAAA;;;;;;AAO1C;;AACI;;AAAwC;;AAAY;;AACxD;;;;;;;;;;;;;;AA5EhB;;AACI;;AAEI;;AAKI;;AAaA;;AAUA;;AA0CA;;AAMJ;;AAEJ;;AACJ;;;;;;AA/EqB;;AAAA,0GAA+B,WAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,EAA/B,EAA+B,oBAA/B,EAA+B,qEAA/B,EAA+B,uBAA/B,EAA+B,IAA/B,EAA+B,aAA/B,EAA+B,CAA/B,EAA+B,oBAA/B,EAA+B,qEAA/B;;;;;;AAsF7B;;AACI;;AACJ;;;;;;AADuB;;AAAA;;;;;;;;;;;;;;;;;;;;;UDhUdC,iB;AA4BX,mCACSC,MADT,EAESC,IAFT,EAGSlC,WAHT,EAIUC,SAJV,EAKUkC,mBALV,EAKoD;AAAA;;AAJ3C,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACA,eAAAlC,WAAA,GAAAA,WAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAkC,mBAAA,GAAAA,mBAAA;AA/BV,eAAAC,IAAA,GAAkB,EAAlB;AACA,eAAAC,QAAA,GAAwB,EAAxB;AACA,eAAAC,eAAA,GAAkB,EAAlB;AAEA,eAAAC,KAAA,GACE;AACEC,cAAE,EAAE,CADN;AAEEC,kBAAM,EAAE,KAFV;AAGEC,gBAAI,EAAE,KAHR;AAIEL,oBAAQ,EAAE,KAJZ;AAKEM,0BAAc,EAAE,KALlB;AAMEC,qBAAS,EAAE,KANb;AAOEC,mBAAO,EAAE,KAPX;AAQEC,kBAAM,EAAE,wEAAYC;AARtB,WADF;AAgBA,eAAAC,WAAA,GAAyC,EAAzC;AACA,eAAAC,eAAA,GAA+C,EAA/C;AAGA,eAAAC,OAAA,GAAU,KAAV;AAOuD;;;;qCAE5C;AACT,iBAAKhC,GAAL,GAAW,KAAX;AACA,iBAAKiC,QAAL;AACA,iBAAKC,SAAL,GAAiB,CACf;AAAEC,mBAAK,EAAE,UAAT;AAAqB1C,mBAAK,EAAE,wEAAY2C;AAAxC,aADe,EAEf;AAAED,mBAAK,EAAE,aAAT;AAAwB1C,mBAAK,EAAE,wEAAYoC;AAA3C,aAFe,EAGf;AAAEM,mBAAK,EAAE,mBAAT;AAA8B1C,mBAAK,EAAE,wEAAY4C;AAAjD,aAHe,CAAjB;AAKD;;;qCAEU;AAAA;;AACT,iBAAKL,OAAL,GAAe,IAAf;AACA,iBAAKM,oBAAL,GAA4B,KAA5B;AACA,iBAAKxD,WAAL,CAAiByD,mBAAjB;AAEA,iBAAKzD,WAAL,CAAiB0D,UAAjB,GAA8B9C,SAA9B,CACE;AACEC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACsB,IAAL,GAAYtB,GAAZ;AACA,sBAAI,CAACI,GAAL,GAAW,KAAX;AACD,eAJH;AAKED,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACjB,SAAL,CAAe0D,iBAAf,CAAiC,SAAjC;;AACA,sBAAI,CAACzC,GAAL,GAAW,IAAX;;AACA,sBAAI,CAACkB,IAAL,CAAUwB,IAAV,CAAe,MAAI,CAACrB,KAApB;AACD,eATH;AAUEnB,sBAAQ,EAAE,oBAAM;AACd,sBAAI,CAAC8B,OAAL,GAAe,KAAf;AACD;AAZH,aADF;AAiBA,iBAAKlD,WAAL,CAAiB6D,eAAjB,GAAmCjD,SAAnC,CAA6C;AAC3CC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACgD,SAAL,GAAiBhD,GAAjB;AACD,eAH0C;AAI3CG,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACjB,SAAL,CAAe8D,cAAf,CAA8B,QAA9B;AACD,eAN0C;AAO3C3C,sBAAQ,EAAE,oBAAM,CACf;AAR0C,aAA7C;AAWA,iBAAKpB,WAAL,CAAiBgE,gBAAjB,GAAoCpD,SAApC,CAA8C;AAC5CC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACmD,aAAL,GAAqBnD,GAArB;AACD,eAH2C;AAI5CG,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACjB,SAAL,CAAe8D,cAAf,CAA8B,aAA9B;AACD,eAN2C;AAO5C3C,sBAAQ,EAAE,oBAAM,CACf;AAR2C,aAA9C;AAWD;;;yCAEc;AACb,iBAAKoC,oBAAL,GAA4B,KAA5B;AACA,iBAAKU,eAAL,GAAuB,IAAvB;AACD;;;yCAEcC,I,EAAM;AACnB,iBAAKX,oBAAL,GAA4B,IAA5B;AACA,iBAAKU,eAAL,GAAuBC,IAAvB;AACD;;;gDAEqB;AAAA;;AACpB,gBAAMpE,SAAS,GAAG,KAAKkC,MAAL,CAAYmC,IAAZ,CAAiB,2FAAjB,EAAuC;AACvDC,mBAAK,EAAE,OADgD;AAEvDC,wBAAU,EAAE;AAF2C,aAAvC,CAAlB;AAKAvE,qBAAS,CAACwE,WAAV,GAAwB3D,SAAxB,CAAkC,UAAA4D,MAAM,EAAI;AAC1C,oBAAI,CAACrB,QAAL;;AACAsB,qBAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,aAHD;AAID;;;oDAEyB;AAAA;;AACxB,gBAAM3E,SAAS,GAAG,KAAKkC,MAAL,CAAYmC,IAAZ,CAAiB,uGAAjB,EAA2C;AAC3DC,mBAAK,EAAE,OADoD;AAE3DC,wBAAU,EAAE;AAF+C,aAA3C,CAAlB;AAKAvE,qBAAS,CAACwE,WAAV,GAAwB3D,SAAxB,CAAkC,UAAA4D,MAAM,EAAI;AAC1C,oBAAI,CAACrB,QAAL;;AACAsB,qBAAO,CAACC,GAAR,CAAY,4CAAZ;AACD,aAHD;AAID;;;wCAEatC,I,EAAe;AAC3B,iBAAKY,WAAL,CAAiBZ,IAAI,CAACI,EAAtB,IAA4B,MAAH,OAAG,CAAH,EAAG,EAAKJ,IAAL,CAA5B;AACD;;;wCAEaA,I,EAAe;AAAA;;AAC3B,iBAAKpC,WAAL,CAAiB2E,aAAjB,CAA+BvC,IAAI,CAACI,EAApC,EAAwCJ,IAAxC,EAA8CxB,SAA9C,CACE;AACEC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACb,SAAL,CAAe2E,iBAAf,CAAiC,SAAjC;AACD,eAHH;AAIE3D,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACjB,SAAL,CAAe4E,eAAf,CAA+B,SAA/B;AACD,eANH;AAOEzD,sBAAQ,EAAE,oBAAM;AACd,uBAAO,MAAI,CAAC4B,WAAL,CAAiBZ,IAAI,CAACI,EAAtB,CAAP;;AACA,sBAAI,CAACW,QAAL;AACD;AAVH,aADF;AAcD;;;0CAEef,I,EAAe;AAAA;;AAC7B,iBAAKD,mBAAL,CAAyB2C,OAAzB,CAAiC;AAC/BC,qBAAO,EAAE,4BAA4B3C,IAAI,CAACM,IAAjC,GAAwC,GADlB;AAE/BsC,yBAAW,EAAE,KAFkB;AAG/BC,yBAAW,EAAE,KAHkB;AAI/BC,wBAAU,EAAE,aAJmB;AAK/BC,oCAAsB,EAAE,6CALO;AAM/BC,oCAAsB,EAAE,kEANO;AAO/BC,oBAAM,EAAE,kBAAM;AACZ,sBAAI,CAACrF,WAAL,CAAiBsF,YAAjB,CAA8BlD,IAAI,CAACI,EAAnC,EAAuC5B,SAAvC,CACE;AACEC,sBAAI,EAAE,cAACC,GAAD,EAAS;AACb,0BAAI,CAACb,SAAL,CAAesF,iBAAf,CAAiC,SAAjC;AACD,mBAHH;AAIEtE,uBAAK,EAAE,eAACC,GAAD,EAAS;AACduD,2BAAO,CAACC,GAAR,CAAYxD,GAAZ;;AACA,0BAAI,CAACjB,SAAL,CAAeuF,eAAf,CAA+B,SAA/B;AACD,mBAPH;AAQEpE,0BAAQ,EAAE,oBAAM;AACd,0BAAI,CAAC+B,QAAL;AACD;AAVH,iBADF;AAcD;AAtB8B,aAAjC;AAwBD;;;0CAEef,I,EAAeqD,K,EAAe;AAC5C,iBAAKrD,IAAL,CAAUqD,KAAV,IAAmB,KAAKzC,WAAL,CAAiBZ,IAAI,CAACI,EAAtB,CAAnB;AACA,mBAAO,KAAKQ,WAAL,CAAiBZ,IAAI,CAACI,EAAtB,CAAP;AACD;;;gDAEqBH,Q,EAAqB;AACzC,iBAAKY,eAAL,CAAqBZ,QAAQ,CAACG,EAA9B,IAAoC,MAAH,OAAG,CAAH,EAAG,EAAKH,QAAL,CAApC;AACD;;;4CAEiBA,Q,EAAqB;AAAA;;AACrC,iBAAKrC,WAAL,CAAiB0F,cAAjB,CAAgCrD,QAAQ,CAACG,EAAzC,EAA6CH,QAA7C,EAAuDzB,SAAvD,CACE;AACEC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACb,SAAL,CAAe2E,iBAAf,CAAiC,YAAjC;AACD,eAHH;AAIE3D,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACjB,SAAL,CAAe4E,eAAf,CAA+B,YAA/B;AACD,eANH;AAOEzD,sBAAQ,EAAE,oBAAM;AACd,uBAAO,MAAI,CAAC6B,eAAL,CAAqBZ,QAAQ,CAACG,EAA9B,CAAP;;AACA,sBAAI,CAACW,QAAL;AACD;AAVH,aADF;AAcD;;;8CAEmBd,Q,EAAqB;AAAA;;AACvC,iBAAKF,mBAAL,CAAyB2C,OAAzB,CAAiC;AAC/BC,qBAAO,EAAE,4BAA4B1C,QAAQ,CAAClC,YAArC,GAAoD,GAD9B;AAE/B6E,yBAAW,EAAE,KAFkB;AAG/BC,yBAAW,EAAE,KAHkB;AAI/BC,wBAAU,EAAE,aAJmB;AAK/BC,oCAAsB,EAAE,6CALO;AAM/BC,oCAAsB,EAAE,kEANO;AAO/BC,oBAAM,EAAE,kBAAM;AACZ,sBAAI,CAACrF,WAAL,CAAiB2F,cAAjB,CAAgCtD,QAAQ,CAACG,EAAzC,EAA6C5B,SAA7C,CACE;AACEC,sBAAI,EAAE,cAACC,GAAD,EAAS;AACb,0BAAI,CAACb,SAAL,CAAesF,iBAAf,CAAiC,WAAjC;AACD,mBAHH;AAIEtE,uBAAK,EAAE,eAACC,GAAD,EAAS;AACd,0BAAI,CAACjB,SAAL,CAAeuF,eAAf,CAA+B,WAA/B;AACD,mBANH;AAOEpE,0BAAQ,EAAE,oBAAM;AACd,0BAAI,CAAC+B,QAAL;AACD;AATH,iBADF;AAaD;AArB8B,aAAjC;AAuBD;;;kDAEuBd,Q,EAAmBoD,K,EAAe;AACxD,iBAAKpD,QAAL,CAAcoD,KAAd,IAAuB,KAAKzC,WAAL,CAAiBX,QAAQ,CAACG,EAA1B,CAAvB;AACA,mBAAO,KAAKS,eAAL,CAAqBZ,QAAQ,CAACG,EAA9B,CAAP;AACD;;;;;;;yBApOUR,iB,EAAiB,mI,EAAA,0I,EAAA,yI,EAAA,2J,EAAA,gI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,gB;AAAA,u8M;AAAA;AAAA;ACf9B;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA2B;;AAAK;;AACpC;;AACJ;;AACA;;AACI;;AACI;;AAAyB;;AAAK;;AAC9B;;AAAsB;;AAAa;;AACvC;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AAAgC;;AAAS;;AAAW;;AAAsB;;AAAK;;AACnF;;AACA;;AACI;;AAA8B;AAAA,qBAAS,IAAA4D,mBAAA,EAAT;AAA8B,aAA9B;;AAE6B;;AAC/D;;AACJ;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAA2B;;AAAkB;;AACjD;;AACJ;;AACA;;AACI;;AACI;;AAAyB;;AAAU;;AACnC;;AAAsB;;AAAiB;;AAC3C;;AACJ;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACI;;AACI;;AAAgC;;AAAS;;AAAW;;AAAsB;;AAAK;;AACnF;;AACA;;AACI;;AAA8B;AAAA,qBAAS,IAAAC,uBAAA,EAAT;AAAkC,aAAlC;;AAE6B;;AAC/D;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEA;;AACI;;AACI;;AACI;;AAEI;;AAMI;;AAYA;;AAqBA;;AAuHA;;AAMJ;;AAEJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAqFJ;;AACJ;;AAEA;;AAA2B;AAAA;AAAA,eAAkC,aAAlC,EAAkC;AAAA,qBACf,IAAAC,YAAA,EADe;AACD,aADjC;;AAEvB;;AAGJ;;;;AApUkD;;AAAA;;AAgCA;;AAAA;;AA2BpB;;AAAA,wFAAc,SAAd,EAAc,WAAd,EAAc,WAAd,EAAc,IAAd,EAAc,MAAd,EAAc,EAAd,EAAc,oBAAd,EAAc,sEAAd,EAAc,uBAAd,EAAc,IAAd,EAAc,aAAd,EAAc,CAAd,EAAc,YAAd,EAAc,IAAd,EAAc,oBAAd,EAAc,sEAAd,EAAc,UAAd,EAAc,IAAd;;AAqQ1B;;AAAA;;AADuB,0GAAkC,MAAlC,EAAkC,EAAlC,EAAkC,OAAlC,EAAkC,IAAlC,EAAkC,cAAlC,EAAkC,sEAAlC;;AAElB;;AAAA;;;;;;;;;wED/TI9D,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTV,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEf9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACagB;;AAEI;;AACJ;;;;;;AAWA;;AAEI;;AACJ;;;;;;AACA;;AAEI;;AACJ;;;;;;AAOA;;AAEI;;AACJ;;;;;;;;;;UD/BHuE,oB;AAWX,sCACShG,SADT,EAESC,WAFT,EAGUC,SAHV,EAGyC;AAAA;;AAFhC,eAAAF,SAAA,GAAAA,SAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AAVV,eAAAmD,SAAA,GAA0B,CACxB;AAAEC,iBAAK,EAAE,UAAT;AAAqB1C,iBAAK,EAAE,wEAAY2C;AAAxC,WADwB,EAExB;AAAED,iBAAK,EAAE,aAAT;AAAwB1C,iBAAK,EAAE,wEAAYoC;AAA3C,WAFwB,EAGxB;AAAEM,iBAAK,EAAE,mBAAT;AAA8B1C,iBAAK,EAAE,wEAAY4C;AAAjD,WAHwB,CAA1B;AAU4C;;;;qCAEjC;AACT,iBAAKyC,QAAL,GAAgB,IAAI,wDAAJ,CAAc;AAC5BvD,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAErC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ,CAAd;AAAqCC,+BAAe,EAAE,CAAC,+EAAc2F,UAAf,CAAtD;AAAkFzF,wBAAQ,EAAE;AAA5F,eAApB,CADoB;AAE5BkC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEtC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CAFsB;AAG5BgC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEjC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CAHkB;AAI5BwC,qBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAJmB;AAK5BC,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,KAAKM,SAAL,CAAe,CAAf,CAAhB,EAAmC;AAAEhD,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAAnC,CALoB;AAM5BuC,uBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CANiB;AAO5BD,4BAAc,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAPY,aAAd,CAAhB;AASD;;;qCAEUuD,K,EAAc;AACvB,iBAAKC,YAAL,GAAqBD,KAAK,CAACE,MAAN,CAAmCzF,KAAxD;AACD;;;iCAEG;AACF,iBAAKZ,SAAL,CAAeU,KAAf;AACD;;;uCAEY;AAAA;;AACX,iBAAKuF,QAAL,CAAcrF,KAAd,CAAoBmC,MAApB,GAA6B,KAAKkD,QAAL,CAAcrF,KAAd,CAAoBmC,MAApB,CAA2BnC,KAAxD;AACA,iBAAKX,WAAL,CAAiBqG,SAAjB,CAA2B,KAAKL,QAAL,CAAcrF,KAAzC,EAAgDC,SAAhD,CACE;AACEC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACb,SAAL,CAAec,cAAf,CAA8B,SAA9B;;AACA,sBAAI,CAACC,IAAL;AACD,eAJH;AAKEC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACf,sBAAI,CAACjB,SAAL,CAAekB,YAAf,CAA4B,SAA5B;AACA,eAPH;AAQEC,sBAAQ,EAAE,oBAAM,CACf;AATH,aADF;AAaD;;;;;;;yBAnDU2E,oB,EAAoB,sI,EAAA,yI,EAAA,2J;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA,iB;AAAA,gB;AAAA,0nF;AAAA;AAAA;ACbjC;;AACI;;AAAe;;AAAY;;AAC/B;;AACA;;AAEI;;AAEI;;AACI;;AACI;;AAA6C;;AAAW;;AACxD;;AAGA;;AAIJ;;AACJ;;AAGA;;AACI;;AACI;;AAA2C;;AAAO;;AAClD;;AAGA;;AAIA;;AAIJ;;AACA;;AACI;;AAAyC;;AAAO;;AAChD;;AAGA;;AAIJ;;AACJ;;AAGA;;AACI;;AACI;;AAA8C;;AAAQ;;AACtD;;AAGJ;;AACA;;AACI;;AAAmD;;AAAY;;AAC/D;;AAGJ;;AACJ;;AAGA;;AACI;;AACI;;AAAwD;;AAAS;;AACjE;;AAGJ;;AACA;;AACI;;AAA2C;;AAAQ;;AACnD;;AAGJ;;AACJ;;AAEA;;AACI;;AACI;;AAA4C;;AAAK;;AACjD;;AAGJ;;AACJ;;AACJ;;AACJ;;AAEA;;AAEI;;AAAsC;AAAA,qBAAS,IAAA/E,IAAA,EAAT;AAAe,aAAf;;AAEuC;;AAE7E;;AAAoE;AAAA,qBAAS,IAAAsF,UAAA,EAAT;AAAqB,aAArB;;AAEX;;AAE7D;;;;AAhGsB;;AAAA;;AAKoB;;AAAA;;AAA2B,iHAAuC,QAAvC,EAAuC,IAAvC,EAAuC,aAAvC,EAAuC,4BAAvC;;AAIjD;;AAAA;;AAUG;;AAAA;;AAIH;;AAAA;;AAIA;;AAAA;;AAMG;;AAAA;;AAIH;;AAAA;;AAUG;;AAAA;;AAMA;;AAAA;;AAUA;;AAAA;;AAMsB;;AAAA;;AAA2B,+FAAqB,aAArB,EAAqB,0BAArB;;AASjD;;AAAA;;AAcX;;AAAA;;;;;;;;;wEDpFCP,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTzE,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEbjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA6Ca+E,W;;;;;cAAAA;;;;2BAAAA,W;AAAW,S;AAAA,mBAHX,E;AAAE,kBAnBJ,CACP,4DADO,EAEP,wEAFO,EAGP,oEAHO,EAIP,yDAJO,EAKP,0DALO,EAMP,+DANO,EAOP,2DAPO,EAQP,0EARO,EASP,4DATO,EAUP,gEAVO,EAWP,8EAXO,EAYP,kEAZO,EAaP,8DAbO,EAcP,yEAdO,EAeP,kEAfO,EAgBP,4DAhBO,EAiBP,0EAjBO,CAmBI;;;;4HAGFA,W,EAAW;AAAA,yBAvBP,gFAuBO,EAvBY,4FAuBZ,EAvBkC,wGAuBlC;AAvB0D,oBAE9E,4DAF8E,EAG9E,wEAH8E,EAI9E,oEAJ8E,EAK9E,yDAL8E,EAM9E,0DAN8E,EAO9E,+DAP8E,EAQ9E,2DAR8E,EAS9E,0EAT8E,EAU9E,4DAV8E,EAW9E,gEAX8E,EAY9E,8EAZ8E,EAa9E,kEAb8E,EAc9E,8DAd8E,EAe9E,yEAf8E,EAgB9E,kEAhB8E,EAiB9E,4DAjB8E,EAkB9E,0EAlB8E;AAuB1D,S;AALR,O;;;;;wEAKHA,W,EAAW;gBAxBvB,sDAwBuB;iBAxBd;AACRC,wBAAY,EAAE,CAAC,gFAAD,EAAoB,4FAApB,EAA0C,wGAA1C,CADN;AAER1E,mBAAO,EAAE,CACP,4DADO,EAEP,wEAFO,EAGP,oEAHO,EAIP,yDAJO,EAKP,0DALO,EAMP,+DANO,EAOP,2DAPO,EAQP,0EARO,EASP,4DATO,EAUP,gEAVO,EAWP,8EAXO,EAYP,kEAZO,EAaP,8DAbO,EAcP,yEAdO,EAeP,kEAfO,EAgBP,4DAhBO,EAiBP,0EAjBO,CAFD;AAqBR2E,qBAAS,EAAE,EArBH;AAsBRC,2BAAe,EAAC,CAAC,4FAAD,EAAsB,wGAAtB;AAtBR,W;AAwBc,U","file":"films-films-module-es5.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MessageService } from 'primeng/api';\nimport { FilmsService} from '../film-service/films.service';\nimport { AppValidators } from '../../_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-producer-add-form',\n  templateUrl: './producer-add-form.component.html',\n  styleUrls: ['./producer-add-form.component.scss']\n})\nexport class ProducerAddFormComponent implements OnInit {\n\n  formProducer: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<ProducerAddFormComponent>,\n    private filmService: FilmsService, \n    private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formProducer = new FormGroup({\n      producerName: new FormControl('', { validators: [Validators.required] ,asyncValidators: [AppValidators.producerExists], updateOn: 'blur'}),\n    })\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  addNewProducer() {\n    this.filmService.addProducer(this.formProducer.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"producenta\");;\n          this.exit();\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"producenta\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n}\n\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowy Producent</span>\n</div>\n<div class=\"sb-dialog-content\">\n    <form class=\"m-4\" [formGroup]=\"formProducer\">\n\n        <div class=\"form-group row mb-4\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"producerNameid\">Nazwa Producenta</label>\n                <input [formControl]=\"formProducer.get('producerName')\" type=\"text\" id=\"producerNameid\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Nazwa\"\n                    required autofocus autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('required') && formProducer.get('producerName').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formProducer.get('producerName').hasError('producerExists') && formProducer.get('producerName').touched\">\n                    nazwa producenta została już dodana\n                </p>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n\n    <button pButton pRipple type=\"button\" (click)=\"exit()\"\n    matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\" matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n    class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formProducer.invalid\" pButton pRipple type=\"button\" (click)=\"addNewProducer()\"\n    matTooltip=\"Dodaj producenta\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n    class=\"p-button-raised p-button-success p-button-sm\"></button>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilmMainComponent } from './film-main/film-main.component';\n\n\nconst routes: Routes = [\n\n  { path: '', component: FilmMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilmsRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FilmsService, Okleina, OkleinaEnum, Producent } from '../film-service/films.service';\nimport { SelectItem, ConfirmationService } from 'primeng/api';\nimport { MessageService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { FilmAddFormComponent } from '../film-add-form/film-add-form.component';\nimport { ProducerAddFormComponent } from '../producer-add-form/producer-add-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-film-main',\n  templateUrl: './film-main.component.html',\n  styleUrls: ['./film-main.component.scss']\n})\nexport class FilmMainComponent implements OnInit {\n\n  film: Okleina[] = [];\n  producer: Producent[] = [];\n  positionpersite = 10;\n\n  onErr: Okleina =\n    {\n      id: 0,\n      number: \"---\",\n      name: \"---\",\n      producer: \"---\",\n      ecoPlastNumber: \"---\",\n      ralNumber: \"---\",\n      imgLink: \"---\",\n      status: OkleinaEnum.NIEDOSTEPNA\n    };\n  filmCount: number;\n  producerCount: number;\n  err: boolean;\n  newFilm: boolean;\n  available: SelectItem[];\n  clonedFilms: { [s: string]: Okleina; } = {};\n  clonedProducers: { [s: string]: Producent; } = {};\n  displayDialogOkleina: boolean;\n  selectedOkleina: any;\n  loading = false;\n\n  constructor(\n    public dialog: MatDialog,\n    public auth: AuthService,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n    this.available = [\n      { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n      { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n      { label: 'Dost. Ograniczona', value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n    ];\n  }\n\n  loadData() {\n    this.loading = true;\n    this.displayDialogOkleina = false;\n    this.filmService.loadProducersSelect();\n\n    this.filmService.getOklieny().subscribe(\n      {\n        next: (res) => {\n          this.film = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"okleiny\")\n          this.err = true;\n          this.film.push(this.onErr);\n        },\n        complete: () => {\n          this.loading = false;\n        }\n      }\n    )\n\n    this.filmService.getCountOkleina().subscribe({\n      next: (res) => {\n        this.filmCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"oklein\")\n      },\n      complete: () => {\n      }\n    })\n\n    this.filmService.getCountProducer().subscribe({\n      next: (res) => {\n        this.producerCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"producentów\")\n      },\n      complete: () => {\n      }\n    })\n\n  }\n\n  onDialogHide() {\n    this.displayDialogOkleina = false;\n    this.selectedOkleina = null;\n  }\n\n  showDialogFilm(data) {\n    this.displayDialogOkleina = true;\n    this.selectedOkleina = data;\n  }\n\n  showDialogToAddFilm() {\n    const dialogRef = this.dialog.open(FilmAddFormComponent, {\n      width: '550px',\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog add production order was closed');\n    });\n  }\n\n  showDialogToAddProducer() {\n    const dialogRef = this.dialog.open(ProducerAddFormComponent, {\n      width: '450px',\n      panelClass: 'no-padding-dialog'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog add production order was closed');\n    });\n  }\n\n  onRowEditInit(film: Okleina) {\n    this.clonedFilms[film.id] = { ...film };\n  }\n\n  onRowEditSave(film: Okleina) {\n    this.filmService.updateOkleina(film.id, film).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"okleiny\");\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"okleiny\");\n        },\n        complete: () => {\n          delete this.clonedFilms[film.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteFilm(film: Okleina) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + film.name + '?',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-raised p-button-sm p-button-danger',\n      rejectButtonStyleClass: 'p-button-raised p-button-outlined p-button-secondary p-button-sm',\n      accept: () => {\n        this.filmService.deleteOklina(film.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"okleiny\");\n            },\n            error: (err) => {\n              console.log(err);\n              this.infoPopup.showErrorDelete(\"okleiny\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancel(film: Okleina, index: number) {\n    this.film[index] = this.clonedFilms[film.id];\n    delete this.clonedFilms[film.id];\n  }\n\n  onRowEditInitProducer(producer: Producent) {\n    this.clonedProducers[producer.id] = { ...producer };\n  }\n\n  onRowEditProducer(producer: Producent) {\n    this.filmService.updateProducer(producer.id, producer).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"producenta\");\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"producenta\");\n        },\n        complete: () => {\n          delete this.clonedProducers[producer.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowDeleteProducer(producer: Producent) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć ' + producer.producerName + '?',\n      acceptLabel: 'Tak',\n      rejectLabel: 'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-raised p-button-sm p-button-danger',\n      rejectButtonStyleClass: 'p-button-raised p-button-outlined p-button-secondary p-button-sm',\n      accept: () => {\n        this.filmService.deleteProducer(producer.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"producent\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"producent\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  onRowEditCancelProducer(producer: Okleina, index: number) {\n    this.producer[index] = this.clonedFilms[producer.id];\n    delete this.clonedProducers[producer.id];\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"text-center\">\n                            <mat-icon class=\"icon-big\">waves</mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Folia</p>\n                            <p class=\"card-title\">{{filmCount}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer \">\n                <hr>\n                <div class=\"stats-bar\">\n                    <div class=\"stats\">\n                        <mat-icon class=\"fo-small-icon\">calculate</mat-icon><span class=\"fo-text\">Ilość</span>\n                    </div>\n                    <div class=\"stats-bar-button\">\n                        <button pButton type=\"button\" (click)=\"showDialogToAddFilm()\" matTooltip=\"Dodanie nowej okleiny\"\n                            matTooltipClass=\"tooltip-green\" icon=\"pi pi-plus\"\n                            class=\"p-button-raised p-button-sm p-button-secondary\"></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-3 col-md-6 col-sm-6\">\n        <div class=\"card card-stats\">\n            <div class=\"card-body \">\n                <div class=\"row\">\n                    <div class=\"col-5 col-md-4\">\n                        <div class=\"text-center\">\n                            <mat-icon class=\"icon-big\">supervisor_account</mat-icon>\n                        </div>\n                    </div>\n                    <div class=\"col-7 col-md-8\">\n                        <div class=\"numbers\">\n                            <p class=\"card-category\">Producenci</p>\n                            <p class=\"card-title\">{{producerCount}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer \">\n                <hr>\n                <div class=\"stats-bar\">\n                    <div class=\"stats\">\n                        <mat-icon class=\"fo-small-icon\">calculate</mat-icon><span class=\"fo-text\">Ilość</span>\n                    </div>\n                    <div class=\"stats-bar-button\">\n                        <button pButton type=\"button\" (click)=\"showDialogToAddProducer()\"\n                            matTooltip=\"Dodanie nowego producenta\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-plus\"\n                            class=\"p-button-raised p-button-sm p-button-secondary\"></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Okleiny\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n\n                <p-table #okl [value]=\"film\" [loading]=\"loading\" dataKey=\"id\" editMode=\"row\" sortMode=\"multiple\"\n                    [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                    currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\" [autoLayout]=\"true\"\n                    [globalFilterFields]=\"['number','name','producer.producerName','ralNumber','ecoPlastNumber']\"\n                    [rowHover]=\"true\">\n\n                    <ng-template pTemplate=\"caption\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <span>Lista Oklein</span>\n                            </div>\n                            <div class=\"col\" style=\"text-align: end;\">\n                                <input pInputText type=\"text\"\n                                    (input)=\"okl.filterGlobal($event.target.value, 'contains')\"\n                                    placeholder=\"Wyszukiwarka\" />\n                            </div>\n                        </div>\n                    </ng-template>\n                    <ng-template pTemplate=\"header\">\n                        <tr>\n                            <th pSortableColumn=\"number\">Numer<p-sortIcon field=\"number\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"name\">Name <p-sortIcon field=\"name\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"producer\">Producent<p-sortIcon field=\"producer\"></p-sortIcon>\n                            </th>\n                            <th>Link Obraz\n                            </th>\n                            <th pSortableColumn=\"ralNumber\">Odp. RAL<p-sortIcon field=\"ralNumber\"></p-sortIcon>\n                            </th>\n                            <th pSortableColumn=\"ecoPlastNumber\">Numer odp. EcoPlast<p-sortIcon field=\"ecoPlastNumber\">\n                                </p-sortIcon>\n                            </th>\n                            <th>Dopłata %</th>\n                            <th pSortableColumn=\"status\">Status<p-sortIcon field=\"status\"></p-sortIcon>\n                            </th>\n                            <th style=\"width:8em\"></th>\n                        </tr>\n                    </ng-template>\n                    <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                        <tr [pEditableRow]=\"rowData\" class=\"ui-selectable-row\">\n                            <td>\n                                {{rowData.number}}\n                            </td>\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\" [(ngModel)]=\"rowData.name\"\n                                            required>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.name}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <p-dropdown class=\"\" id=\"producer\" [options]=\"filmService.producersSelect\"\n                                            [filter]=\"true\" filterBy=\"producerName,value.producerName\"\n                                            [(ngModel)]=\"rowData.producer\" required></p-dropdown>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.producer.producerName}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td class=\"text-center\">\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\" [(ngModel)]=\"rowData.imgLink\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        <img src=\"{{rowData.imgLink}}\" width=\"40\"\n                                            (click)=\"showDialogFilm(rowData.imgLink)\">\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.ralNumber\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.ralNumber}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.ecoPlastNumber\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.ecoPlastNumber}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.surchargePercentage\">\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n                                        {{rowData.surchargePercentage}}\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n\n                            <td>\n                                <p-cellEditor>\n                                    <ng-template pTemplate=\"input\">\n                                        <p-dropdown class=\"inline-edit\" [options]=\"available\"\n                                            [(ngModel)]=\"rowData.status\" [style]=\"{'width':'100%'}\"></p-dropdown>\n                                    </ng-template>\n                                    <ng-template pTemplate=\"output\">\n\n                                        <div [ngSwitch]=\"rowData.status\" class=\"text-center\">\n                                            <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-film status-dost\">DOST.</div>\n                                            <div *ngSwitchCase=\"'NIEDOSTEPNA'\" class=\"status-film status-niedost\">NIEDOST.</div>\n                                            <div *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\" class=\"status-film status-ogr\">OGRAN.</div>\n                                        </div>\n\n                                    </ng-template>\n                                </p-cellEditor>\n                            </td>\n\n                            <td style=\"text-align:center\">\n                                <button appPermission permission=\"filmWrite\" pButton pInitEditableRow type=\"button\"\n                                    (click)=\"onRowEditInit(rowData)\" matTooltip=\"Edycja Okleiny\"\n                                    matTooltipClass=\"tooltip-green\" *ngIf=\"!editing && !err\" icon=\"pi pi-pencil\"\n                                    class=\"p-button-raised p-button-sm\"></button>\n\n                                <button appPermission permission=\"filmDelete\" pButton type=\"button\"\n                                    (click)=\"onRowDeleteFilm(rowData)\" matTooltip=\"Usuwanie\"\n                                    matTooltipClass=\"tooltip-red\" *ngIf=\"!editing && !err\"\n                                    icon=\"pi pi-trash\"\n                                    class=\"p-button-raised p-button-sm ml-1 p-button-danger\"></button>\n\n                                <button pButton pSaveEditableRow type=\"button\" (click)=\"onRowEditSave(rowData)\"\n                                    matTooltip=\"Zapisz Okleine\" matTooltipClass=\"tooltip-green\" *ngIf=\"editing\"\n                                    icon=\"pi pi-check\" class=\"p-button-raised p-button-sm p-button-success\"></button>\n\n                                <button pButton pCancelEditableRow type=\"button\" (click)=\"onRowEditCancel(rowData, ri)\"\n                                    matTooltip=\"Anuluj\" matTooltipClass=\"tooltip-red\" *ngIf=\"editing\" icon=\"pi pi-times\"\n                                    class=\"p-button-raised p-button-sm ml-1 p-button-warning\"></button>\n                            </td>\n                        </tr>\n                    </ng-template>\n\n                    <ng-template pTemplate=\"emptymessage\">\n                        <tr>\n                            <td colspan=\"8\" style=\"text-align:left\">Brak danych.</td>\n                        </tr>\n                    </ng-template>\n\n                </p-table>\n\n            </div>\n        </div>\n    </p-tabPanel>\n\n    <p-tabPanel header=\"Producenci\">\n\n        <ng-template pTemplate=\"content\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n\n                    <p-table #pr [value]=\"filmService.producers\" dataKey=\"id\" editMode=\"row\" [paginator]=\"true\"\n                        [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\" [showCurrentPageReport]=\"true\"\n                        currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n                        [globalFilterFields]=\"['producerName']\">\n\n                        <ng-template pTemplate=\"caption\">\n                            <div class=\"row\">\n                                <div class=\"col\">\n                                    <span>Producenci</span>\n                                </div>\n                                <div class=\"col\" style=\"text-align: end;\">\n                                    <input pInputText type=\"text\"\n                                        (input)=\"pr.filterGlobal($event.target.value, 'contains')\"\n                                        placeholder=\"Wyszukiwarka\" />\n                                </div>\n                            </div>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"header\">\n                            <tr>\n                                <th style=\"width: 40px;\">ID</th>\n                                <th pSortableColumn=\"producerName\">Nazwa Producenta<p-sortIcon field=\"producerName\">\n                                    </p-sortIcon>\n                                </th>\n                                <th style=\"width:8em\"></th>\n                            </tr>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                            <tr [pEditableRow]=\"rowData\">\n                                <td>\n                                    {{rowData.id}}\n                                </td>\n                                <td>\n                                    <p-cellEditor>\n                                        <ng-template pTemplate=\"input\">\n                                            <input class=\"inline-edit\" pInputText type=\"text\"\n                                                [(ngModel)]=\"rowData.producerName\" required>\n                                        </ng-template>\n                                        <ng-template pTemplate=\"output\">\n                                            {{rowData.producerName}}\n                                        </ng-template>\n                                    </p-cellEditor>\n                                </td>\n                                <td style=\"text-align:center\">\n                                    <button appPermission permission=\"producerWrite\" pButton pInitEditableRow\n                                        type=\"button\" (click)=\"onRowEditInitProducer(rowData)\"\n                                        matTooltip=\"Edycja Producenta\" matTooltipClass=\"tooltip-green\"\n                                        *ngIf=\"!editing && !err\" icon=\"pi pi-pencil\"\n                                        class=\"p-button-raised p-button-sm\"></button>\n\n                                    <button appPermission permission=\"producerDelete\" pButton type=\"button\"\n                                        (click)=\"onRowDeleteProducer(rowData)\" matTooltip=\"Usuwanie\"\n                                        matTooltipClass=\"tooltip-red\" *ngIf=\"!editing && !err\"\n                                        icon=\"pi pi-trash\"\n                                        class=\"p-button-raised p-button-sm ml-1 p-button-danger\"></button>\n\n                                    <button pButton pSaveEditableRow type=\"button\" (click)=\"onRowEditProducer(rowData)\"\n                                        matTooltip=\"Zapisz Producenta\" matTooltipClass=\"tooltip-green\" *ngIf=\"editing\"\n                                        icon=\"pi pi-check\"\n                                        class=\"p-button-raised p-button-sm p-button-success\"></button>\n\n                                    <button pButton pCancelEditableRow type=\"button\"\n                                        (click)=\"onRowEditCancelProducer(rowData, ri)\" matTooltip=\"Anuluj\"\n                                        matTooltipClass=\"tooltip-red\" *ngIf=\"editing\" icon=\"pi pi-times\"\n                                        class=\"p-button-raised p-button-sm ml-1 p-button-warning\"></button>\n                                </td>\n                            </tr>\n                        </ng-template>\n\n                        <ng-template pTemplate=\"emptymessage\">\n                            <tr>\n                                <td colspan=\"3\" style=\"text-align:left\">Brak danych.</td>\n                            </tr>\n                        </ng-template>\n\n                    </p-table>\n\n                </div>\n            </div>\n        </ng-template>\n    </p-tabPanel>\n</p-tabView>\n\n<p-dialog header=\"Okleina\" [(visible)]=\"displayDialogOkleina\" [minY]=\"70\" showEffect=\"fade\" [modal]=\"true\"\n    [style]=\"{width: '500px'}\" (onAfterHide)=\"onDialogHide()\" [contentStyle]=\"{padding: '2em', textAlign: 'center'}\">\n    <div *ngIf=\"selectedOkleina\">\n        <img width=\"400px\" src=\"{{selectedOkleina}}\">\n    </div>\n</p-dialog>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FilmsService, Okleina, OkleinaEnum, Producent } from '../film-service/films.service';\nimport { SelectItem } from 'primeng/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-film-add-form',\n  templateUrl: './film-add-form.component.html',\n  styleUrls: ['./film-add-form.component.scss']\n})\nexport class FilmAddFormComponent implements OnInit {\n\n  formFilm: FormGroup;\n\n  available: SelectItem[] = [\n    { label: 'Dostępna', value: OkleinaEnum.DOSTEPNA },\n    { label: 'Niedostępna', value: OkleinaEnum.NIEDOSTEPNA },\n    { label: 'Dost. Ograniczona', value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n  ];\n  selectedFilm: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<FilmAddFormComponent>,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formFilm = new FormGroup({\n      number: new FormControl('', { validators: [Validators.required] ,asyncValidators: [AppValidators.filmExists], updateOn: 'blur'}),\n      name: new FormControl('', { validators: [Validators.required] }),\n      producer: new FormControl('', { validators: [Validators.required] }),\n      imgLink: new FormControl(''),\n      status: new FormControl(this.available[0], { validators: [Validators.required] }),\n      ralNumber: new FormControl(''),\n      ecoPlastNumber: new FormControl('')\n    });\n  }\n\n  selectFilm(event: Event) {\n    this.selectedFilm = (event.target as HTMLSelectElement).value;\n  }\n\n  exit(): void {\n    this.dialogRef.close();\n  }\n\n  addNewFilm() {\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    this.filmService.addOklina(this.formFilm.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"okleiny\");\n          this.exit();\n        },\n        error: (err) => {\n         this.infoPopup.showErrorAdd(\"okleiny\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"sb-dialog-titlebar\">\n    <span class=\"\">Nowa Okleina</span>\n</div>\n<div class=\"sb-dialog-content\">\n\n    <form class=\"m-4\" [formGroup]=\"formFilm\">\n\n        <div class=\"form-group row\" style=\"margin-bottom: 30px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"producer\">Producent *</label>\n                <p-dropdown id=\"producer\" [style]=\"{'width':'100%'}\" [options]=\"filmService.producersSelect\"\n                    [filter]=\"true\" filterBy=\"producerName,value.producerName\" [formControl]=\"formFilm.get('producer')\" placeholder=\"wybierz producenta\"\n                    required></p-dropdown>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('producer').hasError('required') && formFilm.get('producer').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\" style=\"margin-bottom: 30px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"number\">Numer *</label>\n                <input [formControl]=\"formFilm.get('number')\" autofocus type=\"text\" id=\"number\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Numer Okleiny\" required autocomplete=\"off\" autofocus>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('required') && formFilm.get('number').touched\">\n                    musi być wypełnione\n                </p>\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('number').hasError('filmExists') && formFilm.get('number').touched\">\n                    ten numer znajduje się na liście\n                </p>\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"name\">Nazwa *</label>\n                <input [formControl]=\"formFilm.get('name')\" type=\"text\" id=\"name\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Nazwa Okleiny\" required autocomplete=\"off\">\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formFilm.get('name').hasError('required') && formFilm.get('name').touched\">\n                    musi być wypełnione\n                </p>\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\" style=\"margin-bottom: 30px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"ralNumber\">Odp. RAL</label>\n                <input [formControl]=\"formFilm.get('ralNumber')\" type=\"text\" id=\"ralNumber\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Odpowiednik RAL\" autocomplete=\"off\">\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"ecoPlastNumber\">Nr. EcoPlast</label>\n                <input [formControl]=\"formFilm.get('ecoPlastNumber')\" type=\"text\" id=\"ecoPlastNumber\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\"\n                    placeholder=\"Odpowiednik EcoPlast\" autocomplete=\"off\">\n            </div>\n        </div>\n\n\n        <div class=\"form-group row\" style=\"margin-bottom: 30px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"surchargePercentage\">Dopłata %</label>\n                <input [formControl]=\"formFilm.get('surchargePercentage')\" type=\"text\" id=\"surchargePercentage\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"%\"\n                    autocomplete=\"off\">\n            </div>\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"status\">Status *</label>\n                <p-dropdown inputId=\"status\" [style]=\"{'width':'100%'}\" [options]=\"available\"\n                    [formControl]=\"formFilm.get('status')\" placeholder=\"Wybierz\" optionLabel=\"label\" required>\n                </p-dropdown>\n            </div>\n        </div>\n\n        <div class=\"form-group row\" style=\"margin-bottom: 30px;\">\n            <div class=\"col\">\n                <label class=\"sb-small-label\" for=\"imgLink\">Obraz</label>\n                <input [formControl]=\"formFilm.get('imgLink')\" type=\"text\" id=\"imgLink\"\n                    class=\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\" placeholder=\"Link Obraz\"\n                    autocomplete=\"off\">\n            </div>\n        </div>\n    </form>\n</div>\n\n<div class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\">\n\n    <button pButton pRipple type=\"button\" (click)=\"exit()\" matTooltip=\"Anulowanie dodawania\" label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\" icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"></button>\n\n    <button [disabled]=\"formFilm.invalid\" pButton pRipple type=\"button\" (click)=\"addNewFilm()\"\n        matTooltip=\"Dodaj okleinę\" label=\"Zapisz\" matTooltipClass=\"tooltip-green\" icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"></button>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FilmMainComponent } from './film-main/film-main.component';\nimport { FilmsRoutingModule } from './films-routing.module';\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FilmAddFormComponent } from './film-add-form/film-add-form.component';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ProducerAddFormComponent } from './producer-add-form/producer-add-form.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\n\n@NgModule({\n  declarations: [FilmMainComponent, FilmAddFormComponent, ProducerAddFormComponent],\n  imports: [\n    CommonModule,\n    FilmsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule\n  ],\n  providers: [],\n  entryComponents:[FilmAddFormComponent,ProducerAddFormComponent]\n})\nexport class FilmsModule { }\n"]}