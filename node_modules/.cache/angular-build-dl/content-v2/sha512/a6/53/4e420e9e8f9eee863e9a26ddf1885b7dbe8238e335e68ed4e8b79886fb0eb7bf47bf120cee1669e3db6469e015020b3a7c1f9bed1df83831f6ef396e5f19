{"version":3,"sources":["./src/app/catalog/catalog.module.ts","./src/app/catalog/form/system-add-form/system-add-form.component.ts","./src/app/catalog/form/system-add-form/system-add-form.component.html","./src/app/catalog/catalog-routing.module.ts","./src/app/catalog/form/catalog-add-form/catalog-add-form.component.ts","./src/app/catalog/form/catalog-add-form/catalog-add-form.component.html","./src/app/catalog/catalog-main/catalog-main.component.ts","./src/app/catalog/catalog-main/catalog-main.component.html"],"names":[],"mappings":"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","file":"catalog-catalog-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CatalogMainComponent } from './catalog-main/catalog-main.component';\nimport { CatalogAddFormComponent } from './form/catalog-add-form/catalog-add-form.component';\nimport { SystemAddFormComponent } from './form/system-add-form/system-add-form.component';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { TabViewModule } from 'primeng/tabview';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MatIconModule } from '@angular/material/icon';\nimport { CatalogRoutingModule } from './catalog-routing.module';\nimport {InputTextareaModule} from 'primeng/inputtextarea';\nimport {AutoCompleteModule} from 'primeng/autocomplete';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { EditorModule } from 'primeng/editor';\nimport {TooltipModule} from 'primeng/tooltip';\n@NgModule({\n  declarations: [CatalogMainComponent, CatalogAddFormComponent, SystemAddFormComponent],\n  imports: [\n    CommonModule,\n    CatalogRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    DialogModule,\n    TabViewModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    InputTextareaModule,\n    AutoCompleteModule,\n    MatDialogModule,\n    CheckboxModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    EditorModule,\n    ProgressSpinnerModule,\n    TooltipModule\n  ],\n  providers: [DialogService],\n  entryComponents:[SystemAddFormComponent,CatalogAddFormComponent]\n})\nexport class CatalogModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CatalogService, KatalogSystem } from '../../catalog-service/catalog.service';\n\n@Component({\n  selector: 'app-system-add-form',\n  templateUrl: './system-add-form.component.html',\n  styleUrls: ['./system-add-form.component.scss']\n})\nexport class SystemAddFormComponent implements OnInit {\n\n  formSystem: FormGroup;\n  loading = false;\n  systemData: KatalogSystem;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    private catalogService: CatalogService,\n    private infoPopup: InfoPopupComponent,\n    public config: DynamicDialogConfig,\n  ) {\n    this.systemData = config.data;\n  }\n\n  ngOnInit() {\n    if (this.systemData) {\n      this.formSystem = new FormGroup({\n        name: new FormControl('', { validators: [Validators.required] }),\n        comment: new FormControl(''),\n      })\n      this.formSystem.patchValue(this.systemData);\n    } else {\n      this.formSystem = new FormGroup({\n        name: new FormControl('', { validators: [Validators.required], asyncValidators: [AppValidators.systemExists], updateOn: 'blur' }),\n        comment: new FormControl(''),\n      })\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewSystem() {\n    this.loading = true;\n    this.catalogService.addSystem(this.formSystem.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"systemu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"systemu\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      })\n  }\n\n  updateSystem() {\n    this.loading = true;\n    this.catalogService.updateSystem(this.systemData.id,this.formSystem.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"systemu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"systemu\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      })\n  }\n}\n","<div class=\"sb-dialog-content\">\n\n    <form [formGroup]=\"formSystem\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"systemNameId\">Nazwa systemu *</label>\n                <input pInputText id=\"systemNameId\" style=\"width: 100%;\" [formControl]=\"formSystem.get('name')\" type=\"text\" required>\n                \n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formSystem.get('name').hasError('required') && formSystem.get('name').touched\">\n                    musi być wypełnione\n                </p>\n\n                <p class=\"invalid-feedback\"\n                    *ngIf=\"formSystem.get('name').hasError('systemExists') && formSystem.get('name').touched\">\n                    taki system już istnieje\n                </p>\n\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n                <p-editor [formControl]=\"formSystem.get('comment')\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n            </div>\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n\n        <button *ngIf=\"!systemData\" [disabled]=\"formSystem.invalid || loading\" pButton pRipple type=\"button\" (click)=\"addNewSystem()\"\n            pTooltip=\"Dodaj nowy system\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"systemData\" [disabled]=\"formSystem.invalid || loading\" pButton pRipple type=\"button\" (click)=\"updateSystem()\"\n            pTooltip=\"Aktualizacja systemu\" label=\"Zapisz\" icon=\"pi pi-check\" class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatalogMainComponent } from './catalog-main/catalog-main.component';\n\nconst routes: Routes = [\n\n  { path: '', component: CatalogMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CatalogRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SelectItem } from 'primeng/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { DynamicDialogConfig, DynamicDialogRef } from 'primeng/dynamicdialog';\nimport { CatalogService, KatalogProfili, KatalogSystem } from '../../catalog-service/catalog.service';\n\n@Component({\n  selector: 'app-catalog-add-form',\n  templateUrl: './catalog-add-form.component.html',\n  styleUrls: ['./catalog-add-form.component.scss']\n})\nexport class CatalogAddFormComponent implements OnInit {\n\n  formCatalog: FormGroup;\n  systems: SelectItem[];\n  filteredSystems: any[];\n  loading=false;\n  catalogData: KatalogProfili\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private catalogService: CatalogService, \n    private infoPopup: InfoPopupComponent,\n    ) {\n      this.catalogData = config.data;\n     }\n\n  ngOnInit() {\n    this.filteredSystems = this.catalogService.systems;\n    this.formCatalog = new FormGroup({\n      number: new FormControl('', { validators: [Validators.required]}),\n      profileType: new FormControl('', { validators: [Validators.required] }),\n      systemProfil: new FormControl('', { validators: [Validators.required]}),\n      offerName: new FormControl(''),\n      dimOuter: new FormControl(''),\n      dimInner: new FormControl(''),\n      dimOneSide: new FormControl(''),\n      dimCenterSide: new FormControl(''),\n      dimTwoSide: new FormControl(''),\n      dimTwoSideInner: new FormControl(''),\n      dimTwoSideOuter: new FormControl(''),\n      actualMeasurement: new FormControl(false),\n      hard: new FormControl(false),\n      alu: new FormControl(false),\n      comments: new FormControl('')\n    });\n\n    if(this.catalogData){\n      this.formCatalog.patchValue(this.catalogData);\n      console.log(this.catalogData);\n    }\n  }\n\n  filterSystems(event) {\n    this.filteredSystems = [];\n    for (let i = 0; i < this.catalogService.systems.length; i++) {\n      let sys = this.catalogService.systems[i];\n      if (sys.name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.filteredSystems.push(sys);\n      }\n    }\n  }\n\n  exit(id){\n    this.ref.close(id);\n  }\n\n  addNewCatalog() {\n    this.loading=true;\n    if(this.isString(this.formCatalog.value.systemProfil)){\n      let tmpSys: KatalogSystem = {id: null, name: this.formCatalog.value.systemProfil}\n      this.formCatalog.value.systemProfil = tmpSys;\n    }\n    this.catalogService.addCatalog(this.formCatalog.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"katalogu\");\n          this.loading=false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"katalogu\");\n          this.loading=false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateCatalog() {\n    this.loading=true;\n    this.catalogService.updateCatalog(this.catalogData.id,this.formCatalog.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"katalogu\");\n          this.loading=false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"katalogu\");\n          this.loading=false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  isString (value) {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n}\n\n","<div class=\"sb-dialog-content\">\n\n    <form [formGroup]=\"formCatalog\" class=\"sb-form\">\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n                        <span><b>RODZAJ</b></span>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"systemProfil\">System</label>\n\n                        <p-autoComplete [style]=\"{'width':'100%'}\" [minLength]=\"1\"\n                            [formControl]=\"formCatalog.get('systemProfil')\" [suggestions]=\"filteredSystems\"\n                            (completeMethod)=\"filterSystems($event)\" [dropdown]=\"true\" placeholder=\"Wybierz system\"\n                            field=\"name\">\n                            <ng-template let-systemProfil pTemplate=\"item\">\n                                <div class=\"catalog-dropdown-system\">\n                                    <div class=\"row\">\n                                        <div class=\"col\">\n                                            {{systemProfil.name}}\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </p-autoComplete>\n\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('systemProfil').hasError('required') && formCatalog.get('systemProfil').touched\">\n                            musi być wypełnione\n                        </p>\n\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"number\">Numer*</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('number')\" type=\"text\" id=\"number\"\n                          required autofocus autocomplete=\"off\">\n                       \n                            <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('number').hasError('required') && formCatalog.get('number').touched\">\n                            musi być wypełnione\n                        </p>\n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('number').hasError('catalogExists') && formCatalog.get('number').touched\">\n                            ten numer znajduje się w katalogu\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"profileType\">Rodzaj Ksztaltownika*</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('profileType')\" type=\"text\" id=\"profileType\" required>\n                        \n                        <p class=\"invalid-feedback\"\n                            *ngIf=\"formCatalog.get('profileType').hasError('required') && formCatalog.get('profileType').touched\">\n                            musi być wypełnione\n                        </p>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                        <label class=\"sb-small-label\" for=\"offerName\">Nazwa na ofercie</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('offerName')\" type=\"text\" id=\"offerName\">\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('hard')\" [binary]=\"true\" label=\"Trudny\"></p-checkbox>\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('alu')\" [binary]=\"true\" label=\"Profil aluminiowy\">\n                        </p-checkbox>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class=\"col-g-12 col-md-6 col-lg-6\">\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n                        <span><b>WYMIARY</b></span>\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimOuter\">Zewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimOuter')\" type=\"number\" id=\"dimOuter\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimInner\">Wewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimInner')\" type=\"number\" id=\"dimInner\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimOneSide\">Jednostronny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimOneSide')\" type=\"number\" id=\"dimOneSide\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSide\">Obustronny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSide')\" type=\"number\" id=\"dimTwoSide\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-12 col-lg-12\">\n                        <label class=\"sb-small-label\" for=\"dimCenterSide\">Środek</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimCenterSide')\" type=\"number\" id=\"dimCenterSide\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSideOuter\">Obu. Zewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSideOuter')\" type=\"number\" id=\"dimTwoSideOuter\" autocomplete=\"off\">\n                    </div>\n                    <div class=\"col-g-12 col-md-6 col-lg-6\">\n                        <label class=\"sb-small-label\" for=\"dimTwoSideInner\">Obu. Wewnetrzny</label>\n                        <input pInputText class=\"fullwidth\" [formControl]=\"formCatalog.get('dimTwoSideInner')\" type=\"number\" id=\"dimTwoSideInner\" autocomplete=\"off\">\n                    </div>\n                </div>\n\n                <div class=\"row pt-1\">\n                    <div style=\"padding-left: 15px;\">\n                        <p-checkbox [formControl]=\"formCatalog.get('actualMeasurement')\" [binary]=\"true\"\n                            label=\"Pomiar rzeczywisty (zweryfikowany)\"></p-checkbox>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <hr>\n\n        <div class=\"row\">\n            <div class=\"col-g-12 col-md-12 col-lg-12\">\n\n                <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n                <p-editor [formControl]=\"formCatalog.get('comments')\" [style]=\"{'height':'150px'}\">\n                    <p-header>\n                        <span class=\"ql-formats\">\n                            <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n                            <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n                            <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n                            <button class=\"ql-list\" value=\"ordered\" aria-label=\"Lista uporządkowana\"></button>\n                            <button class=\"ql-list\" value=\"bullet\" aria-label=\"Lista nieuporządkowana\"></button>\n                            <select class=\"ql-align\">\n                                <option selected></option>\n                                <option value=\"center\"></option>\n                                <option value=\"right\"></option>\n                                <option value=\"justify\"></option>\n                            </select>\n                            <button class=\"ql-code-block\" aria-label=\"Insert Code Block\"></button>\n                        </span>\n                    </p-header>\n                </p-editor>\n            </div>\n\n        </div>\n\n    </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!catalogData\" [disabled]=\"formCatalog.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewCatalog()\" pTooltip=\"Dodaj nowy katalog\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"catalogData\" [disabled]=\"formCatalog.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateCatalog()\" pTooltip=\"Aktualizacja katalogu\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CatalogService, KatalogProfili, KatalogSystem } from '../catalog-service/catalog.service';\nimport { SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ThemePalette } from '@angular/material/core';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { CatalogAddFormComponent } from '../form/catalog-add-form/catalog-add-form.component';\nimport { SystemAddFormComponent } from '../form/system-add-form/system-add-form.component';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'app-catalog-main',\n  templateUrl: './catalog-main.component.html',\n  styleUrls: ['./catalog-main.component.scss'],\n  animations: [\n    trigger('rowExpansionTrigger', [\n      state('void', style({\n        transform: 'translateX(-10%)',\n        opacity: 0\n      })),\n      state('active', style({\n        transform: 'translateX(0)',\n        opacity: 1\n      })),\n      transition('* <=> *', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ])\n  ]\n})\nexport class CatalogMainComponent implements OnInit {\n  color: ThemePalette = 'primary';\n  catalog: KatalogProfili[] = [];\n  system: KatalogSystem[] = [];\n  loadingCatalog = false;\n\n  onErrSystem: KatalogSystem = {\n    id: 0,\n    name: \"---\"\n  }\n  catalogCount: number;\n  systemCount: number;\n  onErr: KatalogProfili =\n    {\n      id: 0,\n      systemProfil: this.onErrSystem,\n      number: \"---\",\n      dimOuter: \"---\",\n      dimInner: \"---\",\n      dimOneSide: \"---\",\n      dimTwoSide: \"---\",\n      dimTwoSideInner: \"---\",\n      dimTwoSideOuter: \"---\",\n      actualMeasurement: false,\n      hard: false,\n      profileType: \"---\",\n      comments: \"---\"\n    };\n\n  err: boolean;\n  newCatalog: boolean;\n  available: SelectItem[];\n  clonedCatalogs: { [s: string]: KatalogProfili; } = {};\n  clonedSystem: { [s: string]: KatalogSystem; } = {};\n\n  constructor(\n    public dialogService: DialogService,\n    public catalogService: CatalogService, \n    private infoPopup: InfoPopupComponent, \n    public auth: AuthService, \n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData() {\n    this.loadingCatalog = true;\n    this.catalogService.loadSystems();\n\n    this.catalogService.getCatalogs().subscribe(\n      {\n        next: (res) => {\n          this.catalog = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"katalogu\")\n          this.err = true;\n          this.catalog.push(this.onErr);\n        },\n        complete: () => {\n          this.loadingCatalog = false;\n        }\n      }\n    )\n\n    this.catalogService.getCountCatalog().subscribe({\n      next: (res) => {\n        this.catalogCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"katalogu\")\n      },\n      complete: () => {\n      }\n    })\n\n    this.catalogService.getCountSystem().subscribe({\n      next: (res) => {\n        this.systemCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"systemów\")\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  loadSelectedSystem(kat) {\n    this.catalog = [];\n    this.loadingCatalog = true;\n    if (kat == -1) {\n      this.catalogService.getCatalogs().subscribe(\n        {\n          next: (res) => {\n            this.catalog = res;\n            this.err = false;\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDownload(\"katalogu\")\n            this.err = true;\n            this.catalog.push(this.onErr);\n          },\n          complete: () => {\n            this.loadingCatalog = false;\n          }\n        }\n      )\n    } else {\n      this.catalogService.getCatalogsBySystem(kat.id).subscribe(\n        {\n          next: (res) => {\n            this.catalog = res;\n            this.err = false;\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDownload(\"katalogu\")\n            this.err = true;\n            this.catalog.push(this.onErr);\n          },\n          complete: () => {\n            this.loadingCatalog = false;\n          }\n        }\n      )\n    }\n  }\n\n\n  // onRowEditInit(catalog: KatalogProfili) {\n  //   this.clonedCatalogs[catalog.id] = { ...catalog };\n  // }\n\n  // onRowEditSave(catalog: KatalogProfili) {\n  //   this.catalogService.updateCatalog(catalog.id, catalog).subscribe(\n  //     {\n  //       next: (res) => {\n  //         this.infoPopup.showSuccessUpdate(\"katalogu\");\n  //       },\n  //       error: (err) => {\n  //         this.infoPopup.showErrorUpdate(\"katalogu\");\n  //       },\n  //       complete: () => {\n  //         delete this.clonedCatalogs[catalog.id];\n  //       }\n  //     }\n  //   )\n  // }\n\n  onRowDeleteCatalog(katalog: KatalogProfili) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ katalog.number + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.catalogService.deleteCatalog(katalog.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"katalogu\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"katalogu\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  showBoolean(val){\n    if(val){\n      return \"TAK\"\n    }else{\n      return \"\"\n    }\n  }\n\n  // onRowEditCancel(catalog: KatalogProfili, index: number) {\n  //   this.catalog[index] = this.clonedCatalogs[catalog.id];\n  //   delete this.clonedCatalogs[catalog.id];\n  // }\n\n  //============== SYSTEMS ==================\n\n  // onRowEditSystem(system: KatalogSystem) {\n  //   this.clonedSystem[system.id] = { ...system };\n  // }\n\n  // onRowEditSaveSystem(system: KatalogSystem) {\n  //   this.catalogService.updateSystem(system.id, system).subscribe(\n  //     {\n  //       next: (res) => {\n  //         this.infoPopup.showSuccessUpdate(\"systemu\");\n  //       },\n  //       error: (err) => {\n  //         this.infoPopup.showErrorUpdate(\"systemu\");\n  //       },\n  //       complete: () => {\n  //         delete this.clonedSystem[system.id];\n  //       }\n  //     }\n  //   )\n  // }\n\n  onRowDeleteSystem(system: KatalogSystem) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ system.name +'?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.catalogService.deleteSystem(system.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"systemu\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"systemu\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n            \n          }\n        )\n      }\n    });\n  }\n\n  // onRowEditCancelSystem(system: KatalogSystem, index: number) {\n  //   this.system[index] = this.clonedSystem[system.id];\n  //   delete this.clonedSystem[system.id];\n  // }\n\n\n  // DIALOGS\n\n  showDialogToAddCatalog() {\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: 'Nowa pozycja katalogu',\n      width: '800px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog catalog add was closed');\n    });\n  }\n\n  showDialogToUpdateCatalog(rowData){\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: 'Aktualizacja pozycji katalogu',\n      data: rowData,\n      width: '800px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog catalog add was closed');\n    });\n  }\n\n  showDialogToAddSystem() {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: 'Nowy system',\n      width: '450px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog system add was closed');\n    });\n  }\n\n  showDialogToUpdateSystem(rowData) {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: 'Aktualizacja systemu - '+ rowData.name,\n      data: rowData,\n      width: '450px'\n    });\n\n    ref.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog system update was closed');\n    });\n  }\n\n\n}\n","<div class=\"row\">\n    \n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-folder\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Pozycje</p>\n                                <p class=\"card-title\">{{catalogCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddCatalog()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-tags\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Systemy</p>\n                                <p class=\"card-title\">{{systemCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddSystem()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<p-tabView>\n    <p-tabPanel header=\"Katalog Profili\">\n\n        <p-table #kp styleClass=\"p-datatable-striped\" selectionMode=\"single\" [value]=\"catalog\" dataKey=\"id\"\n            editMode=\"row\" [loading]=\"loadingCatalog\" [paginator]=\"true\" [rows]=\"10\"\n            [rowsPerPageOptions]=\"[10,20,50,100]\" [showCurrentPageReport]=\"true\"\n            currentPageReportTemplate=\"{first} do {last} z {totalRecords}\" [filterDelay]=\"0\"\n            [globalFilterFields]=\"['number','profileType','systemProfil.name','offerName']\" [rowHover]=\"true\"\n            sortField=\"systemProfil.name\" sortOrder=\"1\">\n\n            <ng-template pTemplate=\"caption\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <span>Katalog Profili</span></div>\n                    <div class=\"col\" style=\"text-align: end;\">\n                        <p-dropdown #ss (onChange)=\"loadSelectedSystem(ss.selectedOption.value)\"\n                            [options]=\"catalogService.systemsSelectTable\" [filter]=\"true\" filterBy=\"name,value.name\"\n                            placeholder=\"Wybierz system\">\n                        </p-dropdown>\n                        <input type=\"text\" class=\"p-inputtext-lg\"\n                            (input)=\"kp.filterGlobal($event.target.value, 'contains')\" class=\"ml-2 p-inputtext\"\n                            placeholder=\"Wyszukiwarka\" pInputText />\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr class=\"ct-head\">\n                    <th style=\"width: 180px;\" pSortableColumn=\"number\">\n                        <div>Numer<p-sortIcon field=\"number\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"profileType\">\n                        <div>Rodzaj Kształtownika<p-sortIcon field=\"profileType\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"offerName\">\n                        <div>Na Ofercie<p-sortIcon field=\"offerName\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 180px;\" pSortableColumn=\"systemProfil.name\">\n                        <div>System<p-sortIcon field=\"systemProfil.name\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Zewnętrzny\">\n                        <div>Zew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Wewnętrzny\">\n                        <div>Wew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Jednostronny\">\n                        <div>Jedno.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Środek\">\n                        <div>Środek</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obustronny\">\n                        <div>Obu.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obu. Zewnętrzny\">\n                        <div>Obu. Zew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Obu. Wewnętrzny\">\n                        <div>Obu. Wew.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Pomiar rzeczywisty (zweryfikowany)\">\n                        <div>Rzeczy.</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Trudne\">\n                        <div>Trudne</div>\n                    </th>\n                    <th style=\"width: 60px;\" pTooltip=\"Aluminium\">\n                        <div>Alu</div>\n                    </th>\n                    <th style=\"width: 60px;\">\n                        <div>Uwagi</div>\n                    </th>\n                    <th style=\"min-width: 80px; width: 80px;\"></th>\n                </tr>\n                <tr>\n                    <th>\n                        <input pInputText type=\"text\" (input)=\"kp.filter($event.target.value, 'number', 'startsWith')\"\n                            placeholder=\"Szukaj po numerze\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'profileType', 'startsWith')\"\n                            placeholder=\"Szukaj po rodzaju\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'offerName', 'startsWith')\"\n                            placeholder=\"Szukaj po nazwie\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                        <input pInputText type=\"text\"\n                            (input)=\"kp.filter($event.target.value, 'systemProfil.name', 'startsWith')\"\n                            placeholder=\"Szukaj po systemie\" class=\"p-inputtext-sm w-100\">\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                    <th>\n                    </th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-expanded=\"expanded\" let-ri=\"rowIndex\">\n                <tr [pEditableRow]=\"rowData\" class=\"ct-body\" [pSelectableRow]=\"rowData\">\n                    <td>\n                        {{rowData.number}}\n                    </td>\n                    <td>\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <!-- <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.profileType\" required> -->\n\n                                <textarea [style]=\"{'width':'100%'}\" pInputTextarea [(ngModel)]=\"rowData.profileType\"\n                                    placeholder=\"Uwagi\" required></textarea>\n\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.profileType}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n                    <td>\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <!-- <input class=\"inline-edit\" pInputText type=\"text\"\n                                            [(ngModel)]=\"rowData.offerName\" required> -->\n\n                                <textarea [style]=\"{'width':'100%'}\" pInputTextarea [(ngModel)]=\"rowData.offerName\"\n                                    placeholder=\"Uwagi\" required></textarea>\n\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.offerName}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td>\n                        {{rowData.systemProfil.name}}\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimOuter\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimOuter}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimInner\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimInner}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimOneSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimOneSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimCenterSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimCenterSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\" [(ngModel)]=\"rowData.dimTwoSide\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSide}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\"\n                                    [(ngModel)]=\"rowData.dimTwoSideOuter\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSideOuter}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <input class=\"inline-edit\" pInputText type=\"number\"\n                                    [(ngModel)]=\"rowData.dimTwoSideInner\">\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                {{rowData.dimTwoSideInner}}\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.actualMeasurement\" [binary]=\"true\">\n                                </p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'measure-badge status-' + rowData.actualMeasurement\">\n                                    {{showBoolean(rowData.actualMeasurement)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.hard\" [binary]=\"true\"></p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'hard-badge status-' + rowData.hard\">\n                                    {{showBoolean(rowData.hard)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td class=\"text-center\">\n                        <p-cellEditor>\n                            <ng-template pTemplate=\"input\">\n                                <p-checkbox [(ngModel)]=\"rowData.alu\" [binary]=\"true\"></p-checkbox>\n                            </ng-template>\n                            <ng-template pTemplate=\"output\">\n                                <span [class]=\"'measure-badge status-' + rowData.alu\">\n                                    {{showBoolean(rowData.alu)}}\n                                </span>\n                            </ng-template>\n                        </p-cellEditor>\n                    </td>\n\n                    <td>\n                        <a *ngIf=\"rowData.comments\" href=\"#\" [pRowToggler]=\"rowData\">\n                            <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n                        </a>\n                    </td>\n\n                    <td class=\"edit-col\">\n\n                        <button pButton pRipple appPermission permission=\"catalogWrite\" type=\"button\"\n                            (click)=\"showDialogToUpdateCatalog(rowData)\" icon=\"pi pi-pencil\"\n                            class=\"p-button-sm sb-button blue\"></button>\n\n                        <button pButton pRipple appPermission permission=\"catalogDelete\" type=\"button\"\n                            (click)=\"onRowDeleteCatalog(rowData)\" icon=\"pi pi-trash\"\n                            class=\"p-button-sm ml-1 sb-button red\"></button>\n\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"rowexpansion\" let-rowData>\n                <tr>\n                    <td [attr.colspan]=\"16\">\n                        <div class=\"p-grid ui-fluid\" style=\"font-size:16px;padding:20px\"\n                            [@rowExpansionTrigger]=\"'active'\">\n                            <div class=\"p-col-12 p-md-9\" [innerHTML]=\"rowData.comments\">\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                    <td colspan=\"14\" style=\"text-align:left\">Brak danych.</td>\n                </tr>\n            </ng-template>\n        </p-table>\n\n    </p-tabPanel>\n    <p-tabPanel header=\"Systemy\">\n        <ng-template pTemplate=\"content\">\n\n            <p-table #sy styleClass=\"p-datatable-striped\" selectionMode=\"single\" [value]=\"catalogService.systems\"\n                dataKey=\"id\" editMode=\"row\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\"\n                [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n                [filterDelay]=\"0\" [globalFilterFields]=\"['name']\">\n\n                <ng-template pTemplate=\"caption\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <span>Systemy</span></div>\n                        <div class=\"col\" style=\"text-align: end;\">\n                            <input pInputText type=\"text\" (input)=\"sy.filterGlobal($event.target.value, 'contains')\"\n                                placeholder=\"Wyszukiwarka\" />\n                        </div>\n                    </div>\n                </ng-template>\n\n                <ng-template pTemplate=\"header\">\n                    <tr class=\"sys-head\">\n                        <th style=\"width: 40px;\">\n                            <div>ID</div>\n                        </th>\n                        <th pSortableColumn=\"name\">\n                            <div>Nazwa<p-sortIcon field=\"name\"></p-sortIcon>\n                            </div>\n                        </th>\n                        <th pSortableColumn=\"comment\">\n                            <div>Opis<p-sortIcon field=\"comment\"></p-sortIcon>\n                            </div>\n                        </th>\n                        <th style=\"min-width: 80px; width: 80px;\"></th>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"body\" let-rowData let-editing=\"editing\" let-ri=\"rowIndex\">\n                    <tr [pEditableRow]=\"rowData\" class=\"sys-body\">\n                        <td>\n                            {{rowData.id}}\n                        </td>\n                        <td>\n                            {{rowData.name}}\n                        </td>\n                        <td>\n                            <div [innerHTML]=\"rowData.comment\"></div>\n                        </td>\n\n                        <td class=\"edit-col\">\n                            <button pButton pRipple appPermission permission=\"systemWrite\" type=\"button\"\n                                (click)=\"showDialogToUpdateSystem(rowData)\" icon=\"pi pi-pencil\"\n                                class=\"p-button-sm sb-button blue\"></button>\n\n                            <button pButton pRipple appPermission permission=\"systemDelete\" type=\"button\"\n                                (click)=\"onRowDeleteSystem(rowData)\" icon=\"pi pi-trash\"\n                                class=\"p-button-sm ml-1 sb-button red\"></button>\n                        </td>\n                    </tr>\n                </ng-template>\n                <ng-template pTemplate=\"emptymessage\">\n                    <tr>\n                        <td colspan=\"4\" style=\"text-align:left\">Brak danych.</td>\n                    </tr>\n                </ng-template>\n            </p-table>\n\n        </ng-template>\n\n    </p-tabPanel>\n</p-tabView>"],"sourceRoot":"webpack:///"}