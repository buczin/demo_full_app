{"version":3,"sources":["src/app/settings/mycompany/form-mycompany/form-mycompany.component.html","src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.html","src/app/settings/mycompany/mycompany.component.html","src/app/settings/settings-main/settings-main.component.html","src/app/settings/users/form-password/form-password.component.html","src/app/settings/users/form-users/form-users.component.html","src/app/settings/users/form-userupdate/form-userupdate.component.html","src/app/settings/users/users.component.html","src/app/_class/user.ts","src/app/settings/mycompany/form-mycompany/form-mycompany.component.scss","src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.scss","src/app/settings/mycompany/form-update-my-company/form-update-my-company.component.ts","src/app/settings/mycompany/mycompany.component.scss","src/app/settings/mycompany/mycompany.component.ts","src/app/settings/settings-main/settings-main.component.scss","src/app/settings/settings-main/settings-main.component.ts","src/app/settings/settings-routing.module.ts","src/app/settings/settings.module.ts","src/app/settings/settings.service.ts","src/app/settings/users/form-password/form-password.component.scss","src/app/settings/users/form-password/form-password.component.ts","src/app/settings/users/form-users/form-users.component.scss","src/app/settings/users/form-users/form-users.component.ts","src/app/settings/users/form-userupdate/form-userupdate.component.scss","src/app/settings/users/form-userupdate/form-userupdate.component.ts","src/app/settings/users/users.component.scss","src/app/settings/users/users.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form [formGroup]=\\\"formMyCompany\\\">\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('name')\\\" autofocus type=\\\"text\\\" id=\\\"name\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Nazwa firmy\\\"\\r\\n                required autocomplete=\\\"off\\\" autofocus>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('name').hasError('required') && formMyCompany.get('name').touched\\\">\\r\\n                musi być wypełnione\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"nip\\\" class=\\\"col-sm-3 col-form-label\\\">NIP</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('nip')\\\" type=\\\"text\\\" id=\\\"nip\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"NIP\\\" required\\r\\n                autocomplete=\\\"off\\\">\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('required') && formMyCompany.get('nip').touched\\\">\\r\\n                musi być wypełnione\\r\\n            </p>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('nipFormat') && formMyCompany.get('nip').touched\\\">\\r\\n                niepoprawny nip\\r\\n            </p>\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('nip').hasError('mycompanyExists') && formMyCompany.get('nip').touched\\\">\\r\\n                ten numer znajduje się na liście\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n            <p class=\\\"invalid-feedback\\\"\\r\\n                *ngIf=\\\"formMyCompany.get('regon').hasError('regonFormat') && formMyCompany.get('regon').touched\\\">\\r\\n                niepoprawny regon\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"contactemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL główny</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('contactemail')\\\" type=\\\"text\\\" id=\\\"contactemail\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\r\\n                placeholder=\\\"Adres email głowny\\\" autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('contactemail').hasError('contactemail') && formMyCompany.get('contactemail').touched\\\">\\r\\n            niepoprawny email\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"fvemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL faktura</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('fvemail')\\\" type=\\\"text\\\" id=\\\"fvemail\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Adres fv email\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('fvemail').hasError('fvemail') && formMyCompany.get('fvemail').touched\\\">\\r\\n            niepoprawny email\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            <input [formControl]=\\\"formMyCompany.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\r\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"numer tel.\\\"\\r\\n                autocomplete=\\\"off\\\">\\r\\n        </div>\\r\\n        <p class=\\\"invalid-feedback\\\"\\r\\n            *ngIf=\\\"formMyCompany.get('phonenumber').hasError('minLength') && formMyCompany.get('phonenumber').touched\\\">\\r\\n            niepoprawny numer telefonu\\r\\n        </p>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n<hr>\\r\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\r\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\r\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\r\\n    <button [disabled]=\\\"formMyCompany.invalid\\\" matTooltip=\\\"Dodaj firmę\\\" matTooltipClass=\\\"tooltip-green\\\"\\r\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddMyCompany()\\\"\\r\\n        label=\\\"Zapisz\\\"></button>\\r\\n</div>\"","export default \"<form [formGroup]=\\\"formUpdateMyCompany\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Nazwa firmy\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('name').hasError('required') && formUpdateMyCompany.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('regon').hasError('regonFormat') && formUpdateMyCompany.get('regon').touched\\\">\\n                niepoprawny regon\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"contactemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL główny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('contactemail')\\\" type=\\\"text\\\" id=\\\"contactemail\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                placeholder=\\\"Adres email głowny\\\" autocomplete=\\\"off\\\">\\n\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('contactemail').hasError('email') && formUpdateMyCompany.get('contactemail').touched\\\">\\n                niepoprawny email\\n            </p>\\n        </div>\\n    </div>\\n\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"fvemail\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL faktura</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('fvemail')\\\" type=\\\"text\\\" id=\\\"fvemail\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Adres fv email\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('fvemail').hasError('email') && formUpdateMyCompany.get('fvemail').touched\\\">\\n                niepoprawny email\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUpdateMyCompany.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"numer tel.\\\"\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUpdateMyCompany.get('phonenumber').hasError('minLength') && formUpdateMyCompany.get('phonenumber').touched\\\">\\n                niepoprawny numer telefonu\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button matTooltip=\\\"Aktualizuj firmę\\\" matTooltipClass=\\\"tooltip-green\\\" class=\\\"ml-1 ui-button-success\\\" type=\\\"button\\\"\\n        pButton icon=\\\"pi pi-check\\\" (click)=\\\"onUpdateMyCompany()\\\" label=\\\"Zapisz\\\"\\n        ></button>\\n</div>\\n<!-- [disabled]=\\\"formUpdateMyCompany.invalid\\\" -->\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row mb-2 ml-0\\\">\\n        <button (click)=\\\"backClicked()\\\" mat-raised-button><i class=\\\"pi pi-chevron-left\\\"></i></button>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2\\\">\\n            <div class=\\\"bg-white shadow-sm w-100 h-100 p-2 rounded\\\" style=\\\"text-align: center;\\\">\\n                <button class=\\\"w-100\\\" mat-raised-button color=\\\"primary\\\"\\n                    (click)=\\\"openDialogAdd()\\\">Dodaj firmę</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-10\\\">\\n            <div class=\\\"row\\\">\\n                <p-table #mc [value]=\\\"mycompanies\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['name']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\">\\n                    <ng-template pTemplate=\\\"caption\\\">\\n                        Moje Firmy\\n                        <div class=\\\"ui-table-globalfilter-container\\\">\\n                            <input pInputText type=\\\"text\\\" (input)=\\\"mc.filterGlobal($event.target.value, 'contains')\\\"\\n                                placeholder=\\\"Wyszukiwarka\\\" />\\n                        </div>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <tr>\\n                            <th style=\\\"width: 40px;\\\">ID</th>\\n                            <th pResizableColumn>Nazwa</th>\\n                            <th pResizableColumn>NIP</th>\\n                            <th pResizableColumn>REGON</th>\\n                            <th pResizableColumn>Email firmy</th>\\n                            <th pResizableColumn>Email FV</th>\\n                            <th pResizableColumn>Nr. Tel.</th>\\n                            <th style=\\\"width:8em\\\"></th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                        <tr>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.id}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.name}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.nip}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.regon}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.contactemail}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.fvemail}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.phonenumber}}\\n                            </td>\\n                            <td style=\\\"text-align:center\\\">\\n                                <button matTooltip=\\\"Edycja firmy\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                                    (click)=\\\"onEditMyCompany(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-times\\\" class=\\\"ml-2 ui-button-info remove-button\\\"\\n                                    (click)=\\\"onDeleteMyCompant(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\n                        <tr>\\n                            <td colspan=\\\"8\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['users']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-users\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Użytkownicy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n            <a [routerLink]=\\\"['mojafirma']\\\">\\n                <div class=\\\"card\\\" style=\\\"width: 18rem;\\\">\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"d-flex flex-row\\\">\\n                            <i class=\\\"pi pi-home\\\"></i>\\n                            <p class=\\\"card-text w-100 text-right\\\">Moje Firmy</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div>\\n    <h5>Zmiana hasła dla użytkownika {{ user.name }}</h5>\\n</div>\\n<hr>\\n<form [formGroup]=\\\"formPassword\\\">\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-3 col-form-label\\\">Hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formPassword.get('password')\\\" id=\\\"password\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('password').hasError('required') && formPassword.get('password').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"confirmPassword\\\" class=\\\"col-sm-3 col-form-label\\\">Powtórz hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formPassword.get('confirmPassword')\\\" id=\\\"confirmPassword\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('confirmPassword').hasError('required') && formPassword.get('confirmPassword').touched\\\">\\n                musi być wypełnione\\n            </p>\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formPassword.get('confirmPassword').hasError('nomatch') && formPassword.get('confirmPassword').touched\\\">\\n                hasła muszą być identyczne\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie\\\" matTooltipClass=\\\"tooltip-red\\\" type=\\\"button\\\" pButton\\n        icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formPassword.invalid\\\" matTooltip=\\\"Zmień hasło\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onChangePass()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<form [formGroup]=\\\"formUser\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Imię Nazwisko</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('name')\\\" autofocus type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Imię Nazwisko\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('name').hasError('required') && formUser.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-3 col-form-label\\\">Login</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('username')\\\" type=\\\"text\\\" id=\\\"username\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Login\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('username').hasError('required') && formUser.get('username').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"password\\\" class=\\\"col-sm-3 col-form-label\\\">Hasło</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input type=\\\"password\\\" pPassword [formControl]=\\\"formUser.get('password')\\\" id=\\\"password\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Hasło\\\" required\\n                autocomplete=\\\"off\\\" />\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('password').hasError('required') && formUser.get('password').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"active\\\" class=\\\"col-sm-3 col-form-label\\\">Aktywny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <mat-slide-toggle [formControl]=\\\"formUser.get('active')\\\"\\n                [color]=\\\"warn\\\"\\n                [checked]=\\\"true\\\">\\n                Aktywny\\n            </mat-slide-toggle>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"roles\\\" class=\\\"col-sm-3 col-form-label\\\">Role</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUser.get('roles')\\\" type=\\\"text\\\" id=\\\"roles\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Role\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUser.get('roles').hasError('required') && formUser.get('roles').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formUser.invalid\\\" matTooltip=\\\"Dodaj użytkownika\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddUser()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<form [formGroup]=\\\"formUserUpdate\\\">\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Imię Nazwisko</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Imię Nazwisko\\\"\\n                required autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('name').hasError('required') && formUserUpdate.get('name').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"username\\\" class=\\\"col-sm-3 col-form-label\\\">Login</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('username')\\\" type=\\\"text\\\" id=\\\"username\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Login\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('username').hasError('required') && formUserUpdate.get('username').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"active\\\" class=\\\"col-sm-3 col-form-label\\\">Aktywny</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <mat-slide-toggle [formControl]=\\\"formUserUpdate.get('active')\\\"\\n                [color]=\\\"warn\\\"\\n                [checked]=\\\"true\\\">\\n                Aktywny\\n            </mat-slide-toggle>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n        <label for=\\\"roles\\\" class=\\\"col-sm-3 col-form-label\\\">Role</label>\\n        <div class=\\\"col-sm-9\\\">\\n            <input [formControl]=\\\"formUserUpdate.get('roles')\\\" type=\\\"text\\\" id=\\\"roles\\\"\\n                class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"Role\\\" required\\n                autocomplete=\\\"off\\\">\\n            <p class=\\\"invalid-feedback\\\"\\n                *ngIf=\\\"formUserUpdate.get('roles').hasError('required') && formUserUpdate.get('roles').touched\\\">\\n                musi być wypełnione\\n            </p>\\n        </div>\\n    </div>\\n\\n</form>\\n<hr>\\n<div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n    <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie\\\" matTooltipClass=\\\"tooltip-red\\\"\\n        type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"onNoClick()\\\" label=\\\"Anuluj\\\"></button>\\n    <button [disabled]=\\\"formUserUpdate.invalid\\\" matTooltip=\\\"Aktualizuj użytkownika\\\" matTooltipClass=\\\"tooltip-green\\\"\\n        class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onUpdateUser()\\\"\\n        label=\\\"Zapisz\\\"></button>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"row mb-2 ml-0\\\">\\n        <button (click)=\\\"backClicked()\\\" mat-raised-button><i class=\\\"pi pi-chevron-left\\\"></i></button>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-2\\\">\\n            <div class=\\\"bg-white shadow-sm w-100 h-100 p-2 rounded\\\" style=\\\"text-align: center;\\\">\\n                <button class=\\\"w-100\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialogAdd()\\\">Dodaj\\n                    użytkownika</button>\\n            </div>\\n        </div>\\n        <div class=\\\"col-10\\\">\\n            <div class=\\\"row\\\">\\n                <p-table #us [value]=\\\"users\\\" dataKey=\\\"id\\\" [filterDelay]=\\\"0\\\" [globalFilterFields]=\\\"['username']\\\" [resizableColumns]=\\\"true\\\" columnResizeMode=\\\"expand\\\">\\n                    <ng-template pTemplate=\\\"caption\\\">\\n                        Użytkownicy\\n                        <div class=\\\"ui-table-globalfilter-container\\\">\\n                            <input pInputText type=\\\"text\\\" (input)=\\\"us.filterGlobal($event.target.value, 'contains')\\\"\\n                                placeholder=\\\"Wyszukiwarka\\\" />\\n                        </div>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"header\\\">\\n                        <tr>\\n                            <th style=\\\"width: 40px;\\\">ID</th>\\n                            <th pResizableColumn>Login</th>\\n                            <th pResizableColumn>Imie Nazwisko</th>\\n                            <th pResizableColumn>Aktywny</th>\\n                            <th pResizableColumn>Role</th>\\n                            <th style=\\\"width:8em\\\"></th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData>\\n                        <tr>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.id}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.username}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.name}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.active}}\\n                            </td>\\n                            <td class=\\\"ui-resizable-column\\\">\\n                                {{rowData.roles}}\\n                            </td>\\n                            <td style=\\\"text-align:center\\\">\\n                                <button matTooltip=\\\"Edycja Użytkownika\\\" matTooltipClass=\\\"tooltip-red\\\" pButton\\n                                    type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                                    (click)=\\\"openDialogUpdate(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Zmiana hasła\\\" matTooltipClass=\\\"tooltip-red\\\" pButton\\n                                    type=\\\"button\\\" icon=\\\"pi pi-key\\\" class=\\\"ml-1 ui-button-info edit-button\\\"\\n                                    (click)=\\\"openDialogChangePass(rowData)\\\"></button>\\n                                <button matTooltip=\\\"Usuwanie\\\" matTooltipClass=\\\"tooltip-red\\\" pButton type=\\\"button\\\"\\n                                    icon=\\\"pi pi-times\\\" class=\\\"ml-1 ui-button-info remove-button\\\"\\n                                    (click)=\\\"onDeleteUser(rowData)\\\"></button>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"emptymessage\\\">\\n                        <tr>\\n                            <td colspan=\\\"6\\\" style=\\\"text-align:left\\\">Brak danych.</td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export class User {\r\n    id: number;\r\n    username: string;\r\n    password: string;\r\n    name: string;\r\n    authdata: User;\r\n  authorities: any;\r\n}","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvbXljb21wYW55L2Zvcm0tbXljb21wYW55L0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxcc2V0dGluZ3NcXG15Y29tcGFueVxcZm9ybS1teWNvbXBhbnlcXGZvcm0tbXljb21wYW55LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zZXR0aW5ncy9teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxtQkFBQTtFQUNBLFdBQUE7QUNDSjs7QURDQTtFQUNJLGlCQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9zZXR0aW5ncy9teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkvZm9ybS1teWNvbXBhbnkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyLWJ0biBidXR0b257XHJcbiAgICBtYXJnaW46IDAgMC41ZW0gMCAwO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuLmZvb3Rlci1idG57XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSIsIi5mb290ZXItYnRuIGJ1dHRvbiB7XG4gIG1hcmdpbjogMCAwLjVlbSAwIDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyLWJ0biB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-mycompany',\n  templateUrl: './form-mycompany.component.html',\n  styleUrls: ['./form-mycompany.component.scss']\n})\nexport class FormMycompanyComponent implements OnInit {\n\n  formMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormMycompanyComponent>,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit(): void {\n    this.formMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.myCompanyExists], updateOn: 'blur' }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]})\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddMyCompany(){\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n          this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215Y29tcGFueS9mb3JtLXVwZGF0ZS1teS1jb21wYW55L2Zvcm0tdXBkYXRlLW15LWNvbXBhbnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-update-my-company',\n  templateUrl: './form-update-my-company.component.html',\n  styleUrls: ['./form-update-my-company.component.scss']\n})\nexport class FormUpdateMyCompanyComponent implements OnInit {\n\n  formUpdateMyCompany: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUpdateMyCompanyComponent>,\n    private settingService: SettingsService,\n    @Inject(MAT_DIALOG_DATA) public company: any,\n    private infoPopup: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUpdateMyCompany = new FormGroup({\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      contactemail: new FormControl('', {validators: [Validators.email]}),\n      fvemail: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern(\"^[0-9]*$\")]})\n    });\n    this.formUpdateMyCompany.patchValue(this.company);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateMyCompany(){\n    this.settingService.updateMyCompany(this.company.id,this.formUpdateMyCompany.value).subscribe({\n      next: (res) =>{\n        this.infoPopup.showSuccessUpdate(\"moja firma\");\n        this.dialogRef.close();\n      },\n      error: (err) =>{\n        console.log(err);\n          this.infoPopup.showErrorUpdate(\"moja firma\");\n      },\n      complete: () =>{}\n    })\n  }\n\n}\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215Y29tcGFueS9teWNvbXBhbnkuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormMycompanyComponent } from './form-mycompany/form-mycompany.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUpdateMyCompanyComponent } from './form-update-my-company/form-update-my-company.component';\n\n@Component({\n  selector: 'app-mycompany',\n  templateUrl: './mycompany.component.html',\n  styleUrls: ['./mycompany.component.scss']\n})\nexport class MycompanyComponent implements OnInit {\n\n  mycompanies: any;\n\n  constructor(\n    private location: Location,\n    public dialog: MatDialog, \n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) =>{\n          this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormMycompanyComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  onEditMyCompany(company){\n    const dialogRef = this.dialog.open(FormUpdateMyCompanyComponent, {\n      data: company,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ company.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"moja firma\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"moja firma\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLW1haW4vc2V0dGluZ3MtbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { TabViewModule } from 'primeng/tabview';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { FormMycompanyComponent } from './mycompany/form-mycompany/form-mycompany.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormUsersComponent } from './users/form-users/form-users.component';\nimport {PasswordModule} from 'primeng/password';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport { FormPasswordComponent } from './users/form-password/form-password.component';\nimport { FormUserupdateComponent } from './users/form-userupdate/form-userupdate.component';\nimport { FormUpdateMyCompanyComponent } from './mycompany/form-update-my-company/form-update-my-company.component';\n\n@NgModule({\n  declarations: [SettingsMainComponent, UsersComponent, MycompanyComponent, FormMycompanyComponent, FormUsersComponent, FormPasswordComponent, FormUserupdateComponent, FormUpdateMyCompanyComponent],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule\n  ],\n  entryComponents: [FormUpdateMyCompanyComponent,FormUserupdateComponent,FormPasswordComponent,FormUsersComponent,FormMycompanyComponent]\n})\nexport class SettingsModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n\n  constructor(private http: HttpClient) { }\n\n  // =============== USERS ============\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/users\");\n  }\n  addUser(data): Observable<any> {\n    return this.http.post<any>(\"api/user\", data);\n  }\n  updateUser(id, data){\n    return this.http.put<Response>(\"api/user/\" + id, data);\n  }\n  deleteUser(id) {\n    return this.http.delete<Response>(\"api/user/\" + id);\n  }\n  changePassword(id, data){\n    return this.http.put<any>(\"api/user/pass/\" + id, data);\n  }\n  //============== MY COMPANY ===============\n\n  getMyCompanies(): Observable<any[]> {\n    return this.http.get<any[]>(\"api/mycompanies\");\n  }\n  getMyCompanyById(id): Observable<any> {\n    return this.http.get<any[]>(\"api/mycompany/\" + id);\n  }\n  addMyCompany(data): Observable<any> {\n    return this.http.post<any>(\"api/mycompany\", data);\n  }\n  updateMyCompany(id, data){\n    return this.http.put<Response>(\"api/mycompany/\" + id, data);\n  }\n  deleteMyCompany(id) {\n    return this.http.delete<Response>(\"api/mycompany/\" + id);\n  }\n  \n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9DOlxcVXNlcnNcXFN5bHdla1xcRGVza3RvcFxcYm0vc3JjXFxhcHBcXHNldHRpbmdzXFx1c2Vyc1xcZm9ybS1wYXNzd29yZFxcZm9ybS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9mb3JtLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS1wYXNzd29yZC9mb3JtLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/_class/user';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-form-password',\n  templateUrl: './form-password.component.html',\n  styleUrls: ['./form-password.component.scss']\n})\nexport class FormPasswordComponent implements OnInit {\n\n  formPassword: FormGroup;\n  \n  constructor(\n    public dialogRef: MatDialogRef<FormPasswordComponent>, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private settingService: SettingsService, \n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group({\n      password: ['', { validators: Validators.required}],\n      confirmPassword: ['', { validators: Validators.required}]\n    },{validator: AppValidators.nomatch('password','confirmPassword')})\n  }\n\n  onNoClick(){\n    this.dialogRef.close();\n  }\n\n  onChangePass(){\n    this.settingService.changePassword(this.user.id,this.formPassword.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"hasło użytkownika\");\n        this.dialogRef.close();\n      },\n      error:(err) =>{ this.info.showErrorUpdate(\"hasło użytkownika\");},\n      complete: () =>{}\n    })\n  }\n\n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9DOlxcVXNlcnNcXFN5bHdla1xcRGVza3RvcFxcYm0vc3JjXFxhcHBcXHNldHRpbmdzXFx1c2Vyc1xcZm9ybS11c2Vyc1xcZm9ybS11c2Vycy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9mb3JtLXVzZXJzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2Vycy9mb3JtLXVzZXJzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-users',\n  templateUrl: './form-users.component.html',\n  styleUrls: ['./form-users.component.scss']\n})\nexport class FormUsersComponent implements OnInit {\n\n  formUser: FormGroup;\n\n  constructor(public dialogRef: MatDialogRef<FormUsersComponent>, private settingService: SettingsService, private info: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formUser = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      password: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      roles: new FormControl('', { validators: Validators.required}),\n    })\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onAddUser() {\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        this.info.showErrorAdd(\"użytkownika\") \n      },\n      complete: () => { }\n    })\n  }\n\n}\n","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2VydXBkYXRlL0M6XFxVc2Vyc1xcU3lsd2VrXFxEZXNrdG9wXFxibS9zcmNcXGFwcFxcc2V0dGluZ3NcXHVzZXJzXFxmb3JtLXVzZXJ1cGRhdGVcXGZvcm0tdXNlcnVwZGF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvc2V0dGluZ3MvdXNlcnMvZm9ybS11c2VydXBkYXRlL2Zvcm0tdXNlcnVwZGF0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsV0FBQTtBQ0NKOztBRENBO0VBQ0ksaUJBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3VzZXJzL2Zvcm0tdXNlcnVwZGF0ZS9mb3JtLXVzZXJ1cGRhdGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyLWJ0biBidXR0b257XHJcbiAgICBtYXJnaW46IDAgMC41ZW0gMCAwO1xyXG4gICAgd2lkdGg6IGF1dG87XHJcbn1cclxuLmZvb3Rlci1idG57XHJcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcclxufSIsIi5mb290ZXItYnRuIGJ1dHRvbiB7XG4gIG1hcmdpbjogMCAwLjVlbSAwIDA7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG4uZm9vdGVyLWJ0biB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufSJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SettingsService } from '../../settings.service';\nimport { User } from 'src/app/_class/user';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\n\n@Component({\n  selector: 'app-form-userupdate',\n  templateUrl: './form-userupdate.component.html',\n  styleUrls: ['./form-userupdate.component.scss']\n})\nexport class FormUserupdateComponent implements OnInit {\n\n  formUserUpdate: FormGroup;\n\n  constructor(\n    public dialogRef: MatDialogRef<FormUserupdateComponent>, \n    private settingService: SettingsService, \n    @Inject(MAT_DIALOG_DATA) public user: User,\n    private info: InfoPopupComponent\n    ) { }\n\n  ngOnInit() {\n    this.formUserUpdate = new FormGroup({\n      name: new FormControl('', { validators: Validators.required}),\n      username: new FormControl('', { validators: Validators.required}),\n      active: new FormControl(false),\n      roles: new FormControl('', { validators: Validators.required}),\n    });\n    this.formUserUpdate.patchValue(this.user);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onUpdateUser() {\n    this.settingService.updateUser(this.user.id,this.formUserUpdate.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessUpdate(\"użytkownika\");\n        this.dialogRef.close();\n      },\n      error: (err) => { \n        console.log(err);\n        this.info.showErrorUpdate(\"użytkownika\") \n      },\n      complete: () => {\n       }\n    })\n  }\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { SettingsService } from '../settings.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormUsersComponent } from './form-users/form-users.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport {Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { FormPasswordComponent } from './form-password/form-password.component';\nimport { User } from 'src/app/_class/user';\nimport { ConfirmationService } from 'primeng/api';\nimport { FormUserupdateComponent } from './form-userupdate/form-userupdate.component';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n  users: any;\n\n  constructor(\n    private location: Location, \n    public dialog: MatDialog,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n    ) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(){\n    this.settingService.getUsers().subscribe({\n      next: (res) =>{\n          this.users = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\")\n      },\n      complete: ()=> {\n\n      }\n      \n    })\n  }\n\n  openDialogAdd(): void {\n    const dialogRef = this.dialog.open(FormUsersComponent, {\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n  openDialogUpdate(usr): void {\n    const dialogRef = this.dialog.open(FormUserupdateComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog was closed');\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialog.open(FormPasswordComponent, {\n      data: usr,\n      width: '450px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.loadData();\n      console.log('The dialog pass was closed');\n    });\n  }\n\n  onDeleteUser(user: User){\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ user.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      accept: () => {\n        //Actual logic to perform a confirmation\n        this.settingService.deleteUser(user.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"użytkownia\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"użytkownika\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n"],"sourceRoot":"webpack:///","file":"settings-settings-module-es5.js"}