{"version":3,"sources":["./src/app/contractor/client-add-form/client-add-form.component.ts","./src/app/contractor/client-add-form/client-add-form.component.html","./src/app/contractor/client-main/client-main.component.ts","./src/app/contractor/client-main/client-main.component.html","./src/app/contractor/client-service/client.service.ts","./src/app/contractor/contractor-routing.module.ts","./src/app/contractor/contractor.module.ts"],"names":[],"mappings":"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","file":"contractor-contractor-module-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\nimport { DynamicDialogRef, DynamicDialogConfig } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n\n  formClient: FormGroup;\n  clientData: Client;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private clientService: ClientService,\n    private infoPopup: InfoPopupComponent) {\n    this.clientData = config.data;\n  }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      id: new FormControl(''),\n      symfoniaId: new FormControl(''),\n      shortName: new FormControl(''),\n      name: new FormControl('', { validators: [Validators.required] }),\n      nip: new FormControl('', { validators: [AppValidators.validatenip] }),\n      pesel: new FormControl(''),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n\n      town: new FormControl(''),\n      street: new FormControl(''),\n      houseNumber: new FormControl(''),\n      flatNumber: new FormControl(''),\n      postalCode: new FormControl(''),\n      province: new FormControl(''),\n      country: new FormControl(''),\n\n      phonenumber: new FormControl(''),\n      phonenumber2: new FormControl(''),\n      email: new FormControl('', { validators: [Validators.email] }),\n      www: new FormControl('')\n    });\n\n    if (this.clientData) {\n      this.formClient.patchValue(this.clientData);\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n\n  addNewClient() {\n    this.loading = true;\n    this.clientService.addClient(this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"klienta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"klienta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n  updateClient() {\n    this.loading = true;\n    this.clientService.updateClient(this.formClient.value.id, this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"klienta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"klienta\");\n          this.loading = false;\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","<div class=\"sb-dialog-content\">\n    <form [formGroup]=\"formClient\" class=\"sb-form\">\n\n        <div class=\"form-group m-0 p-0\">\n            <div>\n                <p class=\"p-0 m-0\"><b>DANE</b></p>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"name\">Nazwa*</label>\n                    <textarea [style]=\"{'width':'100%'}\" pInputTextarea type=\"text\" id=\"name\"\n                        [formControl]=\"formClient.get('name')\" required>\n                    </textarea>\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('name').hasError('required') && formClient.get('name').touched\">\n                        musi być wypełnione\n                    </p>\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"shortName\">Skrócona nazwa</label>\n                    <input pInputText type=\"text\" id=\"shortName\" [formControl]=\"formClient.get('shortName')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"symfoniaId\">Symfonia ID</label>\n                    <input pInputText type=\"text\" id=\"symfoniaId\" [formControl]=\"formClient.get('symfoniaId')\"\n                        autocomplete=\"off\">\n                </div>\n\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"nip\">NIP*</label>\n                    <input [attr.disabled]=\"clientData ? true : null\" pInputText type=\"text\" id=\"nip\"\n                        [formControl]=\"formClient.get('nip')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('nip').hasError('nipFormat') && formClient.get('nip').touched\">\n                        niepoprawny nip\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"regon\">REGON</label>\n                    <input pInputText type=\"text\" id=\"regon\" [formControl]=\"formClient.get('regon')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('regon').hasError('regonFormat') && formClient.get('regon').touched\">\n                        niepoprawny regon\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"pesel\">PESEL</label>\n                    <input [attr.disabled]=\"clientData ? true : null\" pInputText type=\"text\" id=\"pesel\"\n                        [formControl]=\"formClient.get('pesel')\" autocomplete=\"off\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <p class=\"mb-0 mt-4\"><b>ADRES</b></p>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"town\">Miasto</label>\n                    <input pInputText type=\"text\" id=\"town\" [formControl]=\"formClient.get('town')\" autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"street\">Ulica</label>\n                    <input pInputText type=\"text\" id=\"street\" [formControl]=\"formClient.get('street')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\n                    <label class=\"mb-0\" for=\"houseNumber\">Numer budynku</label>\n                    <input pInputText type=\"text\" id=\"houseNumber\" [formControl]=\"formClient.get('houseNumber')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem;\">\n                    <label class=\"mb-0\" for=\"flatNumber\">Numer mieszkania</label>\n                    <input pInputText type=\"text\" id=\"flatNumber\" [formControl]=\"formClient.get('flatNumber')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"postalCode\">Kod Pocztowy</label>\n                    <input pInputText type=\"text\" id=\"postalCode\" [formControl]=\"formClient.get('postalCode')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"province\">Województwo</label>\n                    <input pInputText type=\"text\" id=\"province\" [formControl]=\"formClient.get('province')\"\n                        autocomplete=\"off\">\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"country\">Kraj</label>\n                    <input pInputText type=\"text\" id=\"country\" [formControl]=\"formClient.get('country')\"\n                        autocomplete=\"off\">\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <div>\n                <p class=\"mb-0 mt-4\"><b>DANE KONTAKTOWE</b></p>\n            </div>\n\n            <div class=\"p-fluid p-formgrid p-grid\">\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"email\">EMAIL</label>\n                    <input pInputText type=\"text\" id=\"email\" [formControl]=\"formClient.get('email')\" autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('email').hasError('email') && formClient.get('email').touched\">\n                        niepoprawny email\n                    </p>\n                </div>\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"phonenumber\">Numer telefonu</label>\n                    <input pInputText type=\"text\" id=\"phonenumber\" [formControl]=\"formClient.get('phonenumber')\"\n                        autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('phonenumber').hasError('minLength') && formClient.get('phonenumber').touched\">\n                        niepoprawny numer telefonu\n                    </p>\n                </div>\n\n                <div class=\"p-field p-col-4 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"phonenumber2\">Numer telefonu 2</label>\n                    <input pInputText type=\"text\" id=\"phonenumber2\" [formControl]=\"formClient.get('phonenumber2')\"\n                        autocomplete=\"off\">\n                    <p class=\"invalid-feedback\"\n                        *ngIf=\"formClient.get('phonenumber2').hasError('minLength') && formClient.get('phonenumber2').touched\">\n                        niepoprawny numer telefonu\n                    </p>\n                </div>\n            </div>\n            <div class=\"p-fluid p-formgrid p-grid\">\n                <div class=\"p-field p-col-12 mb-0 pb-0\">\n                    <label class=\"mb-0\" for=\"www\">WWW</label>\n                    <input pInputText type=\"text\" id=\"www\" [formControl]=\"formClient.get('www')\" autocomplete=\"off\">\n                </div>\n\n            </div>\n        </div>\n\n    </form>\n</div>\n\n\n<div class=\"sb-dialog-footer\">\n    <div class=\"sb-btn-close\">\n        <button pButton pRipple type=\"button\" (click)=\"exit(0)\" pTooltip=\"Anulowanie operacji\" label=\"Anuluj\"\n            icon=\"pi pi-times\" class=\"p-button-sm sb-button o-gray\">\n        </button>\n    </div>\n    <div class=\"sb-btn-save\">\n        <button *ngIf=\"!clientData\" [disabled]=\"formClient.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"addNewClient()\" pTooltip=\"Dodaj nowego kontrahenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <button *ngIf=\"clientData\" [disabled]=\"formClient.invalid || loading\" pButton pRipple type=\"button\"\n            (click)=\"updateClient()\" pTooltip=\"Aktualizacja kontrahenta\" label=\"Zapisz\" icon=\"pi pi-check\"\n            class=\"p-button-sm sb-button green\">\n        </button>\n\n        <p-progressSpinner *ngIf=\"loading\" [style]=\"{width: '25px', height: '25px'}\" styleClass=\"custom-spinner\"\n            strokeWidth=\"8\" fill=\"#EEEEEE\" animationDuration=\".5s\"></p-progressSpinner>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { MessageService, SelectItem, ConfirmationService } from 'primeng/api';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { AuthService } from 'src/app/_services/auth.service';\nimport { ClientAddFormComponent } from '../client-add-form/client-add-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogService } from 'primeng/dynamicdialog';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.scss']\n})\nexport class ClientMainComponent implements OnInit {\n  \n  client: Client[] = [];\n\n  onErr: Client =\n    {\n      id: 0,\n      name: \"---\",\n      nip: \"---\",\n      regon: \"---\",\n      email: \"---\",\n      phonenumber: \"---\"\n    };\n  clientCount:number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client; } = {};\n  loading=false;\n  selectedClient:any;\n\n  constructor(\n    public dialog: DialogService,\n    public auth:AuthService,\n    private clientService: ClientService, \n    private infoPopup: InfoPopupComponent,  \n    private confirmationService: ConfirmationService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData(){\n    this.loading=true;\n    this.clientService.getClients().subscribe(\n      {\n        next: (res) => {\n          this.client = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"kontrahenci\")\n          this.err = true;\n          this.client.push(this.onErr);\n        },\n        complete: () => {\n          this.loading=false;\n        }\n      }\n    )\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"klientów\")\n      },\n      complete: () => {\n      }\n    })\n\n\n  }\n\n  showDialogToAddClient() {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Nowy kontrahent\",\n      width: '1000px',\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog client add was closed');\n    });\n  }\n\n  showDialogToUpdateClient(selected) {\n    const dialogRef = this.dialog.open(ClientAddFormComponent, {\n      header: \"Aktualizacja kontrahenta\",\n      width: '1000px',\n      data: selected,\n    });\n\n    dialogRef.onClose.subscribe(res => {\n      if (res) {\n        this.loadData();\n      }\n      console.log('The dialog update client was closed');\n    });\n  }\n\n\n  onRowDeleteClient(client: Client) {\n    this.confirmationService.confirm({\n      message: 'Na pewno chcesz usunąć '+ client.name + '?',\n      acceptLabel:'Tak',\n      rejectLabel:'Nie',\n      acceptIcon: 'pi pi-trash',\n      acceptButtonStyleClass: 'p-button-sm sb-button red',\n      rejectButtonStyleClass: 'p-button-sm sb-button o-gray',\n      accept: () => {\n        this.clientService.deleteClient(client.id).subscribe(\n          {\n            next: (res) => {\n              this.infoPopup.showSuccessDelete(\"klienta\");\n            },\n            error: (err) => {\n              this.infoPopup.showErrorDelete(\"klient\");\n            },\n            complete: () => {\n              this.loadData();\n            }\n          }\n        )\n      }\n    });\n  }\n\n}\n","<div class=\"row\">\n\n    <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n        <div class=\"card-stats\">\n            <div class=\"card-content\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <div class=\"big-icon\">\n                                <i class=\"pi pi-id-card\"></i>\n                            </div>\n                        </div>\n                        <div class=\"col-7 pr-0\">\n                            <div class=\"numbers\">\n                                <p class=\"card-category\">Kontrahenci</p>\n                                <p class=\"card-title\">{{clientCount}}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"card-footer\">\n                    <div class=\"stats-bar\">\n                        <div class=\"small-icon\">\n                            <i class=\"pi pi-chart-bar\"></i>\n                        </div>\n                        <div class=\"stats-bar-button\">\n                            <button pButton pRipple type=\"button\" (click)=\"showDialogToAddClient()\"\n                                pTooltip=\"Dodanie nowej pozycji\" icon=\"pi pi-plus\"\n                                class=\"p-button-sm sb-button blue\"></button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n\n<div class=\"row\">\n    <div class=\"col-md-12\">\n\n        <p-table #ct styleClass=\"p-datatable-striped\" selectionMode=\"single\" [value]=\"client\" [loading]=\"loading\" dataKey=\"id\" editMode=\"row\"\n            sortMode=\"multiple\" [paginator]=\"true\" [rows]=\"10\" [rowsPerPageOptions]=\"[10,20,50]\"\n            [showCurrentPageReport]=\"true\" currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n            [filterDelay]=\"0\" [autoLayout]=\"true\" selectionMode=\"single\" [(selection)]=\"selectedClient\"\n            [globalFilterFields]=\"['name','nip','pesel','shortName','phonenumber']\" [rowHover]=\"true\"\n            columnResizeMode=\"expand\">\n            <ng-template pTemplate=\"caption\">\n\n                <div class=\"row\">\n                    <div class=\"col\"><span>Lista Kontrahentów</span></div>\n                    <div class=\"col\" style=\"text-align: end;\"><input pInputText class=\"p-inputtext\" type=\"text\"\n                            (input)=\"ct.filterGlobal($event.target.value, 'contains')\" placeholder=\"Wyszukiwarka\" />\n                    </div>\n                </div>\n            </ng-template>\n            <ng-template pTemplate=\"header\">\n                <tr class=\"cl-header\">\n                    <th pTooltip=\"symfonia ID\">\n                        <div>symf. ID</div>\n                    </th>\n                    <th pSortableColumn=\"shortName\">\n                        <div>Skrót nazwa<p-sortIcon field=\"shortName\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"name\">\n                        <div>Nazwa <p-sortIcon field=\"name\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th pSortableColumn=\"town\">\n                        <div>Miasto <p-sortIcon field=\"town\"></p-sortIcon>\n                        </div>\n                    </th>\n                    <th>\n                        <div>Ulica</div>\n                    </th>\n                    <th>\n                        <div>Nr. budynku</div>\n                    </th>\n                    <th>\n                        <div>Nr. mieszkania</div>\n                    </th>\n                    <th>\n                        <div>Kod pocztowy</div>\n                    </th>\n                    <th>\n                        <div>Województwo</div>\n                    </th>\n                    <th>\n                        <div>Kraj</div>\n                    </th>\n                    <th>\n                        <div>nr. tel.</div>\n                    </th>\n                    <th>\n                        <div>nr. tel. 2</div>\n                    </th>\n                    <th>\n                        <div>email</div>\n                    </th>\n                    <th>\n                        <div>nip</div>\n                    </th>\n                    <th>\n                        <div>pesel</div>\n                    </th>\n                    <th>\n                        <div>regon</div>\n                    </th>\n                    <th>\n                        <div>www</div>\n                    </th>\n                    <th style=\"min-width: 80px;\"></th>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n                <tr class=\"cl-body\" [pSelectableRow]=\"rowData\">\n                    <td>{{rowData.symfoniaId}}</td>\n                    <td>{{rowData.shortName}}</td>\n                    <td>{{rowData.name}}</td>\n                    <td>{{rowData.town}}</td>\n                    <td>{{rowData.street}}</td>\n                    <td>{{rowData.houseNumber}}</td>\n                    <td>{{rowData.flatNumber}}</td>\n                    <td>{{rowData.postalCode}}</td>\n                    <td>{{rowData.province}}</td>\n                    <td>{{rowData.country}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.phonenumber}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.phonenumber2}}</td>\n                    <td>{{rowData.email}}</td>\n                    <td style=\"min-width: 110px;\">{{rowData.nip}}</td>\n                    <td>{{rowData.pesel}}</td>\n                    <td>{{rowData.regon}}</td>\n                    <td>{{rowData.www}}</td>\n\n                    <td class=\"edit-col\">\n                        <div class=\"d-flex justify-content-center\">\n                            <button pButton pRipple appPermission permission=\"catalogWrite\" type=\"button\"\n                                (click)=\"showDialogToUpdateClient(rowData)\" icon=\"pi pi-pencil\"\n                                class=\"p-button-sm sb-button blue\"></button>\n\n                            <button pButton pRipple appPermission permission=\"catalogDelete\" type=\"button\"\n                                (click)=\"onRowDeleteClient(rowData)\" icon=\"pi pi-trash\"\n                                class=\"p-button-sm ml-1 sb-button red\"></button>\n                        </div>\n                    </td>\n                </tr>\n            </ng-template>\n            <ng-template pTemplate=\"emptymessage\">\n                <tr>\n                    <td colspan=\"18\" style=\"text-align:left\">Brak danych.</td>\n                </tr>\n            </ng-template>\n        </p-table>\n\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Client {\n  id?: number;\n  symfoniaId?: number;\n  shortName?: string;\n  name?: string;\n  town?: string;\n  street?: string;\n  houseNumber?: string;\n  flatNumber?: string;\n  postalCode?: string;\n  province?: string;\n  country?: string;\n  phonenumber?: string;\n  phonenumber2?: string;\n  email?: string;\n  nip?: string;\n  pesel?: string;\n  regon?: string;\n  www?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  deleteClient(id) {\n    return this.http.delete(\"api/client/\" + id, { responseType: 'text' });\n  }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { SharedModule } from '../_shared/shared/shared.module'\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { DialogService } from 'primeng/dynamicdialog';\nimport { TooltipModule } from 'primeng/tooltip';\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    ProgressSpinnerModule,\n    TooltipModule\n  ],\n  providers: [MessageService,DialogService],\n  entryComponents:[ClientAddFormComponent]\n})\nexport class ContractorModule { }\n"],"sourceRoot":"webpack:///"}