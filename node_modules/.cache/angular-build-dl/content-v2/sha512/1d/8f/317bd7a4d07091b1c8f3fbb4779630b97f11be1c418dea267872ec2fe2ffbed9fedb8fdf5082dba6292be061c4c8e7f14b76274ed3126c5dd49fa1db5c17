{"version":3,"sources":["node_modules/rxjs/_esm2015/ajax/index.js","node_modules/rxjs/_esm2015/internal/observable/dom/AjaxObservable.js","node_modules/rxjs/_esm2015/internal/observable/dom/ajax.js","node_modules/rxjs/_esm2015/internal/util/root.js","src/app/_validators/AppValidators.ts"],"names":[],"mappings":"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","sourcesContent":["export { ajax } from '../internal/observable/dom/ajax';\nexport { AjaxResponse, AjaxError, AjaxTimeoutError } from '../internal/observable/dom/AjaxObservable';\n//# sourceMappingURL=index.js.map","import { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        let progId;\n        try {\n            const progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (let i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers = null) {\n    return new AjaxObservable({ method: 'GET', url, headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url, body, headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url, headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url, body, headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url, body, headers });\n}\nconst mapResponse = map((x, index) => x.response);\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url,\n        responseType: 'json',\n        headers\n    }));\n}\nexport class AjaxObservable extends Observable {\n    constructor(urlOrRequest) {\n        super();\n        const request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (const prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        this.request = request;\n    }\n    _subscribe(subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    }\n}\nAjaxObservable.create = (() => {\n    const create = (urlOrRequest) => {\n        return new AjaxObservable(urlOrRequest);\n    };\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n})();\nexport class AjaxSubscriber extends Subscriber {\n    constructor(destination, request) {\n        super(destination);\n        this.request = request;\n        this.done = false;\n        const headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        let contentTypeHeader = this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = this.serializeBody(request.body, this.getHeader(request.headers, 'Content-Type'));\n        this.send();\n    }\n    next(e) {\n        this.done = true;\n        const { xhr, request, destination } = this;\n        let result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    }\n    send() {\n        const { request, request: { user, method, url, async, password, headers, body } } = this;\n        try {\n            const xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    }\n    serializeBody(body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            const splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(key => `${encodeURIComponent(key)}=${encodeURIComponent(body[key])}`).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    }\n    setHeaders(xhr, headers) {\n        for (let key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    }\n    getHeader(headers, headerName) {\n        for (let key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    }\n    setupEvents(xhr, request) {\n        const progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            const { subscriber, progressSubscriber, request } = xhrTimeout;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            let error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                let xhrProgress;\n                xhrProgress = function (e) {\n                    const { progressSubscriber } = xhrProgress;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress;\n                }\n                xhrProgress.progressSubscriber = progressSubscriber;\n            }\n            let xhrError;\n            xhrError = function (e) {\n                const { progressSubscriber, subscriber, request } = xhrError;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                let error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError;\n            xhrError.request = request;\n            xhrError.subscriber = this;\n            xhrError.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            const { subscriber, progressSubscriber, request } = xhrLoad;\n            if (this.readyState === 4) {\n                let status = this.status === 1223 ? 204 : this.status;\n                let response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status === 0) {\n                    status = response ? 200 : 0;\n                }\n                if (status < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    let error;\n                    try {\n                        error = new AjaxError('ajax error ' + status, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    }\n    unsubscribe() {\n        const { done, xhr } = this;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        super.unsubscribe();\n    }\n}\nexport class AjaxResponse {\n    constructor(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n}\nfunction AjaxErrorImpl(message, xhr, request) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n    return this;\n}\nAjaxErrorImpl.prototype = Object.create(Error.prototype);\nexport const AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport const AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map","import { AjaxObservable } from './AjaxObservable';\nexport const ajax = AjaxObservable.create;\n//# sourceMappingURL=ajax.js.map","const __window = typeof window !== 'undefined' && window;\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nconst __global = typeof global !== 'undefined' && global;\nconst _root = __window || __global || __self;\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\nexport { _root as root };\n//# sourceMappingURL=root.js.map","import { FormControl, ValidationErrors, Validators, AsyncValidatorFn, NG_ASYNC_VALIDATORS, FormGroup } from '@angular/forms';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nexport class AppValidators {\r\n  static filmExists(formControl: FormControl) {\r\n    const url = `/api/film?number=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((film) => film ? { filmExists: true } : null)\r\n      );\r\n  }\r\n  static catalogExists(formControl: FormControl) {\r\n    const url = `/api/catalog/profil?number=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((catalog) => catalog ? { catalogExists: true } : null)\r\n      );\r\n  }\r\n  static systemExists(formControl: FormControl) {\r\n    const url = `/api/catalog/system?name=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((system) => system ? { systemExists: true } : null)\r\n      );\r\n  }\r\n  static producerExists(formControl: FormControl) {\r\n    const url = `/api/film/producer?name=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((producer) => producer ? { producerExists: true } : null)\r\n      );\r\n  }\r\n\r\n  static clientExists(formControl: FormControl) {\r\n    const url = `/api/client?nip=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((client) => client ? { clientExists: true } : null)\r\n      );\r\n  }\r\n\r\n  static myCompanyExists(formControl: FormControl) {\r\n    const url = `/api/mycompany?nip=${formControl.value}`;\r\n    return ajax.getJSON(url)\r\n      .pipe(\r\n        map((mycompany) => mycompany ? { mycompanyExists: true } : null)\r\n      );\r\n  }\r\n\r\n\r\n  static validatenip(formControl: FormControl): ValidationErrors {\r\n    if (formControl.value != null) {\r\n      let nip = formControl.value;\r\n      let nipWithoutDashes = nip.replace(/-/g, \"\");\r\n      let reg = /^[0-9]{10}$/;\r\n      return reg.test(nipWithoutDashes) ? null : { nipFormat: true };\r\n    }\r\n  }\r\n\r\n  static validateregon9(formControl: FormControl): ValidationErrors {\r\n    if (formControl.value != null) {\r\n      let regon = formControl.value;\r\n      if (regon == \"\") { return null }\r\n      let reg = /^[0-9]{9}$/;\r\n      return reg.test(regon) ? null : { regonFormat: true };\r\n    }\r\n  }\r\n\r\n  static nomatch(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      if (matchingControl.errors && !matchingControl.errors.nomatch) {\r\n          // return if another validator has already found an error on the matchingControl\r\n          return;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n          matchingControl.setErrors({ nomatch: true });\r\n      } else {\r\n          matchingControl.setErrors(null);\r\n      }\r\n  }\r\n  }\r\n}"],"sourceRoot":"webpack:///","file":"default~catalog-catalog-module~contractor-contractor-module~films-films-module~settings-settings-module-es5.js"}