{"version":3,"sources":["webpack:///src/app/films/producer-add-form/producer-add-form.component.ts","webpack:///src/app/films/producer-add-form/producer-add-form.component.html","webpack:///src/app/films/films-routing.module.ts","webpack:///src/app/films/film-main/film-main.component.ts","webpack:///src/app/films/film-main/film-main.component.html","webpack:///src/app/films/film-add-form/film-add-form.component.ts","webpack:///src/app/films/film-add-form/film-add-form.component.html","webpack:///src/app/films/films.module.ts"],"names":["ProducerAddFormComponent","ref","config","filmService","infoPopup","loading","producerData","data","formProducer","producerName","validators","required","asyncValidators","producerExists","updateOn","patchValue","id","close","addProducer","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","updateProducer","showSuccessUpdate","showErrorUpdate","selector","templateUrl","styleUrls","routes","path","component","FilmsRoutingModule","forChild","imports","exports","FilmMainComponent","dialogService","auth","confirmationService","film","producer","positionpersite","onErr","number","name","ecoPlastNumber","ralNumber","imgLink","status","NIEDOSTEPNA","loadData","available","label","DOSTEPNA","DOSTEPNOSCOGRANICZONA","displayDialogOkleina","loadProducersSelect","getOklieny","showErrorDownload","push","getCountOkleina","filmCount","showErrorCount","getCountProducer","producerCount","selectedOkleina","dialogRef","open","header","onClose","console","log","rowData","width","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteOklina","showSuccessDelete","showErrorDelete","deleteProducer","showDialogToAddFilm","showDialogToAddProducer","onDialogHide","FilmAddFormComponent","filmData","formFilm","otherNumber","surchargePercentage","maxWidth","test","find","x","filmExists","event","selectedFilm","target","addOklina","updateOkleina","FilmsModule","declarations","providers","entryComponents"],"mappings":"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","file":"films-films-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { FilmsService } from \"../film-service/films.service\";\nimport { AppValidators } from \"../../_validators/AppValidators\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-producer-add-form\",\n  templateUrl: \"./producer-add-form.component.html\",\n  styleUrls: [\"./producer-add-form.component.scss\"],\n})\nexport class ProducerAddFormComponent implements OnInit {\n  formProducer: FormGroup;\n  producerData: any;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private filmService: FilmsService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.producerData = config.data;\n  }\n\n  ngOnInit() {\n    this.formProducer = new FormGroup({\n      producerName: new FormControl(\"\", {\n        validators: [Validators.required],\n        asyncValidators: [AppValidators.producerExists],\n        updateOn: \"blur\",\n      }),\n    });\n    if (this.producerData) {\n      this.formProducer.patchValue(this.producerData);\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewProducer() {\n    this.loading = true;\n    this.filmService.addProducer(this.formProducer.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"producenta\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"producenta\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateProducer() {\n    this.loading = true;\n    this.filmService\n      .updateProducer(this.producerData.id, this.formProducer.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"producenta\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"producenta\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formProducer\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"producerNameid\"\n          >Nazwa Producenta</label\n        >\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formProducer.get('producerName')\"\n          type=\"text\"\n          id=\"producerNameid\"\n          required\n          autofocus\n          autocomplete=\"off\"\n        />\n\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formProducer.get('producerName').hasError('required') &&\n            formProducer.get('producerName').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formProducer.get('producerName').hasError('producerExists') &&\n            formProducer.get('producerName').touched\n          \"\n        >\n          nazwa producenta została już dodana\n        </p>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!producerData\"\n      [disabled]=\"formProducer.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addNewProducer()\"\n      pTooltip=\"Dodaj nowego producenta\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"producerData\"\n      [disabled]=\"formProducer.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateProducer()\"\n      pTooltip=\"Aktualizacja producenta\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FilmMainComponent } from './film-main/film-main.component';\n\n\nconst routes: Routes = [\n\n  { path: '', component: FilmMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FilmsRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  FilmsService,\n  Okleina,\n  OkleinaEnum,\n  Producent,\n} from \"../film-service/films.service\";\nimport { SelectItem, ConfirmationService } from \"primeng/api\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { AuthService } from \"src/app/_services/auth.service\";\nimport { FilmAddFormComponent } from \"../film-add-form/film-add-form.component\";\nimport { ProducerAddFormComponent } from \"../producer-add-form/producer-add-form.component\";\nimport { DialogService } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-film-main\",\n  templateUrl: \"./film-main.component.html\",\n  styleUrls: [\"./film-main.component.scss\"],\n})\nexport class FilmMainComponent implements OnInit {\n  film: Okleina[] = [];\n  producer: Producent[] = [];\n  positionpersite = 10;\n\n  onErr: Okleina = {\n    id: 0,\n    number: \"---\",\n    name: \"---\",\n    producer: \"---\",\n    ecoPlastNumber: \"---\",\n    ralNumber: \"---\",\n    imgLink: \"---\",\n    status: OkleinaEnum.NIEDOSTEPNA,\n  };\n  filmCount: number;\n  producerCount: number;\n  err: boolean;\n  newFilm: boolean;\n  available: SelectItem[];\n  displayDialogOkleina: boolean;\n  selectedOkleina: any;\n  loading = false;\n\n  constructor(\n    public dialogService: DialogService,\n    public auth: AuthService,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n    this.available = [\n      { label: \"Dostępna\", value: OkleinaEnum.DOSTEPNA },\n      { label: \"Niedostępna\", value: OkleinaEnum.NIEDOSTEPNA },\n      { label: \"Dost. Ograniczona\", value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n    ];\n  }\n\n  loadData() {\n    this.loading = true;\n    this.displayDialogOkleina = false;\n    this.filmService.loadProducersSelect();\n\n    this.filmService.getOklieny().subscribe({\n      next: (res) => {\n        this.film = res;\n        this.err = false;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"okleiny\");\n        this.err = true;\n        this.film.push(this.onErr);\n      },\n      complete: () => {\n        this.loading = false;\n      },\n    });\n\n    this.filmService.getCountOkleina().subscribe({\n      next: (res) => {\n        this.filmCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"oklein\");\n      },\n      complete: () => {},\n    });\n\n    this.filmService.getCountProducer().subscribe({\n      next: (res) => {\n        this.producerCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"producentów\");\n      },\n      complete: () => {},\n    });\n  }\n\n  onDialogHide() {\n    this.displayDialogOkleina = false;\n    this.selectedOkleina = null;\n  }\n\n  showDialogFilm(data) {\n    this.displayDialogOkleina = true;\n    this.selectedOkleina = data;\n  }\n\n  showDialogToAddFilm() {\n    const dialogRef = this.dialogService.open(FilmAddFormComponent, {\n      header: \"Nowa okleina\",\n      // width: '550px'\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog add film was closed\");\n    });\n  }\n\n  showDialogToUpdateFilm(rowData) {\n    const dialogRef = this.dialogService.open(FilmAddFormComponent, {\n      header: \"Aktualizacja okleiny\",\n      data: rowData,\n      //  width: '550px',\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update film was closed\");\n    });\n  }\n\n  showDialogToAddProducer() {\n    const dialogRef = this.dialogService.open(ProducerAddFormComponent, {\n      header: \"Nowy producent\",\n      width: \"450px\",\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog add producer was closed\");\n    });\n  }\n\n  showDialogToUpdateProducer(rowData) {\n    const dialogRef = this.dialogService.open(ProducerAddFormComponent, {\n      header: \"Aktualizacja producenta\",\n      data: rowData,\n      width: \"450px\",\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog update producer was closed\");\n    });\n  }\n\n  onRowDeleteFilm(film: Okleina) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + film.name + \"?\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.filmService.deleteOklina(film.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"okleiny\");\n          },\n          error: (err) => {\n            console.log(err);\n            this.infoPopup.showErrorDelete(\"okleiny\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n\n  onRowDeleteProducer(producer: Producent) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + producer.producerName + \"?\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.filmService.deleteProducer(producer.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"producent\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"producent\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-pause\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Folia</p>\n                <p class=\"card-title\">{{ filmCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddFilm()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-tags\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Producenci</p>\n                <p class=\"card-title\">{{ producerCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddProducer()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<p-tabView>\n  <p-tabPanel header=\"Okleiny\">\n    <p-table\n      #okl\n      styleClass=\"p-datatable-striped\"\n      selectionMode=\"single\"\n      [value]=\"film\"\n      [loading]=\"loading\"\n      dataKey=\"id\"\n      editMode=\"row\"\n      sortMode=\"multiple\"\n      [paginator]=\"true\"\n      [rows]=\"10\"\n      [rowsPerPageOptions]=\"[10, 20, 50]\"\n      [showCurrentPageReport]=\"true\"\n      currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n      [filterDelay]=\"0\"\n      [autoLayout]=\"true\"\n      [globalFilterFields]=\"[\n        'number',\n        'name',\n        'producer.producerName',\n        'ralNumber',\n        'ecoPlastNumber'\n      ]\"\n      [rowHover]=\"true\"\n    >\n      <ng-template pTemplate=\"caption\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <span>Lista Oklein</span>\n          </div>\n          <div class=\"col\" style=\"text-align: end\">\n            <input\n              pInputText\n              type=\"text\"\n              (input)=\"okl.filterGlobal($event.target.value, 'contains')\"\n              placeholder=\"Wyszukiwarka\"\n            />\n          </div>\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"header\">\n        <tr class=\"small-row-table-head\">\n          <th>Okleina</th>\n          <th pSortableColumn=\"number\">\n            Numer<p-sortIcon field=\"number\"></p-sortIcon>\n          </th>\n          <th pSortableColumn=\"name\">\n            Name <p-sortIcon field=\"name\"></p-sortIcon>\n          </th>\n          <th pSortableColumn=\"producer\">\n            Producent<p-sortIcon field=\"producer\"></p-sortIcon>\n          </th>\n          <th pSortableColumn=\"maxWidth\">\n            Maks szer. (mm)<p-sortIcon field=\"maxWidth\"></p-sortIcon>\n          </th>\n          <th pSortableColumn=\"ralNumber\">\n            Odp. RAL<p-sortIcon field=\"ralNumber\"></p-sortIcon>\n          </th>\n          <th pSortableColumn=\"otherNumber\">\n            Numer odp.<p-sortIcon field=\"otherNumber\"> </p-sortIcon>\n          </th>\n          <th>Dopłata %</th>\n          <th pSortableColumn=\"status\">\n            Status<p-sortIcon field=\"status\"></p-sortIcon>\n          </th>\n          <th style=\"min-width: 90px; width: 90px\"></th>\n        </tr>\n      </ng-template>\n      <ng-template\n        pTemplate=\"body\"\n        let-rowData\n        let-editing=\"editing\"\n        let-ri=\"rowIndex\"\n      >\n        <tr\n          [pEditableRow]=\"rowData\"\n          class=\"small-row-table-body\"\n          [pSelectableRow]=\"rowData\"\n        >\n          <td class=\"text-center\">\n            <img\n              src=\"{{ rowData.imgLink }}\"\n              width=\"40\"\n              height=\"40\"\n              (click)=\"showDialogFilm(rowData.imgLink)\"\n            />\n          </td>\n          <td>\n            {{ rowData.number }}\n          </td>\n          <td>\n            {{ rowData.name }}\n          </td>\n          <td>\n            {{ rowData.producer.producerName }}\n          </td>\n          <td>\n            {{ rowData.maxWidth }}\n          </td>\n          <td>\n            {{ rowData.ralNumber }}\n          </td>\n          <td>\n            {{ rowData.otherNumber }}\n          </td>\n          <td>\n            {{ rowData.surchargePercentage }}\n          </td>\n          <td>\n            <div [ngSwitch]=\"rowData.status\" class=\"text-center\">\n              <div *ngSwitchCase=\"'DOSTEPNA'\" class=\"status-film status-dost\">\n                DOST.\n              </div>\n              <div\n                *ngSwitchCase=\"'NIEDOSTEPNA'\"\n                class=\"status-film status-niedost\"\n              >\n                NIEDOST.\n              </div>\n              <div\n                *ngSwitchCase=\"'DOSTEPNOSCOGRANICZONA'\"\n                class=\"status-film status-ogr\"\n              >\n                OGRAN.\n              </div>\n            </div>\n          </td>\n\n          <td class=\"edit-col\">\n            <div class=\"d-flex justify-content-center\">\n              <button\n                appPermission\n                permission=\"filmWrite\"\n                pButton\n                type=\"button\"\n                (click)=\"showDialogToUpdateFilm(rowData)\"\n                pTooltip=\"Edycja Okleiny\"\n                icon=\"pi pi-pencil\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n\n              <button\n                appPermission\n                permission=\"filmDelete\"\n                pButton\n                type=\"button\"\n                (click)=\"onRowDeleteFilm(rowData)\"\n                pTooltip=\"Usuwanie\"\n                icon=\"pi pi-trash\"\n                class=\"p-button-sm ml-1 sb-button red\"\n              ></button>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"8\" style=\"text-align: left\">Brak danych.</td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </p-tabPanel>\n\n  <p-tabPanel header=\"Producenci\">\n    <ng-template pTemplate=\"content\">\n      <p-table\n        #pr\n        styleClass=\"p-datatable-striped\"\n        selectionMode=\"single\"\n        [value]=\"filmService.producers\"\n        dataKey=\"id\"\n        [paginator]=\"true\"\n        [rows]=\"10\"\n        [rowsPerPageOptions]=\"[10, 20, 50]\"\n        [showCurrentPageReport]=\"true\"\n        currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n        [filterDelay]=\"0\"\n        [globalFilterFields]=\"['producerName']\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <span>Producenci</span>\n            </div>\n            <div class=\"col\" style=\"text-align: end\">\n              <input\n                pInputText\n                type=\"text\"\n                (input)=\"pr.filterGlobal($event.target.value, 'contains')\"\n                placeholder=\"Wyszukiwarka\"\n              />\n            </div>\n          </div>\n        </ng-template>\n\n        <ng-template pTemplate=\"header\">\n          <tr class=\"small-row-table-head\">\n            <th style=\"width: 40px\">ID</th>\n            <th pSortableColumn=\"producerName\">\n              Nazwa Producenta<p-sortIcon field=\"producerName\"> </p-sortIcon>\n            </th>\n            <th style=\"min-width: 90px; width: 90px\"></th>\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"body\" let-rowData let-ri=\"rowIndex\">\n          <tr class=\"small-row-table-body\" [pSelectableRow]=\"rowData\">\n            <td>\n              {{ rowData.id }}\n            </td>\n            <td>\n              {{ rowData.producerName }}\n            </td>\n            <td class=\"edit-col\">\n              <button\n                appPermission\n                permission=\"producerWrite\"\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToUpdateProducer(rowData)\"\n                icon=\"pi pi-pencil\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n\n              <button\n                appPermission\n                permission=\"producerDelete\"\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"onRowDeleteProducer(rowData)\"\n                icon=\"pi pi-trash\"\n                class=\"p-button-sm ml-1 sb-button red\"\n              ></button>\n            </td>\n          </tr>\n        </ng-template>\n\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td colspan=\"3\" style=\"text-align: left\">Brak danych.</td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </ng-template>\n  </p-tabPanel>\n</p-tabView>\n\n<p-dialog\n  header=\"Okleina\"\n  [(visible)]=\"displayDialogOkleina\"\n  [minY]=\"70\"\n  showEffect=\"fade\"\n  [modal]=\"true\"\n  [style]=\"{ width: '500px' }\"\n  (onAfterHide)=\"onDialogHide()\"\n  [contentStyle]=\"{ padding: '2em', textAlign: 'center' }\"\n>\n  <div *ngIf=\"selectedOkleina\">\n    <img width=\"400px\" src=\"{{ selectedOkleina }}\" />\n  </div>\n</p-dialog>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FilmsService, OkleinaEnum } from \"../film-service/films.service\";\nimport { SelectItem } from \"primeng/api\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { AppValidators } from \"src/app/_validators/AppValidators\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-film-add-form\",\n  templateUrl: \"./film-add-form.component.html\",\n  styleUrls: [\"./film-add-form.component.scss\"],\n})\nexport class FilmAddFormComponent implements OnInit {\n  formFilm: FormGroup;\n  filmData: any;\n  loading = false;\n\n  available: SelectItem[] = [\n    { label: \"Dostępna\", value: OkleinaEnum.DOSTEPNA },\n    { label: \"Niedostępna\", value: OkleinaEnum.NIEDOSTEPNA },\n    { label: \"Dost. Ograniczona\", value: OkleinaEnum.DOSTEPNOSCOGRANICZONA },\n  ];\n  selectedFilm: any;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    public filmService: FilmsService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.filmData = config.data;\n  }\n\n  ngOnInit() {\n    if (this.filmData) {\n      this.formFilm = new FormGroup({\n        number: new FormControl(\"\", { validators: [Validators.required] }),\n        name: new FormControl(\"\", { validators: [Validators.required] }),\n        producer: new FormControl(\"\", { validators: [Validators.required] }),\n        imgLink: new FormControl(\"\"),\n        status: new FormControl(\"\", { validators: [Validators.required] }),\n        ralNumber: new FormControl(\"\"),\n        otherNumber: new FormControl(\"\"),\n        surchargePercentage: new FormControl(\"\"),\n        maxWidth: new FormControl(\"\"),\n      });\n      let test = this.available.find((x) => x.value == this.filmData.status);\n      this.filmData.status = test;\n      this.formFilm.patchValue(this.filmData);\n    } else {\n      this.formFilm = new FormGroup({\n        number: new FormControl(\"\", {\n          validators: [Validators.required],\n          asyncValidators: [AppValidators.filmExists],\n          updateOn: \"blur\",\n        }),\n        name: new FormControl(\"\", { validators: [Validators.required] }),\n        producer: new FormControl(\"\", { validators: [Validators.required] }),\n        imgLink: new FormControl(\"\"),\n        status: new FormControl(this.available[0], {\n          validators: [Validators.required],\n        }),\n        ralNumber: new FormControl(\"\"),\n        otherNumber: new FormControl(\"\"),\n        surchargePercentage: new FormControl(\"\"),\n        maxWidth: new FormControl(\"\"),\n      });\n    }\n  }\n\n  selectFilm(event: Event) {\n    this.selectedFilm = (event.target as HTMLSelectElement).value;\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewFilm() {\n    this.loading = true;\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    this.filmService.addOklina(this.formFilm.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"okleiny\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.loading = false;\n        this.infoPopup.showErrorAdd(\"okleiny\");\n      },\n      complete: () => {},\n    });\n  }\n\n  updateFilm() {\n    this.loading = true;\n    this.formFilm.value.status = this.formFilm.value.status.value;\n    this.filmService\n      .updateOkleina(this.filmData.id, this.formFilm.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"okleiny\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"okleiny\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formFilm\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"producer\">Producent *</label>\n        <p-dropdown\n          id=\"producer\"\n          [style]=\"{ width: '100%' }\"\n          [options]=\"filmService.producersSelect\"\n          [filter]=\"true\"\n          filterBy=\"producerName,value.producerName\"\n          [formControl]=\"formFilm.get('producer')\"\n          placeholder=\"wybierz producenta\"\n          required\n        ></p-dropdown>\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formFilm.get('producer').hasError('required') &&\n            formFilm.get('producer').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"number\">Numer *</label>\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('number')\"\n          autofocus\n          type=\"text\"\n          id=\"number\"\n          required\n          autocomplete=\"off\"\n          autofocus\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formFilm.get('number').hasError('required') &&\n            formFilm.get('number').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formFilm.get('number').hasError('filmExists') &&\n            formFilm.get('number').touched\n          \"\n        >\n          ten numer znajduje się na liście\n        </p>\n      </div>\n\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"name\">Nazwa *</label>\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('name')\"\n          type=\"text\"\n          id=\"name\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formFilm.get('name').hasError('required') &&\n            formFilm.get('name').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"ralNumber\">Odp. RAL</label>\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('ralNumber')\"\n          type=\"text\"\n          id=\"ralNumber\"\n          autocomplete=\"off\"\n        />\n      </div>\n\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"otherNumber\">Nr. odpowiednik</label>\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('otherNumber')\"\n          type=\"text\"\n          id=\"otherNumber\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"surchargePercentage\"\n          >Dopłata %</label\n        >\n        <p-inputNumber\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('surchargePercentage')\"\n          suffix=\"%\"\n          :min=\"0\"\n          showButtons=\"true\"\n          id=\"surchargePercentage\"\n          placeholder=\"%\"\n          autocomplete=\"off\"\n        ></p-inputNumber>\n      </div>\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"maxWidth\">Maks szer. (mm)</label>\n        <p-inputNumber\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('maxWidth')\"\n          suffix=\" mm\"\n          :min=\"0\"\n          showButtons=\"true\"\n          id=\"maxWidth\"\n          autocomplete=\"off\"\n        ></p-inputNumber>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"status\">Status *</label>\n        <p-dropdown\n          inputId=\"status\"\n          [style]=\"{ width: '100%' }\"\n          [options]=\"available\"\n          [formControl]=\"formFilm.get('status')\"\n          placeholder=\"Wybierz\"\n          optionLabel=\"label\"\n          required\n        >\n        </p-dropdown>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <label class=\"sb-small-label\" for=\"imgLink\">Obraz</label>\n        <input\n          pInputText\n          class=\"fullwidth\"\n          [formControl]=\"formFilm.get('imgLink')\"\n          type=\"text\"\n          id=\"imgLink\"\n          autocomplete=\"off\"\n        />\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!filmData\"\n      [disabled]=\"formFilm.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addNewFilm()\"\n      pTooltip=\"Dodaj nową okleinę\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"filmData\"\n      [disabled]=\"formFilm.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateFilm()\"\n      pTooltip=\"Aktualizacja okleiny\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FilmMainComponent } from \"./film-main/film-main.component\";\nimport { FilmsRoutingModule } from \"./films-routing.module\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { TableModule } from \"primeng/table\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { ButtonModule } from \"primeng/button\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { FilmAddFormComponent } from \"./film-add-form/film-add-form.component\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { FieldsetModule } from \"primeng/fieldset\";\nimport { CodeHighlighterModule } from \"primeng/codehighlighter\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { ProducerAddFormComponent } from \"./producer-add-form/producer-add-form.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { SharedModule } from \"../_shared/shared/shared.module\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { EditorModule } from \"primeng/editor\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { TooltipModule } from \"primeng/tooltip\";\n\n@NgModule({\n  declarations: [\n    FilmMainComponent,\n    FilmAddFormComponent,\n    ProducerAddFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    FilmsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatDialogModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    ProgressSpinnerModule,\n    InputNumberModule,\n    InputTextareaModule,\n    AutoCompleteModule,\n    CheckboxModule,\n    EditorModule,\n    KeyFilterModule,\n    TooltipModule,\n  ],\n  providers: [DialogService],\n  entryComponents: [FilmAddFormComponent, ProducerAddFormComponent],\n})\nexport class FilmsModule {}\n"]}