{"version":3,"sources":["webpack:///src/app/catalog/catalog.module.ts","webpack:///src/app/catalog/form/system-add-form/system-add-form.component.ts","webpack:///src/app/catalog/form/system-add-form/system-add-form.component.html","webpack:///src/app/catalog/catalog-routing.module.ts","webpack:///src/app/catalog/form/catalog-add-form/catalog-add-form.component.ts","webpack:///src/app/catalog/form/catalog-add-form/catalog-add-form.component.html","webpack:///src/app/catalog/catalog-main/catalog-main.component.ts","webpack:///src/app/catalog/catalog-main/catalog-main.component.html"],"names":["CatalogModule","declarations","imports","providers","entryComponents","SystemAddFormComponent","ref","catalogService","infoPopup","config","loading","systemData","data","formSystem","name","validators","required","comment","patchValue","asyncValidators","systemExists","updateOn","id","close","addSystem","value","subscribe","next","res","showSuccessAdd","exit","error","err","showErrorAdd","complete","updateSystem","showSuccessUpdate","showErrorUpdate","selector","templateUrl","styleUrls","routes","path","component","CatalogRoutingModule","forChild","exports","CatalogAddFormComponent","catalogData","filteredSystems","systems","formCatalog","number","profileType","systemProfil","offerName","dimOuter","dimInner","dimOneSide","dimCenterSide","dimTwoSide","dimTwoSideInner","dimTwoSideOuter","actualMeasurement","hard","alu","comments","event","i","length","sys","toLowerCase","indexOf","query","push","isString","tmpSys","addCatalog","updateCatalog","get","setValue","String","filterSystems","dupliName","target","CatalogMainComponent","dialogService","auth","confirmationService","color","catalog","system","loadingCatalog","onErrSystem","onErr","clonedCatalogs","clonedSystem","loadData","loadSystems","getCatalogs","showErrorDownload","getCountCatalog","catalogCount","showErrorCount","getCountSystem","systemCount","kat","getCatalogsBySystem","katalog","confirm","message","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteCatalog","showSuccessDelete","showErrorDelete","val","deleteSystem","open","header","width","onClose","console","log","rowData","showDialogToAddCatalog","showDialogToAddSystem","transform","opacity","animations"],"mappingsaA,a;;;;;cAAAA;;;;2BAAAA,a;AAAa,S;AAAA,mBAHb,CAAC,oEAAD,C;AAAe,kBA1BjB,CACP,4DADO,EAEP,6EAFO,EAGP,qEAHO,EAIP,yDAJO,EAKP,0DALO,EAMP,+DANO,EAOP,2DAPO,EAQP,2DARO,EASP,8DATO,EAUP,gEAVO,EAWP,8EAXO,EAYP,kEAZO,EAaP,0EAbO,EAcP,wEAdO,EAeP,yEAfO,EAgBP,gEAhBO,EAiBP,kEAjBO,EAkBP,4DAlBO,EAmBP,0EAnBO,EAoBP,4DApBO,EAqBP,8EArBO,EAsBP,kEAtBO,EAuBP,8DAvBO,EAwBP,sEAxBO,CA0BiB;;;;4HAGfA,a,EAAa;AAAA,yBAjCtB,yFAiCsB,EAhCtB,yGAgCsB,EA/BtB,sGA+BsB;AA/BA,oBAGtB,4DAHsB,EAItB,6EAJsB,EAKtB,qEALsB,EAMtB,yDANsB,EAOtB,0DAPsB,EAQtB,+DARsB,EAStB,2DATsB,EAUtB,2DAVsB,EAWtB,8DAXsB,EAYtB,gEAZsB,EAatB,8EAbsB,EActB,kEAdsB,EAetB,0EAfsB,EAgBtB,wEAhBsB,EAiBtB,yEAjBsB,EAkBtB,gEAlBsB,EAmBtB,kEAnBsB,EAoBtB,4DApBsB,EAqBtB,0EArBsB,EAsBtB,4DAtBsB,EAuBtB,8EAvBsB,EAwBtB,kEAxBsB,EAyBtB,8DAzBsB,EA0BtB,sEA1BsB;AA+BA,S;AALL,O;;;;;wEAKRA,a,EAAa;gBAnCzB,sDAmCyB;iBAnChB;AACRC,wBAAY,EAAE,CACZ,yFADY,EAEZ,yGAFY,EAGZ,sGAHY,CADN;AAMRC,mBAAO,EAAE,CACP,4DADO,EAEP,6EAFO,EAGP,qEAHO,EAIP,yDAJO,EAKP,0DALO,EAMP,+DANO,EAOP,2DAPO,EAQP,2DARO,EASP,8DATO,EAUP,gEAVO,EAWP,8EAXO,EAYP,kEAZO,EAaP,0EAbO,EAcP,wEAdO,EAeP,yEAfO,EAgBP,gEAhBO,EAiBP,kEAjBO,EAkBP,4DAlBO,EAmBP,0EAnBO,EAoBP,4DApBO,EAqBP,8EArBO,EAsBP,kEAtBO,EAuBP,8DAvBO,EAwBP,sEAxBO,CAND;AAgCRC,qBAAS,EAAE,CAAC,oEAAD,CAhCH;AAiCRC,2BAAe,EAAE,CAAC,sGAAD,EAAyB,yGAAzB;AAjCT,W;AAmCgB,U;;;;;;;;;;;;;;;;;;AC/D1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcQ;;AAOE;;AACF;;;;;;AAEA;;AAOE;;AACF;;;;;;;;AA0DJ;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AAKD;;;;;;AATC;;;;;;;;AAWF;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AAKD;;;;;;AATC;;;;;;;;;;;;;AAWF;;;;AAEE;;;;;;;;;;UDvGOC,sB;AAKX,wCACSC,GADT,EAEUC,cAFV,EAGUC,SAHV,EAISC,MAJT,EAIoC;AAAA;;AAH3B,eAAAH,GAAA,GAAAA,GAAA;AACC,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACD,eAAAC,MAAA,GAAAA,MAAA;AAPT,eAAAC,OAAA,GAAU,KAAV;AASE,eAAKC,UAAL,GAAkBF,MAAM,CAACG,IAAzB;AACD;;;;qCAEU;AACT,gBAAI,KAAKD,UAAT,EAAqB;AACnB,mBAAKE,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BC,oBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEC,4BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,iBAApB,CADwB;AAE9BC,uBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAFqB,eAAd,CAAlB;AAIA,mBAAKJ,UAAL,CAAgBK,UAAhB,CAA2B,KAAKP,UAAhC;AACD,aAND,MAMO;AACL,mBAAKE,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC9BC,oBAAI,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AACxBC,4BAAU,EAAE,CAAC,0DAAWC,QAAZ,CADY;AAExBG,iCAAe,EAAE,CAAC,+EAAcC,YAAf,CAFO;AAGxBC,0BAAQ,EAAE;AAHc,iBAApB,CADwB;AAM9BJ,uBAAO,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AANqB,eAAd,CAAlB;AAQD;AACF;;;+BAEIK,E,EAAI;AACP,iBAAKhB,GAAL,CAASiB,KAAT,CAAeD,EAAf;AACD;;;yCAEc;AAAA;;AACb,iBAAKZ,OAAL,GAAe,IAAf;AACA,iBAAKH,cAAL,CAAoBiB,SAApB,CAA8B,KAAKX,UAAL,CAAgBY,KAA9C,EAAqDC,SAArD,CAA+D;AAC7DC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,qBAAI,CAACpB,SAAL,CAAeqB,cAAf,CAA8B,SAA9B;;AACA,qBAAI,CAACnB,OAAL,GAAe,KAAf;;AACA,qBAAI,CAACoB,IAAL,CAAU,CAAV;AACD,eAL4D;AAM7DC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,qBAAI,CAACxB,SAAL,CAAeyB,YAAf,CAA4B,SAA5B;;AACA,qBAAI,CAACvB,OAAL,GAAe,KAAf;AACD,eAT4D;AAU7DwB,sBAAQ,EAAE,oBAAM,CAAE;AAV2C,aAA/D;AAYD;;;yCAEc;AAAA;;AACb,iBAAKxB,OAAL,GAAe,IAAf;AACA,iBAAKH,cAAL,CACG4B,YADH,CACgB,KAAKxB,UAAL,CAAgBW,EADhC,EACoC,KAAKT,UAAL,CAAgBY,KADpD,EAEGC,SAFH,CAEa;AACTC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACpB,SAAL,CAAe4B,iBAAf,CAAiC,SAAjC;;AACA,sBAAI,CAAC1B,OAAL,GAAe,KAAf;;AACA,sBAAI,CAACoB,IAAL,CAAU,CAAV;AACD,eALQ;AAMTC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAe6B,eAAf,CAA+B,SAA/B;;AACA,sBAAI,CAAC3B,OAAL,GAAe,KAAf;AACD,eATQ;AAUTwB,sBAAQ,EAAE,oBAAM,CAAE;AAVT,aAFb;AAcD;;;;;;;yBArEU7B,sB,EAAsB,uI,EAAA,gJ,EAAA,2J,EAAA,0I;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,iB;AAAA,gB;AAAA,+lE;AAAA;AAAA;ACfnC;;AACE;;AACE;;AACE;;AACE;;AAAiD;;AAAe;;AAChE;;AASA;;AAUA;;AASF;;AACF;;AAEA;;AACE;;AACE;;AAAyC;;AAAI;;AAC7C;;AAIE;;AACE;;AACE;;AACA;;AACA;;AACA;;AAKA;;AAKA;;AACE;;AACA;;AACA;;AACA;;AACF;;AACA;;AAIF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAIE;AAAA,qBAAS,IAAAyB,IAAA,CAAK,CAAL,CAAT;AAAgB,aAAhB;;AAKD;;AACH;;AACA;;AACE;;AAaA;;AAaA;;AAQF;;AACF;;;;AA5HQ;;AAAA;;AAQE;;AAAA;;AAOA;;AAAA;;AAUA;;AAAA;;AAeA;;AAAA;;AADA;;AAmDJ;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;;;;;;;;wEDtGOzB,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTiC,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,UAAMC,MAAM,GAAW,CAErB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OAFqB,CAAvB;;UAUaC,oB;;;;;cAAAA;;;;2BAAAA,oB;AAAoB,S;AAAA,kBAHtB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGsB,EAFrB,4DAEqB;;;;4HAApBG,oB,EAAoB;AAAA;AAAA,oBAFrB,4DAEqB;AAAA,S;AAFT,O;;;;;wEAEXA,oB,EAAoB;gBAJhC,sDAIgC;iBAJvB;AACR1C,mBAAO,EAAE,CAAC,6DAAa2C,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIuB,U;;;;;;;;;;;;;;;;;;ACdjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACyBgB;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;;;;;AAHM;;AAAA;;;;;;AAOV;;AAOE;;AACF;;;;;;AAkBA;;AAOE;;AACF;;;;;;AACA;;AAOE;;AACF;;;;;;AAmBA;;AAOE;;AACF;;;;;;AAkBA;;AAOE;;AACF;;;;;;;;AAgNR;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AAKD;;;;;;AATC;;;;;;;;AAWF;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AAKD;;;;;;AATC;;;;;;;;;;;;;AAWF;;;;AAEE;;;;;;;;;;;;;;;;UD/VOC,uB;AAOX,yCACSzC,GADT,EAESG,MAFT,EAGUF,cAHV,EAIUC,SAJV,EAIuC;AAAA;;AAH9B,eAAAF,GAAA,GAAAA,GAAA;AACA,eAAAG,MAAA,GAAAA,MAAA;AACC,eAAAF,cAAA,GAAAA,cAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAPV,eAAAE,OAAA,GAAU,KAAV;AASE,eAAKsC,WAAL,GAAmBvC,MAAM,CAACG,IAA1B;AACD;;;;qCAEU;AACT,iBAAKqC,eAAL,GAAuB,KAAK1C,cAAL,CAAoB2C,OAA3C;AACA,iBAAKC,WAAL,GAAmB,IAAI,wDAAJ,CAAc;AAC/BC,oBAAM,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAErC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CADuB;AAE/BqC,yBAAW,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEtC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CAFkB;AAG/BsC,0BAAY,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAEvC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CAHiB;AAI/BuC,uBAAS,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB;AAAExC,0BAAU,EAAE,CAAC,0DAAWC,QAAZ;AAAd,eAApB,CAJoB;AAK/BwC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CALqB;AAM/BC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CANqB;AAO/BC,wBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAPmB;AAQ/BC,2BAAa,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CARgB;AAS/BC,wBAAU,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CATmB;AAU/BC,6BAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAVc;AAW/BC,6BAAe,EAAE,IAAI,0DAAJ,CAAgB,EAAhB,CAXc;AAY/BC,+BAAiB,EAAE,IAAI,0DAAJ,CAAgB,KAAhB,CAZY;AAa/BC,kBAAI,EAAE,IAAI,0DAAJ,CAAgB,KAAhB,CAbyB;AAc/BC,iBAAG,EAAE,IAAI,0DAAJ,CAAgB,KAAhB,CAd0B;AAe/BC,sBAAQ,EAAE,IAAI,0DAAJ,CAAgB,EAAhB;AAfqB,aAAd,CAAnB;;AAkBA,gBAAI,KAAKlB,WAAT,EAAsB;AACpB,mBAAKG,WAAL,CAAiBjC,UAAjB,CAA4B,KAAK8B,WAAjC;AACD;AACF;;;wCAEamB,K,EAAO;AACnB,iBAAKlB,eAAL,GAAuB,EAAvB;;AACA,iBAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK7D,cAAL,CAAoB2C,OAApB,CAA4BmB,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AAC3D,kBAAIE,GAAG,GAAG,KAAK/D,cAAL,CAAoB2C,OAApB,CAA4BkB,CAA5B,CAAV;;AACA,kBAAIE,GAAG,CAACxD,IAAJ,CAASyD,WAAT,GAAuBC,OAAvB,CAA+BL,KAAK,CAACM,KAAN,CAAYF,WAAZ,EAA/B,KAA6D,CAAjE,EAAoE;AAClE,qBAAKtB,eAAL,CAAqByB,IAArB,CAA0BJ,GAA1B;AACD;AACF;AACF;;;+BAEIhD,E,EAAI;AACP,iBAAKhB,GAAL,CAASiB,KAAT,CAAeD,EAAf;AACD;;;0CAEe;AAAA;;AACd,iBAAKZ,OAAL,GAAe,IAAf;;AACA,gBAAI,KAAKiE,QAAL,CAAc,KAAKxB,WAAL,CAAiB1B,KAAjB,CAAuB6B,YAArC,CAAJ,EAAwD;AACtD,kBAAIsB,MAAM,GAAkB;AAC1BtD,kBAAE,EAAE,IADsB;AAE1BR,oBAAI,EAAE,KAAKqC,WAAL,CAAiB1B,KAAjB,CAAuB6B;AAFH,eAA5B;AAIA,mBAAKH,WAAL,CAAiB1B,KAAjB,CAAuB6B,YAAvB,GAAsCsB,MAAtC;AACD;;AACD,iBAAKrE,cAAL,CAAoBsE,UAApB,CAA+B,KAAK1B,WAAL,CAAiB1B,KAAhD,EAAuDC,SAAvD,CAAiE;AAC/DC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACpB,SAAL,CAAeqB,cAAf,CAA8B,UAA9B;;AACA,sBAAI,CAACnB,OAAL,GAAe,KAAf;;AACA,sBAAI,CAACoB,IAAL,CAAU,CAAV;AACD,eAL8D;AAM/DC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAeyB,YAAf,CAA4B,UAA5B;;AACA,sBAAI,CAACvB,OAAL,GAAe,KAAf;AACD,eAT8D;AAU/DwB,sBAAQ,EAAE,oBAAM,CAAE;AAV6C,aAAjE;AAYD;;;0CAEe;AAAA;;AACd,iBAAKxB,OAAL,GAAe,IAAf;AACA,iBAAKH,cAAL,CACGuE,aADH,CACiB,KAAK9B,WAAL,CAAiB1B,EADlC,EACsC,KAAK6B,WAAL,CAAiB1B,KADvD,EAEGC,SAFH,CAEa;AACTC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAACpB,SAAL,CAAe4B,iBAAf,CAAiC,UAAjC;;AACA,sBAAI,CAAC1B,OAAL,GAAe,KAAf;;AACA,sBAAI,CAACoB,IAAL,CAAU,CAAV;AACD,eALQ;AAMTC,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAe6B,eAAf,CAA+B,UAA/B;;AACA,sBAAI,CAAC3B,OAAL,GAAe,KAAf;AACD,eATQ;AAUTwB,sBAAQ,EAAE,oBAAM,CAAE;AAVT,aAFb;AAcD;;;oCAESiC,K,EAAO;AACf,iBAAKhB,WAAL,CAAiB4B,GAAjB,CAAqB,WAArB,EAAkCC,QAAlC,CAA2Cb,KAA3C;AACD;;;mCAEQ1C,K,EAAO;AACd,mBAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYwD,MAArD;AACD;;;;;;;yBAtGUlC,uB,EAAuB,uI,EAAA,0I,EAAA,gJ,EAAA,2J;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA,kB;AAAA,gB;AAAA,ktI;AAAA;AAAA;AChBpC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAM;;AAAG;;AAAM;;AAAI;;AACrB;;AACF;;AAEA;;AACE;;AACE;;AAAiD;;AAAM;;AAEvD;;AAKE;AAAA,qBAAkB,IAAAmC,aAAA,QAAlB;AAAuC,aAAvC;;AAKA;;AASF;;AAEA;;AASF;;AACF;;AAEA;;AACE;;AACE;;AAA2C;;AAAM;;AACjD;;AAWA;;AASA;;AASF;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAqB;;AAExB;;AAGE;AAAA,qBAAiB,IAAAC,SAAA,QAAjB;AAAkC,aAAlC;;AAHF;;AAUA;;AASF;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAiB;;AAEpB;;AASA;;AASF;;AACF;;AAEA;;AACE;;AACE;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AAMF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAM;;AAAG;;AAAO;;AAAI;;AACtB;;AACF;;AAEA;;AACE;;AACE;;AAA6C;;AAAU;;AACvD;;AAUF;;AACA;;AACE;;AAA6C;;AAAU;;AACvD;;AAUF;;AACF;;AAEA;;AACE;;AACE;;AAA+C;;AAAY;;AAC3D;;AAUF;;AACA;;AACE;;AAA+C;;AAAU;;AACzD;;AAUF;;AACF;;AAEA;;AACE;;AACE;;AAAkD;;AAAM;;AACxD;;AAUF;;AACF;;AAEA;;AACE;;AACE;;AACG;;AAAe;;AAElB;;AAUF;;AACA;;AACE;;AACG;;AAAe;;AAElB;;AAUF;;AACF;;AAEA;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACF;;AAEA;;AAEA;;AACE;;AACE;;AAAyC;;AAAI;;AAC7C;;AAIE;;AACE;;AACE;;AACA;;AACA;;AACA;;AAKA;;AAKA;;AACE;;AACA;;AACA;;AACA;;AACF;;AACA;;AAIF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAIE;AAAA,qBAAS,IAAArD,IAAA,CAAK,CAAL,CAAT;AAAgB,aAAhB;;AAKD;;AACH;;AACA;;AACE;;AAaA;;AAaA;;AAQF;;AACF;;;;AArXQ;;AAAA;;AAcM;;AAAA;;AACA,qFAAe,aAAf,EAAe,mCAAf,EAAe,aAAf,EAAe,mBAAf,EAAe,UAAf,EAAe,IAAf;;AAqBA;;AAAA;;AAgBA;;AAAA;;AAUA;;AAAA;;AASA;;AAAA;;AAmBA;;AAAA;;AAQA;;AAAA;;AAkBA;;AAAA;;AAQA;;AAAA;;AAaA;;AAAA,iHAAuC,QAAvC,EAAuC,IAAvC;;AAUA;;AAAA,gHAAsC,QAAtC,EAAsC,IAAtC;;AAqBA;;AAAA;;AAaA;;AAAA;;AAgBA;;AAAA;;AAaA;;AAAA;;AAgBA;;AAAA;;AAkBA;;AAAA;;AAeA;;AAAA;;AAcA;;AAAA,8HAAoD,QAApD,EAAoD,IAApD;;AAgBJ;;AAAA;;AADA;;AAmDJ;;AAAA;;AAaA;;AAAA;;AAaA;;AAAA;;;;;;;;;wED9VOiB,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTT,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgHQ;;AACE;;AACE;;AAAM;;AAAe;;AACvB;;AACA;;AACE;;AAEE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAMF;;AACA;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,sCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAQF;;AACF;;;;;;AAfM;;AAAA,wHAA6C,QAA7C,EAA6C,IAA7C;;;;;;;;AAkBN;;AACE;;AACE;;AAAK;;AAAK;;AAAwC;;AACpD;;AACA;;AACE;;AACE;;AAAoB;;AACtB;;AACF;;AACA;;AACE;;AAAK;;AAAU;;AAA2C;;AAC5D;;AACA;;AACE;;AAAK;;AAAM;;AAAmD;;AAChE;;AACA;;AACE;;AAAK;;AAAI;;AACX;;AACA;;AACE;;AAAK;;AAAI;;AACX;;AACA;;AACE;;AAAK;;AAAM;;AACb;;AACA;;AACE;;AAAK;;AAAM;;AACb;;AACA;;AACE;;AAAK;;AAAI;;AACX;;AACA;;AACE;;AAAK;;AAAS;;AAChB;;AACA;;AACE;;AAAK;;AAAS;;AAChB;;AACA;;AACE;;AAAK;;AAAO;;AACd;;AACA;;AACE;;AAAK;;AAAM;;AACb;;AACA;;AACE;;AAAK;;AAAG;;AACV;;AACA;;AACE;;AAAK;;AAAK;;AACZ;;AACA;;AACF;;AACA;;AACE;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,gCAA+B,QAA/B,EAAyC,YAAzC,CAAT;AAA+D,WAA/D;;AAHF;;AAOF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBACmB,kBAAA4C,MAAA,QAA+B,aAA/B,EAC9B,YAD8B,CADnB;AAGd,WAHc;;AAHF;;AASF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBACmB,kBAAAA,MAAA,QAA+B,WAA/B,EAC9B,YAD8B,CADnB;AAGd,WAHc;;AAHF;;AASF;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAER,gCAC6B,mBAD7B,EAGF,YAHE,CAFQ;AAOd,WAPc;;AAHF;;AAaF;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;;;;;;;;;;;;;AAoBS;;AAED;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;;;;;AALC;;AAAA;;AAEA;;;;;;AAMF;;;;;;AAAA;;;;;;;;AAOA;;AAGE;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;;;;;AALC;;AAEA;;;;;;AAMF;;;;;;AAAA;;;;;;;;AAYA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;;;;;AAIE;;;;;;AAIF;;;;;;AAAA;;;;;;;;AAQA;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAGF;;;;;;AAHE,6GAAuC,QAAvC,EAAuC,IAAvC;;;;;;AAMF;;AAGE;;AACF;;;;;;;;AAHE;;AAEA;;AAAA;;;;;;;;AASF;;AACE;AAAA;;AAAA;;AAAA;AAAA;;AAED;;;;;;AAFC,gGAA0B,QAA1B,EAA0B,IAA1B;;;;;;AAKF;;AACE;;AACF;;;;;;;;AAFM;;AACJ;;AAAA;;;;;;AAaN;;AACE;;AAKF;;;;;;;;;AANqC;;AAEjC;;AAAA;;;;;;;;AA3MR;;AAKE;;AACE;;AACF;;AACA;;AACE;;AACE;;AAWA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AASA;;AAGF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAQA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAOA;;AAOF;;AACF;;AAEA;;AACE;;AACE;;AAMA;;AAKF;;AACF;;AAEA;;AACE;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAOF;;AAEA;;AACE;;AACE;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;AAED;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;AACH;;AACF;;AACF;;;;;;;;AA1OE,gGAAwB,gBAAxB,EAAwB,WAAxB;;AAKE;;AAAA;;AAsCA;;AAAA;;AAuJM;;AAAA;;AACJ;;AAAA;;AAKC;;AAAA;;;;;;AAqCP;;AACE;;AACE;;AAKE;;AACF;;AACF;;AACF;;;;;;AATM;;AAAA;;AAIA;;AAAA;;AAE6B;;AAAA;;;;;;AAMnC;;AACE;;AAA0C;;AAAY;;AACxD;;;;;;;;AAuBE;;AACE;;AACE;;AAAM;;AAAO;;AACf;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,wCAAqC,UAArC,CAAT;AAAyD,WAAzD;;AAHF;;AAMF;;AACF;;;;;;AAIA;;AACE;;AACE;;AAAK;;AAAE;;AACT;;AACA;;AACE;;AAAK;;AAAK;;AAAsC;;AAClD;;AACA;;AACE;;AAAK;;AAAI;;AAAyC;;AACpD;;AACA;;AACF;;;;;;;;AAQA;;AAKE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AAEA;;AACE;;AACE;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;AAED;;AAME;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGD;;AACH;;AACF;;AACF;;;;;;AAvCE,iGAAwB,gBAAxB,EAAwB,YAAxB;;AAKE;;AAAA;;AAGA;;AAAA;;AAGK;;AAAA;;;;;;AA+BT;;AACE;;AAAyC;;AAAY;;AACvD;;;;;;;;;;;;;;AAjGJ;;AAgBE;;AAgBA;;AAcA;;AAgDA;;AAKF;;;;;;AA/FE,2GAAgC,WAAhC,EAAgC,IAAhC,EAAgC,MAAhC,EAAgC,EAAhC,EAAgC,oBAAhC,EAAgC,qEAAhC,EAAgC,YAAhC,EAAgC,IAAhC,EAAgC,uBAAhC,EAAgC,IAAhC,EAAgC,aAAhC,EAAgC,CAAhC,EAAgC,oBAAhC,EAAgC,qEAAhC;;;;;;;;;;;;UD1dKC,oB;AAkCX,sCACSC,aADT,EAES/E,cAFT,EAGUC,SAHV,EAIS+E,IAJT,EAKUC,mBALV,EAKkD;AAAA;;AAJzC,eAAAF,aAAA,GAAAA,aAAA;AACA,eAAA/E,cAAA,GAAAA,cAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AACD,eAAA+E,IAAA,GAAAA,IAAA;AACC,eAAAC,mBAAA,GAAAA,mBAAA;AAtCV,eAAAC,KAAA,GAAsB,SAAtB;AACA,eAAAC,OAAA,GAA4B,EAA5B;AACA,eAAAC,MAAA,GAA0B,EAA1B;AACA,eAAAC,cAAA,GAAiB,KAAjB;AAEA,eAAAC,WAAA,GAA6B;AAC3BvE,cAAE,EAAE,CADuB;AAE3BR,gBAAI,EAAE;AAFqB,WAA7B;AAMA,eAAAgF,KAAA,GAAwB;AACtBxE,cAAE,EAAE,CADkB;AAEtBgC,wBAAY,EAAE,KAAKuC,WAFG;AAGtBzC,kBAAM,EAAE,KAHc;AAItBI,oBAAQ,EAAE,KAJY;AAKtBC,oBAAQ,EAAE,KALY;AAMtBC,sBAAU,EAAE,KANU;AAOtBE,sBAAU,EAAE,KAPU;AAQtBC,2BAAe,EAAE,KARK;AAStBC,2BAAe,EAAE,KATK;AAUtBC,6BAAiB,EAAE,KAVG;AAWtBC,gBAAI,EAAE,KAXgB;AAYtBX,uBAAW,EAAE,KAZS;AAatBa,oBAAQ,EAAE;AAbY,WAAxB;AAmBA,eAAA6B,cAAA,GAAkD,EAAlD;AACA,eAAAC,YAAA,GAA+C,EAA/C;AAQI;;;;qCAEO;AACT,iBAAKhE,GAAL,GAAW,KAAX;AACA,iBAAKiE,QAAL;AACD;;;qCAEU;AAAA;;AACT,iBAAKL,cAAL,GAAsB,IAAtB;AACA,iBAAKrF,cAAL,CAAoB2F,WAApB;AAEA,iBAAK3F,cAAL,CAAoB4F,WAApB,GAAkCzE,SAAlC,CAA4C;AAC1CC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAAC8D,OAAL,GAAe9D,GAAf;AACA,sBAAI,CAACI,GAAL,GAAW,KAAX;AACD,eAJyC;AAK1CD,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAe4F,iBAAf,CAAiC,UAAjC;;AACA,sBAAI,CAACpE,GAAL,GAAW,IAAX;;AACA,sBAAI,CAAC0D,OAAL,CAAahB,IAAb,CAAkB,MAAI,CAACoB,KAAvB;AACD,eATyC;AAU1C5D,sBAAQ,EAAE,oBAAM;AACd,sBAAI,CAAC0D,cAAL,GAAsB,KAAtB;AACD;AAZyC,aAA5C;AAeA,iBAAKrF,cAAL,CAAoB8F,eAApB,GAAsC3E,SAAtC,CAAgD;AAC9CC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAAC0E,YAAL,GAAoB1E,GAApB;AACD,eAH6C;AAI9CG,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAe+F,cAAf,CAA8B,UAA9B;AACD,eAN6C;AAO9CrE,sBAAQ,EAAE,oBAAM,CAAE;AAP4B,aAAhD;AAUA,iBAAK3B,cAAL,CAAoBiG,cAApB,GAAqC9E,SAArC,CAA+C;AAC7CC,kBAAI,EAAE,cAACC,GAAD,EAAS;AACb,sBAAI,CAAC6E,WAAL,GAAmB7E,GAAnB;AACD,eAH4C;AAI7CG,mBAAK,EAAE,eAACC,GAAD,EAAS;AACd,sBAAI,CAACxB,SAAL,CAAe+F,cAAf,CAA8B,UAA9B;AACD,eAN4C;AAO7CrE,sBAAQ,EAAE,oBAAM,CAAE;AAP2B,aAA/C;AASD;;;6CAEkBwE,G,EAAK;AAAA;;AACtB,iBAAKhB,OAAL,GAAe,EAAf;AACA,iBAAKE,cAAL,GAAsB,IAAtB;;AACA,gBAAIc,GAAG,IAAI,CAAC,CAAZ,EAAe;AACb,mBAAKnG,cAAL,CAAoB4F,WAApB,GAAkCzE,SAAlC,CAA4C;AAC1CC,oBAAI,EAAE,cAACC,GAAD,EAAS;AACb,wBAAI,CAAC8D,OAAL,GAAe9D,GAAf;AACA,wBAAI,CAACI,GAAL,GAAW,KAAX;AACD,iBAJyC;AAK1CD,qBAAK,EAAE,eAACC,GAAD,EAAS;AACd,wBAAI,CAACxB,SAAL,CAAe4F,iBAAf,CAAiC,UAAjC;;AACA,wBAAI,CAACpE,GAAL,GAAW,IAAX;;AACA,wBAAI,CAAC0D,OAAL,CAAahB,IAAb,CAAkB,MAAI,CAACoB,KAAvB;AACD,iBATyC;AAU1C5D,wBAAQ,EAAE,oBAAM;AACd,wBAAI,CAAC0D,cAAL,GAAsB,KAAtB;AACD;AAZyC,eAA5C;AAcD,aAfD,MAeO;AACL,mBAAKrF,cAAL,CAAoBoG,mBAApB,CAAwCD,GAAG,CAACpF,EAA5C,EAAgDI,SAAhD,CAA0D;AACxDC,oBAAI,EAAE,cAACC,GAAD,EAAS;AACb,wBAAI,CAAC8D,OAAL,GAAe9D,GAAf;AACA,wBAAI,CAACI,GAAL,GAAW,KAAX;AACD,iBAJuD;AAKxDD,qBAAK,EAAE,eAACC,GAAD,EAAS;AACd,wBAAI,CAACxB,SAAL,CAAe4F,iBAAf,CAAiC,UAAjC;;AACA,wBAAI,CAACpE,GAAL,GAAW,IAAX;;AACA,wBAAI,CAAC0D,OAAL,CAAahB,IAAb,CAAkB,MAAI,CAACoB,KAAvB;AACD,iBATuD;AAUxD5D,wBAAQ,EAAE,oBAAM;AACd,wBAAI,CAAC0D,cAAL,GAAsB,KAAtB;AACD;AAZuD,eAA1D;AAcD;AACF;;;6CAEkBgB,O,EAAyB;AAAA;;AAC1C,iBAAKpB,mBAAL,CAAyBqB,OAAzB,CAAiC;AAC/BC,qBAAO,EAAE,4BAA4BF,OAAO,CAACxD,MAApC,GAA6C,GADvB;AAE/B2D,yBAAW,EAAE,KAFkB;AAG/BC,yBAAW,EAAE,KAHkB;AAI/BC,wBAAU,EAAE,aAJmB;AAK/BC,oCAAsB,EAAE,2BALO;AAM/BC,oCAAsB,EAAE,8BANO;AAO/BC,oBAAM,EAAE,kBAAM;AACZ,sBAAI,CAAC7G,cAAL,CAAoB8G,aAApB,CAAkCT,OAAO,CAACtF,EAA1C,EAA8CI,SAA9C,CAAwD;AACtDC,sBAAI,EAAE,cAACC,GAAD,EAAS;AACb,0BAAI,CAACpB,SAAL,CAAe8G,iBAAf,CAAiC,UAAjC;AACD,mBAHqD;AAItDvF,uBAAK,EAAE,eAACC,GAAD,EAAS;AACd,0BAAI,CAACxB,SAAL,CAAe+G,eAAf,CAA+B,UAA/B;AACD,mBANqD;AAOtDrF,0BAAQ,EAAE,oBAAM;AACd,0BAAI,CAAC+D,QAAL;AACD;AATqD,iBAAxD;AAWD;AAnB8B,aAAjC;AAqBD;;;sCAEWuB,G,EAAK;AACf,gBAAIA,GAAJ,EAAS;AACP,qBAAO,KAAP;AACD,aAFD,MAEO;AACL,qBAAO,EAAP;AACD;AACF;;;4CAEiB7B,M,EAAuB;AAAA;;AACvC,iBAAKH,mBAAL,CAAyBqB,OAAzB,CAAiC;AAC/BC,qBAAO,EAAE,4BAA4BnB,MAAM,CAAC7E,IAAnC,GAA0C,GADpB;AAE/BiG,yBAAW,EAAE,KAFkB;AAG/BC,yBAAW,EAAE,KAHkB;AAI/BC,wBAAU,EAAE,aAJmB;AAK/BC,oCAAsB,EAAE,2BALO;AAM/BC,oCAAsB,EAAE,8BANO;AAO/BC,oBAAM,EAAE,kBAAM;AACZ,sBAAI,CAAC7G,cAAL,CAAoBkH,YAApB,CAAiC9B,MAAM,CAACrE,EAAxC,EAA4CI,SAA5C,CAAsD;AACpDC,sBAAI,EAAE,cAACC,GAAD,EAAS;AACb,0BAAI,CAACpB,SAAL,CAAe8G,iBAAf,CAAiC,SAAjC;AACD,mBAHmD;AAIpDvF,uBAAK,EAAE,eAACC,GAAD,EAAS;AACd,0BAAI,CAACxB,SAAL,CAAe+G,eAAf,CAA+B,SAA/B;AACD,mBANmD;AAOpDrF,0BAAQ,EAAE,oBAAM;AACd,0BAAI,CAAC+D,QAAL;AACD;AATmD,iBAAtD;AAWD;AAnB8B,aAAjC;AAqBD,W,CAED;;;;mDAEyB;AAAA;;AACvB,gBAAM3F,GAAG,GAAG,KAAKgF,aAAL,CAAmBoC,IAAnB,CAAwB,yGAAxB,EAAiD;AAC3DC,oBAAM,EAAE,uBADmD;AAE3DC,mBAAK,EAAE;AAFoD,aAAjD,CAAZ;AAKAtH,eAAG,CAACuH,OAAJ,CAAYnG,SAAZ,CAAsB,UAACE,GAAD,EAAS;AAC7B,kBAAIA,GAAJ,EAAS;AACP,sBAAI,CAACqE,QAAL;AACD;;AACD6B,qBAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,aALD;AAMD;;;oDAEyBC,O,EAAS;AAAA;;AACjC,gBAAM1H,GAAG,GAAG,KAAKgF,aAAL,CAAmBoC,IAAnB,CAAwB,yGAAxB,EAAiD;AAC3DC,oBAAM,EAAE,+BADmD;AAE3D/G,kBAAI,EAAEoH,OAFqD;AAG3DJ,mBAAK,EAAE;AAHoD,aAAjD,CAAZ;AAMAtH,eAAG,CAACuH,OAAJ,CAAYnG,SAAZ,CAAsB,UAACE,GAAD,EAAS;AAC7B,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAACqE,QAAL;AACD;;AACD6B,qBAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,aALD;AAMD;;;kDAEuB;AAAA;;AACtB,gBAAMzH,GAAG,GAAG,KAAKgF,aAAL,CAAmBoC,IAAnB,CAAwB,sGAAxB,EAAgD;AAC1DC,oBAAM,EAAE,aADkD;AAE1DC,mBAAK,EAAE;AAFmD,aAAhD,CAAZ;AAKAtH,eAAG,CAACuH,OAAJ,CAAYnG,SAAZ,CAAsB,UAACE,GAAD,EAAS;AAC7B,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAACqE,QAAL;AACD;;AACD6B,qBAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,aALD;AAMD;;;mDAEwBC,O,EAAS;AAAA;;AAChC,gBAAM1H,GAAG,GAAG,KAAKgF,aAAL,CAAmBoC,IAAnB,CAAwB,sGAAxB,EAAgD;AAC1DC,oBAAM,EAAE,4BAA4BK,OAAO,CAAClH,IADc;AAE1DF,kBAAI,EAAEoH,OAFoD;AAG1DJ,mBAAK,EAAE;AAHmD,aAAhD,CAAZ;AAMAtH,eAAG,CAACuH,OAAJ,CAAYnG,SAAZ,CAAsB,UAACE,GAAD,EAAS;AAC7B,kBAAIA,GAAJ,EAAS;AACP,uBAAI,CAACqE,QAAL;AACD;;AACD6B,qBAAO,CAACC,GAAR,CAAY,qCAAZ;AACD,aALD;AAMD;;;;;;;yBA7OU1C,oB,EAAoB,oI,EAAA,gJ,EAAA,2J,EAAA,0I,EAAA,gI;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,gB;AAAA,isJ;AAAA;AAAA;AC7CjC;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AAAsB;;AAAkB;;AAC1C;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAIE;AAAA,qBAAS,IAAA4C,sBAAA,EAAT;AAAiC,aAAjC;;AAID;;AACH;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAyB;;AAAO;;AAChC;;AAAsB;;AAAiB;;AACzC;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAIE;AAAA,qBAAS,IAAAC,qBAAA,EAAT;AAAgC,aAAhC;;AAID;;AACH;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAyBE;;AA0BA;;AAgHA;;AAoPA;;AAaA;;AAKF;;AACF;;AACA;;AACE;;AAsGF;;AACF;;;;AA3lBsC;;AAAA;;AAyCA;;AAAA;;AAmChC;;AAAA,2FAAiB,SAAjB,EAAiB,kBAAjB,EAAiB,WAAjB,EAAiB,IAAjB,EAAiB,MAAjB,EAAiB,EAAjB,EAAiB,oBAAjB,EAAiB,sEAAjB,EAAiB,uBAAjB,EAAiB,IAAjB,EAAiB,YAAjB,EAAiB,IAAjB,EAAiB,aAAjB,EAAiB,CAAjB,EAAiB,oBAAjB,EAAiB,sEAAjB,EAAiB,UAAjB,EAAiB,IAAjB;;;;;;qBDjEQ,CACV,oEAAQ,qBAAR,EAA+B,CAC7B,kEACE,MADF,EAEE,kEAAM;AACJC,qBAAS,EAAE,kBADP;AAEJC,mBAAO,EAAE;AAFL,WAAN,CAFF,CAD6B,EAQ7B,kEACE,QADF,EAEE,kEAAM;AACJD,qBAAS,EAAE,eADP;AAEJC,mBAAO,EAAE;AAFL,WAAN,CAFF,CAR6B,EAe7B,uEAAW,SAAX,EAAsB,oEAAQ,sCAAR,CAAtB,CAf6B,CAA/B,CADU;;;;;;wEAoBD/C,oB,EAAoB;gBAxBhC,uDAwBgC;iBAxBtB;AACT/C,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,+BAAD,CAHF;AAIT6F,sBAAU,EAAE,CACV,oEAAQ,qBAAR,EAA+B,CAC7B,kEACE,MADF,EAEE,kEAAM;AACJF,uBAAS,EAAE,kBADP;AAEJC,qBAAO,EAAE;AAFL,aAAN,CAFF,CAD6B,EAQ7B,kEACE,QADF,EAEE,kEAAM;AACJD,uBAAS,EAAE,eADP;AAEJC,qBAAO,EAAE;AAFL,aAAN,CAFF,CAR6B,EAe7B,uEAAW,SAAX,EAAsB,oEAAQ,sCAAR,CAAtB,CAf6B,CAA/B,CADU;AAJH,W;AAwBsB,U","file":"catalog-catalog-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { CatalogMainComponent } from \"./catalog-main/catalog-main.component\";\nimport { CatalogAddFormComponent } from \"./form/catalog-add-form/catalog-add-form.component\";\nimport { SystemAddFormComponent } from \"./form/system-add-form/system-add-form.component\";\nimport { TableModule } from \"primeng/table\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { ButtonModule } from \"primeng/button\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { FieldsetModule } from \"primeng/fieldset\";\nimport { CodeHighlighterModule } from \"primeng/codehighlighter\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { CatalogRoutingModule } from \"./catalog-routing.module\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { SharedModule } from \"../_shared/shared/shared.module\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { EditorModule } from \"primeng/editor\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\n@NgModule({\n  declarations: [\n    CatalogMainComponent,\n    CatalogAddFormComponent,\n    SystemAddFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    CatalogRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    DialogModule,\n    TabViewModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    InputTextareaModule,\n    AutoCompleteModule,\n    MatDialogModule,\n    CheckboxModule,\n    InputTextModule,\n    RippleModule,\n    SharedModule,\n    EditorModule,\n    ProgressSpinnerModule,\n    KeyFilterModule,\n    TooltipModule,\n    InputNumberModule,\n  ],\n  providers: [DialogService],\n  entryComponents: [SystemAddFormComponent, CatalogAddFormComponent],\n})\nexport class CatalogModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { AppValidators } from \"src/app/_validators/AppValidators\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport {\n  CatalogService,\n  KatalogSystem,\n} from \"../../catalog-service/catalog.service\";\n\n@Component({\n  selector: \"app-system-add-form\",\n  templateUrl: \"./system-add-form.component.html\",\n  styleUrls: [\"./system-add-form.component.scss\"],\n})\nexport class SystemAddFormComponent implements OnInit {\n  formSystem: FormGroup;\n  loading = false;\n  systemData: KatalogSystem;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    private catalogService: CatalogService,\n    private infoPopup: InfoPopupComponent,\n    public config: DynamicDialogConfig\n  ) {\n    this.systemData = config.data;\n  }\n\n  ngOnInit() {\n    if (this.systemData) {\n      this.formSystem = new FormGroup({\n        name: new FormControl(\"\", { validators: [Validators.required] }),\n        comment: new FormControl(\"\"),\n      });\n      this.formSystem.patchValue(this.systemData);\n    } else {\n      this.formSystem = new FormGroup({\n        name: new FormControl(\"\", {\n          validators: [Validators.required],\n          asyncValidators: [AppValidators.systemExists],\n          updateOn: \"blur\",\n        }),\n        comment: new FormControl(\"\"),\n      });\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewSystem() {\n    this.loading = true;\n    this.catalogService.addSystem(this.formSystem.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"systemu\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"systemu\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateSystem() {\n    this.loading = true;\n    this.catalogService\n      .updateSystem(this.systemData.id, this.formSystem.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"systemu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"systemu\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formSystem\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"systemNameId\">Nazwa systemu *</label>\n        <input\n          pInputText\n          id=\"systemNameId\"\n          style=\"width: 100%\"\n          [formControl]=\"formSystem.get('name')\"\n          type=\"text\"\n          required\n        />\n\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formSystem.get('name').hasError('required') &&\n            formSystem.get('name').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formSystem.get('name').hasError('systemExists') &&\n            formSystem.get('name').touched\n          \"\n        >\n          taki system już istnieje\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n        <p-editor\n          [formControl]=\"formSystem.get('comment')\"\n          [style]=\"{ height: '150px' }\"\n        >\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!systemData\"\n      [disabled]=\"formSystem.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addNewSystem()\"\n      pTooltip=\"Dodaj nowy system\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"systemData\"\n      [disabled]=\"formSystem.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateSystem()\"\n      pTooltip=\"Aktualizacja systemu\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatalogMainComponent } from './catalog-main/catalog-main.component';\n\nconst routes: Routes = [\n\n  { path: '', component: CatalogMainComponent },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CatalogRoutingModule { }\n","import { Component, OnInit } from \"@angular/core\";\nimport { SelectItem } from \"primeng/api\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { DynamicDialogConfig, DynamicDialogRef } from \"primeng/dynamicdialog\";\nimport {\n  CatalogService,\n  KatalogProfili,\n  KatalogSystem,\n} from \"../../catalog-service/catalog.service\";\n\n@Component({\n  selector: \"app-catalog-add-form\",\n  templateUrl: \"./catalog-add-form.component.html\",\n  styleUrls: [\"./catalog-add-form.component.scss\"],\n})\nexport class CatalogAddFormComponent implements OnInit {\n  formCatalog: FormGroup;\n  systems: SelectItem[];\n  filteredSystems: any[];\n  loading = false;\n  catalogData: KatalogProfili;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private catalogService: CatalogService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.catalogData = config.data;\n  }\n\n  ngOnInit() {\n    this.filteredSystems = this.catalogService.systems;\n    this.formCatalog = new FormGroup({\n      number: new FormControl(\"\", { validators: [Validators.required] }),\n      profileType: new FormControl(\"\", { validators: [Validators.required] }),\n      systemProfil: new FormControl(\"\", { validators: [Validators.required] }),\n      offerName: new FormControl(\"\", { validators: [Validators.required] }),\n      dimOuter: new FormControl(\"\"),\n      dimInner: new FormControl(\"\"),\n      dimOneSide: new FormControl(\"\"),\n      dimCenterSide: new FormControl(\"\"),\n      dimTwoSide: new FormControl(\"\"),\n      dimTwoSideInner: new FormControl(\"\"),\n      dimTwoSideOuter: new FormControl(\"\"),\n      actualMeasurement: new FormControl(false),\n      hard: new FormControl(false),\n      alu: new FormControl(false),\n      comments: new FormControl(\"\"),\n    });\n\n    if (this.catalogData) {\n      this.formCatalog.patchValue(this.catalogData);\n    }\n  }\n\n  filterSystems(event) {\n    this.filteredSystems = [];\n    for (let i = 0; i < this.catalogService.systems.length; i++) {\n      let sys = this.catalogService.systems[i];\n      if (sys.name.toLowerCase().indexOf(event.query.toLowerCase()) == 0) {\n        this.filteredSystems.push(sys);\n      }\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addNewCatalog() {\n    this.loading = true;\n    if (this.isString(this.formCatalog.value.systemProfil)) {\n      let tmpSys: KatalogSystem = {\n        id: null,\n        name: this.formCatalog.value.systemProfil,\n      };\n      this.formCatalog.value.systemProfil = tmpSys;\n    }\n    this.catalogService.addCatalog(this.formCatalog.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"katalogu\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorAdd(\"katalogu\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateCatalog() {\n    this.loading = true;\n    this.catalogService\n      .updateCatalog(this.catalogData.id, this.formCatalog.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"katalogu\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.infoPopup.showErrorUpdate(\"katalogu\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  dupliName(event) {\n    this.formCatalog.get(\"offerName\").setValue(event);\n  }\n\n  isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formCatalog\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-6 col-lg-6\">\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n            <span><b>RODZAJ</b></span>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"systemProfil\">System</label>\n\n            <p-autoComplete\n              [style]=\"{ width: '100%' }\"\n              [minLength]=\"1\"\n              [formControl]=\"formCatalog.get('systemProfil')\"\n              [suggestions]=\"filteredSystems\"\n              (completeMethod)=\"filterSystems($event)\"\n              [dropdown]=\"true\"\n              placeholder=\"Wybierz system\"\n              field=\"name\"\n            >\n              <ng-template let-systemProfil pTemplate=\"item\">\n                <div class=\"catalog-dropdown-system\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      {{ systemProfil.name }}\n                    </div>\n                  </div>\n                </div>\n              </ng-template>\n            </p-autoComplete>\n\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formCatalog.get('systemProfil').hasError('required') &&\n                formCatalog.get('systemProfil').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"number\">Numer*</label>\n            <input\n              pInputText\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('number')\"\n              type=\"text\"\n              id=\"number\"\n              required\n              autofocus\n              autocomplete=\"off\"\n            />\n\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formCatalog.get('number').hasError('required') &&\n                formCatalog.get('number').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formCatalog.get('number').hasError('catalogExists') &&\n                formCatalog.get('number').touched\n              \"\n            >\n              ten numer znajduje się w katalogu\n            </p>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"profileType\"\n              >Rodzaj Ksztaltownika*</label\n            >\n            <input\n              pInputText\n              class=\"fullwidth\"\n              (ngModelChange)=\"dupliName($event)\"\n              [formControl]=\"formCatalog.get('profileType')\"\n              type=\"text\"\n              id=\"profileType\"\n              required\n            />\n\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formCatalog.get('profileType').hasError('required') &&\n                formCatalog.get('profileType').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"offerName\"\n              >Nazwa na ofercie*</label\n            >\n            <input\n              pInputText\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('offerName')\"\n              type=\"text\"\n              id=\"offerName\"\n              required\n            />\n\n            <p\n              class=\"invalid-feedback\"\n              *ngIf=\"\n                formCatalog.get('offerName').hasError('required') &&\n                formCatalog.get('offerName').touched\n              \"\n            >\n              musi być wypełnione\n            </p>\n          </div>\n        </div>\n\n        <div class=\"row pt-1\">\n          <div style=\"padding-left: 15px\">\n            <p-checkbox\n              [formControl]=\"formCatalog.get('hard')\"\n              [binary]=\"true\"\n              label=\"Trudny\"\n            ></p-checkbox>\n          </div>\n        </div>\n\n        <div class=\"row pt-1\">\n          <div style=\"padding-left: 15px\">\n            <p-checkbox\n              [formControl]=\"formCatalog.get('alu')\"\n              [binary]=\"true\"\n              label=\"Profil aluminiowy\"\n            >\n            </p-checkbox>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-g-12 col-md-6 col-lg-6\">\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12 text-center\">\n            <span><b>WYMIARY</b></span>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimOuter\">Zewnetrzny</label>\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimOuter')\"\n              id=\"dimOuter\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimInner\">Wewnetrzny</label>\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimInner')\"\n              id=\"dimInner\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimOneSide\">Jednostronny</label>\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimOneSide')\"\n              id=\"dimOneSide\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimTwoSide\">Obustronny</label>\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimTwoSide')\"\n              id=\"dimTwoSide\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-12 col-lg-12\">\n            <label class=\"sb-small-label\" for=\"dimCenterSide\">Środek</label>\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimCenterSide')\"\n              id=\"dimCenterSide\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimTwoSideOuter\"\n              >Obu. Zewnetrzny</label\n            >\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimTwoSideOuter')\"\n              id=\"dimTwoSideOuter\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n          <div class=\"col-g-12 col-md-6 col-lg-6\">\n            <label class=\"sb-small-label\" for=\"dimTwoSideInner\"\n              >Obu. Wewnetrzny</label\n            >\n            <p-inputNumber\n              class=\"fullwidth\"\n              [formControl]=\"formCatalog.get('dimTwoSideInner')\"\n              id=\"dimTwoSideInner\"\n              :min=\"0\"\n              suffix=\" mm\"\n              autocomplete=\"off\"\n              showButtons=\"true\"\n            >\n            </p-inputNumber>\n          </div>\n        </div>\n\n        <div class=\"row pt-1\">\n          <div style=\"padding-left: 15px\">\n            <p-checkbox\n              [formControl]=\"formCatalog.get('actualMeasurement')\"\n              [binary]=\"true\"\n              label=\"Pomiar rzeczywisty (zweryfikowany)\"\n            ></p-checkbox>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <hr />\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label class=\"sb-small-label\" for=\"desc\">Opis</label>\n        <p-editor\n          [formControl]=\"formCatalog.get('comments')\"\n          [style]=\"{ height: '150px' }\"\n        >\n          <p-header>\n            <span class=\"ql-formats\">\n              <button class=\"ql-bold\" aria-label=\"Pogrubienie\"></button>\n              <button class=\"ql-italic\" aria-label=\"Kursywa\"></button>\n              <button class=\"ql-underline\" aria-label=\"Podkreślenie\"></button>\n              <button\n                class=\"ql-list\"\n                value=\"ordered\"\n                aria-label=\"Lista uporządkowana\"\n              ></button>\n              <button\n                class=\"ql-list\"\n                value=\"bullet\"\n                aria-label=\"Lista nieuporządkowana\"\n              ></button>\n              <select class=\"ql-align\">\n                <option selected></option>\n                <option value=\"center\"></option>\n                <option value=\"right\"></option>\n                <option value=\"justify\"></option>\n              </select>\n              <button\n                class=\"ql-code-block\"\n                aria-label=\"Insert Code Block\"\n              ></button>\n            </span>\n          </p-header>\n        </p-editor>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!catalogData\"\n      [disabled]=\"formCatalog.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addNewCatalog()\"\n      pTooltip=\"Dodaj nowy katalog\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"catalogData\"\n      [disabled]=\"formCatalog.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateCatalog()\"\n      pTooltip=\"Aktualizacja katalogu\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport {\n  CatalogService,\n  KatalogProfili,\n  KatalogSystem,\n} from \"../catalog-service/catalog.service\";\nimport { SelectItem, ConfirmationService } from \"primeng/api\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { AuthService } from \"src/app/_services/auth.service\";\nimport { ThemePalette } from \"@angular/material/core\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { CatalogAddFormComponent } from \"../form/catalog-add-form/catalog-add-form.component\";\nimport { SystemAddFormComponent } from \"../form/system-add-form/system-add-form.component\";\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from \"@angular/animations\";\n\n@Component({\n  selector: \"app-catalog-main\",\n  templateUrl: \"./catalog-main.component.html\",\n  styleUrls: [\"./catalog-main.component.scss\"],\n  animations: [\n    trigger(\"rowExpansionTrigger\", [\n      state(\n        \"void\",\n        style({\n          transform: \"translateX(-10%)\",\n          opacity: 0,\n        })\n      ),\n      state(\n        \"active\",\n        style({\n          transform: \"translateX(0)\",\n          opacity: 1,\n        })\n      ),\n      transition(\"* <=> *\", animate(\"400ms cubic-bezier(0.86, 0, 0.07, 1)\")),\n    ]),\n  ],\n})\nexport class CatalogMainComponent implements OnInit {\n  color: ThemePalette = \"primary\";\n  catalog: KatalogProfili[] = [];\n  system: KatalogSystem[] = [];\n  loadingCatalog = false;\n\n  onErrSystem: KatalogSystem = {\n    id: 0,\n    name: \"---\",\n  };\n  catalogCount: number;\n  systemCount: number;\n  onErr: KatalogProfili = {\n    id: 0,\n    systemProfil: this.onErrSystem,\n    number: \"---\",\n    dimOuter: \"---\",\n    dimInner: \"---\",\n    dimOneSide: \"---\",\n    dimTwoSide: \"---\",\n    dimTwoSideInner: \"---\",\n    dimTwoSideOuter: \"---\",\n    actualMeasurement: false,\n    hard: false,\n    profileType: \"---\",\n    comments: \"---\",\n  };\n\n  err: boolean;\n  newCatalog: boolean;\n  available: SelectItem[];\n  clonedCatalogs: { [s: string]: KatalogProfili } = {};\n  clonedSystem: { [s: string]: KatalogSystem } = {};\n\n  constructor(\n    public dialogService: DialogService,\n    public catalogService: CatalogService,\n    private infoPopup: InfoPopupComponent,\n    public auth: AuthService,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData() {\n    this.loadingCatalog = true;\n    this.catalogService.loadSystems();\n\n    this.catalogService.getCatalogs().subscribe({\n      next: (res) => {\n        this.catalog = res;\n        this.err = false;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"katalogu\");\n        this.err = true;\n        this.catalog.push(this.onErr);\n      },\n      complete: () => {\n        this.loadingCatalog = false;\n      },\n    });\n\n    this.catalogService.getCountCatalog().subscribe({\n      next: (res) => {\n        this.catalogCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"katalogu\");\n      },\n      complete: () => {},\n    });\n\n    this.catalogService.getCountSystem().subscribe({\n      next: (res) => {\n        this.systemCount = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorCount(\"systemów\");\n      },\n      complete: () => {},\n    });\n  }\n\n  loadSelectedSystem(kat) {\n    this.catalog = [];\n    this.loadingCatalog = true;\n    if (kat == -1) {\n      this.catalogService.getCatalogs().subscribe({\n        next: (res) => {\n          this.catalog = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"katalogu\");\n          this.err = true;\n          this.catalog.push(this.onErr);\n        },\n        complete: () => {\n          this.loadingCatalog = false;\n        },\n      });\n    } else {\n      this.catalogService.getCatalogsBySystem(kat.id).subscribe({\n        next: (res) => {\n          this.catalog = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.infoPopup.showErrorDownload(\"katalogu\");\n          this.err = true;\n          this.catalog.push(this.onErr);\n        },\n        complete: () => {\n          this.loadingCatalog = false;\n        },\n      });\n    }\n  }\n\n  onRowDeleteCatalog(katalog: KatalogProfili) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + katalog.number + \"?\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.catalogService.deleteCatalog(katalog.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"katalogu\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"katalogu\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n\n  showBoolean(val) {\n    if (val) {\n      return \"TAK\";\n    } else {\n      return \"\";\n    }\n  }\n\n  onRowDeleteSystem(system: KatalogSystem) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + system.name + \"?\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.catalogService.deleteSystem(system.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"systemu\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"systemu\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n\n  // DIALOGS\n\n  showDialogToAddCatalog() {\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: \"Nowa pozycja katalogu\",\n      width: \"800px\",\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog catalog add was closed\");\n    });\n  }\n\n  showDialogToUpdateCatalog(rowData) {\n    const ref = this.dialogService.open(CatalogAddFormComponent, {\n      header: \"Aktualizacja pozycji katalogu\",\n      data: rowData,\n      width: \"800px\",\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog catalog add was closed\");\n    });\n  }\n\n  showDialogToAddSystem() {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: \"Nowy system\",\n      width: \"450px\",\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog system add was closed\");\n    });\n  }\n\n  showDialogToUpdateSystem(rowData) {\n    const ref = this.dialogService.open(SystemAddFormComponent, {\n      header: \"Aktualizacja systemu - \" + rowData.name,\n      data: rowData,\n      width: \"450px\",\n    });\n\n    ref.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog system update was closed\");\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-folder\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Pozycje</p>\n                <p class=\"card-title\">{{ catalogCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddCatalog()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-lg-3 col-md-6 col-sm-6 p-0\">\n    <div class=\"card-stats\">\n      <div class=\"card-content\">\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <div class=\"big-icon\">\n                <i class=\"pi pi-tags\"></i>\n              </div>\n            </div>\n            <div class=\"col-7 pr-0\">\n              <div class=\"numbers\">\n                <p class=\"card-category\">Systemy</p>\n                <p class=\"card-title\">{{ systemCount }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"stats-bar\">\n            <div class=\"small-icon\">\n              <i class=\"pi pi-chart-bar\"></i>\n            </div>\n            <div class=\"stats-bar-button\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"showDialogToAddSystem()\"\n                pTooltip=\"Dodanie nowej pozycji\"\n                icon=\"pi pi-plus\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<p-tabView>\n  <p-tabPanel header=\"Katalog Profili\">\n    <p-table\n      #kp\n      styleClass=\"p-datatable-striped\"\n      selectionMode=\"single\"\n      [value]=\"catalog\"\n      dataKey=\"id\"\n      editMode=\"row\"\n      [loading]=\"loadingCatalog\"\n      [paginator]=\"true\"\n      [rows]=\"10\"\n      [rowsPerPageOptions]=\"[10, 20, 50, 100]\"\n      [showCurrentPageReport]=\"true\"\n      [autoLayout]=\"true\"\n      currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n      [filterDelay]=\"0\"\n      [globalFilterFields]=\"[\n        'number',\n        'profileType',\n        'systemProfil.name',\n        'offerName'\n      ]\"\n      [rowHover]=\"true\"\n      sortField=\"systemProfil.name\"\n      sortOrder=\"1\"\n    >\n      <ng-template pTemplate=\"caption\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <span>Katalog Profili</span>\n          </div>\n          <div class=\"col\" style=\"text-align: end\">\n            <p-dropdown\n              #ss\n              (onChange)=\"loadSelectedSystem(ss.selectedOption.value)\"\n              [options]=\"catalogService.systemsSelectTable\"\n              [filter]=\"true\"\n              filterBy=\"name,value.name\"\n              placeholder=\"Wybierz system\"\n            >\n            </p-dropdown>\n            <input\n              type=\"text\"\n              class=\"p-inputtext-lg\"\n              (input)=\"kp.filterGlobal($event.target.value, 'contains')\"\n              class=\"ml-2 p-inputtext\"\n              placeholder=\"Wyszukiwarka\"\n              pInputText\n            />\n          </div>\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"header\">\n        <tr class=\"small-row-table-head\">\n          <th style=\"width: 180px\" pSortableColumn=\"number\">\n            <div>Numer<p-sortIcon field=\"number\"></p-sortIcon></div>\n          </th>\n          <th style=\"width: 180px\" pSortableColumn=\"profileType\">\n            <div>\n              Rodzaj Kształtownika<p-sortIcon field=\"profileType\"></p-sortIcon>\n            </div>\n          </th>\n          <th style=\"width: 180px\" pSortableColumn=\"offerName\">\n            <div>Na Ofercie<p-sortIcon field=\"offerName\"></p-sortIcon></div>\n          </th>\n          <th style=\"width: 180px\" pSortableColumn=\"systemProfil.name\">\n            <div>System<p-sortIcon field=\"systemProfil.name\"></p-sortIcon></div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Zewnętrzny\">\n            <div>Zew.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Wewnętrzny\">\n            <div>Wew.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Jednostronny\">\n            <div>Jedno.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Środek\">\n            <div>Środek</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Obustronny\">\n            <div>Obu.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Obu. Zewnętrzny\">\n            <div>Obu. Zew.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Obu. Wewnętrzny\">\n            <div>Obu. Wew.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Pomiar rzeczywisty (zweryfikowany)\">\n            <div>Rzeczy.</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Trudne\">\n            <div>Trudne</div>\n          </th>\n          <th style=\"width: 60px\" pTooltip=\"Aluminium\">\n            <div>Alu</div>\n          </th>\n          <th style=\"width: 60px\">\n            <div>Uwagi</div>\n          </th>\n          <th style=\"min-width: 80px; width: 80px\"></th>\n        </tr>\n        <tr>\n          <th>\n            <input\n              pInputText\n              type=\"text\"\n              (input)=\"kp.filter($event.target.value, 'number', 'startsWith')\"\n              placeholder=\"Szukaj po numerze\"\n              class=\"p-inputtext-sm w-100\"\n            />\n          </th>\n          <th>\n            <input\n              pInputText\n              type=\"text\"\n              (input)=\"\n                kp.filter($event.target.value, 'profileType', 'startsWith')\n              \"\n              placeholder=\"Szukaj po rodzaju\"\n              class=\"p-inputtext-sm w-100\"\n            />\n          </th>\n          <th>\n            <input\n              pInputText\n              type=\"text\"\n              (input)=\"\n                kp.filter($event.target.value, 'offerName', 'startsWith')\n              \"\n              placeholder=\"Szukaj po nazwie\"\n              class=\"p-inputtext-sm w-100\"\n            />\n          </th>\n          <th>\n            <input\n              pInputText\n              type=\"text\"\n              (input)=\"\n                kp.filter(\n                  $event.target.value,\n                  'systemProfil.name',\n                  'startsWith'\n                )\n              \"\n              placeholder=\"Szukaj po systemie\"\n              class=\"p-inputtext-sm w-100\"\n            />\n          </th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n          <th></th>\n        </tr>\n      </ng-template>\n      <ng-template\n        pTemplate=\"body\"\n        let-rowData\n        let-editing=\"editing\"\n        let-expanded=\"expanded\"\n        let-ri=\"rowIndex\"\n      >\n        <tr\n          [pEditableRow]=\"rowData\"\n          class=\"small-row-table-body\"\n          [pSelectableRow]=\"rowData\"\n        >\n          <td>\n            {{ rowData.number }}\n          </td>\n          <td>\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\"\n                >=\n\n                <textarea\n                  [style]=\"{ width: '100%' }\"\n                  pInputTextarea\n                  [(ngModel)]=\"rowData.profileType\"\n                  placeholder=\"Uwagi\"\n                  required\n                ></textarea>\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.profileType }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n          <td>\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <textarea\n                  [style]=\"{ width: '100%' }\"\n                  pInputTextarea\n                  [(ngModel)]=\"rowData.offerName\"\n                  placeholder=\"Uwagi\"\n                  required\n                ></textarea>\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.offerName }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td>\n            {{ rowData.systemProfil.name }}\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimOuter\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimOuter }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimInner\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimInner }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimOneSide\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimOneSide }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimCenterSide\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimCenterSide }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimTwoSide\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimTwoSide }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimTwoSideOuter\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimTwoSideOuter }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <input\n                  class=\"inline-edit\"\n                  pInputText\n                  type=\"number\"\n                  [(ngModel)]=\"rowData.dimTwoSideInner\"\n                />\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                {{ rowData.dimTwoSideInner }}\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <p-checkbox\n                  [(ngModel)]=\"rowData.actualMeasurement\"\n                  [binary]=\"true\"\n                >\n                </p-checkbox>\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                <span\n                  [class]=\"'measure-badge status-' + rowData.actualMeasurement\"\n                >\n                  {{ showBoolean(rowData.actualMeasurement) }}\n                </span>\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <p-cellEditor>\n              <ng-template pTemplate=\"input\">\n                <p-checkbox\n                  [(ngModel)]=\"rowData.hard\"\n                  [binary]=\"true\"\n                ></p-checkbox>\n              </ng-template>\n              <ng-template pTemplate=\"output\">\n                <span [class]=\"'hard-badge status-' + rowData.hard\">\n                  {{ showBoolean(rowData.hard) }}\n                </span>\n              </ng-template>\n            </p-cellEditor>\n          </td>\n\n          <td class=\"text-center\">\n            <span [class]=\"'measure-badge status-' + rowData.alu\">\n              {{ showBoolean(rowData.alu) }}\n            </span>\n          </td>\n\n          <td>\n            <a *ngIf=\"rowData.comments\" href=\"#\" [pRowToggler]=\"rowData\">\n              <i\n                [ngClass]=\"\n                  expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\n                \"\n              ></i>\n            </a>\n          </td>\n\n          <td class=\"edit-col\">\n            <div class=\"d-flex justify-content-center\">\n              <button\n                pButton\n                pRipple\n                appPermission\n                permission=\"catalogWrite\"\n                type=\"button\"\n                (click)=\"showDialogToUpdateCatalog(rowData)\"\n                icon=\"pi pi-pencil\"\n                class=\"p-button-sm sb-button blue\"\n              ></button>\n\n              <button\n                pButton\n                pRipple\n                appPermission\n                permission=\"catalogDelete\"\n                type=\"button\"\n                (click)=\"onRowDeleteCatalog(rowData)\"\n                icon=\"pi pi-trash\"\n                class=\"p-button-sm ml-1 sb-button red\"\n              ></button>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"rowexpansion\" let-rowData>\n        <tr>\n          <td [attr.colspan]=\"16\">\n            <div\n              class=\"p-grid ui-fluid\"\n              style=\"font-size: 16px; padding: 20px\"\n              [@rowExpansionTrigger]=\"'active'\"\n            >\n              <div class=\"p-col-12 p-md-9\" [innerHTML]=\"rowData.comments\"></div>\n            </div>\n          </td>\n        </tr>\n      </ng-template>\n      <ng-template pTemplate=\"emptymessage\">\n        <tr>\n          <td colspan=\"14\" style=\"text-align: left\">Brak danych.</td>\n        </tr>\n      </ng-template>\n    </p-table>\n  </p-tabPanel>\n  <p-tabPanel header=\"Systemy\">\n    <ng-template pTemplate=\"content\">\n      <p-table\n        #sy\n        styleClass=\"p-datatable-striped\"\n        selectionMode=\"single\"\n        [value]=\"catalogService.systems\"\n        dataKey=\"id\"\n        editMode=\"row\"\n        [paginator]=\"true\"\n        [rows]=\"10\"\n        [rowsPerPageOptions]=\"[10, 20, 50]\"\n        [autoLayout]=\"true\"\n        [showCurrentPageReport]=\"true\"\n        currentPageReportTemplate=\"{first} do {last} z {totalRecords}\"\n        [filterDelay]=\"0\"\n        [globalFilterFields]=\"['name']\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <span>Systemy</span>\n            </div>\n            <div class=\"col\" style=\"text-align: end\">\n              <input\n                pInputText\n                type=\"text\"\n                (input)=\"sy.filterGlobal($event.target.value, 'contains')\"\n                placeholder=\"Wyszukiwarka\"\n              />\n            </div>\n          </div>\n        </ng-template>\n\n        <ng-template pTemplate=\"header\">\n          <tr class=\"small-row-table-head\">\n            <th style=\"width: 40px\">\n              <div>ID</div>\n            </th>\n            <th pSortableColumn=\"name\">\n              <div>Nazwa<p-sortIcon field=\"name\"></p-sortIcon></div>\n            </th>\n            <th pSortableColumn=\"comment\">\n              <div>Opis<p-sortIcon field=\"comment\"></p-sortIcon></div>\n            </th>\n            <th style=\"min-width: 80px; width: 80px\"></th>\n          </tr>\n        </ng-template>\n        <ng-template\n          pTemplate=\"body\"\n          let-rowData\n          let-editing=\"editing\"\n          let-ri=\"rowIndex\"\n        >\n          <tr\n            [pEditableRow]=\"rowData\"\n            class=\"small-row-table-body\"\n            [pSelectableRow]=\"rowData\"\n          >\n            <td>\n              {{ rowData.id }}\n            </td>\n            <td>\n              {{ rowData.name }}\n            </td>\n            <td>\n              <div [innerHTML]=\"rowData.comment\"></div>\n            </td>\n\n            <td class=\"edit-col\">\n              <div class=\"d-flex justify-content-center\">\n                <button\n                  pButton\n                  pRipple\n                  appPermission\n                  permission=\"systemWrite\"\n                  type=\"button\"\n                  (click)=\"showDialogToUpdateSystem(rowData)\"\n                  icon=\"pi pi-pencil\"\n                  class=\"p-button-sm sb-button blue\"\n                ></button>\n\n                <button\n                  pButton\n                  pRipple\n                  appPermission\n                  permission=\"systemDelete\"\n                  type=\"button\"\n                  (click)=\"onRowDeleteSystem(rowData)\"\n                  icon=\"pi pi-trash\"\n                  class=\"p-button-sm ml-1 sb-button red\"\n                ></button>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td colspan=\"4\" style=\"text-align: left\">Brak danych.</td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </ng-template>\n  </p-tabPanel>\n</p-tabView>\n"]}