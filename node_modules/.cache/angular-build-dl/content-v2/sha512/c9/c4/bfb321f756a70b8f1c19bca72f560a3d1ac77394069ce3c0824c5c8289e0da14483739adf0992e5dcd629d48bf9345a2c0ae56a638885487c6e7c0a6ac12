(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~production-production-module~settings-settings-module"], {
    /***/
    "TjhJ":
    /*!************************************************************************!*\
      !*** ./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-dragdrop.js ***!
      \************************************************************************/

    /*! exports provided: DragDropModule, Draggable, Droppable */

    /***/
    function TjhJ(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "DragDropModule", function () {
        return DragDropModule;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Draggable", function () {
        return Draggable;
      });
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "Droppable", function () {
        return Droppable;
      });
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! @angular/core */
      "fXoL");
      /* harmony import */


      var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/common */
      "ofXK");
      /* harmony import */


      var primeng_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! primeng/dom */
      "YyRF");

      var Draggable = /*#__PURE__*/function () {
        function Draggable(el, zone) {
          _classCallCheck(this, Draggable);

          this.el = el;
          this.zone = zone;
          this.onDragStart = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDragEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDrag = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(Draggable, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            if (!this.pDraggableDisabled) {
              this.el.nativeElement.draggable = true;
              this.bindMouseListeners();
            }
          }
        }, {
          key: "bindDragListener",
          value: function bindDragListener() {
            var _this = this;

            if (!this.dragListener) {
              this.zone.runOutsideAngular(function () {
                _this.dragListener = _this.drag.bind(_this);

                _this.el.nativeElement.addEventListener('drag', _this.dragListener);
              });
            }
          }
        }, {
          key: "unbindDragListener",
          value: function unbindDragListener() {
            var _this2 = this;

            if (this.dragListener) {
              this.zone.runOutsideAngular(function () {
                _this2.el.nativeElement.removeEventListener('drag', _this2.dragListener);

                _this2.dragListener = null;
              });
            }
          }
        }, {
          key: "bindMouseListeners",
          value: function bindMouseListeners() {
            var _this3 = this;

            if (!this.mouseDownListener && !this.mouseUpListener) {
              this.zone.runOutsideAngular(function () {
                _this3.mouseDownListener = _this3.mousedown.bind(_this3);
                _this3.mouseUpListener = _this3.mouseup.bind(_this3);

                _this3.el.nativeElement.addEventListener('mousedown', _this3.mouseDownListener);

                _this3.el.nativeElement.addEventListener('mouseup', _this3.mouseUpListener);
              });
            }
          }
        }, {
          key: "unbindMouseListeners",
          value: function unbindMouseListeners() {
            var _this4 = this;

            if (this.mouseDownListener && this.mouseUpListener) {
              this.zone.runOutsideAngular(function () {
                _this4.el.nativeElement.removeEventListener('mousedown', _this4.mouseDownListener);

                _this4.el.nativeElement.removeEventListener('mouseup', _this4.mouseUpListener);

                _this4.mouseDownListener = null;
                _this4.mouseUpListener = null;
              });
            }
          }
        }, {
          key: "drag",
          value: function drag(event) {
            this.onDrag.emit(event);
          }
        }, {
          key: "dragStart",
          value: function dragStart(event) {
            if (this.allowDrag() && !this.pDraggableDisabled) {
              if (this.dragEffect) {
                event.dataTransfer.effectAllowed = this.dragEffect;
              }

              event.dataTransfer.setData('text', this.scope);
              this.onDragStart.emit(event);
              this.bindDragListener();
            } else {
              event.preventDefault();
            }
          }
        }, {
          key: "dragEnd",
          value: function dragEnd(event) {
            this.onDragEnd.emit(event);
            this.unbindDragListener();
          }
        }, {
          key: "mousedown",
          value: function mousedown(event) {
            this.handle = event.target;
          }
        }, {
          key: "mouseup",
          value: function mouseup(event) {
            this.handle = null;
          }
        }, {
          key: "allowDrag",
          value: function allowDrag() {
            if (this.dragHandle && this.handle) return primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].matches(this.handle, this.dragHandle);else return true;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unbindDragListener();
            this.unbindMouseListeners();
          }
        }, {
          key: "pDraggableDisabled",
          get: function get() {
            return this._pDraggableDisabled;
          },
          set: function set(_pDraggableDisabled) {
            this._pDraggableDisabled = _pDraggableDisabled;

            if (this._pDraggableDisabled) {
              this.unbindMouseListeners();
            } else {
              this.el.nativeElement.draggable = true;
              this.bindMouseListeners();
            }
          }
        }]);

        return Draggable;
      }();

      Draggable.ɵfac = function Draggable_Factory(t) {
        return new (t || Draggable)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]));
      };

      Draggable.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: Draggable,
        selectors: [["", "pDraggable", ""]],
        hostBindings: function Draggable_HostBindings(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("dragstart", function Draggable_dragstart_HostBindingHandler($event) {
              return ctx.dragStart($event);
            })("dragend", function Draggable_dragend_HostBindingHandler($event) {
              return ctx.dragEnd($event);
            });
          }
        },
        inputs: {
          pDraggableDisabled: "pDraggableDisabled",
          scope: ["pDraggable", "scope"],
          dragEffect: "dragEffect",
          dragHandle: "dragHandle"
        },
        outputs: {
          onDragStart: "onDragStart",
          onDragEnd: "onDragEnd",
          onDrag: "onDrag"
        }
      });

      Draggable.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
        }];
      };

      Draggable.propDecorators = {
        scope: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
          args: ['pDraggable']
        }],
        dragEffect: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dragHandle: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onDragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDrag: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        pDraggableDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dragStart: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragstart', ['$event']]
        }],
        dragEnd: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragend', ['$event']]
        }]
      };
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Draggable, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
          args: [{
            selector: '[pDraggable]'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
          }];
        }, {
          onDragStart: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDragEnd: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDrag: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          pDraggableDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dragStart: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragstart', ['$event']]
          }],
          dragEnd: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragend', ['$event']]
          }],
          scope: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ['pDraggable']
          }],
          dragEffect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dragHandle: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();

      var Droppable = /*#__PURE__*/function () {
        function Droppable(el, zone) {
          _classCallCheck(this, Droppable);

          this.el = el;
          this.zone = zone;
          this.onDragEnter = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDragLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
          this.onDrop = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        }

        _createClass(Droppable, [{
          key: "ngAfterViewInit",
          value: function ngAfterViewInit() {
            if (!this.pDroppableDisabled) {
              this.bindDragOverListener();
            }
          }
        }, {
          key: "bindDragOverListener",
          value: function bindDragOverListener() {
            var _this5 = this;

            if (!this.dragOverListener) {
              this.zone.runOutsideAngular(function () {
                _this5.dragOverListener = _this5.dragOver.bind(_this5);

                _this5.el.nativeElement.addEventListener('dragover', _this5.dragOverListener);
              });
            }
          }
        }, {
          key: "unbindDragOverListener",
          value: function unbindDragOverListener() {
            var _this6 = this;

            if (this.dragOverListener) {
              this.zone.runOutsideAngular(function () {
                _this6.el.nativeElement.removeEventListener('dragover', _this6.dragOverListener);

                _this6.dragOverListener = null;
              });
            }
          }
        }, {
          key: "dragOver",
          value: function dragOver(event) {
            event.preventDefault();
          }
        }, {
          key: "drop",
          value: function drop(event) {
            if (this.allowDrop(event)) {
              primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].removeClass(this.el.nativeElement, 'p-draggable-enter');
              event.preventDefault();
              this.onDrop.emit(event);
            }
          }
        }, {
          key: "dragEnter",
          value: function dragEnter(event) {
            event.preventDefault();

            if (this.dropEffect) {
              event.dataTransfer.dropEffect = this.dropEffect;
            }

            primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].addClass(this.el.nativeElement, 'p-draggable-enter');
            this.onDragEnter.emit(event);
          }
        }, {
          key: "dragLeave",
          value: function dragLeave(event) {
            event.preventDefault();
            primeng_dom__WEBPACK_IMPORTED_MODULE_2__["DomHandler"].removeClass(this.el.nativeElement, 'p-draggable-enter');
            this.onDragLeave.emit(event);
          }
        }, {
          key: "allowDrop",
          value: function allowDrop(event) {
            var dragScope = event.dataTransfer.getData('text');

            if (typeof this.scope == "string" && dragScope == this.scope) {
              return true;
            } else if (this.scope instanceof Array) {
              for (var j = 0; j < this.scope.length; j++) {
                if (dragScope == this.scope[j]) {
                  return true;
                }
              }
            }

            return false;
          }
        }, {
          key: "ngOnDestroy",
          value: function ngOnDestroy() {
            this.unbindDragOverListener();
          }
        }]);

        return Droppable;
      }();

      Droppable.ɵfac = function Droppable_Factory(t) {
        return new (t || Droppable)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]));
      };

      Droppable.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
        type: Droppable,
        selectors: [["", "pDroppable", ""]],
        hostBindings: function Droppable_HostBindings(rf, ctx) {
          if (rf & 1) {
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("drop", function Droppable_drop_HostBindingHandler($event) {
              return ctx.drop($event);
            })("dragenter", function Droppable_dragenter_HostBindingHandler($event) {
              return ctx.dragEnter($event);
            })("dragleave", function Droppable_dragleave_HostBindingHandler($event) {
              return ctx.dragLeave($event);
            });
          }
        },
        inputs: {
          scope: ["pDroppable", "scope"],
          pDroppableDisabled: "pDroppableDisabled",
          dropEffect: "dropEffect"
        },
        outputs: {
          onDragEnter: "onDragEnter",
          onDragLeave: "onDragLeave",
          onDrop: "onDrop"
        }
      });

      Droppable.ctorParameters = function () {
        return [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
        }];
      };

      Droppable.propDecorators = {
        scope: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
          args: ['pDroppable']
        }],
        pDroppableDisabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        dropEffect: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }],
        onDragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        onDrop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
        }],
        drop: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['drop', ['$event']]
        }],
        dragEnter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragenter', ['$event']]
        }],
        dragLeave: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
          args: ['dragleave', ['$event']]
        }]
      };
      /*@__PURE__*/

      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Droppable, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"],
          args: [{
            selector: '[pDroppable]'
          }]
        }], function () {
          return [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]
          }, {
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]
          }];
        }, {
          onDragEnter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDragLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          onDrop: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"]
          }],
          drop: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['drop', ['$event']]
          }],
          dragEnter: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragenter', ['$event']]
          }],
          dragLeave: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"],
            args: ['dragleave', ['$event']]
          }],
          scope: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"],
            args: ['pDroppable']
          }],
          pDroppableDisabled: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }],
          dropEffect: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
          }]
        });
      })();

      var DragDropModule = function DragDropModule() {
        _classCallCheck(this, DragDropModule);
      };

      DragDropModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
        type: DragDropModule
      });
      DragDropModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
        factory: function DragDropModule_Factory(t) {
          return new (t || DragDropModule)();
        },
        imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]]]
      });

      (function () {
        (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](DragDropModule, {
          declarations: function declarations() {
            return [Draggable, Droppable];
          },
          imports: function imports() {
            return [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]];
          },
          exports: function exports() {
            return [Draggable, Droppable];
          }
        });
      })();
      /*@__PURE__*/


      (function () {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](DragDropModule, [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
          args: [{
            imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"]],
            exports: [Draggable, Droppable],
            declarations: [Draggable, Droppable]
          }]
        }], null, null);
      })();
      /**
       * Generated bundle index. Do not edit.
       */
      //# sourceMappingURL=primeng-dragdrop.js.map

      /***/

    }
  }]);
})();
//# sourceMappingURL=default~production-production-module~settings-settings-module-es5.js.map