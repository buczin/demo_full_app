{"version":3,"sources":["webpack:///src/app/settings/mycompany/mycompany.component.ts","webpack:///src/app/settings/mycompany/mycompany.component.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/offer-param/offer-param.component.ts","webpack:///src/app/settings/offer-param/offer-param.component.html","webpack:///src/app/settings/users/form-users/form-users.component.ts","webpack:///src/app/settings/users/form-users/form-users.component.html","webpack:///src/app/settings/settings-main/settings-main.component.ts","webpack:///src/app/settings/settings-main/settings-main.component.html","webpack:///src/app/settings/users/form-password/form-password.component.ts","webpack:///src/app/settings/users/form-password/form-password.component.html","webpack:///src/app/settings/users/users.component.ts","webpack:///src/app/settings/users/users.component.html","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.ts","webpack:///src/app/settings/mycompany/form-mycompany/form-mycompany.component.html"],"names":["MycompanyComponent","location","dialogService","settingService","infoPopup","confirmationService","loadData","getMyCompanies","subscribe","next","res","mycompanies","error","err","showErrorDownload","complete","dialogRef","open","header","width","onClose","console","log","rowData","data","back","company","confirm","message","name","acceptLabel","rejectLabel","acceptIcon","acceptButtonStyleClass","rejectButtonStyleClass","accept","deleteMyCompany","id","showSuccessDelete","showErrorDelete","backClicked","openDialogAddCompany","selector","templateUrl","styleUrls","routes","path","component","SettingsRoutingModule","forChild","imports","exports","SettingsModule","declarations","providers","OfferParamComponent","loadingSaveHelper","displayFormExchange","displayFormSetCost","displayFormSetUpCost","displayFormPrintText","displayFormChangeColor","displayCostsRange","helpers","formHelpers","exchangeRateAlu","exchangeRatePcv","defaultClientSetUpCost","defaultSetCost","defaultPrintTextHeader","defaultPrintTextTableFotter","defaultCostChangeColor","default_helper_pcv_mEasyTo50","default_helper_pcv_mEasyTo150","default_helper_pcv_mEasyTo500","default_helper_pcv_mEasyAbove500","default_helper_pcv_mHardTo50","default_helper_pcv_mHardTo150","default_helper_pcv_mHardTo500","default_helper_pcv_mHardAbove500","default_helper_alu_mEasyTo50","default_helper_alu_mEasyTo150","default_helper_alu_mEasyTo500","default_helper_alu_mEasyAbove500","default_helper_alu_mHardTo50","default_helper_alu_mHardTo150","default_helper_alu_mHardTo500","default_helper_alu_mHardAbove500","getHelpers","patchValue","value","updateHelpersCostsRange","exit","updateHelpersExchange","updateHelpersSetCost","updateHelpersSetUpCost","updatePrintText","updateHelpersColorChange","updateHelpersPrintText","updateCostsRange","FormUsersComponent","ref","config","info","loading","user","formUser","validators","required","username","active","role","catalogRead","catalogWrite","catalogDelete","systemRead","systemWrite","systemDelete","clientRead","clientWrite","clientDelete","filmRead","filmWrite","filmDelete","producerRead","producerWrite","producerDelete","offerRead","offerWrite","offerDelete","productionRead","productionWrite","productionDelete","password","close","addUser","showSuccessAdd","showErrorAdd","updateUser","showSuccessUpdate","showErrorUpdate","SettingsMainComponent","FormPasswordComponent","fb","formPassword","group","confirmPassword","validator","nomatch","changePassword","onChangePass","UsersComponent","getUsers","users","is","usr","deleteUser","openDialogAddUser","FormMycompanyComponent","formMyCompany","shortName","shortId","nip","validatenip","regon","validateregon9","updateOn","fvemail","email","logoLink","www","phonenumber","minLength","phonenumber2","town","street","houseNumber","flatNumber","postalCode","province","country","asyncValidators","myCompanyExists","addMyCompany","updateMyCompany"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { MyCompany, SettingsService } from \"../settings.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { FormMycompanyComponent } from \"./form-mycompany/form-mycompany.component\";\nimport { Location } from \"@angular/common\";\nimport { ConfirmationService } from \"primeng/api\";\nimport { DialogService } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-mycompany\",\n  templateUrl: \"./mycompany.component.html\",\n  styleUrls: [\"./mycompany.component.scss\"],\n})\nexport class MycompanyComponent implements OnInit {\n  mycompanies: MyCompany[];\n\n  constructor(\n    private location: Location,\n    public dialogService: DialogService,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.settingService.getMyCompanies().subscribe({\n      next: (res) => {\n        this.mycompanies = res;\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"firm\");\n      },\n      complete: () => {},\n    });\n  }\n\n  openDialogAddCompany(): void {\n    const dialogRef = this.dialogService.open(FormMycompanyComponent, {\n      header: \"Nowa moja firma\",\n      width: \"900px\",\n    });\n\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog was closed\");\n    });\n  }\n\n  openDialogUpdateCompany(rowData): void {\n    const dialogRef = this.dialogService.open(FormMycompanyComponent, {\n      header: \"Aktualizacja mojej firmy\",\n      data: rowData,\n      width: \"900px\",\n    });\n\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog was closed\");\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  onDeleteMyCompant(company) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + company.name + \"?\",\n      header: \"Potwierdzenie\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.settingService.deleteMyCompany(company.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"moja firma\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"moja firma\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"row mb-2 ml-0\">\n    <button (click)=\"backClicked()\" mat-raised-button>\n      <i class=\"pi pi-chevron-left\"></i>\n    </button>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <div\n        class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\"\n        style=\"text-align: center\"\n      >\n        <button\n          pButton\n          type=\"button\"\n          (click)=\"openDialogAddCompany()\"\n          label=\"Dodaj firmę\"\n          class=\"p-button-sm sb-button gray\"\n        ></button>\n      </div>\n    </div>\n    <div class=\"col-10\">\n      <div class=\"row\">\n        <p-table\n          #mc\n          [value]=\"mycompanies\"\n          dataKey=\"id\"\n          [filterDelay]=\"0\"\n          [globalFilterFields]=\"['name']\"\n          [resizableColumns]=\"true\"\n          columnResizeMode=\"expand\"\n        >\n          <ng-template pTemplate=\"caption\">\n            Moje Firmy\n            <div class=\"ui-table-globalfilter-container\">\n              <input\n                pInputText\n                type=\"text\"\n                (input)=\"mc.filterGlobal($event.target.value, 'contains')\"\n                placeholder=\"Wyszukiwarka\"\n              />\n            </div>\n          </ng-template>\n          <ng-template pTemplate=\"header\">\n            <tr>\n              <th style=\"width: 40px\">ID</th>\n              <th pResizableColumn>Nazwa</th>\n              <th pResizableColumn>Identyfikator</th>\n              <th pResizableColumn>NIP</th>\n              <th pResizableColumn>REGON</th>\n              <th pResizableColumn>Email firmy</th>\n              <th pResizableColumn>Email FV</th>\n              <th pResizableColumn>Nr. Tel.</th>\n              <th pResizableColumn>Logo</th>\n              <th pResizableColumn>www</th>\n              <th style=\"width: 8em\"></th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData>\n            <tr>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.id }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.name }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.shortId }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.nip }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.regon }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.email }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.fvemail }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.phonenumber }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.logoLink }}\n              </td>\n              <td class=\"ui-resizable-column\">\n                {{ rowData.www }}\n              </td>\n\n              <td class=\"edit-col\">\n                <button\n                  pButton\n                  pRipple\n                  type=\"button\"\n                  (click)=\"openDialogUpdateCompany(rowData)\"\n                  icon=\"pi pi-pencil\"\n                  class=\"p-button-sm sb-button blue\"\n                  pTooltip=\"Edycja firmy\"\n                ></button>\n\n                <button\n                  pButton\n                  pRipple\n                  type=\"button\"\n                  (click)=\"onDeleteMyCompant(rowData)\"\n                  icon=\"pi pi-trash\"\n                  class=\"p-button-sm ml-1 sb-button red\"\n                  pTooltip=\"Usuwanie\"\n                ></button>\n              </td>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"emptymessage\">\n            <tr>\n              <td colspan=\"8\" style=\"text-align: left\">Brak danych.</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SettingsMainComponent } from './settings-main/settings-main.component';\nimport { UsersComponent } from './users/users.component';\nimport { MycompanyComponent } from './mycompany/mycompany.component';\nimport { OfferParamComponent } from './offer-param/offer-param.component';\n\n\nconst routes: Routes = [\n  { path: '', component: SettingsMainComponent},\n  { path: 'users', component: UsersComponent},\n  { path: 'mojafirma', component: MycompanyComponent},\n  { path: 'parametry-oferty', component: OfferParamComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule { }\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { SettingsRoutingModule } from \"./settings-routing.module\";\nimport { SettingsMainComponent } from \"./settings-main/settings-main.component\";\nimport { UsersComponent } from \"./users/users.component\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { TableModule } from \"primeng/table\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { ButtonModule } from \"primeng/button\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { FieldsetModule } from \"primeng/fieldset\";\nimport { CodeHighlighterModule } from \"primeng/codehighlighter\";\nimport { TabViewModule } from \"primeng/tabview\";\nimport { MycompanyComponent } from \"./mycompany/mycompany.component\";\nimport { FormMycompanyComponent } from \"./mycompany/form-mycompany/form-mycompany.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { FormUsersComponent } from \"./users/form-users/form-users.component\";\nimport { PasswordModule } from \"primeng/password\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { FormPasswordComponent } from \"./users/form-password/form-password.component\";\nimport { InputTextModule } from \"primeng/inputtext\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { KeyFilterModule } from \"primeng/keyfilter\";\nimport { OfferParamComponent } from \"./offer-param/offer-param.component\";\nimport { MatAutocompleteModule } from \"@angular/material/autocomplete\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { CalendarModule } from \"primeng/calendar\";\nimport { CardModule } from \"primeng/card\";\nimport { CheckboxModule } from \"primeng/checkbox\";\nimport { ConfirmDialogModule } from \"primeng/confirmdialog\";\nimport { ContextMenuModule } from \"primeng/contextmenu\";\nimport { DragDropModule } from \"primeng/dragdrop\";\nimport { DialogService, DynamicDialogModule } from \"primeng/dynamicdialog\";\nimport { EditorModule } from \"primeng/editor\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\nimport { RadioButtonModule } from \"primeng/radiobutton\";\nimport { StepsModule } from \"primeng/steps\";\nimport { TooltipModule } from \"primeng/tooltip\";\nimport { TreeTableModule } from \"primeng/treetable\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { ToggleButtonModule } from \"primeng/togglebutton\";\n\n@NgModule({\n  declarations: [\n    SettingsMainComponent,\n    UsersComponent,\n    MycompanyComponent,\n    FormMycompanyComponent,\n    FormUsersComponent,\n    FormPasswordComponent,\n    OfferParamComponent,\n  ],\n  imports: [\n    CommonModule,\n    SettingsRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule,\n    TabViewModule,\n    MatButtonModule,\n    MatDialogModule,\n    PasswordModule,\n    MatSlideToggleModule,\n    CalendarModule,\n    MultiSelectModule,\n    EditorModule,\n    TreeTableModule,\n    RadioButtonModule,\n    AutoCompleteModule,\n    MatAutocompleteModule,\n    ContextMenuModule,\n    ConfirmDialogModule,\n    CheckboxModule,\n    ProgressBarModule,\n    InputTextModule,\n    RippleModule,\n    FileUploadModule,\n    StepsModule,\n    DragDropModule,\n    CardModule,\n    InputNumberModule,\n    DynamicDialogModule,\n    TooltipModule,\n    KeyFilterModule,\n    ProgressSpinnerModule,\n    InputTextareaModule,\n    ToggleButtonModule,\n  ],\n  providers: [DialogService],\n})\nexport class SettingsModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ConfirmationService } from \"primeng/api\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { OfferHelpers, SettingsService } from \"../settings.service\";\nimport { Location } from \"@angular/common\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-offer-param\",\n  templateUrl: \"./offer-param.component.html\",\n  styleUrls: [\"./offer-param.component.scss\"],\n})\nexport class OfferParamComponent implements OnInit {\n  helpers: OfferHelpers;\n\n  loadingSaveHelper = false;\n  displayFormExchange = false;\n  displayFormSetCost = false;\n  displayFormSetUpCost = false;\n  displayFormPrintText = false;\n  displayFormChangeColor = false;\n  displayCostsRange = false;\n  formHelpers: FormGroup;\n\n  constructor(\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService,\n    private location: Location,\n    private settingService: SettingsService\n  ) {\n    console.log(this.helpers);\n  }\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n\n  loadData() {\n    this.loadingSaveHelper = true;\n\n    this.formHelpers = new FormGroup({\n      id: new FormControl(\"\"),\n      exchangeRateAlu: new FormControl(\"\"),\n      exchangeRatePcv: new FormControl(\"\"),\n      defaultClientSetUpCost: new FormControl(\"\"),\n      defaultSetCost: new FormControl(\"\"),\n      defaultPrintTextHeader: new FormControl(\"\"),\n      defaultPrintTextTableFotter: new FormControl(\"\"),\n      defaultCostChangeColor: new FormControl(\"\"),\n\n      default_helper_pcv_mEasyTo50: new FormControl(\"\"),\n      default_helper_pcv_mEasyTo150: new FormControl(\"\"),\n      default_helper_pcv_mEasyTo500: new FormControl(\"\"),\n      default_helper_pcv_mEasyAbove500: new FormControl(\"\"),\n      default_helper_pcv_mHardTo50: new FormControl(\"\"),\n      default_helper_pcv_mHardTo150: new FormControl(\"\"),\n      default_helper_pcv_mHardTo500: new FormControl(\"\"),\n      default_helper_pcv_mHardAbove500: new FormControl(\"\"),\n\n      default_helper_alu_mEasyTo50: new FormControl(\"\"),\n      default_helper_alu_mEasyTo150: new FormControl(\"\"),\n      default_helper_alu_mEasyTo500: new FormControl(\"\"),\n      default_helper_alu_mEasyAbove500: new FormControl(\"\"),\n      default_helper_alu_mHardTo50: new FormControl(\"\"),\n      default_helper_alu_mHardTo150: new FormControl(\"\"),\n      default_helper_alu_mHardTo500: new FormControl(\"\"),\n      default_helper_alu_mHardAbove500: new FormControl(\"\"),\n    });\n\n    this.settingService.getHelpers().subscribe({\n      next: (res) => {\n        this.helpers = res[0];\n        if (this.helpers) {\n          this.formHelpers.patchValue(this.helpers);\n        }\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n      },\n      complete: () => {},\n    });\n  }\n\n  updateCostsRange() {\n    console.log(this.formHelpers.value);\n    this.loadingSaveHelper = true;\n    this.settingService\n      .updateHelpersCostsRange(this.formHelpers.value)\n      .subscribe({\n        next: (res) => {\n          this.loadData();\n          this.exit();\n          this.loadingSaveHelper = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loadingSaveHelper = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  updateHelpersExchange() {\n    console.log(this.formHelpers.value);\n    this.loadingSaveHelper = true;\n    this.settingService\n      .updateHelpersExchange(this.formHelpers.value)\n      .subscribe({\n        next: (res) => {\n          this.loadData();\n          this.exit();\n          this.loadingSaveHelper = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loadingSaveHelper = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  updateHelpersSetCost() {\n    this.loadingSaveHelper = true;\n    this.settingService.updateHelpersSetCost(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateHelpersSetUpCost() {\n    this.loadingSaveHelper = true;\n    this.settingService\n      .updateHelpersSetUpCost(this.formHelpers.value)\n      .subscribe({\n        next: (res) => {\n          this.helpers = res;\n          this.loadData();\n          this.exit();\n          this.loadingSaveHelper = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loadingSaveHelper = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  updateHelpersPrintText() {\n    this.loadingSaveHelper = true;\n    this.settingService.updatePrintText(this.formHelpers.value).subscribe({\n      next: (res) => {\n        this.helpers = res;\n        this.loadData();\n        this.exit();\n        this.loadingSaveHelper = false;\n      },\n      error: (err) => {\n        console.log(err);\n        this.loadingSaveHelper = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateHelpersColorChange() {\n    console.log(\"test\");\n    console.log(this.formHelpers.value);\n    this.loadingSaveHelper = true;\n    this.settingService\n      .updateHelpersColorChange(this.formHelpers.value)\n      .subscribe({\n        next: (res) => {\n          this.helpers = res;\n          this.loadData();\n          this.exit();\n          this.loadingSaveHelper = false;\n        },\n        error: (err) => {\n          console.log(err);\n          this.loadingSaveHelper = false;\n        },\n        complete: () => {},\n      });\n  }\n\n  exit() {\n    this.displayFormExchange = false;\n    this.displayFormSetCost = false;\n    this.displayFormSetUpCost = false;\n    this.displayFormPrintText = false;\n    this.displayFormChangeColor = false;\n    this.displayCostsRange = false;\n  }\n}\n","<div class=\"container\">\n  <div class=\"row mb-2 ml-0\">\n    <button (click)=\"backClicked()\" mat-raised-button>\n      <i class=\"pi pi-chevron-left\"></i>\n    </button>\n  </div>\n  <div class=\"row pt-4\">\n    <div class=\"col\">\n      <h4>Aktualny kurs alu:</h4>\n      <h1>{{ helpers ? (helpers.exchangeRateAlu | number: \"1.2-2\") : \"-\" }}</h1>\n      <h4>Aktualny kurs pcv:</h4>\n      <h1>{{ helpers ? (helpers.exchangeRatePcv | number: \"1.2-2\") : \"-\" }}</h1>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormExchange = !displayFormExchange\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana kursu\"\n      ></button>\n    </div>\n    <div class=\"col\">\n      <h4>Domyślny koszt ustawienia</h4>\n      <h1>\n        {{ helpers ? (helpers.defaultClientSetUpCost | number: \"1.2-2\") : \"-\" }}\n      </h1>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormSetUpCost = !displayFormSetUpCost\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana kosztu ustawienia\"\n      ></button>\n    </div>\n    <div class=\"col\">\n      <h4>Domyślny koszt pakietu/kompletu</h4>\n      <h1>{{ helpers ? (helpers.defaultSetCost | number: \"1.2-2\") : \"-\" }}</h1>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormSetCost = !displayFormSetCost\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana ceny pakietu\"\n      ></button>\n    </div>\n    <div class=\"col\">\n      <h4>Domyślny koszt zmiany koloru</h4>\n      <h1>\n        {{ helpers ? (helpers.defaultCostChangeColor | number: \"1.2-2\") : \"-\" }}\n      </h1>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormChangeColor = !displayFormChangeColor\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana kosztu zmiany koloru\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"row pt-4\">\n    <div class=\"col\">\n      <h4>Domyślny tekst nagłówka oferty</h4>\n      <p *ngIf=\"helpers\" [innerHTML]=\"helpers.defaultPrintTextHeader\"></p>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormPrintText = !displayFormPrintText\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana tekstu\"\n      ></button>\n    </div>\n    <div class=\"col\">\n      <h4>Domyślny tekst opisu tabeli oferty</h4>\n      <p *ngIf=\"helpers\" [innerHTML]=\"helpers.defaultPrintTextTableFotter\"></p>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayFormPrintText = !displayFormPrintText\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana tekstu\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"row pt-4\">\n    <div class=\"col\">\n      <h4>Domyślne zakresy</h4>\n\n      <div class=\"stats-table\">\n        <table>\n          <thead>\n            <th class=\"text-left\">Metry</th>\n            <th class=\"text-center\">Łatwe (PCV)</th>\n            <th class=\"text-center\">Trudne (PCV)</th>\n            <th class=\"text-center\">Łatwe (ALU)</th>\n            <th class=\"text-center\">Trudne (ALU)</th>\n          </thead>\n          <tbody>\n            <tr>\n              <td class=\"text-left\">0-50</td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mEasyTo50 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mHardTo50 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mEasyTo50 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mHardTo50 }}\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-left\">51-150</td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mEasyTo150 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mHardTo150 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mEasyTo150 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mHardTo150 }}\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-left\">151-500</td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mEasyTo500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mHardTo500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mEasyTo500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mHardTo500 }}\n              </td>\n            </tr>\n            <tr>\n              <td class=\"text-left\">pow. 500</td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mEasyAbove500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_pcv_mHardAbove500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mEasyAbove500 }}\n              </td>\n              <td class=\"text-center\">\n                {{ helpers?.default_helper_alu_mHardAbove500 }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"displayCostsRange = !displayCostsRange\"\n        icon=\"pi pi-money-bill\"\n        class=\"p-button-raised p-button-secondary m-1\"\n        style=\"height: 28px\"\n        pTooltip=\"Zmiana zakresów\"\n      ></button>\n    </div>\n  </div>\n</div>\n\n<p-dialog\n  header=\"Aktualizacja kursu\"\n  [(visible)]=\"displayFormExchange\"\n  class=\"no-padding-dialog\"\n>\n  <form [formGroup]=\"formHelpers\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4 d-flex justify-content-center\">\n        <label class=\"sb-small-label\" for=\"alu\">ALU</label>\n        <p-inputNumber\n          inputId=\"alu\"\n          [inputStyle]=\"{ width: '100px' }\"\n          mode=\"decimal\"\n          [formControl]=\"formHelpers.get('exchangeRateAlu')\"\n          [showButtons]=\"true\"\n          [step]=\"0.1\"\n        >\n        </p-inputNumber>\n      </div>\n    </div>\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4 d-flex justify-content-center\">\n        <label class=\"sb-small-label\" for=\"pcv\">PCV</label>\n        <p-inputNumber\n          inputId=\"pcv\"\n          [inputStyle]=\"{ width: '100px' }\"\n          mode=\"decimal\"\n          [formControl]=\"formHelpers.get('exchangeRatePcv')\"\n          [showButtons]=\"true\"\n          [step]=\"0.1\"\n        >\n        </p-inputNumber>\n      </div>\n    </div>\n    <div\n      class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n    >\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"exit()\"\n        matTooltip=\"Anulowanie aktualizowania\"\n        label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\"\n        icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n      ></button>\n\n      <button\n        [disabled]=\"loadingSaveHelper\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateHelpersExchange()\"\n        matTooltip=\"Aktualizuj\"\n        label=\"Zapisz\"\n        matTooltipClass=\"tooltip-green\"\n        icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingSaveHelper\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </form>\n</p-dialog>\n\n<p-dialog\n  header=\"Aktualizacja domyślnego kosztu kompletu/pakietu\"\n  [(visible)]=\"displayFormSetCost\"\n  class=\"no-padding-dialog\"\n>\n  <form [formGroup]=\"formHelpers\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4 d-flex justify-content-center\">\n        <p-inputNumber\n          [inputStyle]=\"{ width: '100px' }\"\n          mode=\"decimal\"\n          [formControl]=\"formHelpers.get('defaultSetCost')\"\n          [showButtons]=\"true\"\n          [step]=\"0.1\"\n        >\n        </p-inputNumber>\n      </div>\n    </div>\n    <div\n      class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n    >\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"exit()\"\n        matTooltip=\"Anulowanie aktualizowania\"\n        label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\"\n        icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n      ></button>\n\n      <button\n        [disabled]=\"loadingSaveHelper\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateHelpersSetCost()\"\n        matTooltip=\"Aktualizuj\"\n        label=\"Zapisz\"\n        matTooltipClass=\"tooltip-green\"\n        icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingSaveHelper\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </form>\n</p-dialog>\n\n<p-dialog\n  header=\"Aktualizacja domyślnego kosztu ustawienia\"\n  [(visible)]=\"displayFormSetUpCost\"\n  class=\"no-padding-dialog\"\n>\n  <form [formGroup]=\"formHelpers\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4 d-flex justify-content-center\">\n        <p-inputNumber\n          [inputStyle]=\"{ width: '100px' }\"\n          mode=\"decimal\"\n          [formControl]=\"formHelpers.get('defaultClientSetUpCost')\"\n          [showButtons]=\"true\"\n          [step]=\"0.1\"\n        >\n        </p-inputNumber>\n      </div>\n    </div>\n    <div\n      class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n    >\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"exit()\"\n        matTooltip=\"Anulowanie aktualizowania\"\n        label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\"\n        icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n      ></button>\n\n      <button\n        [disabled]=\"loadingSaveHelper\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateHelpersSetUpCost()\"\n        matTooltip=\"Aktualizuj\"\n        label=\"Zapisz\"\n        matTooltipClass=\"tooltip-green\"\n        icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingSaveHelper\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </form>\n</p-dialog>\n\n<p-dialog\n  header=\"Aktualizacja domyślnego kosztu zmiany koloru\"\n  [(visible)]=\"displayFormChangeColor\"\n  class=\"no-padding-dialog\"\n>\n  <form [formGroup]=\"formHelpers\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4 d-flex justify-content-center\">\n        <p-inputNumber\n          [inputStyle]=\"{ width: '100px' }\"\n          mode=\"decimal\"\n          [formControl]=\"formHelpers.get('defaultCostChangeColor')\"\n          [showButtons]=\"true\"\n          [step]=\"0.1\"\n        >\n        </p-inputNumber>\n      </div>\n    </div>\n    <div\n      class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n    >\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"exit()\"\n        matTooltip=\"Anulowanie aktualizowania\"\n        label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\"\n        icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n      ></button>\n\n      <button\n        [disabled]=\"loadingSaveHelper\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateHelpersColorChange()\"\n        matTooltip=\"Aktualizuj\"\n        label=\"Zapisz\"\n        matTooltipClass=\"tooltip-green\"\n        icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingSaveHelper\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </form>\n</p-dialog>\n\n<p-dialog\n  header=\"Aktualizacja domyślnego tekstu druku oferty\"\n  [(visible)]=\"displayFormPrintText\"\n  class=\"no-padding-dialog\"\n>\n  <form [formGroup]=\"formHelpers\">\n    <div class=\"row w-100 m-0\">\n      <div class=\"col p-4\">\n        <p>Nagłowek</p>\n        <p-editor\n          [formControl]=\"formHelpers.get('defaultPrintTextHeader')\"\n          [style]=\"{ height: '320px' }\"\n        >\n        </p-editor>\n      </div>\n\n      <div class=\"col p-4\">\n        <p>Opis pod tabelą</p>\n        <p-editor\n          [formControl]=\"formHelpers.get('defaultPrintTextTableFotter')\"\n          [style]=\"{ height: '320px' }\"\n        >\n        </p-editor>\n      </div>\n    </div>\n\n    <div\n      class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n    >\n      <button\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"exit()\"\n        matTooltip=\"Anulowanie aktualizowania\"\n        label=\"Anuluj\"\n        matTooltipClass=\"tooltip-red\"\n        icon=\"pi pi-times\"\n        class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n      ></button>\n\n      <button\n        [disabled]=\"loadingSaveHelper\"\n        pButton\n        pRipple\n        type=\"button\"\n        (click)=\"updateHelpersPrintText()\"\n        matTooltip=\"Aktualizuj\"\n        label=\"Zapisz\"\n        matTooltipClass=\"tooltip-green\"\n        icon=\"pi pi-check\"\n        class=\"p-button-raised p-button-success p-button-sm\"\n      ></button>\n      <p-progressSpinner\n        *ngIf=\"loadingSaveHelper\"\n        [style]=\"{ width: '25px', height: '25px' }\"\n        styleClass=\"custom-spinner\"\n        strokeWidth=\"8\"\n        fill=\"#EEEEEE\"\n        animationDuration=\".5s\"\n      ></p-progressSpinner>\n    </div>\n  </form>\n</p-dialog>\n\n<p-dialog\n  header=\"Aktualizacja domyślnych zakresów\"\n  [(visible)]=\"displayCostsRange\"\n>\n  <div style=\"padding: 1rem\">\n    <form [formGroup]=\"formHelpers\" class=\"sb-form\">\n      <div class=\"row\">\n        <div class=\"col helper-table\">\n          <div class=\"text-center\" style=\"background-color: aquamarine\">\n            <span style=\"text-transform: uppercase; font-weight: bold\"\n              >PCV</span\n            >\n          </div>\n\n          <table style=\"margin: 0 auto\">\n            <thead>\n              <th class=\"text-left\">Metry</th>\n              <th class=\"text-center\">Łatwe</th>\n              <th class=\"text-center\">Trudne</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>0-50</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mEasyTo50')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mHardTo50')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>51-150</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mEasyTo150')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mHardTo150')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>151-500</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mEasyTo500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mHardTo500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>pow. 500</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mEasyAbove500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_pcv_mHardAbove500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col helper-table\">\n          <div class=\"text-center mt-4\" style=\"background-color: aquamarine\">\n            <span style=\"text-transform: uppercase; font-weight: bold\"\n              >ALU</span\n            >\n          </div>\n          <table style=\"margin: 0 auto\">\n            <thead>\n              <th class=\"text-left\">Metry</th>\n              <th class=\"text-center\">Łatwe</th>\n              <th class=\"text-center\">Trudne</th>\n            </thead>\n            <tbody>\n              <tr>\n                <td>0-50</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mEasyTo50')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mHardTo50')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>51-150</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mEasyTo150')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mHardTo150')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>151-500</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mEasyTo500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mHardTo500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n              <tr>\n                <td>pow. 500</td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mEasyAbove500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n                <td>\n                  <p-inputNumber\n                    mode=\"decimal\"\n                    [formControl]=\"\n                      formHelpers.get('default_helper_alu_mHardAbove500')\n                    \"\n                    [showButtons]=\"true\"\n                    [step]=\"0.1\"\n                  >\n                  </p-inputNumber>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </form>\n  </div>\n  <div\n    class=\"ui-dialog-buttonpane ui-helper-clearfix footer-btn sb-dialog-footer\"\n  >\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit()\"\n      matTooltip=\"Anulowanie aktualizowania\"\n      label=\"Anuluj\"\n      matTooltipClass=\"tooltip-red\"\n      icon=\"pi pi-times\"\n      class=\"p-button-raised p-button-outlined p-button-secondary p-button-sm\"\n    ></button>\n\n    <button\n      [disabled]=\"loadingSaveHelper\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateCostsRange()\"\n      matTooltip=\"Aktualizuj\"\n      label=\"Zapisz\"\n      matTooltipClass=\"tooltip-green\"\n      icon=\"pi pi-check\"\n      class=\"p-button-raised p-button-success p-button-sm\"\n    ></button>\n    <p-progressSpinner\n      *ngIf=\"loadingSaveHelper\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</p-dialog>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { SettingsService } from \"../../settings.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { User } from \"src/app/_class/user\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-form-users\",\n  templateUrl: \"./form-users.component.html\",\n  styleUrls: [\"./form-users.component.scss\"],\n})\nexport class FormUsersComponent implements OnInit {\n  formUser: FormGroup;\n  user: User;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService,\n    private info: InfoPopupComponent\n  ) {\n    this.user = config.data;\n  }\n\n  ngOnInit() {\n    if (this.user) {\n      this.formUser = new FormGroup({\n        name: new FormControl(\"\", { validators: Validators.required }),\n        username: new FormControl(\"\", { validators: Validators.required }),\n        active: new FormControl(false),\n        role: new FormControl(\"\", { validators: Validators.required }),\n        catalogRead: new FormControl(false),\n        catalogWrite: new FormControl(false),\n        catalogDelete: new FormControl(false),\n        systemRead: new FormControl(false),\n        systemWrite: new FormControl(false),\n        systemDelete: new FormControl(false),\n        clientRead: new FormControl(false),\n        clientWrite: new FormControl(false),\n        clientDelete: new FormControl(false),\n        filmRead: new FormControl(false),\n        filmWrite: new FormControl(false),\n        filmDelete: new FormControl(false),\n        producerRead: new FormControl(false),\n        producerWrite: new FormControl(false),\n        producerDelete: new FormControl(false),\n        offerRead: new FormControl(false),\n        offerWrite: new FormControl(false),\n        offerDelete: new FormControl(false),\n        productionRead: new FormControl(false),\n        productionWrite: new FormControl(false),\n        productionDelete: new FormControl(false),\n      });\n      this.formUser.patchValue(this.user);\n    } else {\n      this.formUser = new FormGroup({\n        name: new FormControl(\"\", { validators: Validators.required }),\n        username: new FormControl(\"\", { validators: Validators.required }),\n        password: new FormControl(\"\", { validators: Validators.required }),\n        active: new FormControl(false),\n        role: new FormControl(\"\", { validators: Validators.required }),\n\n        catalogRead: new FormControl(false),\n        catalogWrite: new FormControl(false),\n        catalogDelete: new FormControl(false),\n        systemRead: new FormControl(false),\n        systemWrite: new FormControl(false),\n        systemDelete: new FormControl(false),\n        clientRead: new FormControl(false),\n        clientWrite: new FormControl(false),\n        clientDelete: new FormControl(false),\n        filmRead: new FormControl(false),\n        filmWrite: new FormControl(false),\n        filmDelete: new FormControl(false),\n        producerRead: new FormControl(false),\n        producerWrite: new FormControl(false),\n        producerDelete: new FormControl(false),\n        offerRead: new FormControl(false),\n        offerWrite: new FormControl(false),\n        offerDelete: new FormControl(false),\n        productionRead: new FormControl(false),\n        productionWrite: new FormControl(false),\n        productionDelete: new FormControl(false),\n      });\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  addUser() {\n    this.loading = true;\n    this.settingService.addUser(this.formUser.value).subscribe({\n      next: (res) => {\n        this.info.showSuccessAdd(\"użytkownika\");\n        this.loading = false;\n        this.ref.close(1);\n      },\n      error: (err) => {\n        this.info.showErrorAdd(\"użytkownika\");\n        this.loading = false;\n      },\n      complete: () => {},\n    });\n  }\n\n  updateUser() {\n    this.loading = true;\n    this.settingService\n      .updateUser(this.user.id, this.formUser.value)\n      .subscribe({\n        next: (res) => {\n          this.info.showSuccessUpdate(\"użytkownika\");\n          this.loading = false;\n          this.ref.close(1);\n        },\n        error: (err) => {\n          console.log(err);\n          this.info.showErrorUpdate(\"użytkownika\");\n          this.loading = false;\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formUser\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"name\" class=\"sb-small-label\">Imię Nazwisko</label>\n        <input\n          pInputText\n          [formControl]=\"formUser.get('name')\"\n          autofocus\n          type=\"text\"\n          id=\"name\"\n          class=\"fullwidth\"\n          placeholder=\"Imię Nazwisko\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formUser.get('name').hasError('required') &&\n            formUser.get('name').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"username\" class=\"sb-small-label\">Login</label>\n        <input\n          pInputText\n          [formControl]=\"formUser.get('username')\"\n          type=\"text\"\n          id=\"username\"\n          class=\"fullwidth\"\n          placeholder=\"Login\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formUser.get('username').hasError('required') &&\n            formUser.get('username').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div *ngIf=\"!user\" class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"password\" class=\"sb-small-label\">Hasło</label>\n        <input\n          pPassword\n          type=\"password\"\n          [formControl]=\"formUser.get('password')\"\n          id=\"password\"\n          class=\"fullwidth\"\n          placeholder=\"Hasło\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formUser.get('password').hasError('required') &&\n            formUser.get('password').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <mat-slide-toggle\n          [formControl]=\"formUser.get('active')\"\n          [checked]=\"true\"\n        >\n          Aktywny\n        </mat-slide-toggle>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"roles\" class=\"sb-small-label\">Role</label>\n        <input\n          pInputText\n          [formControl]=\"formUser.get('role')\"\n          type=\"text\"\n          id=\"roles\"\n          class=\"fullwidth\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formUser.get('role').hasError('required') &&\n            formUser.get('role').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <hr />\n\n    <div class=\"row\">\n      <div class=\"col\">\n        <p><b>Katalog</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('catalogRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          ></p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('catalogWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          ></p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('catalogDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          ></p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n\n      <div class=\"col\">\n        <p><b>Systemy</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('systemRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('systemWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('systemDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <p><b>Klient</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('clientRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('clientWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('clientDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <p><b>Okleina</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('filmRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('filmWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('filmDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <p><b>Producent</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('producerRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('producerWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('producerDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <p><b>Oferty</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('offerRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('offerWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('offerDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n      <div class=\"col\">\n        <p><b>Produkcja</b></p>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('productionRead')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Odczyt</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('productionWrite')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Zapis</p>\n        </div>\n        <div class=\"row m-0\">\n          <p-toggleButton\n            [formControl]=\"formUser.get('productionDelete')\"\n            onIcon=\"pi pi-check\"\n            offIcon=\"pi pi-times\"\n          >\n          </p-toggleButton>\n          <p class=\"ml-1\">Usuwanie</p>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      *ngIf=\"!user\"\n      [disabled]=\"formUser.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"addUser()\"\n      pTooltip=\"Nowy użytkownik\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <button\n      *ngIf=\"user\"\n      [disabled]=\"formUser.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"updateUser()\"\n      pTooltip=\"Aktualizacja użytkownika\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-main',\n  templateUrl: './settings-main.component.html',\n  styleUrls: ['./settings-main.component.scss']\n})\nexport class SettingsMainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <a [routerLink]=\"['users']\">\n        <div class=\"card\" style=\"width: 18rem\">\n          <div class=\"card-body\">\n            <div class=\"d-flex flex-row\">\n              <i class=\"pi pi-users\"></i>\n              <p class=\"card-text w-100 text-right\">Użytkownicy</p>\n            </div>\n          </div>\n        </div>\n      </a>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <a [routerLink]=\"['mojafirma']\">\n        <div class=\"card\" style=\"width: 18rem\">\n          <div class=\"card-body\">\n            <div class=\"d-flex flex-row\">\n              <i class=\"pi pi-home\"></i>\n              <p class=\"card-text w-100 text-right\">Moje Firmy</p>\n            </div>\n          </div>\n        </div>\n      </a>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col\">\n      <a [routerLink]=\"['parametry-oferty']\">\n        <div class=\"card\" style=\"width: 18rem\">\n          <div class=\"card-body\">\n            <div class=\"d-flex flex-row\">\n              <i class=\"pi pi-ticket\"></i>\n              <p class=\"card-text w-100 text-right\">Parametry Oferty</p>\n            </div>\n          </div>\n        </div>\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from \"@angular/core\";\nimport { SettingsService } from \"../../settings.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { FormGroup, Validators, FormBuilder } from \"@angular/forms\";\nimport { User } from \"src/app/_class/user\";\nimport { AppValidators } from \"src/app/_validators/AppValidators\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-form-password\",\n  templateUrl: \"./form-password.component.html\",\n  styleUrls: [\"./form-password.component.scss\"],\n})\nexport class FormPasswordComponent implements OnInit {\n  formPassword: FormGroup;\n  user: User;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService,\n    private info: InfoPopupComponent,\n    private fb: FormBuilder\n  ) {\n    this.user = config.data;\n  }\n\n  ngOnInit() {\n    this.formPassword = this.fb.group(\n      {\n        password: [\"\", { validators: Validators.required }],\n        confirmPassword: [\"\", { validators: Validators.required }],\n      },\n      { validator: AppValidators.nomatch(\"password\", \"confirmPassword\") }\n    );\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  onChangePass() {\n    this.loading = true;\n    this.settingService\n      .changePassword(this.user.id, this.formPassword.value)\n      .subscribe({\n        next: (res) => {\n          this.info.showSuccessUpdate(\"hasło użytkownika\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.loading = false;\n          this.info.showErrorUpdate(\"hasło użytkownika\");\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\n  <form [formGroup]=\"formPassword\" class=\"sb-form\">\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"password\" class=\"sb-small-label\">Hasło</label>\n        <input\n          pPassword\n          class=\"fullwidth\"\n          type=\"password\"\n          [formControl]=\"formPassword.get('password')\"\n          id=\"password\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formPassword.get('password').hasError('required') &&\n            formPassword.get('password').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-g-12 col-md-12 col-lg-12\">\n        <label for=\"confirmPassword\" class=\"sb-small-label\"\n          >Powtórz hasło</label\n        >\n        <input\n          pPassword\n          class=\"fullwidth\"\n          type=\"password\"\n          [formControl]=\"formPassword.get('confirmPassword')\"\n          id=\"confirmPassword\"\n          required\n          autocomplete=\"off\"\n        />\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formPassword.get('confirmPassword').hasError('required') &&\n            formPassword.get('confirmPassword').touched\n          \"\n        >\n          musi być wypełnione\n        </p>\n        <p\n          class=\"invalid-feedback\"\n          *ngIf=\"\n            formPassword.get('confirmPassword').hasError('nomatch') &&\n            formPassword.get('confirmPassword').touched\n          \"\n        >\n          hasła muszą być identyczne\n        </p>\n      </div>\n    </div>\n  </form>\n</div>\n\n<div class=\"sb-dialog-footer\">\n  <div class=\"sb-btn-close\">\n    <button\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"exit(0)\"\n      pTooltip=\"Anulowanie operacji\"\n      label=\"Anuluj\"\n      icon=\"pi pi-times\"\n      class=\"p-button-sm sb-button o-gray\"\n    ></button>\n  </div>\n  <div class=\"sb-btn-save\">\n    <button\n      [disabled]=\"formPassword.invalid || loading\"\n      pButton\n      pRipple\n      type=\"button\"\n      (click)=\"onChangePass()\"\n      pTooltip=\"Aktualizacja hasła\"\n      label=\"Zapisz\"\n      icon=\"pi pi-check\"\n      class=\"p-button-sm sb-button green\"\n    ></button>\n\n    <p-progressSpinner\n      *ngIf=\"loading\"\n      [style]=\"{ width: '25px', height: '25px' }\"\n      styleClass=\"custom-spinner\"\n      strokeWidth=\"8\"\n      fill=\"#EEEEEE\"\n      animationDuration=\".5s\"\n    ></p-progressSpinner>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { SettingsService } from \"../settings.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { FormUsersComponent } from \"./form-users/form-users.component\";\nimport { Location } from \"@angular/common\";\nimport { FormPasswordComponent } from \"./form-password/form-password.component\";\nimport { User } from \"src/app/_class/user\";\nimport { ConfirmationService } from \"primeng/api\";\nimport { DialogService } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-users\",\n  templateUrl: \"./users.component.html\",\n  styleUrls: [\"./users.component.scss\"],\n})\nexport class UsersComponent implements OnInit {\n  users: any;\n\n  constructor(\n    public dialogService: DialogService,\n    private location: Location,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent,\n    private confirmationService: ConfirmationService\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.settingService.getUsers().subscribe({\n      next: (res) => {\n        this.users = res;\n        console.log(this.users);\n      },\n      error: (err) => {\n        this.infoPopup.showErrorDownload(\"użytkowników\");\n      },\n      complete: () => {},\n    });\n  }\n\n  yesNo(is) {\n    return is ? \"TAK\" : \"NIE\";\n  }\n\n  openDialogAddUser() {\n    const dialogRef = this.dialogService.open(FormUsersComponent, {\n      header: \"Nowy użytkownik\",\n      width: \"500px\",\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog was closed\");\n    });\n  }\n\n  openDialogUpdateUser(rowData) {\n    const dialogRef = this.dialogService.open(FormUsersComponent, {\n      header: \"Aktualizacja użytkownika\",\n      data: rowData,\n      width: \"500px\",\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog was closed\");\n    });\n  }\n\n  openDialogChangePass(usr): void {\n    const dialogRef = this.dialogService.open(FormPasswordComponent, {\n      header: \"Aktualizacja hasła\",\n      data: usr,\n      width: \"450px\",\n    });\n    dialogRef.onClose.subscribe((res) => {\n      if (res) {\n        this.loadData();\n      }\n      console.log(\"The dialog pass was closed\");\n    });\n  }\n\n  onDeleteUser(user: User) {\n    this.confirmationService.confirm({\n      message: \"Na pewno chcesz usunąć \" + user.name + \"?\",\n      header: \"Potwierdzenie\",\n      acceptLabel: \"Tak\",\n      rejectLabel: \"Nie\",\n      acceptIcon: \"pi pi-trash\",\n      acceptButtonStyleClass: \"p-button-sm sb-button red\",\n      rejectButtonStyleClass: \"p-button-sm sb-button o-gray\",\n      accept: () => {\n        this.settingService.deleteUser(user.id).subscribe({\n          next: (res) => {\n            this.infoPopup.showSuccessDelete(\"użytkownia\");\n          },\n          error: (err) => {\n            this.infoPopup.showErrorDelete(\"użytkownika\");\n          },\n          complete: () => {\n            this.loadData();\n          },\n        });\n      },\n    });\n  }\n\n  backClicked() {\n    this.location.back();\n  }\n}\n","<div class=\"row mb-2 ml-0\">\n  <button (click)=\"backClicked()\" mat-raised-button>\n    <i class=\"pi pi-chevron-left\"></i>\n  </button>\n</div>\n<div class=\"row\">\n  <div class=\"col-2\">\n    <div\n      class=\"bg-white shadow-sm w-100 h-100 p-2 rounded\"\n      style=\"text-align: center\"\n    >\n      <button\n        pButton\n        type=\"button\"\n        (click)=\"openDialogAddUser()\"\n        label=\"Dodaj użytkownika\"\n        class=\"p-button-sm sb-button gray\"\n      ></button>\n    </div>\n  </div>\n  <div class=\"col-10\">\n    <div class=\"row\">\n      <p-table\n        #us\n        [value]=\"users\"\n        dataKey=\"id\"\n        [filterDelay]=\"0\"\n        [globalFilterFields]=\"['username']\"\n      >\n        <ng-template pTemplate=\"caption\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <span>Użytkownicy</span>\n            </div>\n            <div class=\"col\" style=\"text-align: end\">\n              <input\n                pInputText\n                type=\"text\"\n                (input)=\"us.filterGlobal($event.target.value, 'contains')\"\n                placeholder=\"Wyszukiwarka\"\n                class=\"p-inputtext\"\n              />\n            </div>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th style=\"width: 40px\">ID</th>\n            <th style=\"width: 120px\">Login</th>\n            <th style=\"width: 120px\">Imie Nazwisko</th>\n            <th style=\"width: 60px\" pTooltip=\"Aktywny\">Akt.</th>\n            <th style=\"width: 120px\">Role</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Katalog Odczyt\">Kat. O.</th>\n            <th style=\"width: 60px\" pTooltip=\"Katalog Zapis\">Kat. Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Katalog Usuwanie\">Kat. U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"System Odczyt\">Sys. O.</th>\n            <th style=\"width: 60px\" pTooltip=\"System Zapis\">Sys. Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"System Usuwanie\">Sys. U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Klient Odczyt\">Kl. O.</th>\n            <th style=\"width: 60px\" pTooltip=\"Klient Zapis\">Kl. Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Klient Usuwanie\">Kl. U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Okleiny Odczyt\">Okl. O.</th>\n            <th style=\"width: 60px\" pTooltip=\"Okleiny Zapis\">Okl. Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Okleiny Usuwanie\">Okl. U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Producenci Odczyt\">Prod. O.</th>\n            <th style=\"width: 60px\" pTooltip=\"Producenci Zapis\">Prod. Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Producenci Usuwanie\">Prod. U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Oferta Odczyt\">Oferta O.</th>\n            <th style=\"width: 60px\" pTooltip=\"Oferta Zapis\">Oferta Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Oferta Usuwanie\">Oferta U.</th>\n\n            <th style=\"width: 60px\" pTooltip=\"Produkcja Odczyt\">\n              Produkcja O.\n            </th>\n            <th style=\"width: 60px\" pTooltip=\"Produkcja Zapis\">Produkcja Z.</th>\n            <th style=\"width: 60px\" pTooltip=\"Produkcja Usuwanie\">\n              Produkcja U.\n            </th>\n\n            <th style=\"width: 120px\"></th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData>\n          <tr>\n            <td>\n              {{ rowData.id }}\n            </td>\n            <td>\n              {{ rowData.username }}\n            </td>\n            <td>\n              {{ rowData.name }}\n            </td>\n            <td>\n              {{ yesNo(rowData.active) }}\n            </td>\n            <td>\n              {{ rowData.role }}\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.catalogRead\">\n                {{ yesNo(rowData.catalogRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.catalogWrite\">\n                {{ yesNo(rowData.catalogWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.catalogDelete\">\n                {{ yesNo(rowData.catalogDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.systemRead\">\n                {{ yesNo(rowData.systemRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.systemWrite\">\n                {{ yesNo(rowData.systemWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.systemDelete\">\n                {{ yesNo(rowData.systemDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.clientRead\">\n                {{ yesNo(rowData.clientRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.clientWrite\">\n                {{ yesNo(rowData.clientWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.clientDelete\">\n                {{ yesNo(rowData.clientDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.filmRead\">\n                {{ yesNo(rowData.filmRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.filmWrite\">\n                {{ yesNo(rowData.filmWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.filmDelete\">\n                {{ yesNo(rowData.filmDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.producerRead\">\n                {{ yesNo(rowData.producerRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.producerWrite\">\n                {{ yesNo(rowData.producerWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.producerDelete\">\n                {{ yesNo(rowData.producerDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.offerRead\">\n                {{ yesNo(rowData.offerRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.offerWrite\">\n                {{ yesNo(rowData.offerWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.offerDelete\">\n                {{ yesNo(rowData.productionDelete) }}</span\n              >\n            </td>\n\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.productionRead\">\n                {{ yesNo(rowData.productionRead) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.productionWrite\">\n                {{ yesNo(rowData.productionWrite) }}</span\n              >\n            </td>\n            <td>\n              <span [class]=\"'user-badge status-' + rowData.productionDelete\">\n                {{ yesNo(rowData.productionDelete) }}</span\n              >\n            </td>\n\n            <td class=\"edit-col\">\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"openDialogUpdateUser(rowData)\"\n                icon=\"pi pi-pencil\"\n                class=\"p-button-sm sb-button blue\"\n                pTooltip=\"Edycja Użytkownika\"\n              ></button>\n\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"openDialogChangePass(rowData)\"\n                icon=\"pi pi-key\"\n                class=\"p-button-sm ml-1 sb-button blue\"\n                pTooltip=\"Zmiana hasła\"\n              ></button>\n\n              <button\n                pButton\n                pRipple\n                type=\"button\"\n                (click)=\"onDeleteUser(rowData)\"\n                icon=\"pi pi-trash\"\n                class=\"p-button-sm ml-1 sb-button red\"\n                pTooltip=\"Usuwanie\"\n              ></button>\n            </td>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"emptymessage\">\n          <tr>\n            <td colspan=\"6\" style=\"text-align: left\">Brak danych.</td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { AppValidators } from \"src/app/_validators/AppValidators\";\nimport { SettingsService } from \"../../settings.service\";\nimport { InfoPopupComponent } from \"src/app/info-popup/info-popup.component\";\nimport { DynamicDialogRef, DynamicDialogConfig } from \"primeng/dynamicdialog\";\n\n@Component({\n  selector: \"app-form-mycompany\",\n  templateUrl: \"./form-mycompany.component.html\",\n  styleUrls: [\"./form-mycompany.component.scss\"],\n})\nexport class FormMycompanyComponent implements OnInit {\n  formMyCompany: FormGroup;\n  company: any;\n  loading = false;\n\n  constructor(\n    public ref: DynamicDialogRef,\n    public config: DynamicDialogConfig,\n    private settingService: SettingsService,\n    private infoPopup: InfoPopupComponent\n  ) {\n    this.company = config.data;\n  }\n\n  ngOnInit(): void {\n    if (this.company) {\n      this.formMyCompany = new FormGroup({\n        id: new FormControl(\"\"),\n        name: new FormControl(\"\", { validators: [Validators.required] }),\n        shortName: new FormControl(\"\", { validators: [Validators.required] }),\n        shortId: new FormControl(\"\", { validators: [Validators.required] }),\n\n        nip: new FormControl(\"\", {\n          validators: [Validators.required, AppValidators.validatenip],\n        }),\n        regon: new FormControl(\"\", {\n          validators: [AppValidators.validateregon9],\n          updateOn: \"blur\",\n        }),\n\n        fvemail: new FormControl(\"\", { validators: [Validators.email] }),\n        logoLink: new FormControl(\"\"),\n        email: new FormControl(\"\", { validators: [Validators.email] }),\n        www: new FormControl(\"\"),\n\n        phonenumber: new FormControl(\"\", {\n          validators: [Validators.minLength(9)],\n        }),\n        phonenumber2: new FormControl(\"\", {\n          validators: [Validators.minLength(9)],\n        }),\n\n        town: new FormControl(\"\"),\n        street: new FormControl(\"\"),\n        houseNumber: new FormControl(\"\"),\n        flatNumber: new FormControl(\"\"),\n        postalCode: new FormControl(\"\"),\n        province: new FormControl(\"\"),\n        country: new FormControl(\"\"),\n      });\n      this.formMyCompany.patchValue(this.company);\n      console.log(this.formMyCompany);\n    } else {\n      this.formMyCompany = new FormGroup({\n        name: new FormControl(\"\", { validators: [Validators.required] }),\n        shortName: new FormControl(\"\", { validators: [Validators.required] }),\n        shortId: new FormControl(\"\", { validators: [Validators.required] }),\n\n        nip: new FormControl(\"\", {\n          validators: [Validators.required, AppValidators.validatenip],\n          asyncValidators: [AppValidators.myCompanyExists],\n          updateOn: \"blur\",\n        }),\n        regon: new FormControl(\"\", {\n          validators: [AppValidators.validateregon9],\n          updateOn: \"blur\",\n        }),\n\n        fvemail: new FormControl(\"\", { validators: [Validators.email] }),\n        logoLink: new FormControl(\"\"),\n        email: new FormControl(\"\", { validators: [Validators.email] }),\n        www: new FormControl(\"\"),\n\n        phonenumber: new FormControl(\"\", {\n          validators: [Validators.minLength(9)],\n        }),\n        phonenumber2: new FormControl(\"\", {\n          validators: [Validators.minLength(9)],\n        }),\n\n        town: new FormControl(\"\"),\n        street: new FormControl(\"\"),\n        houseNumber: new FormControl(\"\"),\n        flatNumber: new FormControl(\"\"),\n        postalCode: new FormControl(\"\"),\n        province: new FormControl(\"\"),\n        country: new FormControl(\"\"),\n      });\n    }\n  }\n\n  exit(id) {\n    this.ref.close(id);\n  }\n\n  onAddMyCompany() {\n    this.loading = true;\n    this.settingService.addMyCompany(this.formMyCompany.value).subscribe({\n      next: (res) => {\n        this.infoPopup.showSuccessAdd(\"moja firma\");\n        this.loading = false;\n        this.exit(1);\n      },\n      error: (err) => {\n        this.loading = false;\n        this.infoPopup.showErrorAdd(\"moja firma\");\n      },\n      complete: () => {},\n    });\n  }\n\n  onUpdateMyCompany() {\n    this.loading = true;\n    this.settingService\n      .updateMyCompany(this.company.id, this.formMyCompany.value)\n      .subscribe({\n        next: (res) => {\n          this.infoPopup.showSuccessUpdate(\"moja firma\");\n          this.loading = false;\n          this.exit(1);\n        },\n        error: (err) => {\n          this.loading = false;\n          this.infoPopup.showErrorUpdate(\"moja firma\");\n        },\n        complete: () => {},\n      });\n  }\n}\n","<div class=\"sb-dialog-content\">\r\n  <form [formGroup]=\"formMyCompany\" class=\"sb-form\">\r\n    <div class=\"form-group m-0 p-0\">\r\n      <div>\r\n        <p class=\"p-0 m-0\"><b>DANE</b></p>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"name\">Nazwa*</label>\r\n          <textarea\r\n            [style]=\"{ width: '100%' }\"\r\n            pInputTextarea\r\n            type=\"text\"\r\n            id=\"name\"\r\n            [formControl]=\"formMyCompany.get('name')\"\r\n            required\r\n          >\r\n          </textarea>\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('name').hasError('required') &&\r\n              formMyCompany.get('name').touched\r\n            \"\r\n          >\r\n            musi być wypełnione\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"shortName\">Krótka nazwa</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"shortName\"\r\n            [formControl]=\"formMyCompany.get('shortName')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"shortId\">Identyfikator</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"shortId\"\r\n            [formControl]=\"formMyCompany.get('shortId')\"\r\n            pKeyFilter=\"alpha\"\r\n            maxlength=\"2\"\r\n            minlength=\"2\"\r\n            autocomplete=\"off\"\r\n            required\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('shortId').hasError('required') &&\r\n              formMyCompany.get('shortId').touched\r\n            \"\r\n          >\r\n            musi być wypełnione\r\n          </p>\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('shortId').hasError('minlength') &&\r\n              formMyCompany.get('shortId').touched\r\n            \"\r\n          >\r\n            Identyfikator musi się składać z 2 znaków\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"nip\">NIP*</label>\r\n          <input\r\n            [attr.disabled]=\"company ? true : null\"\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"nip\"\r\n            [formControl]=\"formMyCompany.get('nip')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('nip').hasError('nipFormat') &&\r\n              formMyCompany.get('nip').touched\r\n            \"\r\n          >\r\n            niepoprawny nip\r\n          </p>\r\n        </div>\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"regon\">REGON</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"regon\"\r\n            [formControl]=\"formMyCompany.get('regon')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('regon').hasError('regonFormat') &&\r\n              formMyCompany.get('regon').touched\r\n            \"\r\n          >\r\n            niepoprawny regon\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <div>\r\n        <p class=\"mb-0 mt-4\"><b>ADRES</b></p>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"town\">Miasto</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"town\"\r\n            [formControl]=\"formMyCompany.get('town')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"street\">Ulica</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"street\"\r\n            [formControl]=\"formMyCompany.get('street')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem\">\r\n          <label class=\"mb-0\" for=\"houseNumber\">Numer budynku</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"houseNumber\"\r\n            [formControl]=\"formMyCompany.get('houseNumber')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-2 mb-0 pb-0\" style=\"padding: 0.5rem\">\r\n          <label class=\"mb-0\" for=\"flatNumber\">Numer mieszkania</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"flatNumber\"\r\n            [formControl]=\"formMyCompany.get('flatNumber')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"postalCode\">Kod Pocztowy</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"postalCode\"\r\n            [formControl]=\"formMyCompany.get('postalCode')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"province\">Województwo</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"province\"\r\n            [formControl]=\"formMyCompany.get('province')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"country\">Kraj</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"country\"\r\n            [formControl]=\"formMyCompany.get('country')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <div>\r\n        <p class=\"mb-0 mt-4\"><b>DANE KONTAKTOWE</b></p>\r\n      </div>\r\n\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"email\">EMAIL</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"email\"\r\n            [formControl]=\"formMyCompany.get('email')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('email').hasError('email') &&\r\n              formMyCompany.get('email').touched\r\n            \"\r\n          >\r\n            niepoprawny email\r\n          </p>\r\n        </div>\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"fvemail\">EMAIL FV</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"fvemail\"\r\n            [formControl]=\"formMyCompany.get('fvemail')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('email').hasError('fvemail') &&\r\n              formMyCompany.get('fvemail').touched\r\n            \"\r\n          >\r\n            niepoprawny email\r\n          </p>\r\n        </div>\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"phonenumber\">Numer telefonu</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"phonenumber\"\r\n            [formControl]=\"formMyCompany.get('phonenumber')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('phonenumber').hasError('minLength') &&\r\n              formMyCompany.get('phonenumber').touched\r\n            \"\r\n          >\r\n            niepoprawny numer telefonu\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"p-field p-col-4 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"phonenumber2\">Numer telefonu 2</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"phonenumber2\"\r\n            [formControl]=\"formMyCompany.get('phonenumber2')\"\r\n            autocomplete=\"off\"\r\n          />\r\n          <p\r\n            class=\"invalid-feedback\"\r\n            *ngIf=\"\r\n              formMyCompany.get('phonenumber2').hasError('minLength') &&\r\n              formMyCompany.get('phonenumber2').touched\r\n            \"\r\n          >\r\n            niepoprawny numer telefonu\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-12 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"www\">WWW</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"www\"\r\n            [formControl]=\"formMyCompany.get('www')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"p-fluid p-formgrid p-grid\">\r\n        <div class=\"p-field p-col-12 mb-0 pb-0\">\r\n          <label class=\"mb-0\" for=\"logoLink\">Logo link</label>\r\n          <input\r\n            pInputText\r\n            type=\"text\"\r\n            id=\"logoLink\"\r\n            [formControl]=\"formMyCompany.get('logoLink')\"\r\n            autocomplete=\"off\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"sb-dialog-footer\">\r\n  <div class=\"sb-btn-close\">\r\n    <button\r\n      pButton\r\n      pRipple\r\n      type=\"button\"\r\n      (click)=\"exit(0)\"\r\n      pTooltip=\"Anulowanie operacji\"\r\n      label=\"Anuluj\"\r\n      icon=\"pi pi-times\"\r\n      class=\"p-button-sm sb-button o-gray\"\r\n    ></button>\r\n  </div>\r\n  <div class=\"sb-btn-save\">\r\n    <button\r\n      *ngIf=\"!company\"\r\n      [disabled]=\"formMyCompany.invalid || loading\"\r\n      pButton\r\n      pRipple\r\n      type=\"button\"\r\n      (click)=\"onAddMyCompany()\"\r\n      pTooltip=\"Nowa firma\"\r\n      label=\"Zapisz\"\r\n      icon=\"pi pi-check\"\r\n      class=\"p-button-sm sb-button green\"\r\n    ></button>\r\n\r\n    <button\r\n      *ngIf=\"company\"\r\n      [disabled]=\"formMyCompany.invalid || loading\"\r\n      pButton\r\n      pRipple\r\n      type=\"button\"\r\n      (click)=\"onUpdateMyCompany()\"\r\n      pTooltip=\"Aktualizacja firmy\"\r\n      label=\"Zapisz\"\r\n      icon=\"pi pi-check\"\r\n      class=\"p-button-sm sb-button green\"\r\n    ></button>\r\n\r\n    <p-progressSpinner\r\n      *ngIf=\"loading\"\r\n      [style]=\"{ width: '25px', height: '25px' }\"\r\n      styleClass=\"custom-spinner\"\r\n      strokeWidth=\"8\"\r\n      fill=\"#EEEEEE\"\r\n      animationDuration=\".5s\"\r\n    ></p-progressSpinner>\r\n  </div>\r\n</div>\r\n"]}