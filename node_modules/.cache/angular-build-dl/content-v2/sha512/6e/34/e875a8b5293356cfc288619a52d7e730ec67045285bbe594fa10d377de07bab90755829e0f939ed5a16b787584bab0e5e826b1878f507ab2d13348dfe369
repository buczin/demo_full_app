{"version":3,"sources":["src/app/contractor/client-add-form/client-add-form.component.html","src/app/contractor/client-main/client-main.component.html","src/app/contractor/client-add-form/client-add-form.component.scss","src/app/contractor/client-add-form/client-add-form.component.ts","src/app/contractor/client-main/client-main.component.scss","src/app/contractor/client-main/client-main.component.ts","src/app/contractor/client-service/client.service.ts","src/app/contractor/contractor-routing.module.ts","src/app/contractor/contractor.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"no-vertical-bar\\\">\\n    <div class=\\\"m-1\\\">\\n\\n        <form [formGroup]=\\\"formClient\\\">\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"name\\\" class=\\\"col-sm-3 col-form-label\\\">Nazwa</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('name')\\\" type=\\\"text\\\" id=\\\"name\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"Nazwa Klienta\\\" required autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('name').hasError('required') && formClient.get('name').touched\\\">\\n                        musi być wypełnione\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"nip\\\" class=\\\"col-sm-3 col-form-label\\\">NIP</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('nip')\\\" type=\\\"text\\\" id=\\\"nip\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"NIP\\\"\\n                        required autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('required') && formClient.get('nip').touched\\\">\\n                        musi być wypełnione\\n                    </p>\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('nipFormat') && formClient.get('nip').touched\\\">\\n                        niepoprawny nip\\n                    </p>\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('nip').hasError('nipExists') && formClient.get('nip').touched\\\">\\n                        ten numer znajduje się na liście\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"regon\\\" class=\\\"col-sm-3 col-form-label\\\">REGON</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('regon')\\\" type=\\\"text\\\" id=\\\"regon\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\" placeholder=\\\"REGON\\\"\\n                        autocomplete=\\\"off\\\">\\n                    <p class=\\\"invalid-feedback\\\"\\n                        *ngIf=\\\"formClient.get('regon').hasError('regonFormat') && formClient.get('regon').touched\\\">\\n                        niepoprawny regon\\n                    </p>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"email\\\" class=\\\"col-sm-3 col-form-label\\\">EMAIL</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('email')\\\" type=\\\"text\\\" id=\\\"email\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"Adres email\\\" autocomplete=\\\"off\\\">\\n                </div>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('email').hasError('email') && formClient.get('email').touched\\\">\\n                    niepoprawny email\\n                </p>\\n            </div>\\n\\n            <div class=\\\"form-group row\\\">\\n                <label for=\\\"phonenumber\\\" class=\\\"col-sm-3 col-form-label\\\">Numer telefonu</label>\\n                <div class=\\\"col-sm-9\\\">\\n                    <input [formControl]=\\\"formClient.get('phonenumber')\\\" type=\\\"text\\\" id=\\\"phonenumber\\\"\\n                        class=\\\"form-control ui-inputtext ui-corner-all ui-state-default ui-widget\\\"\\n                        placeholder=\\\"numer tel.\\\" autocomplete=\\\"off\\\">\\n                </div>\\n                <p class=\\\"invalid-feedback\\\"\\n                    *ngIf=\\\"formClient.get('phonenumber').hasError('minLength') && formClient.get('phonenumber').touched\\\">\\n                    niepoprawny numer telefonu\\n                </p>\\n            </div>\\n        </form>\\n    </div>\\n    <hr>\\n    <div class=\\\"ui-dialog-buttonpane ui-helper-clearfix footer-btn m-1\\\">\\n        <button class=\\\"ui-dialog-titlebar-close\\\" matTooltip=\\\"Anulowanie dodawania\\\" matTooltipClass=\\\"tooltip-red\\\"\\n            type=\\\"button\\\" pButton icon=\\\"pi pi-times\\\" (click)=\\\"exit()\\\" label=\\\"Anuluj\\\"></button>\\n        <button [disabled]=\\\"formClient.invalid\\\" matTooltip=\\\"Dodaj klienta\\\" matTooltipClass=\\\"tooltip-green\\\"\\n            class=\\\"ui-button-success\\\" type=\\\"button\\\" pButton icon=\\\"pi pi-check\\\" (click)=\\\"onAddNewClient()\\\"\\n            label=\\\"Zapisz\\\"></button>\\n    </div>\\n</div>\"","export default \"<p-toast position=\\\"top-right\\\"></p-toast>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-md-6 col-sm-6\\\">\\n        <div class=\\\"card card-stats\\\">\\n            <div class=\\\"card-body \\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5 col-md-4\\\">\\n                        <div class=\\\"text-center\\\">\\n                            <span class=\\\"material-icons icon-big\\\">face</span>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-7 col-md-8\\\">\\n                        <div class=\\\"numbers\\\">\\n                            <p class=\\\"card-category\\\">Kontrahenci</p>\\n                            <p class=\\\"card-title\\\">{{clientCount}}</p>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer \\\">\\n                <hr>\\n                <div class=\\\"stats-bar\\\">\\n                    <div class=\\\"stats\\\">\\n                        <mat-icon class=\\\"fo-small-icon\\\">calculate</mat-icon><span class=\\\"fo-text\\\">Ilość</span>\\n                    </div>\\n                    <div class=\\\"stats-bar-button\\\">\\n                        <button (click)=\\\"showDialogToAdd()\\\" matTooltip=\\\"Dodanie nowego kontrahenta\\\"\\n                            matTooltipClass=\\\"tooltip-red\\\"\\n                            class=\\\"ui-button-info ui-button ui-widget ui-state-default ui-corner-all ui-button-icon-only\\\"\\n                            icon=\\\"pi pi-pencil\\\" pbutton=\\\"\\\" piniteditablerow=\\\"\\\" type=\\\"button\\\"\\n                            ng-reflect-icon=\\\"pi pi-pencil\\\"><span aria-hidden=\\\"true\\\"\\n                                class=\\\"ui-button-icon-left ui-clickable pi pi-plus\\\"></span>\\n                            <span aria-hidden=\\\"true\\\" class=\\\"ui-button-text ui-clickable\\\">ui-btn</span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n\\n        <p-table [value]=\\\"client\\\" dataKey=\\\"id\\\" editMode=\\\"row\\\" sortMode=\\\"multiple\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [rowsPerPageOptions]=\\\"[10,20,50]\\\" [showCurrentPageReport]=\\\"true\\\"\\n        currentPageReportTemplate=\\\"{first} do {last} z {totalRecords}\\\">\\n            <ng-template pTemplate=\\\"caption\\\">\\n                Lista Kontrahentów\\n            </ng-template>\\n            <ng-template pTemplate=\\\"header\\\">\\n                <tr>\\n                    <th pSortableColumn=\\\"name\\\">Nazwa<p-sortIcon field=\\\"name\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"nip\\\">NIP<p-sortIcon field=\\\"nip\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"regon\\\">REGON<p-sortIcon field=\\\"regon\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"email\\\">EMAIL<p-sortIcon field=\\\"email\\\"></p-sortIcon></th>\\n                    <th pSortableColumn=\\\"phonenumber\\\">TEL.<p-sortIcon field=\\\"phonenumber\\\"></p-sortIcon></th>\\n                    <th style=\\\"width:8em\\\"></th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\n                <tr [pEditableRow]=\\\"rowData\\\">\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.name\\\" required>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.name}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n                    <td>\\n                        {{rowData.nip}}\\n                    </td>\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.regon\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.regon}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.email\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.email}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n                    <td>\\n                        <p-cellEditor>\\n                            <ng-template pTemplate=\\\"input\\\">\\n                                <input class=\\\"inline-edit\\\" pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.phonenumber\\\">\\n                            </ng-template>\\n                            <ng-template pTemplate=\\\"output\\\">\\n                                {{rowData.phonenumber}}\\n                            </ng-template>\\n                        </p-cellEditor>\\n                    </td>\\n\\n\\n                    <td style=\\\"text-align:center\\\">\\n                        <button matTooltip=\\\"Edycja Kontrahenta\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"!editing && !err\\\"\\n                            pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info edit-button\\\"\\n                            (click)=\\\"onRowEditInit(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Zapisz Kontrahenta\\\" matTooltipClass=\\\"tooltip-green\\\" *ngIf=\\\"editing\\\" pButton\\n                            type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\" class=\\\"ui-button-success\\\"\\n                            style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\"></button>\\n                        <button matTooltip=\\\"Anuluj\\\" matTooltipClass=\\\"tooltip-red\\\" *ngIf=\\\"editing\\\" pButton type=\\\"button\\\"\\n                            pCancelEditableRow icon=\\\"pi pi-times\\\" class=\\\"ui-button-danger\\\"\\n                            (click)=\\\"onRowEditCancel(rowData, ri)\\\"></button>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n\\n    </div>\\n\\n</div>\\n\\n<p-dialog header=\\\"Nowy Kontrahent\\\" [(visible)]=\\\"clientService.displayDialogClient\\\" [focusOnShow]=\\\"true\\\" [responsive]=\\\"true\\\"\\n    showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [style]=\\\"{width: '500px'}\\\">\\n    <app-client-add-form (addedClient)=\\\"loadData()\\\"></app-client-add-form>\\n</p-dialog>\"","export default \".footer-btn button {\\n  margin: 0 0.5em 0 0;\\n  width: auto;\\n}\\n\\n.footer-btn {\\n  text-align: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vQzpcXFVzZXJzXFxTeWx3ZWtcXERlc2t0b3BcXGJtL3NyY1xcYXBwXFxjb250cmFjdG9yXFxjbGllbnQtYWRkLWZvcm1cXGNsaWVudC1hZGQtZm9ybS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksbUJBQUE7RUFDQSxXQUFBO0FDQ0o7O0FEQ0E7RUFDSSxpQkFBQTtBQ0VKIiwiZmlsZSI6InNyYy9hcHAvY29udHJhY3Rvci9jbGllbnQtYWRkLWZvcm0vY2xpZW50LWFkZC1mb3JtLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3Rlci1idG4gYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwIDAuNWVtIDAgMDtcclxuICAgIHdpZHRoOiBhdXRvO1xyXG59XHJcbi5mb290ZXItYnRue1xyXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbn0iLCIuZm9vdGVyLWJ0biBidXR0b24ge1xuICBtYXJnaW46IDAgMC41ZW0gMCAwO1xuICB3aWR0aDogYXV0bztcbn1cblxuLmZvb3Rlci1idG4ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn0iXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { ClientService } from '../client-service/client.service';\nimport { InfoPopupComponent } from 'src/app/info-popup/info-popup.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppValidators } from 'src/app/_validators/AppValidators';\n\n@Component({\n  selector: 'app-client-add-form',\n  templateUrl: './client-add-form.component.html',\n  styleUrls: ['./client-add-form.component.scss']\n})\nexport class ClientAddFormComponent implements OnInit {\n\n  @Output() addedClient: EventEmitter<any> = new EventEmitter();\n  formClient: FormGroup;\n\n  constructor(private clientService: ClientService, private infoPopup: InfoPopupComponent) { }\n\n  ngOnInit() {\n    this.formClient = new FormGroup({\n      nip: new FormControl('', { validators: [Validators.required, AppValidators.validatenip], asyncValidators: [AppValidators.clientExists], updateOn: 'blur' }),\n      name: new FormControl('', { validators: [Validators.required] }),\n      regon: new FormControl('', { validators: [AppValidators.validateregon9], updateOn: 'blur' }),\n      email: new FormControl('', {validators: [Validators.email]}),\n      phonenumber: new FormControl('',{validators: [Validators.minLength(9),Validators.pattern('[0-9]')]})\n    });\n  }\n\n  exit() {\n    this.formClient.reset();\n    this.clientService.displayDialogClient = false;\n  }\n\n  onAddNewClient() {\n    \n    this.clientService.addClient(this.formClient.value).subscribe(\n      {\n        next: (res) => {\n          this.infoPopup.showSuccessAdd(\"klienta\");\n          this.addedClient.emit();\n          this.exit();\n        },\n        error: (err) => {\n          this.infoPopup.showErrorAdd(\"klienta\");\n        },\n        complete: () => {\n        }\n      }\n    )\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyYWN0b3IvY2xpZW50LW1haW4vY2xpZW50LW1haW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Client, ClientService } from '../client-service/client.service';\nimport { MessageService, SelectItem } from 'primeng/api';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.scss']\n})\nexport class ClientMainComponent implements OnInit {\n  \n  client: Client[] = [];\n\n  onErr: Client =\n    {\n      id: 0,\n      name: \"---\",\n      nip: \"---\",\n      regon: \"---\",\n      email: \"---\",\n      phonenumber: \"---\"\n    };\n  clientCount:number;\n  err: boolean;\n  newclient: boolean;\n  available: SelectItem[];\n  clonedclients: { [s: string]: Client; } = {};\n\n  constructor(private clientService: ClientService, private messageService: MessageService) { }\n\n  ngOnInit() {\n    this.err = false;\n    this.loadData();\n  }\n\n  loadData(){\n    \n    this.clientService.getClients().subscribe(\n      {\n        next: (res) => {\n          this.client = res;\n          this.err = false;\n        },\n        error: (err) => {\n          this.showErrorDownload()\n          this.err = true;\n          this.client.push(this.onErr);\n        },\n        complete: () => {\n        }\n      }\n    )\n\n    this.clientService.getCountClient().subscribe({\n      next: (res) => {\n        this.clientCount = res\n      },\n      error: (err) => {\n        this.showErrorCount(\"klientów\")\n      },\n      complete: () => {\n      }\n    })\n\n\n  }\n\n  showDialogToAdd() {\n    this.clientService.displayDialogClient = true;\n  }\n\n  showSuccess() {\n    this.messageService.add({ severity: 'success', summary: 'Edycja Klienta', detail: 'Poprawnie Zaktualizowano Klienta' });\n  }\n  showError() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się zaktualizować klienta' });\n  }\n\n  showErrorCount(what: String) {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać ilości ' + what });\n  }\n\n  showErrorDownload() {\n    this.messageService.add({ severity: 'error', summary: 'ERROR', detail: 'Nie udało się pobrać listy klientów. Proszę odświeżyć stronę' });\n  }\n\n  clear() {\n    this.messageService.clear();\n  }\n\n  onRowEditInit(client: Client) {\n    this.clonedclients[client.id] = { ...client };\n  }\n\n  onRowEditSave(client: Client) {\n    \n    this.clientService.updateClient(client.id, client).subscribe(\n      {\n        next: (res) => {\n          \n          this.showSuccess();\n        },\n        error: (err) => {\n          \n          this.showError()\n        },\n        complete: () => {\n          delete this.clonedclients[client.id];\n          this.loadData();\n        }\n      }\n    )\n  }\n\n  onRowEditCancel(client: Client, index: number) {\n    this.client[index] = this.clonedclients[client.id];\n    delete this.clonedclients[client.id];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface Client {\n  id?: number;\n  name?: String;\n  nip?: String;\n  regon?: String;\n  email?: String;\n  phonenumber?: String;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientService {\n\n\n  public displayDialogClient: boolean;\n  public allClients: Client[];\n\n  constructor(private http: HttpClient) { }\n\n  getClients(): Observable<Client[]> {\n    return this.http.get<Client[]>(\"api/clients\");\n  }\n  getClient(id): Observable<Client> {\n    return this.http.get<Client>(\"api/client/\" + id);\n  }\n  getCountClient(): Observable<number> {\n    return this.http.get<number>(\"api/client/count\");\n  }\n  addClient(data): Observable<Client> {\n    return this.http.post<Client>(\"api/client\", data);\n  }\n  updateClient(id, data): Observable<Client> {\n    return this.http.put<Client>(\"api/client/\" + id, data);\n  }\n\n  // deleteClient(id) {\n  //   return this.http.delete<Response>(\"api/client/\" + id);\n  // }\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientMainComponent } from './client-main/client-main.component';\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', component:  ClientMainComponent},\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ContractorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClientMainComponent } from './client-main/client-main.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { TableModule } from 'primeng/table';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { ButtonModule } from 'primeng/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageModule } from 'primeng/message';\nimport { MessagesModule } from 'primeng/messages';\nimport { DialogModule } from 'primeng/dialog';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { CodeHighlighterModule } from 'primeng/codehighlighter';\nimport { MessageService } from 'primeng/api';\nimport { ContractorRoutingModule } from './contractor-routing.module';\nimport { ClientAddFormComponent } from './client-add-form/client-add-form.component'\n\n\n\n@NgModule({\n  declarations: [ClientMainComponent, ClientAddFormComponent],\n  imports: [\n    CommonModule,\n    ContractorRoutingModule,\n    MatIconModule,\n    TableModule,\n    FormsModule,\n    DropdownModule,\n    ButtonModule,\n    MatTooltipModule,\n    ToastModule,\n    MessageModule,\n    MessagesModule,\n    DialogModule,\n    FieldsetModule,\n    CodeHighlighterModule,\n    ReactiveFormsModule\n  ],\n  providers: [MessageService]\n})\nexport class ContractorModule { }\n"],"sourceRoot":"webpack:///","file":"contractor-contractor-module-es5.js"}